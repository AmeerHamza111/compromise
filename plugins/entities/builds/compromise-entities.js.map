{"version":3,"file":"compromise-entities.js","sources":["../src/people.js","../src/place.js","../src/organization.js","../src/tags.js","../src/data/orgWords.js","../src/tagger/isOrg.js","../src/tagger/corrections.js","../src/tagger/index.js","../src/index.js"],"sourcesContent":["const addMethod = function(Doc) {\n  /**  */\n  class People extends Doc {\n    // honorifics(){}\n    // firstNames(){}\n    // lastNames(){}\n    // pronouns(){}\n    // toPronoun(){}\n    // fromPronoun(){}\n  }\n\n  Doc.prototype.people = function(n) {\n    let match = this.splitAfter('@hasComma')\n    match = match.match('#Person+')\n\n    //grab (n)th result\n    if (typeof n === 'number') {\n      match = match.get(n)\n    }\n    return new People(match.list, this, this.world)\n  }\n  return Doc\n}\nmodule.exports = addMethod\n","const addMethod = function(Doc) {\n  /**  */\n  class Places extends Doc {\n    // regions(){}\n  }\n\n  Doc.prototype.places = function(n) {\n    let m = this.splitAfter('@hasComma')\n    m = m.match('#Place+')\n\n    //grab (n)th result\n    if (typeof n === 'number') {\n      m = m.get(n)\n    }\n    return new Places(m.list, this, this.world)\n  }\n  return Doc\n}\nmodule.exports = addMethod\n","const addMethod = function(Doc) {\n  /**  */\n  class Organizations extends Doc {\n    // normalize(){}\n  }\n\n  Doc.prototype.organizations = function(n) {\n    let match = this.clauses()\n    match = match.match('#Organization+')\n\n    //grab (n)th result\n    if (typeof n === 'number') {\n      match = match.get(n)\n    }\n    return new Organizations(match.list, this, this.world)\n  }\n  return Doc\n}\nmodule.exports = addMethod\n","module.exports = {\n  Address: {\n    isA: 'Place',\n  },\n  School: {\n    isA: 'Organization',\n  },\n  Company: {\n    isA: 'Organization',\n  },\n}\n","//nouns that also signal the title of an unknown organization\n//todo remove/normalize plural forms\nconst orgWords = [\n  'academy',\n  'administration',\n  'agence',\n  'agences',\n  'agencies',\n  'agency',\n  'airlines',\n  'airways',\n  'army',\n  'assoc',\n  'associates',\n  'association',\n  'assurance',\n  'authority',\n  'autorite',\n  'aviation',\n  'bank',\n  'banque',\n  'board',\n  'boys',\n  'brands',\n  'brewery',\n  'brotherhood',\n  'brothers',\n  'building society',\n  'bureau',\n  'cafe',\n  'caisse',\n  'capital',\n  'care',\n  'cathedral',\n  'center',\n  'central bank',\n  'centre',\n  'chemicals',\n  'choir',\n  'chronicle',\n  'church',\n  'circus',\n  'clinic',\n  'clinique',\n  'club',\n  'co',\n  'coalition',\n  'coffee',\n  'collective',\n  'college',\n  'commission',\n  'committee',\n  'communications',\n  'community',\n  'company',\n  'comprehensive',\n  'computers',\n  'confederation',\n  'conference',\n  'conseil',\n  'consulting',\n  'containers',\n  'corporation',\n  'corps',\n  'corp',\n  'council',\n  'crew',\n  'daily news',\n  'data',\n  'departement',\n  'department',\n  'department store',\n  'departments',\n  'design',\n  'development',\n  'directorate',\n  'division',\n  'drilling',\n  'education',\n  'eglise',\n  'electric',\n  'electricity',\n  'energy',\n  'ensemble',\n  'enterprise',\n  'enterprises',\n  'entertainment',\n  'estate',\n  'etat',\n  'evening news',\n  'faculty',\n  'federation',\n  'financial',\n  'fm',\n  'foundation',\n  'fund',\n  'gas',\n  'gazette',\n  'girls',\n  'government',\n  'group',\n  'guild',\n  'health authority',\n  'herald',\n  'holdings',\n  'hospital',\n  'hotel',\n  'hotels',\n  'inc',\n  'industries',\n  'institut',\n  'institute',\n  'institute of technology',\n  'institutes',\n  'insurance',\n  'international',\n  'interstate',\n  'investment',\n  'investments',\n  'investors',\n  'journal',\n  'laboratory',\n  'labs',\n  // 'law',\n  'liberation army',\n  'limited',\n  'local authority',\n  'local health authority',\n  'machines',\n  'magazine',\n  'management',\n  'marine',\n  'marketing',\n  'markets',\n  'media',\n  'memorial',\n  'mercantile exchange',\n  'ministere',\n  'ministry',\n  'military',\n  'mobile',\n  'motor',\n  'motors',\n  'musee',\n  'museum',\n  // 'network',\n  'news',\n  'news service',\n  'observatory',\n  'office',\n  'oil',\n  'optical',\n  'orchestra',\n  'organization',\n  'partners',\n  'partnership',\n  // 'party',\n  \"people's party\",\n  'petrol',\n  'petroleum',\n  'pharmacare',\n  'pharmaceutical',\n  'pharmaceuticals',\n  'pizza',\n  'plc',\n  'police',\n  'polytechnic',\n  'post',\n  'power',\n  'press',\n  'productions',\n  'quartet',\n  'radio',\n  'regional authority',\n  'regional health authority',\n  'reserve',\n  'resources',\n  'restaurant',\n  'restaurants',\n  'savings',\n  'school',\n  'securities',\n  'service',\n  'services',\n  'social club',\n  'societe',\n  'society',\n  'sons',\n  'standard',\n  'state police',\n  'state university',\n  'stock exchange',\n  'subcommittee',\n  'syndicat',\n  'systems',\n  'telecommunications',\n  'telegraph',\n  'television',\n  'times',\n  'tribunal',\n  'tv',\n  'union',\n  'university',\n  'utilities',\n  'workers',\n]\n\nmodule.exports = orgWords.reduce(function(h, str) {\n  h[str] = 'Noun'\n  return h\n}, {})\n","let orgWords = require('../data/orgWords')\n\n//could this word be an organization\nconst maybeOrg = function(t) {\n  //must be a noun\n  if (!t.tags.Noun) {\n    return false\n  }\n  //can't be these things\n  if (t.tags.Pronoun || t.tags.Comma || t.tags.Possessive) {\n    return false\n  }\n  //must be one of these\n  if (t.tags.Organization || t.tags.Acronym || t.tags.Place || t.titleCase()) {\n    return true\n  }\n  return false\n}\n\nconst tagOrgs = function(doc, termArr) {\n  termArr.forEach(terms => {\n    for (let i = 0; i < terms.length; i += 1) {\n      let t = terms[i]\n      if (orgWords[t.clean] !== undefined && orgWords.hasOwnProperty(t.clean) === true) {\n        // look-backward - eg. 'Toronto University'\n        let lastTerm = terms[i - 1]\n        if (lastTerm !== undefined && maybeOrg(lastTerm) === true) {\n          lastTerm.tagSafe('Organization', 'org-word-1', doc.world)\n          t.tagSafe('Organization', 'org-word-2', doc.world)\n          continue\n        }\n        //look-forward - eg. University of Toronto\n        let nextTerm = terms[i + 1]\n        if (nextTerm !== undefined && nextTerm.clean === 'of') {\n          if (terms[i + 2] && maybeOrg(terms[i + 2])) {\n            t.tagSafe('Organization', 'org-of-word-1', doc.world)\n            nextTerm.tagSafe('Organization', 'org-of-word-2', doc.world)\n            terms[i + 2].tagSafe('Organization', 'org-of-word-3', doc.world)\n            continue\n          }\n        }\n      }\n    }\n  })\n\n  return doc\n}\nmodule.exports = tagOrgs\n","const tagger = function(doc) {\n  // addresses\n  doc.match('#Value #Noun (st|street|rd|road|crescent|way)').tag('Address')\n  // schools\n  doc.match('#Noun+ (public|private) school').tag('School')\n}\nmodule.exports = tagger\n","const organizations = require('./isOrg')\nconst corrections = require('./corrections')\n\n//some 'deeper' tagging, based on some basic word-knowledge\nconst inference = function(doc) {\n  let termArr = doc.list.map(p => p.terms())\n  organizations(doc, termArr)\n\n  // match-tag statements\n  corrections(doc)\n  return doc\n}\nmodule.exports = inference\n","const methods = [require('./people'), require('./place'), require('./organization')]\n\nconst tags = require('./tags')\nconst tagger = require('./tagger')\n\n//add them all in\nconst addMethods = function(Doc, world) {\n  //add new tags\n  world.addTags(tags)\n  //add tagger\n  world.postProcess(tagger)\n  // add\n  methods.forEach(fn => fn(Doc))\n\n  //combine them with .topics() method\n  Doc.prototype.entities = function(n) {\n    let r = this.splitAfter('@hasComma')\n    // Find people, places, and organizations\n    let yup = r.people()\n    yup = yup.concat(r.places())\n    yup = yup.concat(r.organizations())\n    let ignore = ['someone', 'man', 'woman', 'mother', 'brother', 'sister', 'father']\n    yup = yup.not(ignore)\n    //return them to normal ordering\n    yup.sort('sequence')\n    // yup.unique() //? not sure\n    if (typeof n === 'number') {\n      yup = yup.get(n)\n    }\n    return yup\n  }\n  //aliases\n  Doc.prototype.things = Doc.prototype.entities\n  Doc.prototype.topics = Doc.prototype.entities\n}\n\nmodule.exports = addMethods\n"],"names":["addMethod","Doc","People","prototype","people","n","match","splitAfter","get","list","world","Places","places","m","Organizations","organizations","clauses","Address","isA","School","Company","orgWords","reduce","h","str","maybeOrg","t","tags","Noun","Pronoun","Comma","Possessive","Organization","Acronym","Place","titleCase","tagOrgs","doc","termArr","forEach","terms","i","length","clean","undefined","hasOwnProperty","lastTerm","tagSafe","nextTerm","tagger","tag","inference","map","p","corrections","methods","require$$0","require$$1","require$$2","addMethods","addTags","postProcess","fn","entities","r","yup","concat","ignore","not","sort","things","topics"],"mappings":"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"}