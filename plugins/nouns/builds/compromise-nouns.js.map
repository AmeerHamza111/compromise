{"version":3,"file":"compromise-nouns.js","sources":["../src/hasPlural.js","../src/getArticle.js","../src/isPlural/_rules.js","../src/isPlural/index.js","../src/toPossessive.js","../src/parse.js","../src/index.js"],"sourcesContent":["const noPlural =\n  '(#Pronoun|#Place|#Value|#Person|#Uncountable|#Month|#WeekDay|#Holiday|#Possessive)'\n\n//certain words can't be plural, like 'peace'\nconst hasPlural = function(doc) {\n  if (doc.has('#Plural') === true) {\n    return true\n  }\n  // these can't be plural\n  if (doc.has(noPlural) === true) {\n    return false\n  }\n  return true\n}\n\nmodule.exports = hasPlural\n","'use strict'\n\n//chooses an indefinite aricle 'a/an' for a word\nconst irregulars = {\n  hour: 'an',\n  heir: 'an',\n  heirloom: 'an',\n  honest: 'an',\n  honour: 'an',\n  honor: 'an',\n  uber: 'an', //german u\n}\n//pronounced letters of acronyms that get a 'an'\nconst an_acronyms = {\n  a: true,\n  e: true,\n  f: true,\n  h: true,\n  i: true,\n  l: true,\n  m: true,\n  n: true,\n  o: true,\n  r: true,\n  s: true,\n  x: true,\n}\n//'a' regexes\nconst a_regexs = [\n  /^onc?e/i, //'wu' sound of 'o'\n  /^u[bcfhjkqrstn][aeiou]/i, // 'yu' sound for hard 'u'\n  /^eul/i,\n]\n\nconst makeArticle = function(doc) {\n  //no 'the john smith', but 'a london hotel'\n  if (doc.has('#Person') || doc.has('#Place')) {\n    return ''\n  }\n  //no a/an if it's plural\n  if (doc.has('#Plural')) {\n    return 'the'\n  }\n  let str = doc.text('normal').trim()\n  //explicit irregular forms\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str]\n  }\n  //spelled-out acronyms\n  let firstLetter = str.substr(0, 1)\n  if (doc.has('^@isAcronym') && an_acronyms.hasOwnProperty(firstLetter)) {\n    return 'an'\n  }\n  //'a' regexes\n  for (let i = 0; i < a_regexs.length; i++) {\n    if (a_regexs[i].test(str)) {\n      return 'a'\n    }\n  }\n  //basic vowel-startings\n  if (/^[aeiou]/i.test(str)) {\n    return 'an'\n  }\n  return 'a'\n}\n\nmodule.exports = makeArticle\n","//similar to plural/singularize rules, but not the same\nconst isPlural = [\n  /(antenn|formul|nebul|vertebr|vit)ae$/i,\n  /(octop|vir|radi|nucle|fung|cact|stimul)i$/i,\n  /men$/i,\n  /.tia$/i,\n  /(m|l)ice$/i,\n]\n\n//similar to plural/singularize rules, but not the same\nconst isSingular = [\n  /(ax|test)is$/i,\n  /(octop|vir|radi|nucle|fung|cact|stimul)us$/i,\n  /(octop|vir)i$/i,\n  /(rl)f$/i,\n  /(alias|status)$/i,\n  /(bu)s$/i,\n  /(al|ad|at|er|et|ed|ad)o$/i,\n  /(ti)um$/i,\n  /(ti)a$/i,\n  /sis$/i,\n  /(?:(^f)fe|(lr)f)$/i,\n  /hive$/i,\n  /(^aeiouy|qu)y$/i,\n  /(x|ch|ss|sh|z)$/i,\n  /(matr|vert|ind|cort)(ix|ex)$/i,\n  /(m|l)ouse$/i,\n  /(m|l)ice$/i,\n  /(antenn|formul|nebul|vertebr|vit)a$/i,\n  /.sis$/i,\n  /^(?!talis|.*hu)(.*)man$/i,\n]\nmodule.exports = {\n  isSingular: isSingular,\n  isPlural: isPlural,\n}\n","const rules = require('./_rules')\nconst endS = /s$/\n// double-check this term, if it is not plural, or singular.\n// (this is a partial copy of ./tagger/fallbacks/plural)\n// fallback plural if it ends in an 's'.\nconst isPlural = function(str) {\n  // isSingular suffix rules\n  if (rules.isSingular.find(reg => reg.test(str))) {\n    return false\n  }\n  // does it end in an s?\n  if (endS.test(str) === true) {\n    return true\n  }\n  // is it a plural like 'fungi'?\n  if (rules.isPlural.find(reg => reg.test(str))) {\n    return true\n  }\n  return null\n}\nmodule.exports = isPlural\n","const exceptions = {\n  he: 'his',\n  she: 'hers',\n  they: 'theirs',\n  we: 'ours',\n  i: 'mine',\n  you: 'yours',\n\n  her: 'hers',\n  their: 'theirs',\n  our: 'ours',\n  my: 'mine',\n  your: 'yours',\n}\n\n// turn \"David\" to \"David's\"\nconst toPossessive = function(doc) {\n  let str = doc.text('text').trim()\n  // exceptions\n  if (exceptions.hasOwnProperty(str)) {\n    doc.replaceWith(exceptions[str])\n    doc.tag('Possessive', 'toPossessive')\n    return\n  }\n  // flanders'\n  if (/s$/.test(str)) {\n    str += \"'\"\n    doc.replaceWith(str)\n    doc.tag('Possessive', 'toPossessive')\n    return\n  }\n  //normal form:\n  str += \"'s\"\n  doc.replaceWith(str)\n  doc.tag('Possessive', 'toPossessive')\n  return\n}\nmodule.exports = toPossessive\n","// .nouns() supports some noun-phrase-ish groupings\n// pull these apart, if necessary\nconst parse = function(doc) {\n  let res = {\n    main: doc,\n  }\n  //support 'mayor of chicago' as one noun-phrase\n  if (doc.has('#Noun (of|by|for) .')) {\n    let m = doc.splitAfter('[#Noun+]')\n    res.main = m.eq(0)\n    res.post = m.eq(1)\n  }\n  return res\n}\nmodule.exports = parse\n","const hasPlural = require('./hasPlural')\nconst getArticle = require('./getArticle')\nconst isPlural = require('./isPlural')\nconst toPossessive = require('./toPossessive')\nconst parse = require('./parse')\n\nconst addMethod = function(Doc) {\n  /**  */\n  class Nouns extends Doc {\n    /** overload the original json with noun information */\n    json(options) {\n      options = options || { text: true, normal: true, trim: true, terms: true }\n      let res = []\n      this.forEach(doc => {\n        let json = doc.json(options)[0]\n        json.article = getArticle(doc)\n        res.push(json)\n      })\n      return res\n    }\n\n    isPlural() {\n      return this.if('#Plural') //assume tagger has run?\n    }\n    hasPlural() {\n      return this.filter(d => hasPlural(d))\n    }\n    toPlural() {\n      let toPlural = this.world.transforms.toPlural\n      this.forEach(doc => {\n        if (doc.has('#Plural') || hasPlural(doc) === false) {\n          return\n        }\n        // double-check it isn't an un-tagged plural\n        let main = parse(doc).main\n        let str = main.text()\n        if (!main.has('#Singular') && isPlural(str) === true) {\n          return\n        }\n        str = toPlural(str, this.world)\n        main.replace(str).tag('#Plural')\n      })\n      return this\n    }\n    toSingular() {\n      let toSingular = this.world.transforms.toSingular\n      this.forEach(doc => {\n        if (doc.has('#Singular') || hasPlural(doc) === false) {\n          return\n        }\n        // double-check it isn't an un-tagged plural\n        let main = parse(doc).main\n        let str = main.text()\n        if (!main.has('#Plural') && isPlural(str) !== true) {\n          return\n        }\n        str = toSingular(str, this.world)\n        main.replace(str).tag('#Singular')\n      })\n      return this\n    }\n    toPossessive() {\n      this.forEach(d => {\n        toPossessive(d)\n      })\n      return this\n    }\n  }\n\n  Doc.prototype.nouns = function(n) {\n    let match = this.clauses()\n    match = match.match('#Noun+ (of|by)? the? #Noun+?')\n    //nouns that we don't want in these results, for weird reasons\n    match = match.not('#Pronoun')\n    match = match.not('(there|these)')\n    match = match.not('(#Month|#WeekDay)') //allow Durations, Holidays\n    // //allow possessives like \"spencer's\", but not generic ones like,\n    match = match.not('(my|our|your|their|her|his)')\n    match = match.not('(of|for|by|the)$')\n\n    // match = match.splitAfter('@hasComma')\n\n    if (typeof n === 'number') {\n      match = match.get(n)\n    }\n    return new Nouns(match.list, this, this.world)\n  }\n  return Doc\n}\nmodule.exports = addMethod\n"],"names":["noPlural","hasPlural","doc","has","irregulars","hour","heir","heirloom","honest","honour","honor","uber","an_acronyms","a","e","f","h","i","l","m","n","o","r","s","x","a_regexs","makeArticle","str","text","trim","hasOwnProperty","firstLetter","substr","length","test","isPlural","isSingular","endS","rules","find","reg","exceptions","he","she","they","we","you","her","their","our","my","your","toPossessive","replaceWith","tag","parse","res","main","splitAfter","eq","post","addMethod","Doc","Nouns","options","normal","terms","forEach","json","article","getArticle","push","filter","d","toPlural","world","transforms","replace","toSingular","prototype","nouns","match","clauses","not","get","list"],"mappings":"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"}