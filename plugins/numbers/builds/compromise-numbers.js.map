{"version":3,"file":"compromise-numbers.js","sources":["../src/toNumber/findModifiers.js","../src/toNumber/data.js","../src/toNumber/validate.js","../src/toNumber/parseDecimals.js","../src/toNumber/parseNumeric.js","../src/toNumber/index.js","../src/_toString.js","../src/toText/index.js","../src/find.js","../src/toOrdinal/numOrdinal.js","../src/toOrdinal/textOrdinal.js","../src/index.js"],"sourcesContent":["//support global multipliers, like 'half-million' by doing 'million' then multiplying by 0.5\nconst findModifiers = str => {\n  const mults = [\n    {\n      reg: /^(minus|negative)[\\s\\-]/i,\n      mult: -1,\n    },\n    {\n      reg: /^(a\\s)?half[\\s\\-](of\\s)?/i,\n      mult: 0.5,\n    },\n    //  {\n    //   reg: /^(a\\s)?quarter[\\s\\-]/i,\n    //   mult: 0.25\n    // }\n  ]\n  for (let i = 0; i < mults.length; i++) {\n    if (mults[i].reg.test(str) === true) {\n      return {\n        amount: mults[i].mult,\n        str: str.replace(mults[i].reg, ''),\n      }\n    }\n  }\n  return {\n    amount: 1,\n    str: str,\n  }\n}\n\nmodule.exports = findModifiers\n","module.exports = {\n  ones: {\n    zeroth: 0,\n    first: 1,\n    second: 2,\n    third: 3,\n    fourth: 4,\n    fifth: 5,\n    sixth: 6,\n    seventh: 7,\n    eighth: 8,\n    ninth: 9,\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  },\n  teens: {\n    tenth: 10,\n    eleventh: 11,\n    twelfth: 12,\n    thirteenth: 13,\n    fourteenth: 14,\n    fifteenth: 15,\n    sixteenth: 16,\n    seventeenth: 17,\n    eighteenth: 18,\n    nineteenth: 19,\n    ten: 10,\n    eleven: 11,\n    twelve: 12,\n    thirteen: 13,\n    fourteen: 14,\n    fifteen: 15,\n    sixteen: 16,\n    seventeen: 17,\n    eighteen: 18,\n    nineteen: 19,\n  },\n  tens: {\n    twentieth: 20,\n    thirtieth: 30,\n    fortieth: 40,\n    fourtieth: 40,\n    fiftieth: 50,\n    sixtieth: 60,\n    seventieth: 70,\n    eightieth: 80,\n    ninetieth: 90,\n    twenty: 20,\n    thirty: 30,\n    forty: 40,\n    fourty: 40,\n    fifty: 50,\n    sixty: 60,\n    seventy: 70,\n    eighty: 80,\n    ninety: 90,\n  },\n  multiples: {\n    hundredth: 100,\n    thousandth: 1000,\n    millionth: 1e6,\n    billionth: 1e9,\n    trillionth: 1e12,\n    quadrillionth: 1e15,\n    quintillionth: 1e18,\n    sextillionth: 1e21,\n    septillionth: 1e24,\n    hundred: 100,\n    thousand: 1000,\n    million: 1e6,\n    billion: 1e9,\n    trillion: 1e12,\n    quadrillion: 1e15,\n    quintillion: 1e18,\n    sextillion: 1e21,\n    septillion: 1e24,\n    grand: 1000,\n  },\n}\n","const words = require('./data')\n\n//prevent things like 'fifteen ten', and 'five sixty'\nconst isValid = (w, has) => {\n  if (words.ones.hasOwnProperty(w)) {\n    if (has.ones || has.teens) {\n      return false\n    }\n  } else if (words.teens.hasOwnProperty(w)) {\n    if (has.ones || has.teens || has.tens) {\n      return false\n    }\n  } else if (words.tens.hasOwnProperty(w)) {\n    if (has.ones || has.teens || has.tens) {\n      return false\n    }\n  }\n  return true\n}\nmodule.exports = isValid\n","const words = require('./data')\n\n//concatenate into a string with leading '0.'\nconst parseDecimals = function(arr) {\n  let str = '0.'\n  for (let i = 0; i < arr.length; i++) {\n    let w = arr[i]\n    if (words.ones.hasOwnProperty(w) === true) {\n      str += words.ones[w]\n    } else if (words.teens.hasOwnProperty(w) === true) {\n      str += words.teens[w]\n    } else if (words.tens.hasOwnProperty(w) === true) {\n      str += words.tens[w]\n    } else if (/^[0-9]$/.test(w) === true) {\n      str += w\n    } else {\n      return 0\n    }\n  }\n  return parseFloat(str)\n}\n\nmodule.exports = parseDecimals\n","//parse a string like \"4,200.1\" into Number 4200.1\nconst parseNumeric = str => {\n  //remove ordinal - 'th/rd'\n  str = str.replace(/1st$/, '1')\n  str = str.replace(/2nd$/, '2')\n  str = str.replace(/3rd$/, '3')\n  str = str.replace(/([4567890])r?th$/, '$1')\n  //remove prefixes\n  str = str.replace(/^[$€¥£¢]/, '')\n  //remove suffixes\n  str = str.replace(/[%$€¥£¢]$/, '')\n  //remove commas\n  str = str.replace(/,/g, '')\n  //split '5kg' from '5'\n  str = str.replace(/([0-9])([a-z\\u00C0-\\u00FF]{1,2})$/, '$1')\n  return str\n}\n\nmodule.exports = parseNumeric\n","const findModifiers = require('./findModifiers')\nconst words = require('./data')\nconst isValid = require('./validate')\nconst parseDecimals = require('./parseDecimals')\nconst parseNumeric = require('./parseNumeric')\nconst improperFraction = /^([0-9,\\. ]+)\\/([0-9,\\. ]+)$/\n\n//some numbers we know\nconst casualForms = {\n  // 'a few': 3,\n  'a couple': 2,\n  'a dozen': 12,\n  'two dozen': 24,\n  zero: 0,\n}\n\n// a 'section' is something like 'fifty-nine thousand'\n// turn a section into something we can add to - like 59000\nconst section_sum = obj => {\n  return Object.keys(obj).reduce((sum, k) => {\n    sum += obj[k]\n    return sum\n  }, 0)\n}\n\n//turn a string into a number\nconst parse = function(str) {\n  //convert some known-numbers\n  if (casualForms.hasOwnProperty(str) === true) {\n    return casualForms[str]\n  }\n  //'a/an' is 1\n  if (str === 'a' || str === 'an') {\n    return 1\n  }\n  const modifier = findModifiers(str)\n  str = modifier.str\n  let last_mult = null\n  let has = {}\n  let sum = 0\n  let isNegative = false\n  const terms = str.split(/[ -]/)\n  for (let i = 0; i < terms.length; i++) {\n    let w = terms[i]\n    w = parseNumeric(w)\n    if (!w || w === 'and') {\n      continue\n    }\n    if (w === '-' || w === 'negative') {\n      isNegative = true\n      continue\n    }\n    if (w.charAt(0) === '-') {\n      isNegative = true\n      w = w.substr(1)\n    }\n    //decimal mode\n    if (w === 'point') {\n      sum += section_sum(has)\n      sum += parseDecimals(terms.slice(i + 1, terms.length))\n      sum *= modifier.amount\n      return sum\n    }\n    //improper fraction\n    const fm = w.match(improperFraction)\n    if (fm) {\n      const num = parseFloat(fm[1].replace(/[, ]/g, ''))\n      const denom = parseFloat(fm[2].replace(/[, ]/g, ''))\n      if (denom) {\n        sum += num / denom || 0\n      }\n      continue\n    }\n    //prevent mismatched units, like 'seven eleven'\n    if (isValid(w, has) === false) {\n      return null\n    }\n    //buildOut section, collect 'has' values\n    if (/^[0-9\\.]+$/.test(w)) {\n      has['ones'] = parseFloat(w) //not technically right\n    } else if (words.ones.hasOwnProperty(w) === true) {\n      has['ones'] = words.ones[w]\n    } else if (words.teens.hasOwnProperty(w) === true) {\n      has['teens'] = words.teens[w]\n    } else if (words.tens.hasOwnProperty(w) === true) {\n      has['tens'] = words.tens[w]\n    } else if (words.multiples.hasOwnProperty(w) === true) {\n      let mult = words.multiples[w]\n\n      //something has gone wrong : 'two hundred five hundred'\n      if (mult === last_mult) {\n        return null\n      }\n      //support 'hundred thousand'\n      //this one is tricky..\n      if (mult === 100 && terms[i + 1] !== undefined) {\n        // has['hundreds']=\n        const w2 = terms[i + 1]\n        if (words.multiples[w2]) {\n          mult *= words.multiples[w2] //hundredThousand/hundredMillion\n          i += 1\n        }\n      }\n      //natural order of things\n      //five thousand, one hundred..\n      if (last_mult === null || mult < last_mult) {\n        sum += (section_sum(has) || 1) * mult\n        last_mult = mult\n        has = {}\n      } else {\n        //maybe hundred .. thousand\n        sum += section_sum(has)\n        last_mult = mult\n        sum = (sum || 1) * mult\n        has = {}\n      }\n    }\n  }\n  //dump the remaining has values\n  sum += section_sum(has)\n  //post-process add modifier\n  sum *= modifier.amount\n  sum *= isNegative ? -1 : 1\n  //dont return 0, if it went straight-through\n  if (sum === 0 && Object.keys(has).length === 0) {\n    return null\n  }\n  return sum\n}\n\nmodule.exports = parse\n","/**\n * turn big numbers, like 2.3e+22, into a string with a ton of trailing 0's\n * */\nconst numToString = function(n) {\n  if (n < 1000000) {\n    return String(n)\n  }\n  var str = n.toFixed(0)\n  if (str.indexOf('e+') === -1) {\n    return str\n  }\n  return str\n    .replace('.', '')\n    .split('e+')\n    .reduce(function(p, b) {\n      return p + Array(b - p.length + 2).join(0)\n    })\n}\nmodule.exports = numToString\n// console.log(numToString(2.5e+22));\n","const toString = require('../_toString')\n/**\n * turns an integer/float into.ber, like 'fifty-five'\n */\n\nconst tens_mapping = [\n  ['ninety', 90],\n  ['eighty', 80],\n  ['seventy', 70],\n  ['sixty', 60],\n  ['fifty', 50],\n  ['forty', 40],\n  ['thirty', 30],\n  ['twenty', 20],\n]\nconst ones_mapping = [\n  '',\n  'one',\n  'two',\n  'three',\n  'four',\n  'five',\n  'six',\n  'seven',\n  'eight',\n  'nine',\n  'ten',\n  'eleven',\n  'twelve',\n  'thirteen',\n  'fourteen',\n  'fifteen',\n  'sixteen',\n  'seventeen',\n  'eighteen',\n  'nineteen',\n]\n\nconst sequence = [\n  [1e24, 'septillion'],\n  [1e21, 'sextillion'],\n  [1e18, 'quintillion'],\n  [1e15, 'quadrillion'],\n  [1e12, 'trillion'],\n  [1e9, 'billion'],\n  [1e8, 'hundred million'],\n  [1e6, 'million'],\n  [100000, 'hundred thousand'],\n  [1000, 'thousand'],\n  [100, 'hundred'],\n  [1, 'one'],\n]\n\n//turn number into an array of magnitudes, like [[5, million], [2, hundred]]\nconst breakdown_magnitudes = function(num) {\n  let working = num\n  let have = []\n  sequence.forEach(a => {\n    if (num >= a[0]) {\n      let howmany = Math.floor(working / a[0])\n      working -= howmany * a[0]\n      if (howmany) {\n        have.push({\n          unit: a[1],\n          count: howmany,\n        })\n      }\n    }\n  })\n  return have\n}\n\n//turn numbers from 100-0 into their text\nconst breakdown_hundred = function(num) {\n  let arr = []\n  if (num > 100) {\n    return arr //something bad happened..\n  }\n  for (let i = 0; i < tens_mapping.length; i++) {\n    if (num >= tens_mapping[i][1]) {\n      num -= tens_mapping[i][1]\n      arr.push(tens_mapping[i][0])\n    }\n  }\n  //(hopefully) we should only have 20-0 now\n  if (ones_mapping[num]) {\n    arr.push(ones_mapping[num])\n  }\n  return arr\n}\n\n/** print-out 'point eight nine'*/\nconst handle_decimal = num => {\n  const names = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']\n  let arr = []\n  //parse it out like a string, because js math is such shit\n  let str = toString(num)\n  let decimal = str.match(/\\.([0-9]+)/)\n  if (!decimal || !decimal[0]) {\n    return arr\n  }\n  arr.push('point')\n  let decimals = decimal[0].split('')\n  for (let i = 0; i < decimals.length; i++) {\n    arr.push(names[decimals[i]])\n  }\n  return arr\n}\n\n/** turns an integer into a textual number */\nconst to_text = function(num) {\n  //big numbers, north of sextillion, aren't gonna work well..\n  //keep them small..\n  if (num > 1e21) {\n    return String(num)\n  }\n  let arr = []\n  //handle negative numbers\n  if (num < 0) {\n    arr.push('negative')\n    num = Math.abs(num)\n  }\n  //break-down into units, counts\n  let units = breakdown_magnitudes(num)\n  //build-up the string from its components\n  for (let i = 0; i < units.length; i++) {\n    let unit_name = units[i].unit\n    if (unit_name === 'one') {\n      unit_name = ''\n      //put an 'and' in here\n      if (arr.length > 1) {\n        arr.push('and')\n      }\n    }\n    arr = arr.concat(breakdown_hundred(units[i].count))\n    arr.push(unit_name)\n  }\n  //also support decimals - 'point eight'\n  arr = arr.concat(handle_decimal(num))\n  //remove empties\n  arr = arr.filter(s => s)\n  if (arr.length === 0) {\n    arr[0] = ''\n  }\n  return arr.join(' ')\n}\n\nmodule.exports = to_text\n\n// console.log(to_text(-1000.8));\n","const tens = 'twenty|thirty|forty|fifty|sixty|seventy|eighty|ninety|fourty'\nconst teens = 'eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|nineteen'\n\nconst findNumbers = function(doc, n) {\n  let match = doc.match('#Value+ #Unit?')\n\n  // r = r.match('#Value+ #Unit?');\n\n  //\"50 83\"\n  if (match.has('#NumericValue #NumericValue')) {\n    //a comma may mean two numbers\n    if (match.has('#Value #Comma #Value')) {\n      match.splitAfter('#Comma')\n    } else {\n      match.splitAfter('#NumericValue')\n    }\n  }\n  //three-length\n  if (match.has('#Value #Value #Value') && !match.has('#Multiple')) {\n    //twenty-five-twenty\n    if (match.has('(' + tens + ') #Cardinal #Cardinal')) {\n      match.splitAfter('(' + tens + ') #Cardinal')\n    }\n  }\n\n  //two-length ones\n  if (match.has('#Value #Value')) {\n    //june 21st 1992 is two seperate values\n    if (match.has('#NumericValue #NumericValue')) {\n      match.splitOn('#Year')\n    }\n    //sixty fifteen\n    if (match.has('(' + tens + ') (' + teens + ')')) {\n      match.splitAfter('(' + tens + ')')\n    }\n    //\"72 82\"\n    let double = match.match('#Cardinal #Cardinal')\n    if (double.found && !match.has('(point|decimal)')) {\n      //not 'two hundred'\n      if (!double.has('#Cardinal (#Multiple|point|decimal)')) {\n        //one proper way, 'twenty one', or 'hundred one'\n        if (!double.has('(' + tens + ') #Cardinal') && !double.has('#Multiple #Value')) {\n          match.splitAfter(double.terms(0).out('normal'))\n        }\n      }\n    }\n    //seventh fifth\n    if (match.match('#Ordinal #Ordinal').match('#TextValue').found && !match.has('#Multiple')) {\n      //the one proper way, 'twenty first'\n      if (!match.has('(' + tens + ') #Ordinal')) {\n        match.splitAfter('#Ordinal')\n      }\n    }\n    //fifth five\n    if (match.has('#Ordinal #Cardinal')) {\n      match.splitBefore('#Cardinal+')\n    }\n    //five 2017 (support '5 hundred', and 'twenty 5'\n    if (match.has('#TextValue #NumericValue') && !match.has('(' + tens + '|#Multiple)')) {\n      match.splitBefore('#NumericValue+')\n    }\n  }\n  //5-8\n  if (match.has('#NumberRange')) {\n    match.splitAfter('#NumberRange')\n  }\n\n  //grab (n)th result\n  if (typeof n === 'number') {\n    match = match.get(n)\n  }\n  return match\n}\nmodule.exports = findNumbers\n","const toString = require('../_toString')\n\n/**\n * turn a number like 5 into an ordinal like 5th\n */\nconst numOrdinal = function(num) {\n  if (!num && num !== 0) {\n    return null\n  }\n  //the teens are all 'th'\n  let tens = num % 100\n  if (tens > 10 && tens < 20) {\n    return String(num) + 'th'\n  }\n  //the rest of 'em\n  const mapping = {\n    0: 'th',\n    1: 'st',\n    2: 'nd',\n    3: 'rd',\n  }\n  let str = toString(num)\n  let last = str.slice(str.length - 1, str.length)\n  if (mapping[last]) {\n    str += mapping[last]\n  } else {\n    str += 'th'\n  }\n  return str\n}\n\nmodule.exports = numOrdinal\n","const textValue = require('../toText')\nconst irregulars = {\n  one: 'first',\n  two: 'second',\n  three: 'third',\n  five: 'fifth',\n  eight: 'eighth',\n  nine: 'ninth',\n  twelve: 'twelfth',\n  twenty: 'twentieth',\n  thirty: 'thirtieth',\n  forty: 'fortieth',\n  fourty: 'fourtieth',\n  fifty: 'fiftieth',\n  sixty: 'sixtieth',\n  seventy: 'seventieth',\n  eighty: 'eightieth',\n  ninety: 'ninetieth',\n}\n\n/**\n * convert a javascript number to 'twentieth' format\n * */\nconst textOrdinal = num => {\n  let words = textValue(num).split(' ')\n  //convert the last number to an ordinal\n  let last = words[words.length - 1]\n  if (irregulars.hasOwnProperty(last)) {\n    words[words.length - 1] = irregulars[last]\n  } else {\n    words[words.length - 1] = last.replace(/y$/, 'i') + 'th'\n  }\n  return words.join(' ')\n}\n\nmodule.exports = textOrdinal\n","const toNumber = require('./toNumber')\nconst toText = require('./toText')\nconst findNumbers = require('./find')\nconst numOrdinal = require('./toOrdinal/numOrdinal')\nconst textOrdinal = require('./toOrdinal/textOrdinal')\n\n//business-logic for converting a cardinal-number to other forms\nconst makeNumber = function(obj, isText, isOrdinal) {\n  let num = String(obj.num)\n  if (isText) {\n    if (isOrdinal) {\n      //ordinal-text\n      num = textOrdinal(num)\n    } else {\n      //cardinal-text\n      num = toText(num)\n    }\n  } else if (isOrdinal) {\n    //ordinal-number\n    return numOrdinal(num)\n  }\n  return `${obj.prefix || ''}${num}${obj.suffix || ''}`\n}\n\n// get a numeric value from this phrase\nconst parseNumber = function(p) {\n  let str = p.root()\n  //parse a numeric-number (easy)\n  let arr = str.split(/^([^0-9]*)([0-9]*)([^0-9]*)$/)\n  if (arr[2]) {\n    let num = parseFloat(arr[2] || str)\n    //ensure that num is an actual number\n    if (typeof num !== 'number') {\n      num = null\n    }\n    return {\n      prefix: arr[1] || '',\n      num: num,\n      suffix: arr[3] || '',\n    }\n  }\n  //parse a text-numer (harder)\n  let num = toNumber(str)\n  return {\n    prefix: '',\n    num: num,\n    suffix: '',\n  }\n}\n\n/** adds .numbers() method */\nconst addMethod = function(Doc) {\n  /** a list of number values, and their units */\n  class Numbers extends Doc {\n    constructor(list, from, world) {\n      super(list, from, world)\n      this.unit = this.match('#Unit+$')\n      let numbers = this.not('#Unit+$')\n      this.list = numbers.list\n    }\n    isOrdinal() {\n      return this.if('#Ordinal')\n    }\n    isCardinal() {\n      return this.if('#Cardinal')\n    }\n    toNumber() {\n      this.forEach(val => {\n        let obj = parseNumber(val)\n        let str = makeNumber(obj, false, val.has('#Ordinal'))\n        this.replaceWith(str)\n      })\n      return this\n    }\n    toText() {\n      this.forEach(val => {\n        let obj = parseNumber(val)\n        let str = makeNumber(obj, true, val.has('#Ordinal'))\n        this.replaceWith(str)\n      })\n      return this\n    }\n    toCardinal() {\n      let m = this.if('#Ordinal')\n      m.forEach(val => {\n        let obj = parseNumber(val)\n        let str = makeNumber(obj, val.has('#TextNumber'), false)\n        this.replaceWith(str)\n      })\n      return this\n    }\n    toOrdinal() {\n      let m = this.if('#Cardinal')\n      m.forEach(val => {\n        let obj = parseNumber(val)\n        let str = makeNumber(obj, val.has('#TextNumber'), true)\n        this.replaceWith(str)\n      })\n      return this\n    }\n    greaterThan(n) {\n      return this.filter(val => {\n        let num = parseNumber(val).num\n        return num > n\n      })\n    }\n    // lessThan() {}\n    // between() {}\n    add(n) {\n      if (!n) {\n        return this // don't bother\n      }\n      return this.map(val => {\n        let obj = parseNumber(val)\n        obj.num += n\n        let str = makeNumber(obj, val.has('#TextNumber'), val.has('#Ordinal'))\n        return val.replaceWith(str)\n      })\n    }\n    subtract(n) {\n      return this.add(n * -1)\n    }\n    increment() {\n      this.add(1)\n    }\n    decrement() {\n      this.add(-1)\n    }\n  }\n  //aliases\n  Numbers.prototype.plus = Numbers.prototype.add\n  Numbers.prototype.minus = Numbers.prototype.subtract\n\n  Doc.prototype.numbers = function(n) {\n    let match = findNumbers(this, n)\n    return new Numbers(match.list, this, this.world)\n  }\n  // alias for reverse-compatibility\n  Doc.prototype.values = Doc.prototype.numbers\n  return Doc\n}\nmodule.exports = addMethod\n"],"names":["findModifiers","str","mults","reg","mult","i","length","test","amount","replace","ones","zeroth","first","second","third","fourth","fifth","sixth","seventh","eighth","ninth","zero","one","two","three","four","five","six","seven","eight","nine","teens","tenth","eleventh","twelfth","thirteenth","fourteenth","fifteenth","sixteenth","seventeenth","eighteenth","nineteenth","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen","tens","twentieth","thirtieth","fortieth","fourtieth","fiftieth","sixtieth","seventieth","eightieth","ninetieth","twenty","thirty","forty","fourty","fifty","sixty","seventy","eighty","ninety","multiples","hundredth","thousandth","millionth","billionth","trillionth","quadrillionth","quintillionth","sextillionth","septillionth","hundred","thousand","million","billion","trillion","quadrillion","quintillion","sextillion","septillion","grand","isValid","w","has","words","hasOwnProperty","parseDecimals","arr","parseFloat","parseNumeric","improperFraction","casualForms","section_sum","obj","Object","keys","reduce","sum","k","parse","modifier","last_mult","isNegative","terms","split","charAt","substr","slice","fm","match","num","denom","undefined","w2","numToString","n","String","toFixed","indexOf","p","b","Array","join","tens_mapping","ones_mapping","sequence","breakdown_magnitudes","working","have","forEach","a","howmany","Math","floor","push","unit","count","breakdown_hundred","handle_decimal","names","toString","decimal","decimals","to_text","abs","units","unit_name","concat","filter","s","findNumbers","doc","splitAfter","splitOn","double","found","out","splitBefore","get","numOrdinal","mapping","last","irregulars","textOrdinal","textValue","makeNumber","isText","isOrdinal","toText","prefix","suffix","parseNumber","root","toNumber","addMethod","Doc","Numbers","list","from","world","numbers","not","val","replaceWith","m","map","add","prototype","plus","minus","subtract","values"],"mappings":"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"}