"use strict";const findModifiers=e=>{const t=[{reg:/^(minus|negative)[\s\-]/i,mult:-1},{reg:/^(a\s)?half[\s\-](of\s)?/i,mult:.5}];for(let n=0;n<t.length;n++)if(!0===t[n].reg.test(e))return{amount:t[n].mult,str:e.replace(t[n].reg,"")};return{amount:1,str:e}};var findModifiers_1=findModifiers,data={ones:{zeroth:0,first:1,second:2,third:3,fourth:4,fifth:5,sixth:6,seventh:7,eighth:8,ninth:9,zero:0,one:1,two:2,three:3,four:4,five:5,six:6,seven:7,eight:8,nine:9},teens:{tenth:10,eleventh:11,twelfth:12,thirteenth:13,fourteenth:14,fifteenth:15,sixteenth:16,seventeenth:17,eighteenth:18,nineteenth:19,ten:10,eleven:11,twelve:12,thirteen:13,fourteen:14,fifteen:15,sixteen:16,seventeen:17,eighteen:18,nineteen:19},tens:{twentieth:20,thirtieth:30,fortieth:40,fourtieth:40,fiftieth:50,sixtieth:60,seventieth:70,eightieth:80,ninetieth:90,twenty:20,thirty:30,forty:40,fourty:40,fifty:50,sixty:60,seventy:70,eighty:80,ninety:90},multiples:{hundredth:100,thousandth:1e3,millionth:1e6,billionth:1e9,trillionth:1e12,quadrillionth:1e15,quintillionth:1e18,sextillionth:1e21,septillionth:1e24,hundred:100,thousand:1e3,million:1e6,billion:1e9,trillion:1e12,quadrillion:1e15,quintillion:1e18,sextillion:1e21,septillion:1e24,grand:1e3}};const isValid=(e,t)=>{if(data.ones.hasOwnProperty(e)){if(t.ones||t.teens)return!1}else if(data.teens.hasOwnProperty(e)){if(t.ones||t.teens||t.tens)return!1}else if(data.tens.hasOwnProperty(e)&&(t.ones||t.teens||t.tens))return!1;return!0};var validate=isValid;const parseDecimals=function(e){let t="0.";for(let n=0;n<e.length;n++){let i=e[n];if(!0===data.ones.hasOwnProperty(i))t+=data.ones[i];else if(!0===data.teens.hasOwnProperty(i))t+=data.teens[i];else if(!0===data.tens.hasOwnProperty(i))t+=data.tens[i];else{if(!0!==/^[0-9]$/.test(i))return 0;t+=i}}return parseFloat(t)};var parseDecimals_1=parseDecimals;const parseNumeric=e=>e=(e=(e=(e=(e=(e=(e=(e=e.replace(/1st$/,"1")).replace(/2nd$/,"2")).replace(/3rd$/,"3")).replace(/([4567890])r?th$/,"$1")).replace(/^[$€¥£¢]/,"")).replace(/[%$€¥£¢]$/,"")).replace(/,/g,"")).replace(/([0-9])([a-z\u00C0-\u00FF]{1,2})$/,"$1");var parseNumeric_1=parseNumeric;const improperFraction=/^([0-9,\. ]+)\/([0-9,\. ]+)$/,casualForms={"a couple":2,"a dozen":12,"two dozen":24,zero:0},section_sum=e=>Object.keys(e).reduce((t,n)=>t+=e[n],0),parse=function(e){if(!0===casualForms.hasOwnProperty(e))return casualForms[e];if("a"===e||"an"===e)return 1;const t=findModifiers_1(e);let n=null,i={},r=0,s=!1;const a=(e=t.str).split(/[ -]/);for(let e=0;e<a.length;e++){let l=a[e];if(!(l=parseNumeric_1(l))||"and"===l)continue;if("-"===l||"negative"===l){s=!0;continue}if("-"===l.charAt(0)&&(s=!0,l=l.substr(1)),"point"===l)return r+=section_sum(i),r+=parseDecimals_1(a.slice(e+1,a.length)),r*=t.amount;const u=l.match(improperFraction);if(u){const e=parseFloat(u[1].replace(/[, ]/g,"")),t=parseFloat(u[2].replace(/[, ]/g,""));t&&(r+=e/t||0)}else{if(!1===validate(l,i))return null;if(/^[0-9\.]+$/.test(l))i.ones=parseFloat(l);else if(!0===data.ones.hasOwnProperty(l))i.ones=data.ones[l];else if(!0===data.teens.hasOwnProperty(l))i.teens=data.teens[l];else if(!0===data.tens.hasOwnProperty(l))i.tens=data.tens[l];else if(!0===data.multiples.hasOwnProperty(l)){let t=data.multiples[l];if(t===n)return null;if(100===t&&void 0!==a[e+1]){const n=a[e+1];data.multiples[n]&&(t*=data.multiples[n],e+=1)}null===n||t<n?(r+=(section_sum(i)||1)*t,n=t,i={}):(n=t,r=((r+=section_sum(i))||1)*t,i={})}}}return r+=section_sum(i),r*=t.amount,0===(r*=s?-1:1)&&0===Object.keys(i).length?null:r};var toNumber=parse;const numToString=function(e){if(e<1e6)return String(e);var t=e.toFixed(0);return-1===t.indexOf("e+")?t:t.replace(".","").split("e+").reduce((function(e,t){return e+Array(t-e.length+2).join(0)}))};var _toString=numToString;const tens_mapping=[["ninety",90],["eighty",80],["seventy",70],["sixty",60],["fifty",50],["forty",40],["thirty",30],["twenty",20]],ones_mapping=["","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen"],sequence=[[1e24,"septillion"],[1e21,"sextillion"],[1e18,"quintillion"],[1e15,"quadrillion"],[1e12,"trillion"],[1e9,"billion"],[1e8,"hundred million"],[1e6,"million"],[1e5,"hundred thousand"],[1e3,"thousand"],[100,"hundred"],[1,"one"]],breakdown_magnitudes=function(e){let t=e,n=[];return sequence.forEach(i=>{if(e>=i[0]){let e=Math.floor(t/i[0]);t-=e*i[0],e&&n.push({unit:i[1],count:e})}}),n},breakdown_hundred=function(e){let t=[];if(e>100)return t;for(let n=0;n<tens_mapping.length;n++)e>=tens_mapping[n][1]&&(e-=tens_mapping[n][1],t.push(tens_mapping[n][0]));return ones_mapping[e]&&t.push(ones_mapping[e]),t},handle_decimal=e=>{const t=["zero","one","two","three","four","five","six","seven","eight","nine"];let n=[],i=_toString(e).match(/\.([0-9]+)/);if(!i||!i[0])return n;n.push("point");let r=i[0].split("");for(let e=0;e<r.length;e++)n.push(t[r[e]]);return n},to_text=function(e){if(e>1e21)return String(e);let t=[];e<0&&(t.push("negative"),e=Math.abs(e));let n=breakdown_magnitudes(e);for(let e=0;e<n.length;e++){let i=n[e].unit;"one"===i&&(i="",t.length>1&&t.push("and")),(t=t.concat(breakdown_hundred(n[e].count))).push(i)}return 0===(t=(t=t.concat(handle_decimal(e))).filter(e=>e)).length&&(t[0]=""),t.join(" ")};var toText=to_text;const tens="twenty|thirty|forty|fifty|sixty|seventy|eighty|ninety|fourty",teens="eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|nineteen",findNumbers=function(e,t){let n=e.match("#Value+ #Unit?");if(n.has("#NumericValue #NumericValue")&&(n.has("#Value #Comma #Value")?n.splitAfter("#Comma"):n.splitAfter("#NumericValue")),n.has("#Value #Value #Value")&&!n.has("#Multiple")&&n.has("("+tens+") #Cardinal #Cardinal")&&n.splitAfter("("+tens+") #Cardinal"),n.has("#Value #Value")){n.has("#NumericValue #NumericValue")&&n.splitOn("#Year"),n.has("("+tens+") ("+teens+")")&&n.splitAfter("("+tens+")");let e=n.match("#Cardinal #Cardinal");e.found&&!n.has("(point|decimal)")&&(e.has("#Cardinal (#Multiple|point|decimal)")||e.has("("+tens+") #Cardinal")||e.has("#Multiple #Value")||n.splitAfter(e.terms(0).out("normal"))),n.match("#Ordinal #Ordinal").match("#TextValue").found&&!n.has("#Multiple")&&(n.has("("+tens+") #Ordinal")||n.splitAfter("#Ordinal")),n.has("#Ordinal #Cardinal")&&n.splitBefore("#Cardinal+"),n.has("#TextValue #NumericValue")&&!n.has("("+tens+"|#Multiple)")&&n.splitBefore("#NumericValue+")}return n.has("#NumberRange")&&n.splitAfter("#NumberRange"),"number"==typeof t&&(n=n.get(t)),n};var find=findNumbers;const numOrdinal=function(e){if(!e&&0!==e)return null;let t=e%100;if(t>10&&t<20)return String(e)+"th";const n={0:"th",1:"st",2:"nd",3:"rd"};let i=_toString(e),r=i.slice(i.length-1,i.length);return i+=n[r]?n[r]:"th"};var numOrdinal_1=numOrdinal;const irregulars={one:"first",two:"second",three:"third",five:"fifth",eight:"eighth",nine:"ninth",twelve:"twelfth",twenty:"twentieth",thirty:"thirtieth",forty:"fortieth",fourty:"fourtieth",fifty:"fiftieth",sixty:"sixtieth",seventy:"seventieth",eighty:"eightieth",ninety:"ninetieth"},textOrdinal=e=>{let t=toText(e).split(" "),n=t[t.length-1];return irregulars.hasOwnProperty(n)?t[t.length-1]=irregulars[n]:t[t.length-1]=n.replace(/y$/,"i")+"th",t.join(" ")};var textOrdinal_1=textOrdinal;const makeNumber=function(e,t,n){let i=String(e.num);if(t)i=n?textOrdinal_1(i):toText(i);else if(n)return numOrdinal_1(i);return`${e.prefix||""}${i}${e.suffix||""}`},parseNumber=function(e){let t=e.root(),n=t.split(/^([^0-9]*)([0-9]*)([^0-9]*)$/);if(n[2]){let e=parseFloat(n[2]||t);return"number"!=typeof e&&(e=null),{prefix:n[1]||"",num:e,suffix:n[3]||""}}return{prefix:"",num:toNumber(t),suffix:""}},addMethod=function(e){class t extends e{constructor(e,t,n){super(e,t,n),this.unit=this.match("#Unit+$");let i=this.not("#Unit+$");this.list=i.list}isOrdinal(){return this.if("#Ordinal")}isCardinal(){return this.if("#Cardinal")}toNumber(){return this.forEach(e=>{let t=parseNumber(e),n=makeNumber(t,!1,e.has("#Ordinal"));this.replaceWith(n)}),this}toText(){return this.forEach(e=>{let t=parseNumber(e),n=makeNumber(t,!0,e.has("#Ordinal"));this.replaceWith(n)}),this}toCardinal(){return this.if("#Ordinal").forEach(e=>{let t=parseNumber(e),n=makeNumber(t,e.has("#TextNumber"),!1);this.replaceWith(n)}),this}toOrdinal(){return this.if("#Cardinal").forEach(e=>{let t=parseNumber(e),n=makeNumber(t,e.has("#TextNumber"),!0);this.replaceWith(n)}),this}greaterThan(e){return this.filter(t=>{return parseNumber(t).num>e})}add(e){return e?this.map(t=>{let n=parseNumber(t);n.num+=e;let i=makeNumber(n,t.has("#TextNumber"),t.has("#Ordinal"));return t.replaceWith(i)}):this}subtract(e){return this.add(-1*e)}increment(){this.add(1)}decrement(){this.add(-1)}}return t.prototype.plus=t.prototype.add,t.prototype.minus=t.prototype.subtract,e.prototype.numbers=function(e){let n=find(this,e);return new t(n.list,this,this.world)},e.prototype.values=e.prototype.numbers,e};var src=addMethod;module.exports=src;
