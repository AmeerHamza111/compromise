{"version":3,"file":"compromise-sentences.js","sources":["../src/index.js"],"sourcesContent":["const addMethod = function(Doc) {\n  /**  */\n  class Sentences extends Doc {\n    constructor(list, from, world) {\n      super(list, from, world)\n    }\n    toPastTense() {}\n    toPresentTense() {}\n    toFutureTense() {}\n    toContinuous() {}\n\n    toNegative() {}\n    toPositive() {}\n\n    isPassive() {}\n    /** return sentences ending with '?' */\n    isQuestion() {\n      return this.filter(doc => {\n        let term = doc.lastTerm().termList(0)\n        return term.hasPost('?')\n      })\n    }\n    /** return sentences ending with '!' */\n    isExclamation() {\n      return this.filter(doc => {\n        let term = doc.lastTerm().termList(0)\n        return term.hasPost('!')\n      })\n    }\n    /** return sentences with neither a question or an exclamation */\n    isStatement() {\n      return this.filter(doc => {\n        let term = doc.lastTerm().termList(0)\n        return !term.hasPost('?') && !term.hasPost('!')\n      })\n    }\n\n    /** add a word to the start of this sentence */\n    prepend(str) {\n      this.forEach(doc => {\n        // repair the titlecase\n        let firstTerms = doc.match('^.')\n        firstTerms.not('#ProperNoun').toLowerCase()\n        // actually add the word\n        firstTerms.prepend(str)\n        // add a titlecase\n        firstTerms.terms(0).toTitleCase()\n      })\n    }\n\n    /** add a word to the end of this sentence */\n    append(str) {\n      this.forEach(doc => {\n        let end = doc.match('.$')\n        let lastTerm = end.termList(0)\n        let punct = lastTerm.post\n        // add punctuation to the end\n        end.append(str + punct)\n        // remove punctuation from the former last-term\n        lastTerm.post = ' '\n      })\n    }\n\n    toExclamation() {}\n    toQuestion() {}\n    toStatement() {}\n  }\n\n  Doc.prototype.sentences = function(n) {\n    let match = this.all()\n\n    //grab (n)th result\n    if (typeof n === 'number') {\n      match = match.get(n)\n    }\n    return new Sentences(match.list, this, this.world)\n  }\n  return Doc\n}\nmodule.exports = addMethod\n"],"names":["addMethod","Doc","Sentences","list","from","world","filter","doc","term","lastTerm","termList","hasPost","str","forEach","firstTerms","match","not","toLowerCase","prepend","terms","toTitleCase","end","punct","post","append","prototype","sentences","n","all","get"],"mappings":"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"}