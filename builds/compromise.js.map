{"version":3,"file":"compromise.js","sources":["../src/Term/_id.js","../src/Term/normalize/unicode.js","../src/Term/normalize/isAcronym.js","../src/Term/normalize/clean.js","../src/Term/normalize/reduce.js","../src/Term/parse.js","../src/Term/methods/01-case.js","../src/Term/methods/02-punctuation.js","../src/Term/methods/_doesMatch.js","../src/Term/methods/03-misc.js","../src/Term/methods/04-text.js","../src/Term/methods/_bestTag.js","../src/Term/methods/05-json.js","../src/Term/methods/index.js","../src/Term/tag/fns.js","../src/Term/tag/add.js","../src/Term/tag/unTag.js","../src/Term/tag/canBe.js","../src/Term/tag/index.js","../src/Term/Term.js","../src/Phrase/methods/01-utils.js","../src/Phrase/methods/02-text.js","../src/Phrase/methods/03-change.js","../src/Phrase/methods/_join/append.js","../src/Phrase/methods/_join/prepend.js","../src/Phrase/methods/_join/delete.js","../src/Phrase/methods/04-split.js","../src/Phrase/methods/05-json.js","../src/Phrase/methods/06-lookahead.js","../src/Phrase/methods/index.js","../src/Phrase/match/02-failFast.js","../src/Phrase/match/03-tryMatch.js","../src/Doc/methods/match/parseToken.js","../src/Doc/methods/match/syntax.js","../src/Phrase/match/01-matchAll.js","../src/Phrase/match/not.js","../src/Phrase/match/index.js","../src/Phrase/Phrase.js","../src/01-tokenizer/Pool.js","../src/01-tokenizer/01-sentences.js","../src/01-tokenizer/02-words.js","../src/01-tokenizer/index.js","../src/_version.js","../src/World/_data.js","../src/World/tags/tags/nouns.js","../src/World/tags/tags/verbs.js","../src/World/tags/tags/values.js","../src/World/tags/tags/misc.js","../src/World/tags/inference/_color.js","../src/World/tags/inference/_isA.js","../src/World/tags/inference/_notA.js","../src/World/tags/inference/_lineage.js","../src/World/tags/inference/index.js","../src/World/tags/index.js","../node_modules/efrt-unpack/efrt-unpack.min.js","../src/World/addWords.js","../src/World/addIrregulars.js","../src/World/data/misc.js","../src/World/data/plurals.js","../src/World/data/conjugations.js","../src/transforms/conjugate/suffixes.js","../src/transforms/conjugate/01-suffixes.js","../src/transforms/conjugate/02-generic.js","../src/transforms/conjugate/index.js","../src/transforms/adjectives/toSuperlative.js","../src/transforms/adjectives/toComparative.js","../src/transforms/adjectives/index.js","../src/transforms/toPlural/_rules.js","../src/transforms/toPlural/index.js","../src/transforms/toSingular/_rules.js","../src/transforms/toSingular/index.js","../src/transforms/toInfinitive/_transform.js","../src/transforms/toInfinitive/_guess.js","../src/transforms/toInfinitive/index.js","../src/World/World.js","../src/Doc/methods/01-utils.js","../src/Doc/methods/02-accessors.js","../src/Doc/methods/03-match.js","../src/Doc/methods/04-case.js","../src/Doc/methods/05-whitespace.js","../src/Doc/methods/_setTag.js","../src/Doc/methods/06-tag.js","../src/Doc/methods/07-loops.js","../src/Doc/methods/08-replace.js","../src/Doc/methods/09-insert.js","../src/Doc/methods/10-sort.js","../src/world/tags/tags/nouns.js","../src/world/tags/tags/verbs.js","../src/world/tags/tags/values.js","../src/world/tags/tags/misc.js","../src/world/tags/inference/_color.js","../src/world/tags/inference/_isA.js","../src/world/tags/inference/_notA.js","../src/world/tags/inference/_lineage.js","../src/world/tags/inference/index.js","../src/world/tags/index.js","../src/Doc/methods/_debug.js","../src/Doc/methods/11-out.js","../src/Doc/methods/12-normalize.js","../src/Doc/methods/13-json.js","../src/Doc/methods/14-split.js","../src/Doc/methods/15-join.js","../src/Doc/methods/16-export.js","../src/Doc/methods/index.js","../src/Doc/selections/find.js","../src/Doc/selections/simple.js","../src/Doc/selections/index.js","../src/02-tagger/01-init/01-lexicon.js","../src/02-tagger/01-init/02-punctuation.js","../src/02-tagger/01-init/regexes/index.js","../src/02-tagger/01-init/03-regex.js","../src/02-tagger/01-init/suffixes/regex.js","../src/02-tagger/01-init/suffixes/suffixList.js","../src/02-tagger/01-init/04-suffixes.js","../src/02-tagger/01-init/index.js","../src/02-tagger/02-fallbacks/data/markov.js","../src/02-tagger/02-fallbacks/01-neighbours.js","../src/02-tagger/02-fallbacks/02-case.js","../src/02-tagger/02-fallbacks/data/isPlural.js","../src/02-tagger/02-fallbacks/04-plurals.js","../src/02-tagger/02-fallbacks/03-stem.js","../src/02-tagger/02-fallbacks/index.js","../src/02-tagger/03-contractions/01-negative.js","../src/02-tagger/03-contractions/02-simple.js","../src/02-tagger/03-contractions/03-irregulars.js","../src/02-tagger/03-contractions/04-possessive.js","../src/02-tagger/03-contractions/05-perfectTense.js","../src/02-tagger/03-contractions/06-ranges.js","../src/02-tagger/03-contractions/index.js","../src/02-tagger/04-correction/fixMisc.js","../src/02-tagger/04-correction/fixThe.js","../src/02-tagger/04-correction/fixNouns.js","../src/02-tagger/04-correction/fixPerson.js","../src/02-tagger/04-correction/fixVerb.js","../src/02-tagger/04-correction/fixAdjective.js","../src/02-tagger/04-correction/fixValue.js","../src/02-tagger/04-correction/fixDates.js","../src/02-tagger/04-correction/index.js","../src/02-tagger/index.js","../src/Subset/Acronyms.js","../src/Subset/Clauses.js","../src/Subset/Contractions.js","../src/Subset/Lists.js","../src/Subset/Nouns/hasPlural.js","../src/Subset/Nouns/getArticle.js","../src/Subset/Nouns/isPlural/_rules.js","../src/Subset/Nouns/isPlural/index.js","../src/Subset/Nouns/toPossessive.js","../src/Subset/Nouns/parse.js","../src/Subset/Nouns/index.js","../src/Subset/Parentheses.js","../src/Subset/Possessives.js","../src/Subset/Quotations.js","../src/Subset/Verbs/parse.js","../src/Subset/Verbs/tense/toInfinitive/index.js","../src/Subset/Verbs/plural/isPlural.js","../src/Subset/Verbs/tense/conjugate/toBe.js","../src/Subset/Verbs/tense/conjugate/index.js","../src/Subset/Verbs/negative/toNegative.js","../src/Subset/Verbs/negative/methods.js","../src/Subset/Verbs/plural/methods.js","../src/Subset/Verbs/tense/methods.js","../src/Subset/Verbs/index.js","../src/Subset/index.js","../src/Doc/Doc.js","../src/index.js"],"sourcesContent":["//this is a not-well-thought-out way to reduce our dependence on `object===object` stuff\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'.split('')\n\n//generates a unique id for this term\nfunction makeId(str) {\n  str = str || '_'\n  let text = str + '-'\n  for (let i = 0; i < 7; i++) {\n    text += chars[Math.floor(Math.random() * chars.length)]\n  }\n  return text\n}\n\nmodule.exports = makeId\n","//a hugely-ignorant, and widely subjective transliteration of latin, cryllic, greek unicode characters to english ascii.\n//approximate visual (not semantic or phonetic) relationship between unicode and ascii characters\n//http://en.wikipedia.org/wiki/List_of_Unicode_characters\n//https://docs.google.com/spreadsheet/ccc?key=0Ah46z755j7cVdFRDM1A2YVpwa1ZYWlpJM2pQZ003M0E\nlet compact = {\n  '!': '¡',\n  '?': '¿Ɂ',\n  '\"': '“”\"❝❞',\n  \"'\": '‘‛❛❜',\n  '-': '—–',\n  a: 'ªÀÁÂÃÄÅàáâãäåĀāĂăĄąǍǎǞǟǠǡǺǻȀȁȂȃȦȧȺΆΑΔΛάαλАадѦѧӐӑӒӓƛɅæ',\n  b: 'ßþƀƁƂƃƄƅɃΒβϐϦБВЪЬвъьѢѣҌҍ',\n  c: '¢©ÇçĆćĈĉĊċČčƆƇƈȻȼͻͼͽϲϹϽϾСсєҀҁҪҫ',\n  d: 'ÐĎďĐđƉƊȡƋƌǷ',\n  e: 'ÈÉÊËèéêëĒēĔĕĖėĘęĚěƎƏƐǝȄȅȆȇȨȩɆɇΈΕΞΣέεξϱϵ϶ЀЁЕЭеѐёҼҽҾҿӖӗӘәӚӛӬӭ',\n  f: 'ƑƒϜϝӺӻҒғſ',\n  g: 'ĜĝĞğĠġĢģƓǤǥǦǧǴǵ',\n  h: 'ĤĥĦħƕǶȞȟΉΗЂЊЋНнђћҢңҤҥҺһӉӊ',\n  I: 'ÌÍÎÏ',\n  i: 'ìíîïĨĩĪīĬĭĮįİıƖƗȈȉȊȋΊΐΪίιϊІЇії',\n  j: 'ĴĵǰȷɈɉϳЈј',\n  k: 'ĶķĸƘƙǨǩΚκЌЖКжкќҚқҜҝҞҟҠҡ',\n  l: 'ĹĺĻļĽľĿŀŁłƚƪǀǏǐȴȽΙӀӏ',\n  m: 'ΜϺϻМмӍӎ',\n  n: 'ÑñŃńŅņŇňŉŊŋƝƞǸǹȠȵΝΠήηϞЍИЙЛПийлпѝҊҋӅӆӢӣӤӥπ',\n  o: 'ÒÓÔÕÖØðòóôõöøŌōŎŏŐőƟƠơǑǒǪǫǬǭǾǿȌȍȎȏȪȫȬȭȮȯȰȱΌΘΟθοσόϕϘϙϬϭϴОФоѲѳӦӧӨөӪӫ',\n  p: 'ƤƿΡρϷϸϼРрҎҏÞ',\n  q: 'Ɋɋ',\n  r: 'ŔŕŖŗŘřƦȐȑȒȓɌɍЃГЯгяѓҐґ',\n  s: 'ŚśŜŝŞşŠšƧƨȘșȿЅѕ',\n  t: 'ŢţŤťŦŧƫƬƭƮȚțȶȾΓΤτϮТт',\n  u: 'µÙÚÛÜùúûüŨũŪūŬŭŮůŰűŲųƯưƱƲǓǔǕǖǗǘǙǚǛǜȔȕȖȗɄΰμυϋύ',\n  v: 'νѴѵѶѷ',\n  w: 'ŴŵƜωώϖϢϣШЩшщѡѿ',\n  x: '×ΧχϗϰХхҲҳӼӽӾӿ',\n  y: 'ÝýÿŶŷŸƳƴȲȳɎɏΎΥΫγψϒϓϔЎУучўѰѱҮүҰұӮӯӰӱӲӳ',\n  z: 'ŹźŻżŽžƩƵƶȤȥɀΖζ',\n}\n//decompress data into two hashes\nlet unicode = {}\nObject.keys(compact).forEach(function(k) {\n  compact[k].split('').forEach(function(s) {\n    unicode[s] = k\n  })\n})\n\nconst killUnicode = str => {\n  let chars = str.split('')\n  chars.forEach((s, i) => {\n    if (unicode[s]) {\n      chars[i] = unicode[s]\n    }\n  })\n  return chars.join('')\n}\nmodule.exports = killUnicode\n// console.log(killUnicode('bjŏȒk—Ɏó'));\n","const periodAcronym = /([A-Z]\\.)+[A-Z]?,?$/\nconst oneLetterAcronym = /^[A-Z]\\.,?$/\nconst noPeriodAcronym = /[A-Z]{2,}('s|,)?$/\nconst lowerCaseAcronym = /([a-z]\\.){2,}[a-z]\\.?$/\n\nconst isAcronym = function(str) {\n  //like N.D.A\n  if (periodAcronym.test(str) === true) {\n    return true\n  }\n  //like c.e.o\n  if (lowerCaseAcronym.test(str) === true) {\n    return true\n  }\n  //like 'F.'\n  if (oneLetterAcronym.test(str) === true) {\n    return true\n  }\n  //like NDA\n  if (noPeriodAcronym.test(str) === true) {\n    return true\n  }\n  return false\n}\nmodule.exports = isAcronym\n","const killUnicode = require('./unicode')\nconst isAcronym = require('./isAcronym')\nconst hasSlash = /[a-z\\u00C0-\\u00FF] ?\\/ ?[a-z\\u00C0-\\u00FF]/\n\n/** some basic operations on a string to reduce noise */\nconst clean = function(str) {\n  str = str || ''\n  str = str.toLowerCase()\n  str = str.trim()\n  let original = str\n  //(very) rough ASCII transliteration -  bjŏrk -> bjork\n  str = killUnicode(str)\n  //rough handling of slashes - 'see/saw'\n  if (hasSlash.test(str) === true) {\n    str = str.replace(/\\/.*/, '')\n  }\n  //#tags, @mentions\n  str = str.replace(/^[#@]/, '')\n  //punctuation\n  str = str.replace(/[,;.!?]+$/, '')\n  // coerce single curly quotes\n  str = str.replace(/[\\u0027\\u0060\\u00B4\\u2018\\u2019\\u201A\\u201B\\u2032\\u2035\\u2039\\u203A]+/g, \"'\")\n  // coerce double curly quotes\n  str = str.replace(\n    /[\\u0022\\u00AB\\u00BB\\u201C\\u201D\\u201E\\u201F\\u2033\\u2034\\u2036\\u2037\\u2E42\\u301D\\u301E\\u301F\\uFF02]+/g,\n    '\"'\n  )\n  //coerce Unicode ellipses\n  str = str.replace(/\\u2026/g, '...')\n  //en-dash\n  str = str.replace(/\\u2013/g, '-')\n  //lookin'->looking (make it easier for conjugation)\n  if (/[a-z][^aeiou]in['’]$/.test(str) === true) {\n    str = str.replace(/in['’]$/, 'ing')\n  }\n  //turn re-enactment to reenactment\n  if (/^(re|un)-?[^aeiou]./.test(str) === true) {\n    str = str.replace('-', '')\n  }\n  //strip leading & trailing grammatical punctuation\n  if (/^[:;]/.test(str) === false) {\n    str = str.replace(/\\.{3,}$/g, '')\n    str = str.replace(/[\",\\.!:;\\?\\)]+$/g, '')\n    str = str.replace(/^['\"\\(]+/g, '')\n  }\n  //do this again..\n  str = str.trim()\n  //oh shucks,\n  if (str === '') {\n    str = original\n  }\n  //compact acronyms\n  if (isAcronym(str)) {\n    str = str.replace(/\\./g, '')\n  }\n  //nice-numbers\n  str = str.replace(/([0-9]),([0-9])/g, '$1$2')\n  return str\n}\n\nmodule.exports = clean\n// console.log(normalize('Dr. V Cooper'));\n","/** reduced is one step further than clean */\nconst reduced = function(str) {\n  // remove apostrophes\n  str = str.replace(/['’]s$/, '')\n  str = str.replace(/s['’]$/, 's')\n  return str\n}\nmodule.exports = reduced\n","const normalize = require('./normalize/clean')\nconst reduce = require('./normalize/reduce')\n// basically, tokenize for terms.\n\n//all punctuation marks, from https://en.wikipedia.org/wiki/Punctuation\n//we have slightly different rules for start/end - like #hashtags.\nconst startings = /^[ \\n\\t\\.’'\\[\\](){}⟨⟩:,،、‒–—―…!.‹›«»‐\\-?‘’;\\/⁄·\\&*\\•^†‡°¡¿※№÷×ºª%‰+−=‱¶′″‴§~|‖¦©℗®℠™¤₳฿\\u0022|\\uFF02|\\u0027|\\u201C|\\u2018|\\u201F|\\u201B|\\u201E|\\u2E42|\\u201A|\\u00AB|\\u2039|\\u2035|\\u2036|\\u2037|\\u301D|\\u0060|\\u301F]+/\nconst endings = /[ \\n\\t\\.’'\\[\\](){}⟨⟩:,،、‒–—―…!.‹›«»‐\\-?‘’;\\/⁄·\\&*@\\•^†‡°¡¿※#№÷×ºª‰+−=‱¶′″‴§~|‖¦©℗®℠™¤₳฿\\u0022|\\uFF02|\\u0027|\\u201D|\\u2019|\\u201D|\\u2019|\\u201D|\\u201D|\\u2019|\\u00BB|\\u203A|\\u2032|\\u2033|\\u2034|\\u301E|\\u00B4|\\u301E]+$/\n\n//money = ₵¢₡₢$₫₯֏₠€ƒ₣₲₴₭₺₾ℳ₥₦₧₱₰£៛₽₹₨₪৳₸₮₩¥\nconst hasSlash = /\\//\nconst hasApostrophe = /['’]/\nconst minusNumber = /^[-+\\.][0-9]/\n\n/** turn given text into a parsed-up object\n * seperate the 'meat' of the word from the whitespace+punctuation\n */\nconst parseTerm = str => {\n  let original = str\n  let pre = ''\n  let post = ''\n  str = str.replace(startings, found => {\n    pre = found\n    // support '-40'\n    if ((pre === '-' || pre === '+' || pre === '.') && minusNumber.test(str)) {\n      pre = ''\n      return found\n    }\n    return ''\n  })\n  str = str.replace(endings, found => {\n    post = found\n    // keep s-apostrophe - \"flanders'\" or \"chillin'\"\n    if (hasApostrophe.test(found) && /[sn]['’]$/.test(original) && hasApostrophe.test(pre) === false) {\n      post = post.replace(hasApostrophe, '')\n      return `'`\n    }\n    return ''\n  })\n  //we went too far..\n  if (str === '') {\n    // do a very mild parse, and hope for the best.\n    original = original.replace(/ *$/, after => {\n      post = after || ''\n      return ''\n    })\n    str = original\n    pre = ''\n    post = post\n  }\n\n  // create the various forms of our text,\n  let clean = normalize(str)\n  const parsed = {\n    text: str,\n    clean: clean,\n    reduced: reduce(clean),\n    pre: pre,\n    post: post,\n  }\n  // support aliases for slashes\n  if (hasSlash.test(str)) {\n    str.split(hasSlash).forEach(word => {\n      parsed.alias = parsed.alias || {}\n      parsed.alias[word.trim()] = true\n    })\n  }\n  return parsed\n}\nmodule.exports = parseTerm\n","const titleCase = /^[A-Z][a-z'\\u00C0-\\u00FF]/\n\n/** convert all text to uppercase */\nexports.toUpperCase = function() {\n  this.text = this.text.toUpperCase()\n  return this\n}\n\n/** convert all text to lowercase */\nexports.toLowerCase = function() {\n  this.text = this.text.toLowerCase()\n  return this\n}\n\n/** only set the first letter to uppercase\n * leave any existing uppercase alone\n */\nexports.toTitleCase = function() {\n  this.text = this.text.replace(/^ *[a-z\\u00C0-\\u00FF]/, x => x.toUpperCase()) //support unicode?\n  return this\n}\n\n/** if the first letter is uppercase, and the rest are lowercase */\nexports.isTitleCase = function() {\n  return titleCase.test(this.text)\n}\nexports.titleCase = exports.isTitleCase\n","// these methods are called with '@hasComma' in the match syntax\n// various unicode quotation-mark formats\nconst startQuote =\n  '(\\u0022|\\uFF02|\\u0027|\\u201C|\\u2018|\\u201F|\\u201B|\\u201E|\\u2E42|\\u201A|\\u00AB|\\u2039|\\u2035|\\u2036|\\u2037|\\u301D|\\u0060|\\u301F)'\nconst endQuote =\n  '(\\u0022|\\uFF02|\\u0027|\\u201D|\\u2019|\\u201D|\\u2019|\\u201D|\\u201D|\\u2019|\\u00BB|\\u203A|\\u2032|\\u2033|\\u2034|\\u301E|\\u00B4|\\u301E)'\n\n/** search the term's 'post' punctuation  */\nexports.hasPost = function(punct) {\n  return this.post.indexOf(punct) !== -1\n}\n/** search the term's 'pre' punctuation  */\nexports.hasPre = function(punct) {\n  return this.pre.indexOf(punct) !== -1\n}\n\n/** does it have a quotation symbol?  */\nexports.hasQuote = function() {\n  return startQuote.test(this.pre) || endQuote.test(this.post)\n}\n\n/** does it have a comma?  */\nexports.hasComma = function() {\n  return this.hasPost(',')\n}\n\n/** does it end in a period? */\nexports.hasPeriod = function() {\n  return this.hasPost('.') === true && this.hasPost('...') === false\n}\n\n/** does it end in an exclamation */\nexports.hasExclamation = function() {\n  return this.hasPost('!')\n}\n\n/** does it end with a question mark? */\nexports.hasQuestionMark = function() {\n  return this.hasPost('?') || this.hasPost('¿')\n}\n\n/** is there a ... at the end? */\nexports.hasEllipses = function() {\n  return this.hasPost('..') || this.hasPost('…')\n}\n\n/** is there a semicolon after this word? */\nexports.hasSemicolon = function() {\n  return this.hasPost(';')\n}\n\n/** is there a slash in this word? */\nexports.hasSlash = function() {\n  return /\\//.test(this.text)\n}\n\n/** a hyphen connects two words like-this */\nexports.hasHyphen = function() {\n  const hyphen = /(-|–|—)/\n  return hyphen.test(this.post) || hyphen.test(this.pre)\n}\n/** a dash seperates words - like that */\nexports.hasDash = function() {\n  const hyphen = / (-|–|—) /\n  return hyphen.test(this.post) || hyphen.test(this.pre)\n}\n\n/** is it multiple words combinded */\nexports.hasContraction = function() {\n  return Boolean(this.implicit)\n}\n\n/** try to sensibly put this punctuation mark into the term */\nexports.addPunctuation = function(punct) {\n  // dont add doubles\n  if (punct === ',' || punct === ';') {\n    this.post = this.post.replace(punct, '')\n  }\n  this.post = punct + this.post\n  return this\n}\n","//declare it up here\nlet wrapMatch = function() {}\n\n/** ignore optional/greedy logic, straight-up term match*/\nconst doesMatch = function(t, reg, index, length) {\n  // support id matches\n  if (reg.id === t.id) {\n    return true\n  }\n  // support '.'\n  if (reg.anything === true) {\n    return true\n  }\n  // support '^' (in parentheses)\n  if (reg.start === true && index !== 0) {\n    return false\n  }\n  // support '$' (in parentheses)\n  if (reg.end === true && index !== length - 1) {\n    return false\n  }\n  //support a text match\n  if (reg.word !== undefined) {\n    //match contractions\n    if (t.implicit !== null && t.implicit === reg.word) {\n      return true\n    }\n    // term aliases for slashes and things\n    if (t.alias !== undefined && t.alias.hasOwnProperty(reg.word)) {\n      return true\n    }\n    // support ~ match\n    if (reg.soft === true && reg.word === t.root) {\n      return true\n    }\n    //match either .clean or .text\n    return reg.word === t.clean || reg.word === t.text || reg.word === t.reduced\n  }\n  //support #Tag\n  if (reg.tag !== undefined) {\n    return t.tags[reg.tag] === true\n  }\n  //support @method\n  if (reg.method !== undefined) {\n    if (typeof t[reg.method] === 'function' && t[reg.method]() === true) {\n      return true\n    }\n    return false\n  }\n  //support /reg/\n  if (reg.regex !== undefined) {\n    return reg.regex.test(t.clean)\n  }\n  //support (one|two)\n  if (reg.choices !== undefined) {\n    // try to support && operator\n    if (reg.operator === 'and') {\n      // must match them all\n      return reg.choices.every(r => wrapMatch(t, r, index, length))\n    }\n    // or must match one\n    return reg.choices.some(r => wrapMatch(t, r, index, length))\n  }\n  return false\n}\n\n// wrap result for !negative match logic\nwrapMatch = function(t, reg, index, length) {\n  let result = doesMatch(t, reg, index, length)\n  if (reg.negative === true) {\n    return !result\n  }\n  return result\n}\n\nmodule.exports = wrapMatch\n","const doesMatch = require('./_doesMatch')\nconst isAcronym = require('../normalize/isAcronym')\n\n// these tags aren't juicy-enough\nconst boring = {}\n\n/** check a match object against this term */\nexports.doesMatch = function(reg, index, length) {\n  return doesMatch(this, reg, index, length)\n}\n\n/** does this term look like an acryonym? */\nexports.isAcronym = function() {\n  return isAcronym(this.text)\n}\n\n/** is this term implied by a contraction? */\nexports.isImplicit = function() {\n  return this.text === '' && this.implicit\n}\n\n/** does the term have at least one good tag? */\nexports.isKnown = function() {\n  return Object.keys(this.tags).some(t => boring[t] !== true)\n}\n\n/** cache the root property of the term */\nexports.setRoot = function(world) {\n  let transform = world.transforms\n  let str = this.implicit || this.clean\n  if (this.tags.Plural) {\n    str = transform.toSingular(str, world)\n  }\n  if (this.tags.Verb && !this.tags.Negative && !this.tags.Infinitive) {\n    let tense = null\n    if (this.tags.PastTense) {\n      tense = 'PastTense'\n    } else if (this.tags.Gerund) {\n      tense = 'Gerund'\n    } else if (this.tags.PresentTense) {\n      tense = 'PresentTense'\n    } else if (this.tags.Participle) {\n      tense = 'Participle'\n    } else if (this.tags.Actor) {\n      tense = 'Actor'\n    }\n    str = transform.toInfinitive(str, world, tense)\n  }\n  this.root = str\n}\n","const hasSpace = /[\\s-]/\n\n/** return various text formats of this term */\nexports.textOut = function(options, showPre, showPost) {\n  options = options || {}\n  let word = this.text\n  let before = this.pre\n  let after = this.post\n\n  if (options.unicode === true) {\n    word = this.clean || ''\n  }\n  if (options.reduced === true) {\n    word = this.reduced || ''\n  }\n  if (options.root === true) {\n    word = this.root || ''\n  }\n  if (options.implicit === true && this.implicit) {\n    word = this.implicit || ''\n  }\n  if (options.whitespace === true) {\n    before = ''\n    after = ' '\n    if ((hasSpace.test(this.post) === false || options.last) && !this.implicit) {\n      after = ''\n    }\n  }\n  if (options.lowercase === true) {\n    word = word.toLowerCase()\n  }\n  if (options.punctuation === true) {\n    //normalized end punctuation\n    if (this.hasPost('.') === true) {\n      after = '.' + after\n    } else if (this.hasPost('?') === true) {\n      after = '?' + after\n    } else if (this.hasPost('!') === true) {\n      after = '!' + after\n    } else if (this.hasPost(',') === true) {\n      after = ',' + after\n    } else if (this.hasEllipses() === true) {\n      after = '...' + after\n    }\n  }\n  if (showPre !== true) {\n    before = ''\n  }\n  if (showPost !== true) {\n    after = ''\n  }\n  return before + word + after\n}\n","const boringTags = {\n  Auxiliary: 1,\n  Possessive: 1,\n}\n\n/** a subjective ranking of tags kinda tfidf-based */\nconst rankTags = function(term, world) {\n  let tags = Object.keys(term.tags)\n  const tagSet = world.tags\n  tags = tags.sort() //alphabetical, first\n\n  tags = tags.sort((a, b) => {\n    //bury the tags we dont want\n    if (boringTags[b] || !tagSet[b]) {\n      return -1\n    }\n    // unknown tags are interesting\n    if (!tagSet[a]) {\n      return 1\n    }\n    // then sort by #of parent tags (most-specific tags first)\n    if (tagSet[a].lineage.length > tagSet[b].lineage.length) {\n      return 1\n    }\n    return -1\n  })\n  return tags\n}\nmodule.exports = rankTags\n","const rankTags = require('./_bestTag')\n\nconst jsonDefault = {\n  text: true,\n  tags: true,\n  implicit: true,\n\n  clean: false,\n  raw: false,\n  id: false,\n  offset: false,\n  whitespace: false,\n  bestTag: false,\n}\n\n/** return various metadata for this term */\nexports.json = function(options, world) {\n  options = options || {}\n  options = Object.assign({}, jsonDefault, options)\n  let result = {}\n\n  // default on\n  if (options.text) {\n    result.text = this.text\n  }\n  if (options.tags) {\n    result.tags = Object.keys(this.tags)\n  }\n\n  // default off\n  if (options.clean) {\n    result.clean = this.clean\n  }\n  if (options.id || options.offset) {\n    result.id = this.id\n  }\n  if (options.normal) {\n    result.normal = this.normal\n  }\n  if (options.raw) {\n    result.raw = this.raw\n  }\n  if (options.implicit && this.implicit !== null) {\n    result.implicit = this.implicit\n  }\n  if (options.whitespace) {\n    result.pre = this.pre\n    result.post = this.post\n  }\n  if (options.bestTag) {\n    result.bestTag = rankTags(this, world)[0]\n  }\n\n  return result\n}\n","module.exports = Object.assign(\n  {},\n  require('./01-case'),\n  require('./02-punctuation'),\n  require('./03-misc'),\n  require('./04-text'),\n  require('./05-json')\n)\n","/** add spaces at the end */\nconst padEnd = function(str, width) {\n  str = str.toString()\n  while (str.length < width) {\n    str += ' '\n  }\n  return str\n}\n\n/** output for verbose-mode */\nexports.logTag = function(t, tag, reason) {\n  let log = '\\x1b[33m' + padEnd(t.clean, 15) + '\\x1b[0m + \\x1b[32m' + tag + '\\x1b[0m '\n  if (reason) {\n    log = padEnd(log, 35) + ' ' + reason + ''\n  }\n  console.log(log)\n}\n\n/** output for verbose mode  */\nexports.logUntag = function(t, tag, reason) {\n  let log = '\\x1b[33m' + padEnd(t.clean, 3) + ' \\x1b[31m - #' + tag + '\\x1b[0m '\n  if (reason) {\n    log = padEnd(log, 35) + ' ' + reason\n  }\n  console.log(log)\n}\n\nexports.isArray = function(arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]'\n}\n\nexports.titleCase = str => {\n  return str.charAt(0).toUpperCase() + str.substr(1)\n}\n","const fns = require('./fns')\n\n/** add a tag, and its descendents, to a term */\nconst addTag = function(t, tag, reason, world) {\n  let tagset = world.tags\n  //support '.' or '-' notation for skipping the tag\n  if (tag === '' || tag === '.' || tag === '-') {\n    return\n  }\n  if (tag[0] === '#') {\n    tag = tag.replace(/^#/, '')\n  }\n  tag = fns.titleCase(tag)\n  //if we already got this one\n  if (t.tags[tag] === true) {\n    return\n  }\n  // log it?\n  const isVerbose = world.isVerbose()\n  if (isVerbose === true) {\n    fns.logTag(t, tag, reason)\n  }\n  //add tag\n  t.tags[tag] = true //whee!\n\n  //check tagset for any additional things to do...\n  if (tagset.hasOwnProperty(tag) === true) {\n    //add parent Tags\n    tagset[tag].isA.forEach(down => {\n      t.tags[down] = true\n      if (isVerbose === true) {\n        fns.logTag(t, '→ ' + down)\n      }\n    })\n    //remove any contrary tags\n    t.unTag(tagset[tag].notA, '←', world)\n  }\n}\n\n/** support an array of tags */\nconst addTags = function(term, tags, reason, world) {\n  if (fns.isArray(tags) === true) {\n    tags.forEach(tag => addTag(term, tag, reason, world))\n  } else {\n    addTag(term, tags, reason, world)\n  }\n}\nmodule.exports = addTags\n","const fns = require('./fns')\n\n/** remove this tag, and its descentents from the term */\nconst unTag = function(t, tag, reason, world) {\n  const isVerbose = world.isVerbose()\n  //support '*' for removing all tags\n  if (tag === '*') {\n    t.tags = {}\n    return t\n  }\n  // remove the tag\n  if (t.tags[tag] === true && t.tags.hasOwnProperty(tag) === true) {\n    delete t.tags[tag]\n    //log in verbose-mode\n    if (isVerbose === true) {\n      fns.logUntag(t, tag, reason)\n    }\n  }\n  //delete downstream tags too\n  const tagset = world.tags\n  if (tagset[tag]) {\n    let lineage = tagset[tag].lineage\n    for (let i = 0; i < lineage.length; i++) {\n      // unTag(t, also[i], ' - -   - ', world) //recursive\n      if (t.tags[lineage[i]] === true) {\n        delete t.tags[lineage[i]]\n        if (isVerbose === true) {\n          fns.logUntag(t, ' - ' + lineage[i])\n        }\n      }\n    }\n  }\n  return t\n}\n\n//handle an array of tags\nconst untagAll = function(term, tags, reason, world) {\n  if (fns.isArray(tags) === true) {\n    tags.forEach(tag => unTag(term, tag, reason, world))\n  } else {\n    unTag(term, tags, reason, world)\n  }\n}\nmodule.exports = untagAll\n","'use strict'\n\n//recursively-check compatibility of this tag and term\nconst canBe = function(term, tag, world) {\n  const tagset = world.tags\n  // cleanup tag\n  if (tag[0] === '#') {\n    tag = tag.replace(/^#/, '')\n  }\n  //fail-fast\n  if (tagset[tag] === undefined) {\n    return true\n  }\n  //loop through tag's contradictory tags\n  let enemies = tagset[tag].notA || []\n  for (let i = 0; i < enemies.length; i++) {\n    if (term.tags[enemies[i]] === true) {\n      return false\n    }\n  }\n  if (tagset[tag].isA !== undefined) {\n    return canBe(term, tagset[tag].isA, world) //recursive\n  }\n  return true\n}\n\nmodule.exports = canBe\n","const add = require('./add')\nconst unTag = require('./unTag')\nconst canBe = require('./canBe')\n\n/** add a tag or tags, and their descendents to this term\n * @param  {string | string[]} tags - a tag or tags\n * @param {string?} [reason] a clue for debugging\n */\nexports.tag = function(tags, reason, world) {\n  add(this, tags, reason, world)\n  return this\n}\n\n/** only tag this term if it's consistent with it's current tags */\nexports.tagSafe = function(tags, reason, world) {\n  if (canBe(this, tags, world)) {\n    add(this, tags, reason, world)\n  }\n  return this\n}\n\n/** remove a tag or tags, and their descendents from this term\n * @param {string | string[]} tags  - a tag or tags\n * @param {string?} [reason] a clue for debugging\n */\nexports.unTag = function(tags, reason, world) {\n  unTag(this, tags, reason, world)\n  return this\n}\n\n/** is this tag consistent with the word's current tags?\n * @param {string | string[]} tags - a tag or tags\n * @returns {boolean}\n */\nexports.canBe = function(tags, world) {\n  return canBe(this, tags, world)\n}\n","const makeId = require('./_id')\nconst parseTerm = require('./parse')\nconst methods = require('./methods')\nconst tagMethods = require('./tag')\n\nclass Term {\n  constructor(text = '') {\n    text = String(text)\n    let obj = parseTerm(text)\n    // the various forms of our text\n    this.text = obj.text || ''\n    this.clean = obj.clean\n    this.reduced = obj.reduced\n    this.root = obj.root\n    this.implicit = obj.implicit || null\n\n    this.pre = obj.pre || ''\n    this.post = obj.post || ''\n    this.raw = text.trim()\n    this.tags = {}\n    this.prev = null\n    this.next = null\n    this.id = makeId(obj.clean)\n    this.isA = 'Term' // easier than .constructor...\n    // support alternative matches\n    if (obj.alias) {\n      this.alias = obj.alias\n    }\n  }\n  /** set the text of the Term to something else*/\n  set(str) {\n    let obj = parseTerm(str)\n    this.text = obj.text\n    this.clean = obj.clean\n    return this\n  }\n}\n\n/** create a deep-copy of this term */\nTerm.prototype.clone = function() {\n  let term = new Term(this.text)\n  term.pre = this.pre\n  term.post = this.post\n  term.tags = Object.assign({}, this.tags)\n  //use the old id, so it can be matched with .match(doc)\n  // term.id = this.id\n  return term\n}\n\nObject.assign(Term.prototype, methods)\nObject.assign(Term.prototype, tagMethods)\n\nmodule.exports = Term\n","/** return a flat array of Term objects */\nexports.terms = function(n) {\n  let terms = [this.pool.get(this.start)]\n  if (this.length === 0) {\n    return []\n  }\n  for (let i = 0; i < this.length - 1; i += 1) {\n    let id = terms[terms.length - 1].next\n    if (id === null) {\n      // throw new Error('linked-list broken')\n      console.error(\"Compromise error: Linked list broken in phrase '\" + this.start + \"'\")\n      break\n    }\n    let term = this.pool.get(id)\n    terms.push(term)\n    //return this one?\n    if (n !== undefined && n === i) {\n      return terms[n]\n    }\n  }\n  if (n !== undefined) {\n    return terms[n]\n  }\n  return terms\n}\n\n/** return a shallow or deep copy of this phrase  */\nexports.clone = function(isShallow) {\n  if (isShallow) {\n    return this.buildFrom(this.start, this.length)\n  }\n  //how do we clone part of the pool?\n  let terms = this.terms()\n  let newTerms = terms.map(t => t.clone())\n  //connect these new ids up\n  newTerms.forEach((t, i) => {\n    //add it to the pool..\n    this.pool.add(t)\n    if (newTerms[i + 1]) {\n      t.next = newTerms[i + 1].id\n    }\n    if (newTerms[i - 1]) {\n      t.prev = newTerms[i - 1].id\n    }\n  })\n  return this.buildFrom(newTerms[0].id, newTerms.length)\n}\n\n/** return last term object */\nexports.lastTerm = function() {\n  let terms = this.terms()\n  return terms[terms.length - 1]\n}\n\n/** quick lookup for a term id */\nexports.hasId = function(wantId) {\n  if (this.length === 0 || !wantId) {\n    return false\n  }\n  if (this.start === wantId) {\n    return true\n  }\n  let lastId = this.start\n  for (let i = 0; i < this.length - 1; i += 1) {\n    let term = this.pool.get(lastId)\n    if (term === undefined) {\n      console.error(`Compromise error: Linked list broken. Missing term '${lastId}' in phrase '${this.start}'\\n`)\n      // throw new Error('linked List error')\n      return false\n    }\n    if (term.next === wantId) {\n      return true\n    }\n    lastId = term.next\n  }\n  return false\n}\n\n/** how many seperate, non-empty words is it? */\nexports.wordCount = function() {\n  return this.terms().filter(t => t.text !== '').length\n}\n","const trimEnd = function(str) {\n  return str.replace(/ +$/, '')\n}\n\n/** produce output in the given format */\nexports.text = function(options = {}, isFirst, isLast) {\n  if (typeof options === 'string') {\n    if (options === 'normal') {\n      options = {\n        punctuation: true,\n        whitespace: true,\n        unicode: true,\n        implicit: true,\n      }\n    } else if (options === 'clean') {\n      options = {\n        lowercase: true,\n        punctuation: true,\n        whitespace: true,\n        unicode: true,\n        implicit: true,\n      }\n    } else if (options === 'reduced') {\n      options = {\n        lowercase: true,\n        punctuation: false, //FIXME: reversed\n        whitespace: true,\n        unicode: true,\n        implicit: true,\n        reduced: true,\n      }\n    } else if (options === 'root') {\n      options = {\n        lowercase: true,\n        punctuation: true,\n        whitespace: true,\n        unicode: true,\n        implicit: true,\n        root: true,\n      }\n    } else {\n      options = {}\n    }\n  }\n  let terms = this.terms()\n  //this this phrase a complete sentence?\n  let isFull = false\n  if (terms[0] && terms[0].prev === null && terms[terms.length - 1].next === null) {\n    isFull = true\n  }\n  let text = terms.reduce((str, t, i) => {\n    options.last = isLast && i === terms.length - 1\n    let showPre = true\n    let showPost = true\n    if (isFull === false) {\n      // dont show beginning whitespace\n      if (i === 0 && isFirst) {\n        showPre = false\n      }\n      // dont show end-whitespace\n      if (i === terms.length - 1 && isLast) {\n        showPost = false\n      }\n    }\n    return str + t.textOut(options, showPre, showPost)\n  }, '')\n  //full-phrases show punctuation, but not whitespace\n  if (isFull === true && isLast) {\n    text = trimEnd(text)\n  }\n  if (options.trim) {\n    text = text.trim()\n  }\n  return text\n}\n","/** remove start and end whitespace */\nexports.trim = function() {\n  let terms = this.terms()\n  if (terms.length > 0) {\n    //trim starting\n    terms[0].pre = terms[0].pre.replace(/^\\s+/, '')\n    //trim ending\n    let lastTerm = terms[terms.length - 1]\n    lastTerm.post = lastTerm.post.replace(/\\s+$/, '')\n  }\n  return this\n}\n","const endOfSentence = /[.?!]\\s*$/\n\n// replacing a 'word.' with a 'word!'\nconst combinePost = function(before, after) {\n  //only transfer the whitespace\n  if (endOfSentence.test(after)) {\n    let whitespace = before.match(/\\s*$/)\n    return after + whitespace\n  }\n  return before\n}\n\n//add whitespace to the start of the second bit\nconst addWhitespace = function(beforeTerms, newTerms) {\n  // add any existing pre-whitespace to beginning\n  newTerms[0].pre = beforeTerms[0].pre\n  let lastTerm = beforeTerms[beforeTerms.length - 1]\n\n  //add any existing punctuation to end of our new terms\n  let newTerm = newTerms[newTerms.length - 1]\n  newTerm.post = combinePost(lastTerm.post, newTerm.post)\n  // remove existing punctuation\n  lastTerm.post = ''\n\n  //before ←[space]  - after\n  if (lastTerm.post === '') {\n    lastTerm.post += ' '\n  }\n}\n\n//insert this segment into the linked-list\nconst stitchIn = function(main, newPhrase) {\n  // console.log(main.text(), newPhrase.text())\n  let afterId = main.lastTerm().next\n  //connect ours in (main → newPhrase)\n  main.lastTerm().next = newPhrase.start\n  //stich the end in  (newPhrase → after)\n  newPhrase.lastTerm().next = afterId\n  //do it backwards, too\n  if (afterId) {\n    // newPhrase ← after\n    let afterTerm = main.pool.get(afterId)\n    afterTerm.prev = newPhrase.lastTerm().id\n  }\n  // before ← newPhrase\n  let beforeId = main.terms(0).id\n  if (beforeId) {\n    let newTerm = newPhrase.terms(0)\n    newTerm.prev = beforeId\n  }\n  // main.length += newPhrase.length\n}\n\nconst unique = function(list) {\n  return list.filter((o, i) => {\n    return list.indexOf(o) === i\n  })\n}\n\n//append one phrase onto another\nconst appendPhrase = function(main, newPhrase, doc) {\n  let beforeTerms = main.terms()\n  //spruce-up the whitespace issues\n  addWhitespace(beforeTerms, newPhrase.terms())\n  //insert this segment into the linked-list\n  stitchIn(main, newPhrase)\n\n  // stretch!\n  // make each effected phrase longer\n  let toStretch = [main]\n  let hasId = main.start\n  let docs = [doc]\n  docs = docs.concat(doc.parents()) // find them all!\n  docs.forEach(parent => {\n    // only the phrases that should change\n    let shouldChange = parent.list.filter(p => {\n      return p.hasId(hasId)\n    })\n    toStretch = toStretch.concat(shouldChange)\n  })\n  // don't double-count a phrase\n  toStretch = unique(toStretch)\n  toStretch.forEach(p => {\n    p.length += newPhrase.length\n  })\n  return main\n}\nmodule.exports = appendPhrase\n","const hasSpace = / /\n\n//a new space needs to be added, either on the new phrase, or the old one\n// '[new] [◻old]'   -or-   '[old] [◻new] [old]'\nconst addWhitespace = function(newTerms) {\n  //add a space before our new text?\n\n  // add a space after our text\n  let lastTerm = newTerms[newTerms.length - 1]\n  if (hasSpace.test(lastTerm.post) === false) {\n    lastTerm.post += ' '\n  }\n\n  // let term = original.pool.get(original.start)\n  // if (term.prev) {\n  //   //add our space ahead of our new terms\n  //   let firstWord = newTerms[0]\n  //   if (hasSpace.test(firstWord.post) === false) {\n  //     firstWord.post += ' '\n  //   }\n  //   return\n  // }\n\n  //otherwise, add our space to the start of original\n  // if (hasSpace.test(term.pre) === false) {\n  //   term.pre = ' ' + term.pre\n  // }\n  return\n}\n\n//insert this segment into the linked-list\nconst stitchIn = function(main, newPhrase, newTerms) {\n  // [newPhrase] → [main]\n  let lastTerm = newTerms[newTerms.length - 1]\n  lastTerm.next = main.start\n  // [before] → [main]\n  let pool = main.pool\n  let start = pool.get(main.start)\n  if (start.prev) {\n    let before = pool.get(start.prev)\n    before.next = newPhrase.start\n  }\n  //do it backwards, too\n  // before ← newPhrase\n  newTerms[0].prev = main.terms(0).prev\n  // newPhrase ← main\n  main.terms(0).prev = lastTerm.id\n}\n\n//recursively increase the length of all parent phrases\n// const stretchAll = function(doc, oldStart, newPhrase) {\n//   //find our phrase to stretch\n//   let phrase = doc.list.find(p => p.hasId(oldStart) || p.hasId(newPhrase.start))\n//   if (phrase === undefined) {\n//     console.error('compromise error: Prepend missing start - ' + oldStart)\n//     return\n//   }\n//   //should we update the phrase's starting?\n//   if (phrase.start === oldStart) {\n//     phrase.start = newPhrase.start\n//   }\n//   // console.log(newPhrase)\n//   phrase.length += newPhrase.length\n//   if (doc.from) {\n//     stretchAll(doc.from, oldStart, newPhrase)\n//   }\n// }\nconst unique = function(list) {\n  return list.filter((o, i) => {\n    return list.indexOf(o) === i\n  })\n}\n\n//append one phrase onto another\nconst joinPhrase = function(original, newPhrase, doc) {\n  const starterId = original.start\n  let newTerms = newPhrase.terms()\n  //spruce-up the whitespace issues\n  addWhitespace(newTerms, original)\n  //insert this segment into the linked-list\n  stitchIn(original, newPhrase, newTerms)\n  //increase the length of our phrases\n  let toStretch = [original]\n  let docs = [doc]\n  docs = docs.concat(doc.parents())\n  docs.forEach(d => {\n    // only the phrases that should change\n    let shouldChange = d.list.filter(p => {\n      return p.hasId(starterId) || p.hasId(newPhrase.start)\n    })\n    toStretch = toStretch.concat(shouldChange)\n  })\n  // don't double-count\n  toStretch = unique(toStretch)\n  // stretch these phrases\n  toStretch.forEach(p => {\n    p.length += newPhrase.length\n    // change the start too, if necessary\n    if (p.start === starterId) {\n      p.start = newPhrase.start\n    }\n  })\n  return original\n}\nmodule.exports = joinPhrase\n","//recursively decrease the length of all the parent phrases\nconst shrinkAll = function(doc, id, deleteLength, after) {\n  //find our phrase to shrink\n  let phrase = doc.list.find(p => p.hasId(id))\n  if (phrase !== undefined) {\n    phrase.length -= deleteLength\n\n    //does it start with this soon-removed word?\n    if (phrase.start === id) {\n      phrase.start = after.id\n    }\n  }\n  if (doc.from) {\n    shrinkAll(doc.from, id, deleteLength, after)\n  }\n}\n\n/** wrap the linked-list around these terms\n * so they don't appear any more\n */\nconst deletePhrase = function(phrase, doc) {\n  let pool = doc.pool()\n  let terms = phrase.terms()\n\n  // console.log(doc)\n\n  //grab both sides of the chain,\n  let prev = pool.get(terms[0].prev) || {}\n  let after = pool.get(terms[terms.length - 1].next) || {}\n\n  if (terms[0].implicit && prev.implicit) {\n    prev.set(prev.implicit)\n    prev.post += ' '\n  }\n\n  // //first, change phrase lengths\n  shrinkAll(doc, phrase.start, phrase.length, after)\n\n  // connect [prev]->[after]\n  if (prev) {\n    prev.next = after.id\n  }\n  // connect [prev]<-[after]\n  if (after) {\n    after.prev = prev.id\n  }\n  // lastly, actually delete the terms from the pool\n  for (let i = 0; i < terms.length; i++) {\n    pool.remove(terms[i].id)\n  }\n}\nmodule.exports = deletePhrase\n","const append = require('./_join/append')\nconst prepend = require('./_join/prepend')\nconst deletePhrase = require('./_join/delete')\n// const tokenize = require('../../01-tokenizer')\n\n/** put this text at the end */\nexports.append = function(newPhrase, doc) {\n  append(this, newPhrase, doc)\n  return this\n}\n\n/** add this text to the beginning */\nexports.prepend = function(newPhrase, doc) {\n  prepend(this, newPhrase, doc)\n  return this\n}\n\nexports.delete = function(doc) {\n  deletePhrase(this, doc)\n  return this\n}\n\nexports.replace = function(newPhrase, doc) {\n  //add it do the end\n  let firstLength = this.length\n  append(this, newPhrase, doc)\n  //delete original terms\n  let tmp = this.buildFrom(this.start, this.length)\n  tmp.length = firstLength\n  deletePhrase(tmp, doc)\n  return this\n}\n\n/**\n * Turn this phrase object into 3 phrase objects\n */\nexports.splitOn = function(p) {\n  let terms = this.terms()\n  let result = {\n    before: null,\n    match: null,\n    after: null,\n  }\n  let index = terms.findIndex(t => t.id === p.start)\n  if (index === -1) {\n    return result\n  }\n  //make all three sections into phrase-objects\n  let start = terms.slice(0, index)\n  if (start.length > 0) {\n    result.before = this.buildFrom(start[0].id, start.length)\n  }\n  let match = terms.slice(index, index + p.length)\n  if (match.length > 0) {\n    result.match = this.buildFrom(match[0].id, match.length)\n  }\n  let end = terms.slice(index + p.length, terms.length)\n  if (end.length > 0) {\n    result.after = this.buildFrom(end[0].id, end.length, this.pool)\n  }\n  return result\n}\n","/** return json metadata for this phrase */\nexports.json = function(options = {}, world) {\n  let res = {}\n  // text data\n  if (options.text) {\n    res.text = this.text()\n  }\n  if (options.reduced) {\n    res.reduced = this.text('reduced')\n  }\n  if (options.normal) {\n    res.normal = this.text({\n      punctuation: true,\n      whitespace: true,\n      unicode: true,\n    })\n  }\n  if (options.trim) {\n    if (res.text) {\n      res.text = res.text.trim()\n    }\n    if (res.normal) {\n      res.normal = res.normal.trim()\n    }\n    if (res.reduced) {\n      res.reduced = res.reduced.trim()\n    }\n  }\n  // terms data\n  if (options.terms) {\n    if (options.terms === true) {\n      options.terms = {}\n    }\n    res.terms = this.terms().map(t => t.json(options.terms, world))\n  }\n  return res\n}\n","/** match any terms after this phrase */\nexports.lookAhead = function(regs) {\n  // if empty match string, return everything after\n  if (!regs) {\n    regs = '.*'\n  }\n  let pool = this.pool\n  // get a list of all terms preceding our start\n  let terms = []\n  const getAfter = function(id) {\n    let term = pool.get(id)\n    if (!term) {\n      return\n    }\n    terms.push(term)\n    if (term.prev) {\n      getAfter(term.next) //recursion\n    }\n  }\n  let all = this.terms()\n  let lastTerm = all[all.length - 1]\n  getAfter(lastTerm.next)\n  if (terms.length === 0) {\n    return []\n  }\n  // got the terms, make a phrase from them\n  let p = this.buildFrom(terms[0].id, terms.length)\n  return p.match(regs)\n}\n\n/** match any terms before this phrase */\nexports.lookBehind = function(regs) {\n  // if empty match string, return everything before\n  if (!regs) {\n    regs = '.*'\n  }\n  let pool = this.pool\n  // get a list of all terms preceding our start\n  let terms = []\n  const getBefore = function(id) {\n    let term = pool.get(id)\n    if (!term) {\n      return\n    }\n    terms.push(term)\n    if (term.prev) {\n      getBefore(term.prev) //recursion\n    }\n  }\n  let term = pool.get(this.start)\n  getBefore(term.prev)\n  if (terms.length === 0) {\n    return []\n  }\n  // got the terms, make a phrase from them\n  let p = this.buildFrom(terms[terms.length - 1].id, terms.length)\n  return p.match(regs)\n}\n","module.exports = Object.assign(\n  {},\n  require('./01-utils'),\n  require('./02-text'),\n  require('./03-change'),\n  require('./04-split'),\n  require('./05-json'),\n  require('./06-lookahead')\n)\n","// try to avoid doing the match\nconst failFast = function(p, regs) {\n  if (regs.length === 0) {\n    return true\n  }\n  for (let i = 0; i < regs.length; i += 1) {\n    let reg = regs[i]\n\n    //   //logical quick-ones\n    if (reg.optional !== true && reg.negative !== true) {\n      //start/end impossibilites\n      if (reg.start === true && i > 0) {\n        return true\n      }\n      // has almost no effect\n      if (p.cache.words !== undefined && reg.word !== undefined && p.cache.words[reg.word] !== true) {\n        // console.log('skip')\n        return true\n      }\n    }\n    //this is not possible\n    if (reg.anything === true && reg.negative === true) {\n      return true\n    }\n  }\n  return false\n}\nmodule.exports = failFast\n","// i formally apologize for how complicated this is.\n\n//found a match? it's greedy? keep going!\nconst getGreedy = function(terms, t, reg, until, index, length) {\n  let start = t\n  for (; t < terms.length; t += 1) {\n    //stop for next-reg match\n    if (until && terms[t].doesMatch(until, index + t, length)) {\n      return t\n    }\n    let count = t - start + 1\n    // is it max-length now?\n    if (reg.max !== undefined && count === reg.max) {\n      return t\n    }\n    //stop here\n    if (terms[t].doesMatch(reg, index + t, length) === false) {\n      // is it too short?\n      if (reg.min !== undefined && count < reg.min) {\n        return null\n      }\n      return t\n    }\n  }\n  return t\n}\n\n//'unspecific greedy' is a weird situation.\nconst greedyTo = function(terms, t, nextReg, index, length) {\n  //if there's no next one, just go off the end!\n  if (!nextReg) {\n    return terms.length\n  }\n  //otherwise, we're looking for the next one\n  for (; t < terms.length; t += 1) {\n    if (terms[t].doesMatch(nextReg, index + t, length) === true) {\n      return t\n    }\n  }\n  //guess it doesn't exist, then.\n  return null\n}\n\n/** tries to match a sequence of terms, starting from here */\nconst tryHere = function(terms, regs, index, length) {\n  let captures = []\n  let t = 0\n  // we must satisfy each rule in 'regs'\n  for (let r = 0; r < regs.length; r += 1) {\n    let reg = regs[r]\n\n    //should we fail here?\n    if (!terms[t]) {\n      //are all remaining regs optional?\n      const hasNeeds = regs.slice(r).some(remain => !remain.optional)\n      if (hasNeeds === false) {\n        break\n      }\n      // have unmet needs\n      return false\n    }\n\n    //support 'unspecific greedy' .* properly\n    if (reg.anything === true && reg.greedy === true) {\n      let skipto = greedyTo(terms, t, regs[r + 1], reg, index, length)\n      // ensure it's long enough\n      if (reg.min !== undefined && skipto - t < reg.min) {\n        return false\n      }\n      // reduce it back, if it's too long\n      if (reg.max !== undefined && skipto - t > reg.max) {\n        t = t + reg.max\n        continue\n      }\n      //TODO: support [*] properly\n      if (skipto === null) {\n        return false //couldn't find it\n      }\n      t = skipto\n      continue\n    }\n\n    //if it looks like a match, continue\n    if (reg.anything === true || terms[t].doesMatch(reg, index + t, length) === true) {\n      let startAt = t\n      // okay, it was a match, but if it optional too,\n      // we should check the next reg too, to skip it?\n      if (reg.optional && regs[r + 1] && terms[t].doesMatch(regs[r + 1], index + t, length) === true) {\n        r += 1\n      }\n      //advance to the next term!\n      t += 1\n      //check any ending '$' flags\n      if (reg.end === true) {\n        //if this isn't the last term, refuse the match\n        if (t !== terms.length && reg.greedy !== true) {\n          return false\n        }\n      }\n      //try keep it going!\n      if (reg.greedy === true) {\n        t = getGreedy(terms, t, reg, regs[r + 1], index, length)\n        if (t === null) {\n          return false //greedy was too short\n        }\n      }\n      if (reg.capture) {\n        captures.push(startAt)\n        //add greedy-end to capture\n        if (t > 1 && reg.greedy) {\n          captures.push(t - 1)\n        }\n      }\n      continue\n    }\n\n    //bah, who cares, keep going\n    if (reg.optional === true) {\n      continue\n    }\n    // should we skip-over an implicit word?\n    if (terms[t].isImplicit() && regs[r - 1] && terms[t + 1]) {\n      // does the next one match?\n      if (terms[t + 1].doesMatch(reg, index + t, length)) {\n        t += 2\n        continue\n      }\n    }\n    // console.log('   ❌\\n\\n')\n    return false\n  }\n  //we got to the end of the regs, and haven't failed!\n  //try to only return our [captured] segment\n  if (captures.length > 0) {\n    //make sure the array is the full-length we'd return anyways\n    let arr = terms.slice(captures[0], captures[captures.length - 1] + 1)\n    //make sure the array is t-length (so we skip ahead full-length)\n    for (let tmp = 0; tmp < t; tmp++) {\n      arr[tmp] = arr[tmp] || null\n    }\n    return arr\n  }\n  //return our result\n  return terms.slice(0, t)\n}\nmodule.exports = tryHere\n","/* break-down a match expression into this:\n{\n  word:'',\n  tag:'',\n  regex:'',\n\n  start:false,\n  end:false,\n  negative:false,\n  anything:false,\n  greedy:false,\n  optional:false,\n\n  capture:false,\n  choices:[],\n}\n*/\nconst hasMinMax = /\\{([0-9]+,?[0-9]*)\\}/\nconst andSign = /&&/\n\nconst titleCase = str => {\n  return str.charAt(0).toUpperCase() + str.substr(1)\n}\n\nconst end = function(str) {\n  return str[str.length - 1]\n}\nconst start = function(str) {\n  return str[0]\n}\nconst stripStart = function(str) {\n  return str.substr(1)\n}\nconst stripEnd = function(str) {\n  return str.substr(0, str.length - 1)\n}\nconst stripBoth = function(str) {\n  str = stripStart(str)\n  str = stripEnd(str)\n  return str\n}\n\n//\nconst parseToken = function(w) {\n  let obj = {}\n  //collect any flags (do it twice)\n  for (let i = 0; i < 2; i += 1) {\n    //back-flags\n    if (end(w) === '+') {\n      obj.greedy = true\n      w = stripEnd(w)\n    }\n    if (w !== '*' && end(w) === '*' && w !== '\\\\*') {\n      obj.greedy = true\n      w = stripEnd(w)\n    }\n    if (end(w) === '?') {\n      obj.optional = true\n      w = stripEnd(w)\n    }\n    if (end(w) === '$') {\n      obj.end = true\n      w = stripEnd(w)\n    }\n    //front-flags\n    if (start(w) === '^') {\n      obj.start = true\n      w = stripStart(w)\n    }\n    if (start(w) === '!') {\n      obj.negative = true\n      w = stripStart(w)\n    }\n    //wrapped-flags\n    if (start(w) === '(' && end(w) === ')') {\n      // support (one && two)\n      if (andSign.test(w)) {\n        obj.choices = w.split(andSign)\n        obj.operator = 'and'\n      } else {\n        obj.choices = w.split('|')\n        obj.operator = 'or'\n      }\n      //remove '(' and ')'\n      obj.choices[0] = stripStart(obj.choices[0])\n      let last = obj.choices.length - 1\n      obj.choices[last] = stripEnd(obj.choices[last])\n      // clean up the results\n      obj.choices = obj.choices.map(s => s.trim())\n      obj.choices = obj.choices.filter(s => s)\n      //recursion alert!\n      obj.choices = obj.choices.map(parseToken)\n      w = ''\n    }\n    //capture group (this one can span multiple-terms)\n    if (start(w) === '[' || end(w) === ']') {\n      obj.capture = true\n      w = w.replace(/^\\[/, '')\n      w = w.replace(/\\]$/, '')\n    }\n    //regex\n    if (start(w) === '/' && end(w) === '/') {\n      w = stripBoth(w)\n      obj.regex = new RegExp(w)\n      return obj\n    }\n    //soft-match\n    if (start(w) === '~' && end(w) === '~') {\n      w = stripBoth(w)\n      obj.soft = true\n      obj.word = w\n      return obj\n    }\n  }\n  // support #Tag{0,9}\n  if (hasMinMax.test(w) === true) {\n    w = w.replace(hasMinMax, (a, b) => {\n      let arr = b.split(/,/g)\n      if (arr.length === 1) {\n        // '{3}'\tExactly three times\n        obj.min = Number(arr[0])\n        obj.max = Number(arr[0])\n      } else {\n        // '{2,4}' Two to four times\n        // '{3,}' Three or more times\n        obj.min = Number(arr[0])\n        obj.max = Number(arr[1] || 999)\n      }\n      obj.greedy = true\n      return ''\n    })\n  }\n\n  //do the actual token content\n  if (start(w) === '#') {\n    obj.tag = stripStart(w)\n    obj.tag = titleCase(obj.tag)\n    return obj\n  }\n  //dynamic function on a term object\n  if (start(w) === '@') {\n    obj.method = stripStart(w)\n    return obj\n  }\n  if (w === '.') {\n    obj.anything = true\n    return obj\n  }\n  //support alone-astrix\n  if (w === '*') {\n    obj.anything = true\n    obj.greedy = true\n    obj.optional = true\n    return obj\n  }\n  if (w) {\n    //somehow handle encoded-chars?\n    w = w.replace('\\\\*', '*')\n    w = w.replace('\\\\.', '.')\n    obj.word = w.toLowerCase()\n  }\n  return obj\n}\nmodule.exports = parseToken\n","const parseToken = require('./parseToken')\n\nconst isArray = function(arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]'\n}\n\n//split-up by (these things)\nconst byParentheses = function(str) {\n  let arr = str.split(/([\\^\\[\\!]*\\(.*?\\)[?+*]*\\]?\\$?)/)\n  arr = arr.map(s => s.trim())\n  return arr\n}\n\nconst byWords = function(arr) {\n  let words = []\n  arr.forEach(a => {\n    //keep brackets lumped together\n    if (/^[[^_/]?\\(/.test(a[0])) {\n      words.push(a)\n      return\n    }\n    let list = a.split(' ')\n    list = list.filter(w => w)\n    words = words.concat(list)\n  })\n  return words\n}\n\n//turn an array into a 'choices' list\nconst byArray = function(arr) {\n  return [\n    {\n      choices: arr.map(s => {\n        return {\n          word: s,\n        }\n      }),\n    },\n  ]\n}\n\nconst postProcess = function(tokens) {\n  //ensure there's only one consecutive capture group.\n  let count = tokens.filter(t => t.capture === true).length\n  if (count > 1) {\n    let captureArr = tokens.map(t => t.capture)\n    let first = captureArr.indexOf(true)\n    let last = captureArr.length - 1 - captureArr.reverse().indexOf(true)\n    //'fill in' capture groups between start-end\n    for (let i = first; i < last; i++) {\n      tokens[i].capture = true\n    }\n  }\n  return tokens\n}\n\nconst fromDoc = function(doc) {\n  if (!doc || !doc.list || !doc.list[0]) {\n    return []\n  }\n  let ids = []\n  doc.list.forEach(p => {\n    p.terms().forEach(t => {\n      ids.push({ id: t.id })\n    })\n  })\n  return [{ choices: ids, greedy: true }]\n}\n\n/** parse a match-syntax string into json */\nconst syntax = function(input) {\n  // fail-fast\n  if (input === null || input === undefined || input === '') {\n    return []\n  }\n  //try to support a ton of different formats:\n  if (typeof input === 'object') {\n    if (isArray(input)) {\n      if (input.length === 0 || !input[0]) {\n        return []\n      }\n\n      //is it a pre-parsed reg-list?\n      if (typeof input[0] === 'object') {\n        return input\n      }\n      //support a flat array of normalized words\n      if (typeof input[0] === 'string') {\n        return byArray(input)\n      }\n    }\n    //support passing-in a compromise object as a match\n    if (input && input.isA === 'Doc') {\n      return fromDoc(input)\n    }\n    return []\n  }\n  if (typeof input === 'number') {\n    input = String(input) //go for it?\n  }\n  let tokens = byParentheses(input)\n  tokens = byWords(tokens)\n  tokens = tokens.map(parseToken)\n  //clean up anything weird\n  tokens = postProcess(tokens)\n  // console.log(JSON.stringify(tokens, null, 2))\n  return tokens\n}\nmodule.exports = syntax\n","const failFast = require('./02-failFast')\nconst tryMatch = require('./03-tryMatch')\nconst syntax = require('../../Doc/methods/match/syntax')\n\n/**  returns a simple array of arrays */\nconst matchAll = function(p, regs, matchOne = false) {\n  //if we forgot to parse it..\n  if (typeof regs === 'string') {\n    regs = syntax(regs)\n  }\n  //try to dismiss it, at-once\n  if (failFast(p, regs) === true) {\n    return []\n  }\n\n  //any match needs to be this long, at least\n  const minLength = regs.filter(r => r.optional !== true).length\n  let terms = p.cache.terms || p.terms()\n  let matches = []\n\n  //optimisation for '^' start logic\n  if (regs[0].start === true) {\n    let match = tryMatch(terms, regs, 0, terms.length)\n    if (match !== false && match.length > 0) {\n      matches.push(match)\n    }\n    return matches\n  }\n  //try starting, from every term\n  for (let i = 0; i < terms.length; i += 1) {\n    // slice may be too short\n    if (i + minLength > terms.length) {\n      break\n    }\n    //try it!\n\n    // console.log(terms.slice(i)[0].text, regs, i, terms.length)\n    let match = tryMatch(terms.slice(i), regs, i, terms.length)\n    if (match !== false && match.length > 0) {\n      //zoom forward!\n      i += match.length - 1\n      //[capture-groups] return some null responses\n      match = match.filter(m => m)\n      matches.push(match)\n      //ok, maybe that's enough?\n      if (matchOne === true) {\n        return matches\n      }\n    }\n  }\n  return matches\n}\nmodule.exports = matchAll\n","const matchAll = require('./01-matchAll')\n\n/** return anything that doesn't match.\n * returns a simple array of arrays\n */\nconst notMatch = function(p, regs) {\n  let found = {}\n  let arr = matchAll(p, regs)\n  arr.forEach(ts => {\n    ts.forEach(t => {\n      found[t.id] = true\n    })\n  })\n  //return anything not found\n  let terms = p.terms()\n  let result = []\n  let current = []\n  terms.forEach(t => {\n    if (found[t.id] === true) {\n      if (current.length > 0) {\n        result.push(current)\n        current = []\n      }\n      return\n    }\n    current.push(t)\n  })\n  if (current.length > 0) {\n    result.push(current)\n  }\n  return result\n}\nmodule.exports = notMatch\n","const matchAll = require('./01-matchAll')\nconst notMatch = require('./not')\n\n/** return an array of matching phrases */\nexports.match = function(str) {\n  let matches = matchAll(this, str)\n  //make them phrase objects\n  matches = matches.map(list => {\n    return this.buildFrom(list[0].id, list.length)\n  })\n  return matches\n}\n\n/** return boolean if one match is found */\nexports.has = function(str) {\n  let matches = matchAll(this, str, true)\n  return matches.length > 0\n}\n\n/** remove all matches from the result */\nexports.not = function(str) {\n  let matches = notMatch(this, str)\n  //make them phrase objects\n  matches = matches.map(list => {\n    return this.buildFrom(list[0].id, list.length)\n  })\n  return matches\n}\n\n/** return a list of phrases that can have this tag */\nexports.canBe = function(tag, world) {\n  let results = []\n  let terms = this.terms()\n  let previous = false\n  for (let i = 0; i < terms.length; i += 1) {\n    let can = terms[i].canBe(tag, world)\n    if (can === true) {\n      if (previous === true) {\n        //add it to the end\n        results[results.length - 1].push(terms[i])\n      } else {\n        results.push([terms[i]]) //make a new one\n      }\n      previous = can\n    }\n  }\n  //turn them into Phrase objects\n  results = results\n    .filter(a => a.length > 0)\n    .map(arr => {\n      return this.buildFrom(arr[0].id, arr.length)\n    })\n  return results\n}\n","const methods = require('./methods')\nconst matchMethods = require('./match')\n// const tokenize = require('../01-tokenizer')\n\nclass Phrase {\n  constructor(id, length, pool) {\n    this.start = id\n    this.length = length\n    this.isA = 'Phrase' // easier than .constructor...\n    Object.defineProperty(this, 'pool', {\n      enumerable: false,\n      writable: true,\n      value: pool,\n    })\n    Object.defineProperty(this, 'cache', {\n      enumerable: false,\n      writable: true,\n      value: {},\n    })\n  }\n}\n\n/** create a new Phrase object from an id and length */\nPhrase.prototype.buildFrom = function(id, length) {\n  let p = new Phrase(id, length, this.pool)\n  if (this.cache) {\n    p.cache = this.cache\n    p.cache.terms = null\n  }\n  return p\n}\n// Phrase.prototype.fromString = function(str) {\n//   console.log(tokenize)\n//   return tokenize.fromText(str)\n// }\n\n//apply methods\nObject.assign(Phrase.prototype, matchMethods)\nObject.assign(Phrase.prototype, methods)\n\n//apply aliases\nconst aliases = {\n  term: 'terms',\n}\nObject.keys(aliases).forEach(k => (Phrase.prototype[k] = Phrase.prototype[aliases[k]]))\n\nmodule.exports = Phrase\n","/** a key-value store of all terms in our Document */\nclass Pool {\n  constructor(words = {}) {\n    //quiet this property in console.logs\n    Object.defineProperty(this, 'words', {\n      enumerable: false,\n      value: words,\n    })\n  }\n  /** throw a new term object in */\n  add(term) {\n    this.words[term.id] = term\n    return this\n  }\n  /** find a term by it's id */\n  get(id) {\n    return this.words[id]\n  }\n  /** find a term by it's id */\n  remove(id) {\n    delete this.words[id]\n  }\n  /** helper method */\n  stats() {\n    return {\n      words: Object.keys(this.words).length,\n    }\n  }\n}\n\n/** make a deep-copy of all terms */\nPool.prototype.clone = function() {\n  let keys = Object.keys(this.words)\n  let words = keys.reduce((h, k) => {\n    let t = this.words[k].clone()\n    h[t.id] = t\n    return h\n  }, {})\n  return new Pool(words)\n}\n\nmodule.exports = Pool\n","//(Rule-based sentence boundary segmentation) - chop given text into its proper sentences.\n// Ignore periods/questions/exclamations used in acronyms/abbreviations/numbers, etc.\n// @spencermountain 2017 MIT\n\n//proper nouns with exclamation marks\n// const blacklist = {\n//   yahoo: true,\n//   joomla: true,\n//   jeopardy: true,\n// }\n\n//regs-\nconst initSplit = /(\\S.+?[.!?\\u203D\\u2E18\\u203C\\u2047-\\u2049])(?=\\s+|$)/g\nconst hasSomething = /\\S/\n\nconst isAcronym = /[ .][A-Z]\\.? *$/i\nconst hasEllipse = /(?:\\u2026|\\.{2,}) *$/\nconst newLine = /((?:\\r?\\n|\\r)+)/ // Match different new-line formats\nconst hasLetter = /[a-z\\u00C0-\\u00FF]/i\n\nconst startWhitespace = /^\\s+/\n\n// Start with a regex:\nconst naiive_split = function(text) {\n  let all = []\n  //first, split by newline\n  let lines = text.split(newLine)\n  for (let i = 0; i < lines.length; i++) {\n    //split by period, question-mark, and exclamation-mark\n    let arr = lines[i].split(initSplit)\n    for (let o = 0; o < arr.length; o++) {\n      all.push(arr[o])\n    }\n  }\n  return all\n}\n\n/** does this look like a sentence? */\nconst isSentence = function(str, abbrevs) {\n  // check for 'F.B.I.'\n  if (isAcronym.test(str) === true) {\n    return false\n  }\n  //check for '...'\n  if (hasEllipse.test(str) === true) {\n    return false\n  }\n  // must have a letter\n  if (hasLetter.test(str) === false) {\n    return false\n  }\n\n  let txt = str.replace(/[.!?\\u203D\\u2E18\\u203C\\u2047-\\u2049] *$/, '')\n  let words = txt.split(' ')\n  let lastWord = words[words.length - 1].toLowerCase()\n  // check for 'Mr.'\n  if (abbrevs.hasOwnProperty(lastWord)) {\n    return false\n  }\n  // //check for jeopardy!\n  // if (blacklist.hasOwnProperty(lastWord)) {\n  //   return false\n  // }\n  return true\n}\n\nconst splitSentences = function(text, world) {\n  let abbrevs = world.cache.abbreviations\n\n  text = text || ''\n  text = String(text)\n  let sentences = []\n  // First do a greedy-split..\n  let chunks = []\n  // Ensure it 'smells like' a sentence\n  if (!text || typeof text !== 'string' || hasSomething.test(text) === false) {\n    return sentences\n  }\n  // Start somewhere:\n  let splits = naiive_split(text)\n  // Filter-out the crap ones\n  for (let i = 0; i < splits.length; i++) {\n    let s = splits[i]\n    if (s === undefined || s === '') {\n      continue\n    }\n    //this is meaningful whitespace\n    if (hasSomething.test(s) === false) {\n      //add it to the last one\n      if (chunks[chunks.length - 1]) {\n        chunks[chunks.length - 1] += s\n        continue\n      } else if (splits[i + 1]) {\n        //add it to the next one\n        splits[i + 1] = s + splits[i + 1]\n        continue\n      }\n    }\n    //else, only whitespace, no terms, no sentence\n    chunks.push(s)\n  }\n\n  //detection of non-sentence chunks:\n  //loop through these chunks, and join the non-sentence chunks back together..\n  for (let i = 0; i < chunks.length; i++) {\n    let c = chunks[i]\n    //should this chunk be combined with the next one?\n    if (chunks[i + 1] && isSentence(c, abbrevs) === false) {\n      chunks[i + 1] = c + (chunks[i + 1] || '')\n    } else if (c && c.length > 0 && hasLetter.test(c)) {\n      //this chunk is a proper sentence..\n      sentences.push(c)\n      chunks[i] = ''\n    }\n  }\n  //if we never got a sentence, return the given text\n  if (sentences.length === 0) {\n    return [text]\n  }\n\n  //move whitespace to the ends of sentences, when possible\n  //['hello',' world'] -> ['hello ','world']\n  for (let i = 1; i < sentences.length; i += 1) {\n    let ws = sentences[i].match(startWhitespace)\n    if (ws !== null) {\n      sentences[i - 1] += ws[0]\n      sentences[i] = sentences[i].replace(startWhitespace, '')\n    }\n  }\n  return sentences\n}\n\nmodule.exports = splitSentences\n// console.log(sentence_parser('john f. kennedy'));\n","const wordlike = /\\S/\nconst isBoundary = /^[!?.]+$/\nconst naiiveSplit = /(\\S+)/\nconst isSlash = /\\/\\W*$/\n\nconst notWord = {\n  '.': true,\n  '-': true, //dash\n  '–': true, //en-dash\n  '—': true, //em-dash\n  '--': true,\n  '...': true,\n  // '/': true, // 'one / two'\n}\n\nconst hasHyphen = function(str) {\n  //dont split 're-do'\n  if (/^(re|un)-?[^aeiou]./.test(str) === true) {\n    return false\n  }\n  //letter-number\n  let reg = /^([a-z\\u00C0-\\u00FF`\"'/]+)(-|–|—)([a-z0-9\\u00C0-\\u00FF].*)/i\n  if (reg.test(str) === true) {\n    return true\n  }\n  //support weird number-emdash combo '2010–2011'\n  // let reg2 = /^([0-9]+)(–|—)([0-9].*)/i\n  // if (reg2.test(str)) {\n  //   return true\n  // }\n  return false\n}\n\n// 'he / she' should be one word\nconst combineSlashes = function(arr) {\n  for (let i = 1; i < arr.length - 1; i++) {\n    if (isSlash.test(arr[i])) {\n      arr[i - 1] += arr[i] + arr[i + 1]\n      arr[i] = null\n      arr[i + 1] = null\n    }\n  }\n  return arr\n}\n\nconst splitHyphens = function(word) {\n  let arr = []\n  //support multiple-hyphenated-terms\n  const hyphens = word.split(/[-–—]/)\n  for (let o = 0; o < hyphens.length; o++) {\n    if (o === hyphens.length - 1) {\n      arr.push(hyphens[o])\n    } else {\n      arr.push(hyphens[o] + '-')\n    }\n  }\n  return arr\n}\n\n//turn a string into an array of terms (naiive for now, lumped later)\nconst splitWords = function(str) {\n  let result = []\n  let arr = []\n  //start with a naiive split\n  str = str || ''\n  if (typeof str === 'number') {\n    str = String(str)\n  }\n\n  const words = str.split(naiiveSplit)\n  for (let i = 0; i < words.length; i++) {\n    //split 'one-two'\n    if (hasHyphen(words[i]) === true) {\n      arr = arr.concat(splitHyphens(words[i]))\n      continue\n    }\n    arr.push(words[i])\n  }\n\n  //greedy merge whitespace+arr to the right\n  let carry = ''\n  for (let i = 0; i < arr.length; i++) {\n    let word = arr[i]\n    //if it's more than a whitespace\n    if (wordlike.test(word) === true && notWord.hasOwnProperty(word) === false && isBoundary.test(word) === false) {\n      //put whitespace on end of previous term, if possible\n      if (result.length > 0) {\n        result[result.length - 1] += carry\n        result.push(word)\n      } else {\n        //otherwise, but whitespace before\n        result.push(carry + word)\n      }\n      carry = ''\n    } else {\n      carry += word\n    }\n  }\n  //handle last one\n  if (carry && result.length > 0) {\n    result[result.length - 1] += carry //put it on the end\n  }\n  // combine 'one / two'\n  result = combineSlashes(result)\n  // remove empty results\n  result = result.filter(s => s)\n  return result\n}\nmodule.exports = splitWords\n","const Term = require('../Term/Term')\nconst Phrase = require('../Phrase/Phrase')\nconst Pool = require('./Pool')\n\nconst splitSentences = require('./01-sentences')\nconst splitTerms = require('./02-words')\n\n//add forward/backward 'linked-list' prev/next ids\nconst addLinks = terms => {\n  terms.forEach((term, i) => {\n    if (i > 0) {\n      term.prev = terms[i - 1].id\n    }\n    if (terms[i + 1]) {\n      term.next = terms[i + 1].id\n    }\n  })\n}\n\n/** turn a string into an array of Phrase objects */\nconst fromText = function(text = '', world, pool) {\n  //a bit of validation, first\n  if (typeof text !== 'string') {\n    if (typeof text === 'number') {\n      text = String(text)\n    }\n  }\n  //tokenize into words\n  let sentences = splitSentences(text, world)\n  sentences = sentences.map(str => splitTerms(str))\n\n  //turn them into proper objects\n  pool = pool || new Pool()\n\n  let phrases = sentences.map(terms => {\n    terms = terms.map(str => {\n      let term = new Term(str)\n      pool.add(term)\n      return term\n    })\n    //add next/previous ids\n    addLinks(terms)\n\n    //return phrase objects\n    return new Phrase(terms[0].id, terms.length, pool)\n  })\n  //return them ready for a Document object\n  return phrases\n}\n\n// parse the compressed format '3,2|2,4'\nconst parseTags = function(text, tagList) {\n  return text.split('|').map(str => {\n    let numList = str.split(',')\n    numList = numList.map(n => parseInt(n, 10))\n    // convert a list pf numbers into an array of tag names\n    return numList.map(num => {\n      if (!tagList[num]) {\n        console.warn('Compromise import: missing tag at index ' + num)\n      }\n      return tagList[num]\n    })\n  })\n}\n\n/** create a word-pool and Phrase objects from .export() json*/\nconst fromJSON = function(json, world) {\n  if (typeof json === 'string') {\n    json = JSON.parse(json)\n  }\n  let pool = new Pool()\n  //create Phrase objects\n  let phrases = json.list.map(o => {\n    // tokenize words from sentence text\n    let terms = splitTerms(o[0])\n    // unpack the tag data for each term\n    let tagArr = parseTags(o[1], json.tags)\n    //create Term objects\n    terms = terms.map((str, i) => {\n      let term = new Term(str)\n      tagArr[i].forEach(tag => term.tag(tag, '', world))\n      pool.add(term)\n      return term\n    })\n    //add prev/next links\n    addLinks(terms)\n    // return a proper Phrase object\n    return new Phrase(terms[0].id, terms.length, pool)\n  })\n  return phrases\n}\n\nmodule.exports = {\n  fromText,\n  fromJSON,\n}\n","module.exports = '12.0.0-beta.0'","module.exports={\n  \"Comparative\": \"true¦better\",\n  \"Superlative\": \"true¦earlier\",\n  \"PresentTense\": \"true¦is,sounds\",\n  \"Value\": \"true¦a few\",\n  \"Noun\": \"true¦a8b7c5e3f2here,ie,lit,m1no doubt,p0tce,vs;d,l;a,d;t,y;g,sp,tc,x0;!p;a,ca,o0;l,rp;a,c,l;d,l,rc\",\n  \"Copula\": \"true¦a1is,w0;as,ere;m,re\",\n  \"PastTense\": \"true¦be3came,d2had,meant,sa2taken,w0;as,e0;nt,re;id;en,gan\",\n  \"Condition\": \"true¦if,unless\",\n  \"Gerund\": \"true¦accord0be0develop0go0result0stain0;ing\",\n  \"Negative\": \"true¦n0;ever,o0;!n,t\",\n  \"QuestionWord\": \"true¦how3wh0;at,e1ich,o0y;!m,se;n,re; come,'s\",\n  \"Plural\": \"true¦records\",\n  \"Conjunction\": \"true¦&,aEbAcuz,how8in caDno7o6p4supposing,t1vers5wh0yet;eth8ile;h0o;eref9o0;!uC;l0rovided that;us;r,therwi6; matt1r;!ev0;er;e0ut;cau1f0;ore;se;lthou1nd,s 0;far as,if;gh\",\n  \"Pronoun\": \"true¦'em,elle,h4i3me,ourselves,she5th1us,we,you0;!rself;e0ou;m,y;!l,t;e0im;!'s\",\n  \"Singular\": \"true¦0:0X;1:10;a0Wb0Kc0Bd04e02fXgShOici1jel0kitty,lNmJnIoHpDquestion mark,rBs7t4u2womW;nc0Rs 2;doll0Dst0F; rex,a3h2ic,ragedy,v show;ere,i1;l0x return;ist0Pky,omeone,t2uper bowl,yst0W;ep3ri1u2;de0Pff;faMmoM;al0i1o2;om,se;a4i0Jr3u2;dLrpoD;erogaVobl0O;rt,te0I;bjSceGthers;othi1umb0E;a4ee04o2;del,m2nopo0th0C;!my;n,yf0;i0unch;ead start,o2;l0me3u2;se;! run;adf0entlem5irlZlaci04od,rand3u2;l0y; slam,fa2mo2;th01;an;a5ella,ly,ol0r3un2;di1;iTo2;ntiWsN;mi0thV;conomy,gg,ner5veWx2;ampQecu7;ad7e4innSo2ragonf0ude;cumentFg2i0l0or;gy;ath,t2;ec2;tive;!dy;a8eili1h6i4o2redit card;ttage,u2;riJsin;ty,vil w2;ar;andeliGocol2;ate;n2rD;ary;aAel0lesHo6r4u2;n2tterf0;ti1;eakfast,o2;!th8;dy,tt4y2;!fri2;end;le;nki1r2;ri2;er;d4l0noma0u2;nt;ly; homin4verti2;si1;ng;em\",\n  \"Actor\": \"true¦aJbGcFdCengineIfAgardenIh9instructPjournalLlawyIm8nurse,opeOp5r3s1t0;echnCherapK;ailNcientJoldiGu0;pervKrgeon;e0oofE;ceptionGsearC;hotographClumbColi1r0sychologF;actitionBogrammB;cem6t5;echanic,inist9us4;airdress8ousekeep8;arm7ire0;fight6m2;eputy,iet0;ici0;an;arpent2lerk;ricklay1ut0;ch0;er;ccoun6d2ge7r0ssis6ttenda7;chitect,t0;ist;minist1v0;is1;rat0;or;ta0;nt\",\n  \"Honorific\": \"true¦a03b00cSdReQfiLgKhon,jr,king,lJmEoDp8queen,r4s0taoiseach,vice7;e1fc,gt,ir,r,u0;ltTpt,rg;c0nDrgeaL;ond liJretary;abbi,e0;ar1pAs,v0;!erend; admirY;astPhd,r0vt;esideEi1of0;!essN;me mini5nce0;!ss;fficOp,rd;a3essrs,i2lle,me,r1s0;!tr;!s;stK;gistrate,j,r6yF;i3lb,t;en,ov;eld mar3rst l0;ady,i0;eutena0;nt;shG;sq,xcellency;et,oct6r,utchess;apt6hance4mdr,o0pl;lonel,m2ngress0unci3;m0wom0;an;dr,mand5;ll0;or;!ain;ldg,rig0;!adi0;er;d0sst,tty,yatullah;j,m0v;!ir0;al\",\n  \"SportsTeam\": \"true¦0:1A;1:1H;2:1G;a1Eb16c0Td0Kfc dallas,g0Ihouston 0Hindiana0Gjacksonville jagua0k0El0Bm01newToQpJqueens parkIreal salt lake,sAt5utah jazz,vancouver whitecaps,w3yW;ashington 3est ham0Rh10;natio1Oredski2wizar0W;ampa bay 6e5o3;ronto 3ttenham hotspur;blue ja0Mrapto0;nnessee tita2xasC;buccanee0ra0K;a7eattle 5heffield0Kporting kansas0Wt3;. louis 3oke0V;c1Frams;marine0s3;eah15ounG;cramento Rn 3;antonio spu0diego 3francisco gJjose earthquak1;char08paA; ran07;a8h5ittsburgh 4ortland t3;imbe0rail blaze0;pirat1steele0;il3oenix su2;adelphia 3li1;eagl1philNunE;dr1;akland 3klahoma city thunder,rlando magic;athle0Mrai3;de0; 3castle01;england 7orleans 6york 3;city fc,g4je0FknXme0Fred bul0Yy3;anke1;ian0D;pelica2sain0C;patrio0Brevolut3;ion;anchester Be9i3ontreal impact;ami 7lwaukee b6nnesota 3;t4u0Fvi3;kings;imberwolv1wi2;rewe0uc0K;dolphi2heat,marli2;mphis grizz3ts;li1;cXu08;a4eicesterVos angeles 3;clippe0dodDla9; galaxy,ke0;ansas city 3nE;chiefs,roya0E; pace0polis colU;astr06dynamo,rockeTtexa2;olden state warrio0reen bay pac3;ke0;.c.Aallas 7e3i05od5;nver 5troit 3;lio2pisto2ti3;ge0;broncZnuggeM;cowbo4maver3;ic00;ys; uQ;arCelKh8incinnati 6leveland 5ol3;orado r3umbus crew sc;api5ocki1;brow2cavalie0india2;bengaWre3;ds;arlotte horAicago 3;b4cubs,fire,wh3;iteB;ea0ulR;diff3olina panthe0; c3;ity;altimore 9lackburn rove0oston 5rooklyn 3uffalo bilN;ne3;ts;cel4red3; sox;tics;rs;oriol1rave2;rizona Ast8tlanta 3;brav1falco2h4u3;nited;aw9;ns;es;on villa,r3;os;c5di3;amondbac3;ks;ardi3;na3;ls\",\n  \"Uncountable\": \"true¦a1Ib1Ac11d0Ye0Rf0Lg0Hh0Ci08j07knowled1Hl02mUnews,oTpQrLsAt5vi4w0;a2ea05i1oo0;d,l;ldlife,ne;rmth,t17;neg0Yol06tae;e3h2oothpaste,r0una;affPou0;ble,sers,t;ermod1Eund12;a,nnis;a8cene04eri0Oh7il6kittl0Onow,o5p3t1u0;g0Rnshi0H;ati1De0;am,el;ace16e0;ci0Jed;ap,cc0U;k,v0T;eep,ingl0G;d04fe10l0nd;m0St;a3e1ic0;e,ke0D;c0laxa09search;ogni08rea08;bi09in;aJe1hys10last5o0ressV;lit0Zrk,w0J;a0Vtrol;bstetr0Xil,xygen;a5e3ilk,o2u0;mps,s0;ic;nGo0A;a0chan0S;slZt;chine0il,themat0Q; learn05ry;aught08e2i1ogi0Nu0;ck,g0C;ce,ghtn02ngui0LteratH;a0isG;th04;ewel7usti0G;ce,mp0nformaOtself;a0ortan0E;ti0;en0C;a3isto2o0;ck0mework,n0spitali06;ey;ry;ir,libut,ppi7;en01o1r0um,ymna08;a6ound;l0ssip;d,f;i4lour,o1urnit0;ure;od,rgive0uriNwl;ne0;ss;c6sh;conomZduca5lectr4n2quip3thZvery0;body,o0thE;ne;joy0tertain0;ment;iciNonU;tiF;ar1iabet0raugh1;es;ts;a7elcius,h3ivPl2o0urrency;al,ld w0nfusiAttA;ar;assMoth2;aos,e0;e1w0;ing;se;r4sh;a4eef,i1lood,owls,read,utt0;er;lliar1s0;on;ds;g0ss;ga0;ge;c6dvi5ero3ir2mnes1rt,thl0;et7;ty;craft;b4d0naut4;ynam3;ce;id,ou0;st0;ics\",\n  \"Infinitive\": \"true¦0:6I;1:6W;2:56;3:6T;4:6U;5:5X;6:65;7:6S;8:6O;9:6G;A:6Q;B:6N;C:6B;D:6X;a68b5Xc4Zd47e3Rf3Eg37h30i2Nj2Lk2Jl2Am20n1Xo1Tp1Eques3Fr0Ms01tTuPvMwFyE;awn,ield;aHe1Thist6iGoEre61;nd0rE;k,ry;pe,sh,th0;lk,nFrEsh,tCve;n,raD;d0t;aFiEo7;ew,sB;l69ry;nFpEr3se;gra4Kli3X;dEi7lo5P;er48o;aKeJhIoHrFuEwi8;ne,rn;aEe0Ki5Lu8y;de,in,nsf0p,v5D;r2WuC;ank,reat2L;nd,st;lk,rg1Ms7;aXcUeThRi49kip,lQmPnee3Io4XpOtHuEwitC;bmBck,ff0gge8ppFrEspe5;ge,pri1rou4Uvi4;ly,o33;aJeIoHrFuE;dy,mb6;a4OeEi4;ngth2Bss,tC;p,re;m,p;in,ke,r0Oy;la51oil,rink6;e1Vi6o3G;am,ip;a2iv0oE;ck,ut;arCem,le5n1r4tt6;aFo2rE;atCew;le,re;il,ve;a03eGisk,oFuE;in,le,sh;am,ll;aZcXdu9fWgVje5lSmRnt,pOquNsItHvEwa5M;eEiew,o33;al,l,rE;se,t;a42i2u3Z;eHi8oGtE;!o2rE;i5uc1X;l4rt;mb6nt,r4;e8i2;air,eFlEo3YreseD;a9y;at;a3Semb0i3Uo4;aFeEi4y;a1nt;te,x;a54r0F;act1Ver,le5u1;a0Zei4k5GoEyc6;gni29nci6rd;ch,li28s5E;i1nE;ge,k;aRerQiPlMoKrGuE;b1Yll,mp,rEsh;cha1s4H;ai1eGiDoE;cEdu9greAhibBmi1te8vi2S;eAlaim;di5pa2ss,veD;iDp,rtr3XsEur;e,t;aFuE;g,n3;n,y;ck,le;fo2ZmBsi8;ck,iDrt4Dss,u1;bGccur,ff0pera7utweFverEwe;co3Ylap,ta1Zu1whelm;igh;ser4ta2Z;eFotE;e,i9;ed,gle5;aJeIiGoFuE;ltip3Brd0;nit11ve;nErr10;d,g6us;asu2lt,n0Nr3ssa3;inta2Pna3rFtE;ch,t0;ch,kEry;et;aKeJiGoEu1B;aEck,ok,ve;d,n;ft,ke,mBnFstEve;!en;e,k;a2Cc0Dt;b0Mck,uE;gh,nC;iEno2X;ck,ll,ss;am,o2AuE;d3mp;gno2mOnEss3A;cMdica7flu0LhLsItGvE;eEol4;nt,st;erErodu9;a5fe2;i8tE;aEru5;ll;abBibB;lu1Dr1B;agi21pE;lemeDo1Zro4;aIeGi2oFuE;nt,rry;n01pe,st;aElp;d,t;nd6ppErm,te;en;aJloAoIrGuE;arEeAi12;ant31d;aEip,umb6;b,sp;es,ve1G;in,th0ze;aOeaNiLlJoGracFuncE;ti3A;tu2;cus,lFrE;ce,eca8m,s2S;d,l1W;a1ToE;at,od,w;gu2lEni1Rx;e,l;r,tu2;il,vE;or;a11cho,le5mQnNstLvalua7xE;a08cJerIi8pEte15;a14eFla12oEreA;rt,se;ct,riE;en9;ci1t;el,han3;abEima7;li1D;ab6couVdFfor9ga3han9j01riCsu2t0vE;isi2Ny;!u2;body,er3pE;hasiEow0;ze;a04eSiJoIrFuE;mp;aFeAiE;ft;g,in;d3ubt;ff0p,re5sFvE;iWor9;aIcFliEmiApl13tingui0Y;ke;oEuA;uEv0;ra3;gr1QppE;ear,ro4;cLem,fJliv0ma0Bny,pIsFterE;mi0C;cribe,er4iFtrE;oy;gn,re;a07e06i5osB;eEi07y;at,ct;iGlFrE;ea1;a2i03;de;ma3n9re,te;a08e07h04i7l02oHrE;aFeEoAu0Dy;a7dB;ck,ve;llXmQnFok,py,uEv0;gh,nt;ceNdu5fKsItGvE;eEin9;rt,y;aNin0PrE;a8ibu7ol;iEtitu7;d0st;iFoEroD;rm;gu2rm;rn;biJfoImaHpE;a2laE;in;re;nd;rt;ne;ap1e5;aEip,o1;im,w;aFeE;at,ck,w;llen3n3r3se;a1nt0;ll,ncFrEt0u1;e,ry;el;aNeKloJoHruGuE;lEry;ly;sh;a8mb,o8rrEth0un9;ow;ck;ar,lFnefBtrE;ay;ie4ong;ng,se;band0Hc09d04ffo03gr02id,lZmu1nWppRrOsIttEvoid,waB;acGeFra5;ct;m0Dnd;h,k;k,sE;eGiFocia7uE;me;gn,st;mb6rt;le;chFgEri4;ue;!i4;eaHlGroE;aCve;ch;aud,y;l,r;noun9sw0tE;icipa7;ce;lFt0;er;e3ow;ee;rd;aPdGju8mBoP;it;st;!reA;ss;cHhie4knowled3tiva7;te;ge;ve;eGouDu1;se;nt;pt;on\",\n  \"Unit\": \"true¦0:16;a11b0Zc0Ld0Ke0If0Dg09h06in0Ejoule0k00lYmNnMoLpIqHsqCt7volts,w6y4z3°2µ1;g,s;c,f,n;b,e2;a0Kb,d0Qears old,o1;tt0E;att0b;able4b3e2on1sp;!ne0;a2r0A;!l,sp;spo01; ft,uare 1;c0Fd0Ef3i0Ckilo0Gm1ya0B;e0Jil1;e0li0E;eet0o0A;t,uart0;ascals,e2i1ou0Mt;c0Jnt0;rcent,tZ;hms,uVz;an0GewtQ;/s,b,e7g,i3l,m2p1²,³;h,s;!²;!/h,cro3l1;e1li05;! DsC²;g05s0A;gPter1;! 2s1;! 1;per second;b,iZm,u1x;men0x0;b,elvin0g,ilo2m1nQ;!/h,ph,²;byYgWmeter1;! 2s1;! 1;per hour;e1g,z;ct1rtz0;aXogQ;al2b,igAra1;in0m0;!l1;on0;a4emtPl2t1;²,³; oz,uid ou1;nce0;hrenheit0rad0;b,x1;abyH;eciCg,l,mA;arat0eAg,m9oulomb0u1;bic 1p0;c5d4fo3i2meAya1;rd0;nch0;ot0;eci2;enti1;me4;!²,³;lsius0nti1;g2li1me1;ter0;ram0;bl,y1;te0;c4tt1;os1;eco1;nd0;re0;!s\",\n  \"Organization\": \"true¦0:46;a3Ab2Qc2Ad21e1Xf1Tg1Lh1Gi1Dj19k17l13m0Sn0Go0Dp07qu06rZsStFuBv8w3y1;amaha,m0Xou1w0X;gov,tu2S;a3e1orld trade organizati41;lls fargo,st1;fie22inghou16;l1rner br3D;-m11gree31l street journ25m11;an halNeriz3Wisa,o1;dafo2Gl1;kswagLvo;bs,kip,n2ps,s1;a tod2Rps;es35i1;lev2Xted natio2Uv; mobi2Kaco bePd bMeAgi frida9h3im horto2Tmz,o1witt2W;shiba,y1;ota,s r Y;e 1in lizzy;b3carpen33daily ma2Xguess w2holli0rolling st1Ms1w2;mashing pumpki2Ouprem0;ho;ea1lack eyed pe3Fyrds;ch bo1tl0;ys;l2s1;co,la m12;efoni07us;a6e4ieme2Gnp,o2pice gir5ta1ubaru;rbucks,to2N;ny,undgard1;en;a2Rx pisto1;ls;few25insbu26msu1X;.e.m.,adiohead,b6e3oyal 1yan2X;b1dutch she4;ank;/max,aders dige1Ed 1vl32;bu1c1Uhot chili peppe2Klobst28;ll;c,s;ant2Vizno2F;an5bs,e3fiz24hilip morrBi2r1;emier27octer & gamb1Rudenti14;nk floyd,zza hut;psi28tro1uge08;br2Qchina,n2Q; 2ason1Xda2G;ld navy,pec,range juli2xf1;am;us;a9b8e5fl,h4i3o1sa,wa;kia,tre dame,vart1;is;ke,ntendo,ss0K;l,s;c,st1Etflix,w1; 1sweek;kids on the block,york08;a,c;nd1Us2t1;ional aca2Fo,we0Q;a,cYd0O;aAcdonald9e5i3lb,o1tv,yspace;b1Nnsanto,ody blu0t1;ley crue,or0O;crosoft,t1;as,subisO;dica3rcedes2talli1;ca;!-benz;id,re;'s,s;c's milk,tt13z1Y;'ore09a3e1g,ittle caesa1Ktd;novo,x1;is,mark; pres5-z-boy,bour party;atv,fc,kk,m1od1K;art;iffy lu0Lo3pmorgan1sa;! cha1;se;hnson & johns1Sy d1R;bm,hop,n1tv;c,g,te1;l,rpol; & m,asbro,ewlett-packaTi3o1sbc,yundai;me dep1n1J;ot;tac1zbollah;hi;eneral 6hq,l5mb,o2reen d0Iu1;cci,ns n ros0;ldman sachs,o1;dye1g0B;ar;axo smith kliZencore;electr0Im1;oto0V;a3bi,da,edex,i1leetwood mac,oGrito-l0A;at,nancial1restoV; tim0;cebook,nnie mae;b06sa,u3xxon1; m1m1;ob0H;!rosceptics;aiml0Ae5isney,o3u1;nkin donuts,po0Wran dur1;an;j,w j1;on0;a,f leppa3ll,p2r spiegZstiny's chi1;ld;eche mode,t;rd;aEbc,hBi9nn,o3r1;aigsli5eedence clearwater reviv1ossra05;al;!ca c5l4m1o0Ast05;ca2p1;aq;st;dplMgate;ola;a,sco1tigroup;! systems;ev2i1;ck fil-a,na daily;r0Hy;dbury,pital o1rl's jr;ne;aGbc,eCfAl6mw,ni,o2p,r1;exiteeWos;ei3mbardiJston 1;glo1pizza;be;ng;ack & deckFo2ue c1;roX;ckbuster video,omingda1;le; g1g1;oodriN;cht3e ge0n & jer2rkshire hathaw1;ay;ryH;el;nana republ3s1xt5y5;f,kin robbi1;ns;ic;bXcSdidRerosmith,ig,lLmFnheuser-busEol,ppleAr7s3t&t,v2y1;er;is,on;hland2s1;n,ociated F; o1;il;by4g2m1;co;os; compu2bee1;'s;te1;rs;ch;c,d,erican3t1;!r1;ak; ex1;pre1;ss; 4catel2t1;air;!-luce1;nt;jazeera,qae1;da;as;/dc,a3er,t1;ivisi1;on;demy of scienc0;es;ba,c\",\n  \"Demonym\": \"true¦0:16;1:13;a0Wb0Nc0Cd0Ae09f07g04h02iYjVkTlPmLnIomHpDqatari,rBs7t5u4v3wel0Rz2;am0Fimbabwe0;enezuel0ietnam0H;g9krai1;aiwThai,rinida0Iu2;ni0Qrkmen;a4cot0Ke3ingapoOlovak,oma0Tpa05udRw2y0X;edi0Kiss;negal0Br08;mo0uU;o6us0Lw2;and0;a3eru0Hhilipp0Po2;li0Ertugu06;kist3lesti1na2raguay0;ma1;ani;amiZi2orweP;caragu0geri2;an,en;a3ex0Mo2;ngo0Erocc0;cedo1la2;gasy,y08;a4eb9i2;b2thua1;e0Dy0;o,t02;azakh,eny0o2uwaiti;re0;a2orda1;ma0Bp2;anN;celandic,nd4r2sraeli,ta02vo06;a2iT;ni0qi;i0oneV;aiDin2ondur0unN;di;amDe2hanai0reek,uatemal0;or2rm0;gi0;i2ren7;lipino,n4;cuadoVgyp6ngliJsto1thiopi0urope0;a2ominXut4;niH;a9h6o4roa3ub0ze2;ch;ti0;lom2ngol5;bi0;a6i2;le0n2;ese;lifor1m2na3;bo2eroo1;di0;angladeshi,el8o6r3ul2;gaG;aziBi2;ti2;sh;li2s1;vi0;aru2gi0;si0;fAl7merBngol0r5si0us2;sie,tr2;a2i0;li0;gent2me1;ine;ba1ge2;ri0;ni0;gh0r2;ic0;an\",\n  \"Possessive\": \"true¦anyAh5its,m3noCo1sometBthe0yo1;ir1mselves;ur0;!s;i8y0;!se4;er1i0;mse2s;!s0;!e0;lf;o1t0;hing;ne\",\n  \"Currency\": \"true¦$,aud,bRcPdKeurJfIgbp,hkd,inr,jpy,kGlEp8r7s3usd,x2y1z0¢,£,¥,ден,лв,руб,฿,₡,₨,€,₭,﷼;lotyRł;en,uanQ;af,of;h0t5;e0il5;k0q0;elL;iel,oubleKp,upeeK;e2ound st0;er0;lingH;n0soG;ceFn0;ies,y;e0i7;i,mpi6;n,r0wanzaByatB;!onaAw;ori7ranc9;!o8;en3i2kk,o0;b0ll2;ra5;me4n0rham4;ar3;ad,e0ny;nt1;aht,itcoin0;!s\",\n  \"Abbreviation\": \"true¦a08b05cZdXeUfSgRhQiPjNkanMlKmGnEoDpCque,rAs6t4u3v2w0;is0y00;!c;a,s,t;niv,safa,t;ce,e0;nn,x;ask,e1fc,gt,ir,r,t,u0;pt,rg;nDp0;!t;d,e0;pAs,v;a,d,ennGhd,l,rof,vt;ct,kla,nt,p,rd;eb0ov;!r;a2d,essrs,i1lle,me,r5s0t;!tr;nn,ster;!j,r;it,lb,t0;!d;!s;an,r,u0;l,n;a,da,e,nc;on,wy;a,en,ov;eb,l0t,y;!a;g,s1tc,x0;!p;p,q;ak,e0ist,r;c,pt,t;a3ca,l,m2o0pl,res,t;!l0m1nn,rp;!o;dr;!l0pt;!if;a,c,l1r0;ig,os;!dg,vd;d3l2pr,r1ss0tty,ug,ve;n,t;c,iz;!ta;!j,m,v\",\n  \"Place\": \"true¦a07b05cZdYeXfVgRhQiOjfk,kMlKmHneEoDp9que,rd,s8t5u4v3w0yyz;is1y0;!o;!c;a,t;pYsafa,t;e1he 0;bronx,hamptons;nn,x;ask,fo,oho,t,under6yd;a2e1h0;l,x;k,nnK;!cifX;kla,nt;b1w eng0;land;!r;a1co,i0t,uc;dKnn;libu,nhattS;a0gw,hr;s,x;an0ul;!s;a0cn,da,ndianMst;!x;arlem,kg,nd,wy;a2re0;at 0enwich;britain,lak6;!y village;co,l0ra;!a;urope,verglad2;ak,en,fw,ist,own4xb;al4dg,gk,hina3l2o1r0t;es;lo,nn;!t;town;!if;cn,e0kk,lvd,rooklyn;l air,verly hills;frica,lta,m5ntarct2r1sia,tl0ve;!ant1;ct0iz;ic0; oce0;an;ericas,s\",\n  \"Country\": \"true¦0:38;1:2L;a2Wb2Dc21d1Xe1Rf1Lg1Bh19i13j11k0Zl0Um0Gn05om3CpZqat1JrXsKtCu6v4wal3yemTz2;a24imbabwe;es,lis and futu2X;a2enezue31ietnam;nuatu,tican city;.5gTkraiZnited 3ruXs2zbeE;a,sr;arab emirat0Kkingdom,states2;! of am2X;k.,s.2; 27a.;a7haBimor-les0Bo6rinidad4u2;nis0rk2valu;ey,me2Xs and caic1T; and 2-2;toba1J;go,kel0Ynga;iw2Vji2nz2R;ki2T;aCcotl1eBi8lov7o5pa2Bri lanka,u4w2yr0;az2ed9itzerl1;il1;d2Qriname;lomon1Vmal0uth 2;afr2IkLsud2O;ak0en0;erra leoEn2;gapo1Wt maart2;en;negKrb0ychellY;int 2moa,n marino,udi arab0;hele24luc0mart1Z;epublic of ir0Com2Cuss0w2;an25;a3eHhilippinTitcairn1Ko2uerto riM;l1rtugE;ki2Bl3nama,pua new0Tra2;gu6;au,esti2;ne;aAe8i6or2;folk1Gth3w2;ay; k2ern mariana1B;or0M;caragua,ger2ue;!ia;p2ther18w zeal1;al;mib0u2;ru;a6exi5icro09o2yanm04;ldova,n2roc4zamb9;a3gol0t2;enegro,serrat;co;c9dagascZl6r4urit3yot2;te;an0i14;shall0Vtin2;ique;a3div2i,ta;es;wi,ys0;ao,ed00;a5e4i2uxembourg;b2echtenste10thu1E;er0ya;ban0Gsotho;os,tv0;azakh1De2iriba02osovo,uwait,yrgyz1D;eling0Jnya;a2erF;ma15p1B;c6nd5r3s2taly,vory coast;le of m19rael;a2el1;n,q;ia,oI;el1;aiSon2ungary;dur0Mg kong;aAermany,ha0Pibralt9re7u2;a5ern4inea2ya0O;!-biss2;au;sey;deloupe,m,tema0P;e2na0M;ce,nl1;ar;bTmb0;a6i5r2;ance,ench 2;guia0Dpoly2;nes0;ji,nl1;lklandTroeT;ast tim6cu5gypt,l salv5ngl1quatorial3ritr4st2thiop0;on0; guin2;ea;ad2;or;enmark,jibou4ominica3r con2;go;!n B;ti;aAentral african 9h7o4roat0u3yprQzech2; 8ia;ba,racao;c3lo2morPngo-brazzaville,okFsta r03te d'ivoiK;mb0;osD;i2ristmasF;le,na;republic;m2naTpe verde,yman9;bod0ero2;on;aFeChut00o8r4u2;lgar0r2;kina faso,ma,undi;azil,itish 2unei;virgin2; is2;lands;liv0nai4snia and herzegoviGtswaGuvet2; isl1;and;re;l2n7rmuF;ar2gium,ize;us;h3ngladesh,rbad2;os;am3ra2;in;as;fghaFlCmAn5r3ustr2zerbaijH;al0ia;genti2men0uba;na;dorra,g4t2;arct6igua and barbu2;da;o2uil2;la;er2;ica;b2ger0;an0;ia;ni2;st2;an\",\n  \"Region\": \"true¦0:1U;a20b1Sc1Id1Des1Cf19g13h10i0Xj0Vk0Tl0Qm0FnZoXpSqPrMsDtAut9v6w3y1zacatec22;o05u1;cat18kZ;a1est vi4isconsin,yomi14;rwick0shington1;! dc;er2i1;rgin1S;acruz,mont;ah,tar pradesh;a2e1laxca1DuscaA;nnessee,x1R;bas0Kmaulip1QsmJ;a6i4o2taf0Ou1ylh13;ffVrr00s0Y;me10no1Auth 1;cSdR;ber1Ic1naloa;hu0Sily;n2skatchew0Rxo1;ny; luis potosi,ta catari1I;a1hode7;j1ngp02;asth0Mshahi;inghai,u1;e1intana roo;bec,ensWreta0E;ara4e2rince edward1; isU;i,nnsylv1rnambu02;an14;!na;axa0Ndisha,h1klaho1Bntar1reg4x04;io;ayarit,eBo3u1;evo le1nav0L;on;r1tt0Rva scot0X;f6mandy,th1; 1ampton0;c3d2yo1;rk0;ako0Y;aroli0V;olk;bras0Xva01w1; 2foundland1;! and labrador;brunswick,hamp0jers1mexiJyork state;ey;a6i2o1;nta0Nrelos;ch3dlanBn2ss1;issippi,ouri;as geraGneso0M;igQoacQ;dhya,harasht04ine,ni3r1ssachusetts;anhao,y1;land;p1toba;ur;anca0e1incoln0ouis8;e1iH;ds;a1entucky,hul0A;ns08rnata0Dshmir;alis1iangxi;co;daho,llino2nd1owa;ia05;is;a2ert1idalEunA;ford0;mp0waii;ansu,eorgWlou5u1;an2erre1izhou,jarat;ro;ajuato,gdo1;ng;cester0;lori2uji1;an;da;sex;e4o2uran1;go;rs1;et;lawaErby0;a8ea7hi6o1umbrH;ahui4l3nnectic2rsi1ventry;ca;ut;iMorado;la;apEhuahua;ra;l8m1;bridge0peche;a5r4uck1;ingham0;shi1;re;emen,itish columb3;h2ja cal1sque,var2;iforn1;ia;guascalientes,l4r1;izo2kans1;as;na;a2ber1;ta;ba2s1;ka;ma\",\n  \"City\": \"true¦a2Wb26c1Wd1Re1Qf1Og1Ih1Ai18jakar2Hk0Zl0Tm0Gn0Co0ApZquiYrVsLtCuBv8w3y1z0;agreb,uri1Z;ang1Te0okohama;katerin1Hrev34;ars3e2i0rocl3;ckl0Vn0;nipeg,terth0W;llingt1Oxford;aw;a1i0;en2Hlni2Z;lenc2Uncouv0Gr2G;lan bat0Dtrecht;a6bilisi,e5he4i3o2rondheim,u0;nVr0;in,ku;kyo,ronIulouC;anj23l13miso2Jra2A; haJssaloni0X;gucigalpa,hr2Ol av0L;i0llinn,mpe2Bngi07rtu;chu22n2MpT;a3e2h1kopje,t0ydney;ockholm,uttga12;angh1Fenzh1X;o0KvZ;int peters0Ul3n0ppo1F; 0ti1B;jo0salv2;se;v0z0Q;adU;eykjavik,i1o0;me,sario,t25;ga,o de janei17;to;a8e6h5i4o2r0ueb1Qyongya1N;a0etor24;gue;rt0zn24; elizabe3o;ls1Grae24;iladelph1Znom pe07oenix;r0tah tik19;th;lerJr0tr10;is;dessa,s0ttawa;a1Hlo;a2ew 0is;delTtaip0york;ei;goya,nt0Upl0Uv1R;a5e4i3o1u0;mb0Lni0I;nt0scH;evideo,real;l1Mn01skolc;dellín,lbour0S;drid,l5n3r0;ib1se0;ille;or;chest0dalWi0Z;er;mo;a4i1o0vAy01;nd00s angel0F;ege,ma0nz,sbZverpo1;!ss0;ol; pla0Iusan0F;a5hark4i3laipeda,o1rak0uala lump2;ow;be,pavog0sice;ur;ev,ng8;iv;b3mpa0Kndy,ohsiu0Hra0un03;c0j;hi;ncheMstanb0̇zmir;ul;a5e3o0; chi mi1ms,u0;stI;nh;lsin0rakliG;ki;ifa,m0noi,va0A;bu0SiltD;alw4dan3en2hent,iza,othen1raz,ua0;dalaj0Gngzhou;bu0P;eUoa;sk;ay;es,rankfu0;rt;dmont4indhovU;a1ha01oha,u0;blRrb0Eshanbe;e0kar,masc0FugavpiJ;gu,je0;on;a7ebu,h2o0raioJuriti01;lo0nstanJpenhagNrk;gFmbo;enn3i1ristchur0;ch;ang m1c0ttagoL;ago;ai;i0lgary,pe town,rac4;ro;aHeBirminghWogoAr5u0;char3dap3enos air2r0sZ;g0sa;as;es;est;a2isba1usse0;ls;ne;silPtisla0;va;ta;i3lgrade,r0;g1l0n;in;en;ji0rut;ng;ku,n3r0sel;celo1ranquil0;la;na;g1ja lu0;ka;alo0kok;re;aBb9hmedabad,l7m4n2qa1sh0thens,uckland;dod,gabat;ba;k0twerp;ara;m5s0;terd0;am;exandr0maty;ia;idj0u dhabi;an;lbo1rh0;us;rg\",\n  \"FemaleName\": \"true¦0:FY;1:G2;2:FR;3:FD;4:FC;5:FS;6:EP;7:ER;8:EZ;9:GF;A:GB;B:E5;C:FO;D:G8;E:FL;F:EG;aE2bD4cB7dAHe9Ff90g8Gh82i7Rj6Tk5Zl4Nm38n2To2Qp2Fqu2Er1Os0Qt04ursu7vUwOyLzG;aJeHoG;e,la,ra;lGna;da,ma;da,ra;as7DeHol1TvG;et6onB8;le0sen3;an8endBNhiB3iG;lInG;if39niGo0;e,f38;a,helmi0lGma;a,ow;aMeJiG;cHviG;an9WenG1;kCZtor3;da,l8Unus,rG;a,nGoniD2;a,iDC;leGnesEC;nDLrG;i1y;aSePhNiMoJrGu7y4;acG3iGu0E;c3na,sG;h9Lta;nHrG;a,i;i9Iya;a5HffaCGna,s5;al3eGomasi0;a,l8Fo6Wres1;g7To6VrHssG;!a,ie;eFi,ri9;bNliMmKnIrHs5tGwa0;ia0um;a,yn;iGya;a,ka,s5;a4e4iGmCAra;!ka;a,t5;at5it5;a05carlet2Xe04hUiSkye,oQtMuHyG;bFJlvi1;e,sHzG;an2Set6ie,y;anGi9;!a,e,nG;aEe;aIeG;fGl3CphG;an2;cF8r71;f3nGphi1;d4ia,ja,ya;er4lv3mon1nGobh74;dy;aKeGirlBLo0y7;ba,e0i7lIrG;iGrBPyl;!d6Z;ia,lBV;ki4nIrHu0w0yG;la,na;i,leAon,ron;a,da,ia,nGon;a,on;l5Xre0;bMdLi8lKmIndHrGs5vannaE;aEi0;ra,y;aGi4;nt5ra;lBNome;e,ie;in1ri0;a02eXhViToHuG;by,thBK;bQcPlOnNsHwe0xG;an93ie,y;aHeGie,lD;ann9ll1marBFtB;!lGnn1;iGyn;e,nG;a,d7V;da,i,na;an8;hel52io;bin,erByn;a,cGkki,na,ta;helBZki;ea,iannDXoG;da,n11;an0bIgi0i0nGta,y0;aGee;!e,ta;a,eG;cARkaE;chGe,i0mo0n5DquCDvCy0;aCCelGi8;!e,le;een2ia0;aMeLhJoIrG;iGudenAW;scil1Tyamva8;lly,rt3;ilome0oebe,ylG;is,lis;arl,ggy,nelope,r7t4;ige,m0En4No7rvaBBtHulG;a,et6in1;ricGsy,tA8;a,e,ia;ctav3deHf85lGph85;a,ga,iv3;l3t6;aQePiJoGy7;eHrG;aEeCma;ll1mi;aKcIkGla,na,s5ta;iGki;!ta;hoB2k8BolG;a,eBH;!mh;l7Tna,risF;dIi5OnHo22taG;li1s5;cy,et6;eAiCO;a00ckenz2eUiKoHrignayani,uriBGyrG;a,na,tAT;i4ll9YnG;a,iG;ca,ka,qB5;a,chOkaNlJmi,nIrGtzi;aGiam;!n8;a,dy,erva,h,n2;a,dIi9KlG;iGy;cent,e;red;!e7;ae7el3G;ag4KgKi,lHrG;edi61isFyl;an2iGliF;nGsAN;a,da;!an,han;b08c9Fd06e,g04i03l01nZrKtJuHv6Sx88yGz2;a,bell,ra;de,rG;a,eC;h76il8t2;a,cSgOiJjor2l6In2s5tIyG;!aGbe5QjaAlou;m,n9T;a,ha,i0;!aIbAMeHja,lDna,sGt53;!a,ol,sa;!l06;!h,m,nG;!a,e,n1;arIeHie,oGr3Kueri6;!t;!ry;et3IiB;elGi61y;a,l1;dGon,ue7;akranBy;iGlo36;a,ka,n8;a,re,s2;daGg2;!l2W;alDd2elGge,isBHon0;eiAin1yn;el,le;a0Ie08iWoQuKyG;d3la,nG;!a,dHe9TnGsAR;!a,e9S;a,sAP;aB2cJelIiFlHna,pGz;e,iB;a,u;a,la;iGy;a2Ae,l25n8;is,l1GrHtt2uG;el7is1;aIeHi9na,rG;a70i9;lei,n1tB;!in1;aQbPd3lLnIsHv3zG;!a,be4Ket6z2;a,et6;a,dG;a,sGy;ay,ey,i,y;a,iaIlG;iGy;a8He;!n4F;b7Uerty;!n5S;aNda,e0iLla,nKoIslAStGx2;iGt2;c3t3;la,nGra;a,ie,o4;a,or1;a,gh,laG;!ni;!h,nG;a,d4e,n4N;cNdon7Ti7kes5na,rMtKurIvHxGy7;mi;ern1in3;a,eGie,yn;l,n;as5is5oG;nya,ya;a,isF;ey,ie,y;aZeUhadija,iMoLrIyG;lGra;a,ee,ie;istGy5C;a,en,iGy;!e,n48;ri,urtn9B;aMerLl9AmIrGzzy;a,stG;en,in;!berlG;eGi,y;e,y;a,stC;!na,ra;el6QiJlInHrG;a,i,ri;d4na;ey,i,l9Rs2y;ra,s5;c8Xi5YlOma7nyakumari,rMss5MtJviByG;!e,lG;a,eG;e,i79;a5FeHhGi3PlDri0y;ar5Der5Die,leCr9Gy;!lyn74;a,en,iGl4Vyn;!ma,n31sF;ei73i,l2;a04eVilToMuG;anKdJliGst57;aHeGsF;!nAt0W;!n8Y;i2Ry;a,iB;!anLcelDd5Wel72han6JlJni,sHva0yG;a,ce;eGie;fi0lDph4Y;eGie;en,n1;!a,e,n36;!i10lG;!i0Z;anLle0nIrHsG;i5Rsi5R;i,ri;!a,el6Qif1RnG;a,et6iGy;!e,f1P;a,e73iHnG;a,e72iG;e,n1;cLd1mi,nHqueliAsmin2Uvie4yAzG;min9;a9eHiG;ce,e,n1s;!lGsFt06;e,le;inHk2lDquelG;in1yn;da,ta;lPmNnMo0rLsHvaG;!na;aHiGob6V;do4;!belGdo4;!a,e,l2G;en1i0ma;a,di4es,gr5S;el8ogG;en1;a,eAia0o0se;aNeKilHoGyacin1N;ll2rten1H;aHdGlaH;a,egard;ry;ath0WiHlGnrietBrmiAst0W;en24ga;di;il76lKnJrGtt2yl76z6E;iGmo4Gri4H;etG;!te;aEnaE;ey,l2;aYeTiOlMold12rIwG;enGyne18;!dolD;acHetGisel8;a,chC;e,ieG;!la;adys,enGor3yn1Y;a,da,na;aJgi,lHna,ov72selG;a,e,le;da,liG;an;!n0;mYnIorgHrG;ald36i,m2Ttru74;et6i5U;a,eGna;s1Nvieve;briel3Gil,le,rnet,yle;aReOio0loMrG;anHe8iG;da,e8;!cG;esHiGoi0G;n1s3W;!ca;!rG;a,en44;lHrnG;!an8;ec3ic3;rHtiGy9;ma;ah,rah;d0FileCkBl00mUn4BrRsMtLuKvG;aIelHiG;e,ta;in0Ayn;!ngel2I;geni1la,ni3S;h53ta;meral8peranJtG;eHhGrel7;er;l2Qr;za;iGma,nest2Ayn;cGka,n;a,ka;eJilImG;aGie,y;!liA;ee,i1y;lGrald;da,y;aTeRiMlLma,no4oJsIvG;a,iG;na,ra;a,ie;iGuiG;se;a,en,ie,y;a0c3da,nJsGzaH;aGe;!beG;th;!a,or;anor,nG;!a;in1na;en,iGna,wi0;e,th;aWeKiJoGul2V;lor52miniq3Zn31rGtt2;a,eCis,la,othGthy;ea,y;an09naEonAx2;anPbOde,eNiLja,lImetr3nGsir4V;a,iG;ce,se;a,iHla,orGphiA;es,is;a,l5K;dGrdG;re;!d4Nna;!b2DoraEra;a,d4nG;!a,e;hl3i0mMnKphn1rHvi1XyG;le,na;a,by,cHia,lG;a,en1;ey,ie;a,et6iG;!ca,el1Bka;arGia;is;a0Re0Nh05i03lVoJrHynG;di,th3;istGy05;al,i0;lPnMrHurG;tn1E;aJdIiGnIriA;!nG;a,e,n1;el3;!l1S;n2sG;tanGuelo;ce,za;eGleC;en,t6;aIeoHotG;il4B;!pat4;ir9rIudG;et6iG;a,ne;a,e,iG;ce,sX;a4er4ndG;i,y;aPeMloe,rG;isHyG;stal;sy,tG;aHen,iGy;!an1e,n1;!l;lseHrG;!i9yl;a,y;nLrG;isJlHmG;aiA;a,eGot6;n1t6;!sa;d4el1PtG;al,el1O;cHlG;es6i3F;el3ilG;e,ia,y;iYlXmilWndVrNsLtGy7;aJeIhGri0;erGleCrDy;in1;ri0;li0ri0;a2GsG;a2Fie;a,iMlKmeIolHrG;ie,ol;!e,in1yn;lGn;!a,la;a,eGie,y;ne,y;na,sF;a0Di0D;a,e,l1;isBl2;tlG;in,yn;arb0CeYianXlVoTrG;andRePiIoHyG;an0nn;nwDok9;an2NdgKg0ItG;n27tG;!aHnG;ey,i,y;ny;etG;!t9;an0e,nG;da,na;i9y;bbi9nG;iBn2;ancGossom,ythe;a,he;ca;aRcky,lin8niBrNssMtIulaEvG;!erlG;ey,y;hHsy,tG;e,i0Zy9;!anG;ie,y;!ie;nGt5yl;adHiG;ce;et6iA;!triG;ce,z;a4ie,ra;aliy29b24d1Lg1Hi19l0Sm0Nn01rWsNthe0uJvIyG;anGes5;a,na;a,r25;drIgusHrG;el3o4;ti0;a,ey,i,y;hHtrG;id;aKlGt1P;eHi9yG;!n;e,iGy;gh;!nG;ti;iIleHpiB;ta;en,n1t6;an19elG;le;aYdWeUgQiOja,nHtoGya;inet6n3;!aJeHiGmI;e,ka;!mGt6;ar2;!belHliFmT;sa;!le;ka,sGta;a,sa;elGie;a,iG;a,ca,n1qG;ue;!t6;te;je7rea;la;!bHmGstas3;ar3;el;aIberHel3iGy;e,na;!ly;l3n8;da;aTba,eNiKlIma,yG;a,c3sG;a,on,sa;iGys0J;e,s0I;a,cHna,sGza;a,ha,on,sa;e,ia;c3is5jaIna,ssaIxG;aGia;!nd4;nd4;ra;ia;i0nHyG;ah,na;a,is,naE;c5da,leCmLnslKsG;haElG;inGyW;g,n;!h;ey;ee;en;at5g2nG;es;ie;ha;aVdiSelLrG;eIiG;anLenG;a,e,ne;an0;na;aKeJiHyG;nn;a,n1;a,e;!ne;!iG;de;e,lDsG;on;yn;!lG;iAyn;ne;agaJbHiG;!gaI;ey,i9y;!e;il;ah\",\n  \"WeekDay\": \"true¦fri4mon4s2t1wed0;!nesd4;hurs2ues2;at0un1;!urd1;!d0;ay0;!s\",\n  \"Month\": \"true¦aBdec9feb7j2mar,nov9oct1sep0;!t8;!o8;an3u0;l1n0;!e;!y;!u1;!ru0;ary;!em0;ber;pr1ug0;!ust;!il\",\n  \"FirstName\": \"true¦aEblair,cCdevBj8k6lashawn,m3nelly,quinn,re2sh0;ay,e0iloh;a,lby;g1ne;ar1el,org0;an;ion,lo;as8e0r9;ls7nyatta,rry;am0ess1ude;ie,m0;ie;an,on;as0heyenne;ey,sidy;lex1ndra,ubr0;ey;is\",\n  \"LastName\": \"true¦0:34;1:39;2:3B;3:2Y;4:2E;5:30;a3Bb31c2Od2Ee2Bf25g1Zh1Pi1Kj1Ek17l0Zm0Nn0Jo0Gp05rYsMtHvFwCxBy8zh6;a6ou,u;ng,o;a6eun2Uoshi1Kun;ma6ng;da,guc1Zmo27sh21zaR;iao,u;a7eb0il6o3right,u;li3Bs1;gn0lk0ng,tanabe;a6ivaldi;ssilj37zqu2;a9h8i2Go7r6sui,urn0;an,ynisJ;lst0Prr1Uth;at1Uomps1;kah0Vnaka,ylor;aEchDeChimizu,iBmiAo9t7u6zabo;ar2lliv2AzuE;a6ein0;l23rm0;sa,u3;rn4th;lva,mmo24ngh;mjon4rrano;midt,neid0ulz;ito,n7sa6to;ki;ch2dLtos,z;amBeag1Zi9o7u6;bio,iz,sD;b6dri1MgIj0Tme24osevelt,ssi,ux;erts,ins1;c6ve0F;ci,hards1;ir2os;aEeAh8ic6ow20;as6hl0;so;a6illips;m,n1T;ders5et8r7t6;e0Nr4;ez,ry;ers;h21rk0t6vl4;el,te0J;baBg0Blivei01r6;t6w1O;ega,iz;a6eils1guy5ix1owak,ym1E;gy,ka6var1K;ji6muW;ma;aEeCiBo8u6;ll0n6rr0Bssolini,ñ6;oz;lina,oKr6zart;al0Me6r0U;au,no;hhail4ll0;rci0ssi6y0;!er;eWmmad4r6tsu07;in6tin2;!o;aCe8i6op2uo;!n6u;coln,dholm;fe7n0Qr6w0J;oy;bv6v6;re;mmy,rs5u;aBennedy,imuAle0Lo8u7wo6;k,n;mar,znets4;bay6vacs;asY;ra;hn,rl9to,ur,zl4;aAen9ha3imen2o6u3;h6nYu3;an6ns1;ss1;ki0Es5;cks1nsse0D;glesi9ke8noue,shik7to,vano6;u,v;awa;da;as;aBe8itchcock,o7u6;!a3b0ghNynh;a3ffmann,rvat;mingw7nde6rN;rs1;ay;ns5rrQs7y6;asDes;an4hi6;moJ;a9il,o8r7u6;o,tierr2;ayli3ub0;m2nzal2;nd6o,rcia;hi;erAis9lor8o7uj6;ita;st0urni0;es;ch0;nand2;d7insteHsposi6vaL;to;is1wards;aCeBi9omin8u6;bo6rand;is;gu2;az,mitr4;ov;lgado,vi;nkula,rw7vi6;es,s;in;aFhBlarkAo6;h5l6op0rbyn,x;em7li6;ns;an;!e;an8e7iu,o6ristens5u3we;i,ng,u3w,y;!n,on6u3;!g;mpb7rt0st6;ro;ell;aBe8ha3lanco,oyko,r6yrne;ooks,yant;ng;ck7ethov5nnett;en;er,ham;ch,h8iley,rn6;es,i0;er;k,ng;dDl9nd6;ers6rA;en,on,s1;on;eks7iy8var2;ez;ej6;ev;ams\",\n  \"MaleName\": \"true¦0:CE;1:BL;2:C2;3:BT;4:B5;5:9V;6:BZ;7:AT;8:BD;9:AX;A:AO;aB4bA8c97d87e7Gf6Yg6Gh5Wi5Ij4Lk4Bl3Rm2Pn2Eo28p22qu20r1As0Qt06u05v00wNxavi3yGzB;aBor0;cBh8Ine;hCkB;!aB1;ar51eB0;ass2i,oCuB;sDu25;nEsDusB;oBsC;uf;ef;at0g;aJeHiCoByaAP;lfgang,odrow;lBn1O;bDey,frBJlB;aA5iB;am,e,s;e89ur;i,nde5sB;!l7t1;de,lCrr6yB;l1ne;lBt3;a93y;aEern1iB;cCha0nceBrg9Bva0;!nt;ente,t5A;lentin49n8Yughn;lyss4Msm0;aTeOhKiIoErCyB;!l3ro8s1;av9QeBist0oy,um0;nt9Iv54y;bDd7XmBny;!as,mBoharu;aAYie,y;i83y;mBt9;!my,othy;adDeoCia7DomB;!as;!do7M;!de9;dErB;en8HrB;an8GeBy;ll,n8F;!dy;dgh,ic9Tnn3req,ts45;aRcotPeNhJiHoFpenc3tBur1Oylve8Hzym1;anDeBua7B;f0phAFvBwa7A;e57ie;!islaw,l7;lom1nA3uB;leyma8ta;dBl7Jm1;!n7;aDeB;lBrm0;d1t1;h6Sne,qu0Uun,wn,y8;aBbasti0k1Xl41rg40th,ymo9I;m9n;!tB;!ie,y;lCmBnti21q4Iul;!mAu4;ik,vato6V;aWeShe92iOoFuCyB;an,ou;b6LdCf9pe6QssB;!elAI;ol2Uy;an,bIcHdGel,geFh0landA9mEnDry,sCyB;!ce;coe,s;!a95nA;an,eo;l3Jr;e4Qg3n7olfo,ri68;co,ky;bAe9U;cBl7;ar5Oc5NhCkBo;!ey,ie,y;a85ie;gCid,ub6x,yBza;ansh,nS;g8WiB;na8Ss;ch5Yfa4lDmCndBpha4sh6Uul,ymo70;al9Yol2By;i9Ion;f,ph;ent2inB;cy,t1;aFeDhilCier62ol,reB;st1;!ip,lip;d9Brcy,tB;ar,e2V;b3Sdra6Ft44ul;ctav2Vliv3m96rFsCtBum8Uw6;is,to;aCc8SvB;al52;ma;i,l49vJ;athJeHiDoB;aBel,l0ma0r2X;h,m;cCg4i3IkB;h6Uola;hol5XkBol5X;!ol5W;al,d,il,ls1vB;il50;anBy;!a4i4;aWeTiKoFuCyB;l21r1;hamCr5ZstaB;fa,p4G;ed,mF;dibo,e,hamDis1XntCsBussa;es,he;e,y;ad,ed,mB;ad,ed;cGgu4kElDnCtchB;!e5;a78ik;o03t1;e,olB;aj;ah,hBk7;a4eB;al,l;hClv2rB;le,ri5v2;di,met;ck,hNlLmOnu4rHs1tDuricCxB;!imilian8Cwe5;e,io;eo,hCi52tB;!eo,hew,ia;eBis;us,w;cDio,k86lCqu6Gsha5tBv2;i2Hy;in,on;!el,oKus;achBcolm,ik;ai,y;amBdi,moud;adB;ou;aReNiMlo2RoIuCyB;le,nd1;cEiDkBth3;aBe;!s;gi,s;as,iaB;no;g0nn6RrenDuBwe5;!iB;e,s;!zo;am,on4;a7Bevi,la4SnDoBst3vi;!nB;!a60el;!ny;mCnBr67ur4Twr4T;ce,d1;ar,o4N;aIeDhaled,iBrist4Vu48y3B;er0p,rB;by,k,ollos;en0iEnBrmit,v2;!dCnBt5C;e0Yy;a5ri4N;r,th;na68rBthem;im,l;aYeQiOoDuB;an,liBst2;an,o,us;aqu2eJhnInGrEsB;eChBi7Bue;!ua;!ph;dBge;an,i,on;!aBny;h,s,th4X;!ath4Wie,nA;!l,sBy;ph;an,e,mB;!mA;d,ffGrDsB;sBus;!e;a5JemCmai8oBry;me,ni0O;i6Uy;!e58rB;ey,y;cHd6kGmFrDsCvi3yB;!d6s1;on,p3;ed,od,rBv4M;e4Zod;al,es,is1;e,ob,ub;k,ob,quB;es;aNbrahMchika,gKkeJlija,nuIrGsDtBv0;ai,sB;uki;aBha0i6Fma4sac;ac,iaB;h,s;a,vinBw2;!g;k,nngu52;!r;nacBor;io;im;in,n;aJeFina4VoDuByd56;be25gBmber4CsD;h,o;m3ra33sBwa3X;se2;aDctCitCn4ErB;be20m0;or;th;bKlJmza,nIo,rDsCyB;a43d6;an,s0;lEo4FrDuBv7;hi40ki,tB;a,o;is1y;an,ey;k,s;!im;ib;aQeMiLlenKoIrEuB;illerCsB;!tavo;mo;aDegBov3;!g,orB;io,y;dy,h57nt;nzaBrd1;lo;!n;lbe4Qno,ovan4R;ne,oDrB;aBry;ld,rd4U;ffr7rge;bri4l6rBv2;la1Zr3Eth,y;aReNiLlJorr0IrB;anDedBitz;!dAeBri24;ri23;cDkB;!ie,lB;in,yn;esJisB;!co,zek;etch3oB;yd;d4lBonn;ip;deriDliCng,rnB;an01;pe,x;co;bi0di;arZdUfrTit0lNmGnFo2rCsteb0th0uge8vBym6zra;an,ere2V;gi,iCnBrol,v2w2;est45ie;c07k;och,rique,zo;aGerFiCmB;aFe2P;lCrB;!h0;!io;s1y;nu4;be09d1iEliDmCt1viBwood;n,s;er,o;ot1Ts;!as,j43sB;ha;a2en;!dAg32mEuCwB;a25in;arB;do;o0Su0S;l,nB;est;aYeOiLoErDuCwByl0;ay8ight;a8dl7nc0st2;ag0ew;minFnDri0ugCyB;le;!l03;!a29nBov0;e5ie,y;go,icB;!k;armuCeBll1on,rk;go;id;anIj0lbeHmetri9nFon,rEsDvCwBxt3;ay8ey;en,in;hawn,mo08;ek,ri0F;is,nBv3;is,y;rt;!dB;re;lKmInHrDvB;e,iB;!d;en,iDne5rByl;eBin,yl;l2Vn;n,o,us;!e,i4ny;iBon;an,en,on;e,lB;as;a06e04hWiar0lLoGrEuCyrB;il,us;rtB;!is;aBistobal;ig;dy,lEnCrB;ey,neli9y;or,rB;ad;by,e,in,l2t1;aGeDiByI;fBnt;fo0Ct1;meCt9velaB;nd;nt;rDuCyB;!t1;de;enB;ce;aFeErisCuB;ck;!tB;i0oph3;st3;d,rlBs;eBie;s,y;cBdric,s11;il;lEmer1rB;ey,lCro5y;ll;!os,t1;eb,v2;ar02eUilTlaSoPrCuByr1;ddy,rtI;aJeEiDuCyB;an,ce,on;ce,no;an,ce;nCtB;!t;dCtB;!on;an,on;dCndB;en,on;!foBl7y;rd;bCrByd;is;!by;i8ke;al,lA;nFrBshoi;at,nCtB;!r10;aBie;rd0S;!edict,iCjam2nA;ie,y;to;n7rBt;eBy;tt;ey;ar0Xb0Nd0Jgust2hm0Gid6ja0ElZmXnPputsiOrFsaEuCveBya0ziz;ry;gust9st2;us;hi;aIchHi4jun,maFnDon,tBy0;hBu06;ur;av,oB;ld;an,nd0A;el;ie;ta;aq;dGgel05tB;hoEoB;i8nB;!i02y;ne;ny;reBy;!as,s,w;ir,mBos;ar;an,beOd6eIfFi,lEonDphonHt1vB;aMin;on;so,zo;an,en;onCrB;edP;so;c,jaEksandDssaExB;!and3;er;ar,er;ndB;ro;rtH;ni;en;ad,eB;d,t;in;aColfBri0vik;!o;mBn;!a;dFeEraCuB;!bakr,lfazl;hBm;am;!l;allEel,oulaye,ulB;!lCrahm0;an;ah,o;ah;av,on\",\n  \"Person\": \"true¦ashton kutchSbRcMdKeIgastNhGinez,jEkDleCmBnettJoAp8r4s3t2v0;a0irgin maG;lentino rossi,n go3;heresa may,iger woods,yra banks;addam hussain,carlett johanssJlobodan milosevic,uB;ay romano,eese witherspoIo1ush limbau0;gh;d stewart,nald0;inho,o;a0ipJ;lmIris hiltD;prah winfrFra;essiaen,itt romnEubarek;bron james,e;anye west,iefer sutherland,obe bryant;aime,effers8k rowli0;ng;alle ber0itlBulk hogan;ry;ff0meril lagasse,zekiel;ie;a0enzel washingt2ick wolf;lt1nte;ar1lint0ruz;on;dinal wols1son0;! palm2;ey;arack obama,rock;er\",\n  \"Verb\": \"true¦awak9born,cannot,fr8g7h5k3le2m1s0wors9;e8h3;ake sure,sg;ngth6ss6;eep tabs,n0;own;as0e2;!t2;iv1onna;ight0;en\",\n  \"PhrasalVerb\": \"true¦0:71;1:6P;2:7D;3:73;4:6I;5:7G;6:75;7:6O;8:6B;9:6C;A:5H;B:70;C:6Z;a7Gb62c5Cd59e57f45g3Nh37iron0j33k2Yl2Km2Bn29o27p1Pr1Es09tQuOvacuum 1wGyammerCzD;eroAip EonD;e0k0;by,up;aJeGhFiEorDrit52;d 1k2Q;mp0n49pe0r8s8;eel Bip 7K;aEiD;gh 06rd0;n Br 3C;it 5Jk8lk6rm 0Qsh 73t66v4O;rgeCsD;e 9herA;aRePhNiJoHrFuDype 0N;ckArn D;d2in,o3Fup;ade YiDot0y 32;ckle67p 79;ne66p Ds4C;d2o6Kup;ck FdEe Dgh5Sme0p o0Dre0;aw3ba4d2in,up;e5Jy 1;by,o6U;ink Drow 5U;ba4ov7up;aDe 4Hll4N;m 1r W;ckCke Elk D;ov7u4N;aDba4d2in,o30up;ba4ft7p4Sw3;a0Gc0Fe09h05i02lYmXnWoVpSquare RtJuHwD;earFiD;ngEtch D;aw3ba4o6O; by;ck Dit 1m 1ss0;in,up;aIe0RiHoFrD;aigh1LiD;ke 5Xn2X;p Drm1O;by,in,o6A;n2Yr 1tc3H;c2Xmp0nd Dr6Gve6y 1;ba4d2up;d2o66up;ar2Uell0ill4TlErDurC;ingCuc8;a32it 3T;be4Brt0;ap 4Dow B;ash 4Yoke0;eep EiDow 9;c3Mp 1;in,oD;ff,v7;gn Eng2Yt Dz8;d2o5up;in,o5up;aFoDu4E;ot Dut0w 5W;aw3ba4f36o5Q;c2EdeAk4Rve6;e Hll0nd GtD; Dtl42;d2in,o5upD;!on;aw3ba4d2in,o1Xup;o5to;al4Kout0rap4K;il6v8;at0eKiJoGuD;b 4Dle0n Dstl8;aDba4d2in52o3Ft2Zu3D;c1Ww3;ot EuD;g2Jnd6;a1Wf2Qo5;ng 4Np6;aDel6inAnt0;c4Xd D;o2Su0C;aQePiOlMoKrHsyc29uD;ll Ft D;aDba4d2in,o1Gt33up;p38w3;ap37d2in,o5t31up;attleCess EiGoD;p 1;ah1Gon;iDp 52re3Lur44wer 52;nt0;ay3YuD;gAmp 9;ck 52g0leCn 9p3V;el 46ncilA;c3Oir 2Hn0ss FtEy D;ba4o4Q; d2c1X;aw3ba4o11;pDw3J;e3It B;arrow3Serd0oD;d6te3R;aJeHiGoEuD;ddl8ll36;c16p 1uth6ve D;al3Ad2in,o5up;ss0x 1;asur8lt 9ss D;a19up;ke Dn 9r2Zs1Kx0;do,o3Xup;aOeMiHoDuck0;a16c36g 0AoDse0;k Dse34;aft7ba4d2forw2Ain3Vov7uD;nd7p;e GghtFnEsDv1T;ten 4D;e 1k 1; 1e2Y;ar43d2;av1Ht 2YvelD; o3L;p 1sh DtchCugh6y1U;in3Lo5;eEick6nock D;d2o3H;eDyA;l2Hp D;aw3ba4d2fSin,o05to,up;aFoEuD;ic8mpA;ke2St2W;c31zz 1;aPeKiHoEuD;nker2Ts0U;lDneArse2O;d De 1;ba4d2fast,oZup;de Et D;ba4on,up;aw3o5;aDlp0;d Fr Dt 1;fDof;rom;in,oO;cZm 1nDve it;d Dg 27kerF;d2in,o5;aReLive Jloss1VoFrEunD; f0M;in39ow 23; Dof 0U;aEb17it,oDr35t0Ou12;ff,n,v7;bo5ft7hJw3;aw3ba4d2in,oDup,w3;ff,n,ut;a17ek0t D;aEb11d2oDr2Zup;ff,n,ut,v7;cEhDl1Pr2Xt,w3;ead;ross;d aEnD;g 1;bo5;a08e01iRlNoJrFuD;cDel 1;k 1;eEighten DownCy 1;aw3o2L;eDshe1G; 1z8;lFol D;aDwi19;bo5r2I;d 9;aEeDip0;sh0;g 9ke0mDrD;e 2K;gLlJnHrFsEzzD;le0;h 2H;e Dm 1;aw3ba4up;d0isD;h 1;e Dl 11;aw3fI;ht ba4ure0;eInEsD;s 1;cFd D;fDo1X;or;e B;dQl 1;cHll Drm0t0O;apYbFd2in,oEtD;hrough;ff,ut,v7;a4ehi1S;e E;at0dge0nd Dy8;o1Mup;o09rD;ess 9op D;aw3bNin,o15;aShPlean 9oDross But 0T;me FoEuntD; o1M;k 1l6;aJbIforGin,oFtEuD;nd7;ogeth7;ut,v7;th,wD;ard;a4y;pDr19w3;art;eDipA;ck BeD;r 1;lJncel0rGsFtch EveA; in;o16up;h Bt6;ry EvD;e V;aw3o12;l Dm02;aDba4d2o10up;r0Vw3;a0He08l01oSrHuD;bbleFcklTilZlEndlTrn 05tDy 10zz6;t B;k 9; ov7;anMeaKiDush6;ghHng D;aEba4d2forDin,o5up;th;bo5lDr0Lw3;ong;teD;n 1;k D;d2in,o5up;ch0;arKgJil 9n8oGssFttlEunce Dx B;aw3ba4;e 9; ar0B;k Bt 1;e 1;d2up; d2;d 1;aIeed0oDurt0;cFw D;aw3ba4d2o5up;ck;k D;in,oK;ck0nk0st6; oJaGef 1nd D;d2ov7up;er;up;r0t D;d2in,oDup;ff,ut;ff,nD;to;ck Jil0nFrgEsD;h B;ainCe B;g BkC; on;in,o5; o5;aw3d2o5up;ay;cMdIsk Fuction6; oD;ff;arDo5;ouD;nd;d D;d2oDup;ff,n;own;t D;o5up;ut\",\n  \"Modal\": \"true¦c5lets,m4ought3sh1w0;ill,o5;a0o4;ll,nt;! to;ay,ight,ust;an,o0;uld\",\n  \"Adjective\": \"true¦0:75;1:7K;2:7Q;3:7J;4:7C;5:5C;6:48;7:49;8:4S;9:61;A:7H;B:70;C:6Z;D:73;E:5X;a6Jb65c5Rd57e4Tf49g41h3Qi35j33k32l2Rm2Gn27o1Rp1Aquack,r10s0Gt09uQvNwFyear5;arp0eJholeIiHoF;man5oFu6C;d6Ezy;despr75s5G;!sa7;eGlFste26;co1Il o4L;!k5;aGiFola4B;b7Tce versa,ol55;ca2gabo63nilla;ltWnJpGrb5Asu4tterF;!moC; f34b1OpGsFti1H;ca7et,ide dMtairs;er,i3N;aPbeco6Rconvin27deMeLfair,ivers4knKprecedYrIsGwF;iel20ritt5Z;i1VuF;pervis0specti3;eFu5;cognLgul6Hl6H;own;ndi3v5Txpect0;cid0rF;!grou5OsF;iz0tood;b7ppeaLssu6GuthorF;iz0;i24ra;aJeHhough4PoGrF;i1oubl0;geth8p,rpB;en5QlFm50rr2Ust0;li3;boo,lFn;ent0;aXcWeUhTiRmug,nobbi3EoPpOqueami3EtJuFymb64;bHi gener55pFrprisi3;erFre0L;! dup8b,i29;du0seq4U;anda6UeIi0PrFy38;aightFip0; fFfF;or5B;adfaCreotyp0;aEec2Gir1JlendBot on; call0le,mb8phist1XrFu0Xvi42;dBry;gnifica2nF;ceEg7;am2Pe8ocki3ut;cFda1em5lfi2Yni1Wpa69re6;o1Gr3W;at58ient28reec58;cr0me,ns serif;aMeIiGoF;buCtt4UuSy4;ghtFv4;!-29f9;ar,bel,condi1du63fres52lHpublic3WsFtard0;is48oF;lu1na2;e1Euc46;bBciF;al,st;aQeOicayu6lacBopuliCrGuF;bl5Amp0;eJiGoF;!b0AfuDmi32p8;mGor,sFva1;ti6;a4We;ciDmF;a0IiF;er,um;ac20rFti1;feAma2Uplexi3v34;rFst;allelHtF;-tiFi4;me;!ed;bQffOkNld fashion0nMpLrg1Hth8utKvF;al,erF;!aHniGt,wF;eiFrouF;ght;ll;do0Ver,g2Msi46;en,posi1; boa5Gg2Kli6;!ay; gua5EbFli6;eat;eHsF;cFer0Hole1;e6uE;d2Tse;ak0eMiLoFua4P;nJrGtF;ab7;thF;!eF;rn;chala2descri50stop;ght5;arby,cessa3Xighbor5xt;aNeLiIoFultip7;bi7derGlFnth5ot,st;dy;a1n;nFx0;iaFor;tuE;di4FnaFre;ci3;cFgenta,in,j03keshift,le,mmoth,ny,sculi6;abEho;aOeJiGoFu13;uti12vi3;mGteraF;l,te;it0;ftIgFth4;al,eGitiF;ma1;nda3D;!-0C;nguBst,tt8;ap1Tind5no0A;agg0uF;niOstifi0veni7;de4gno4Clleg4mSnHpso 1WrF;a1releF;va2; NaMbr0corLdJfluenTiTnIsHtF;aAenDoxF;ic37;a6i2S;a1er,oce2;iGoF;or;reA;deq3Kppr2Z;fFsitu,vitro;ro2;mJpF;arHerfeAoFrop8;li1rtF;a2ed;ti4;eFi0R;d2RnD;aKelJiHoFumdr3C;neCok0rrFs07ur5;if2T;ghfalut1PspF;an2R;liZpf9;lInHrF;d05roF;wi3;dy,gi3;f,low0;ainf9ener2Kiga23lLoKraHuF;ilFng ho;ty;cGtF;ef9is;ef9;ne,od;ea2Eob4;aUeOinNlMoHrF;a1UeFoz1L;e2Eq13tf9;oHrF; keeps,eFm8tuna1;g05ign;liF;sh;ag30ue2;al,i1;dJmGrF;ti7;a7ini6;ne;le; up;bl0i2lDr Gux,voF;ri1uri1;oFreac1F;ff;aOfficie2lNmiMnKreAthere4veJxF;aAcess,peHtraGuF;be2Ml0I;!va1E;ct0rt;n,ryday; Fcouragi3tiE;rou1sui1;ne2;abo23dQe18i1;g8sF;t,ygF;oi3;er;aVeNiHoFrea15ue;mina2ne,ubF;le,tf9;dact1Bfficu1OsGvF;erD;creHeas0gruntl0honeCordGtF;a2ress0;er5;et; LadpKfJgene1PliHrang0spe1PtGvoF;ut;ail0ermin0;be1Mca1ghF;tf9;ia2;an;facto;i5magFngeroZs0I;ed,i3;ly;ertaRhief,ivil,oHrF;aFowd0u0H;mp0v02z0;loNmLnGoi3rrFve0P;eAu1I;cre1grIsHtF;emFra0F;po0D;ta2;ue2;mer08pleF;te,x;ni4ss4;in;aPeLizarElJoGrF;and new,isk,okP;gGna fiWttom,urgeoF;is;us;ank,iI;re;autif9hiGlov0nFst,yoG;eVt;nd;ul;ckGnkru0XrrF;en;!wards; priori,b0Nc0Kd0AfraBg05h04lZma06ntiquYpUrOsMttracti07utheLvIwF;aGkF;wa0U;ke,re;ant garGerF;age;de;ntV;leep,tonisF;hi3;ab,bitIroHtiF;fiF;ci4;ga2;raF;ry;pFt;are2etiPrF;oprF;ia1;at0;arIcohGeFiMl,oof;rt;olF;ic;mi3;ead;ainCgressiGoniF;zi3;ve;st;id; MeKuJvF;aGerD;se;nc0;ed;lt;pt,qF;ua1;hoc,infinitF;um;cuGtu4u1;al;ra1;erPlOoMruLsGuF;nda2;e2oGtraA;ct;lu1rbi3;ng;te;pt;aFve;rd;aze,e;ra2;nt\",\n  \"Comparable\": \"true¦0:40;1:4H;2:44;3:4A;4:2X;5:3W;a4Nb43c3Nd3Ce34f2Qg2Eh23i1Uj1Tk1Ql1Hm1Bn15o13p0Tqu0Rr0IsRtKuIvFw7y6za11;ell26ou3;aBe9hi1Xi7r6;o3y;ck0Mde,l6n1ry,se;d,y;a6i4Lt;k,ry;n1Sr6sI;m,y;a7e6ulgar;nge5rda2xi3;gue,in,st;g0n6pco3Lse5;like0ti1;aAen9hi8i7ough,r6;anqu2Pen1ue;dy,g3Tme0ny,r09;ck,n,rs2Q;d41se;ll,me,rt,s6wd46;te5;aVcarUeThRiQkin0FlMmKoHpGqua1GtAu7w6;eet,ift;b7dd14per0Gr6;e,re2I;sta2Gt4;aAe9iff,r7u6;pXr1;a6ict,o3;ig3Gn0V;a1ep,rn;le,rk;e23i3Gright0;ci29ft,l7o6re,ur;n,thi3;emn,id;a6el0ooth;ll,rt;e8i6ow,y;ck,g36m6;!y;ek,nd3E;ck,l0mp4;a6iTort,rill,y;dy,ll0Yrp;cu0Sve0Sxy;ce,ed,y;d,fe,int0l1Wv15;aBe9i8o6ude;mantic,o1Jsy,u6;gh,nd;ch,pe,tzy;a6d,mo0I;dy,l;gg7ndom,p6re,w;id;ed;ai2i6;ck,et;aEhoDi1RlCoBr8u6;ny,r6;e,p4;egna2ic7o6;fouZud;ey,k0;li05or,te1C;ain,easa2;ny;in5le;dd,f6i0ld,ranR;fi11;aAe8i7o6;b4isy,rm16sy;ce,mb4;a6w;r,t;ive,rr02;aAe8ild,o7u6;nda1Ate;ist,o1;a6ek,llY;n,s0ty;d,tuR;aCeBi9o6ucky;f0Vn7o1Eu6ve0w18y0U;d,sy;e0g;g1Uke0tt4v6;e0i3;an,wd;me,r6te;ge;e7i6;nd;en;ol0ui1P;cy,ll,n6;sBt6;e6ima8;llege2r6;es7media6;te;ti3;ecu6ta2;re;aEeBiAo8u6;ge,m6ng1R;b4id;ll6me0t;ow;gh,l0;a6f04sita2;dy,v6;en0y;nd1Hppy,r6te5;d,sh;aGenFhDiClBoofy,r6;a9e8is0o6ue1E;o6ss;vy;at,en,y;nd,y;ad,ib,ooI;a2d1;a6o6;st0;t4uiY;u1y;aIeeb4iDlat,oAr8u6;ll,n6r14;!ny;aHe6iend0;e,sh;a7r6ul;get5mG;my;erce8n6rm,t;an6e;ciC;! ;le;ir,ke,n0Fr,st,t,ulA;aAerie,mp9sse7v6xtre0Q;il;nti6;al;ty;r7s6;tern,y;ly,th0;aFeCi9r7u6;ll,mb;u6y;nk;r7vi6;ne;e,ty;a6ep,nD;d6f,r;!ly;mp,pp03rk;aHhDlAo8r7u6;dd0r0te;isp,uel;ar6ld,mmon,ol,st0ward0zy;se;e6ou1;a6vW;n,r;ar8e6il0;ap,e6;sy;mi3;gey,lm8r6;e5i3;ful;!i3;aNiLlIoEr8u6;r0sy;ly;aAi7o6;ad,wn;ef,g7llia2;nt;ht;sh,ve;ld,r7un6;cy;ed,i3;ng;a7o6ue;nd,o1;ck,nd;g,tt6;er;d,ld,w1;dy;bsu9ng8we6;so6;me;ry;rd\",\n  \"TextValue\": \"true¦bMeIfChundredNmMnin9one,qu8s6t0zeroN;enMh3rLw0;e0o;l0ntC;fGve;ir0ousandIree;d,t5;e0ix7;cond,ptEven6xtE;adrDintD;e0th;!t0;e9ie8y;i3o0;rt1ur0;!t2;ie4y;ft0rst,ve;e3h,ie2y;ight0lev2;!e1h,ie0y;th;en1;illion0;!th\",\n  \"Ordinal\": \"true¦bGeDf9hundredHmGnin7qu6s4t0zeroH;enGh1rFwe0;lfFn9;ir0ousandE;d,t4;e0ixt9;cond,ptAvent8xtA;adr9int9;et0th;e6ie8;i2o0;r0urt3;tie5;ft1rst;ight0lev1;e0h,ie2;en1;illion0;th\",\n  \"Cardinal\": \"true¦bGeDf7hundred,mGnine9one,qu6s4t0zero;en,h2rFw0;e0o;lve,n7;irt8ousand,ree;e0ix4;ptAven3xtA;adr9int9;i3o0;r1ur0;!t2;ty;ft0ve;e2y;ight0lev1;!e0y;en;illion\",\n  \"Expression\": \"true¦a02b01dXeVfuck,gShLlImHnGoDpBshAu7voi04w3y0;a1eLu0;ck,p;!a,hoo,y;h1ow,t0;af,f;e0oa;e,w;gh,h0;! 0h,m;huh,oh;eesh,hh,it;ff,hew,l0sst;ease,z;h1o0w,y;h,o,ps;!h;ah,ope;eh,mm;m1ol0;!s;ao,fao;a4e2i,mm,oly1urr0;ah;! mo6;e,ll0y;!o;ha0i;!ha;ah,ee,o0rr;l0odbye;ly;e0h,t cetera,ww;k,p;'oh,a0uh;m0ng;mit,n0;!it;ah,oo,ye; 1h0rgh;!em;la\",\n  \"Adverb\": \"true¦a07by 05d01eYfShQinPjustOkinda,mMnJoEpCquite,r9s5t2up1very,w0Bye0;p,s; to,wards5;h1o0wiO;o,t6ward;en,us;everal,o0uch;!me1rt0; of;hXtimes,w07;a1e0;alS;ndomRthN;ar excellDer0oint blank; Mhaps;f3n0;ce0ly;! 0;ag00moU; courHten;ewJo0; longEt 0;onHwithstanding;aybe,eanwhiAore0;!ovB;! aboS;deed,steT;en0;ce;or2u0;l9rther0;!moH; 0ev3;examp0good,suF;le;n mas1v0;er;se;e0irect1; 1finite0;ly;ju7trop;far,n0;ow; CbroBd nauseam,gAl5ny2part,side,t 0w3;be5l0mo5wor5;arge,ea4;mo1w0;ay;re;l 1mo0one,ready,so,ways;st;b1t0;hat;ut;ain;ad;lot,posteriori\",\n  \"Preposition\": \"true¦'o,-,aKbHcGdFexcept,fEinDmidPnotwithstandiQoBpRqua,sAt6u3vi2w0;/o,hereMith0;!in,oQ;a,s-a-vis;n1p0;!on;like,til;h0ill,owards;an,r0;ough0u;!oI;ans,ince,o that;',f0n1ut;!f;!to;or,rom;espite,own,u3;hez,irca;ar1e0oAy;low,sides,tween;ri6;',bo7cross,ft6lo5m3propos,round,s1t0;!op;! long 0;as;id0ong0;!st;ng;er;ut\",\n  \"Determiner\": \"true¦aAboth,d8e5few,l3mu7neiCown,plenty,some,th2various,wh0;at0ich0;evB;at,e3is,ose;a,e0;!ast,s;a1i6l0nough,very;!se;ch;e0u;!s;!n0;!o0y;th0;er\"\n}","const entity = ['Person', 'Place', 'Organization']\n\nmodule.exports = {\n  Noun: {\n    notA: ['Verb', 'Adjective', 'Adverb', 'Value'],\n  },\n  // - singular\n  Singular: {\n    isA: 'Noun',\n    notA: 'Plural',\n  },\n  //a specific thing that's capitalized\n  ProperNoun: {\n    isA: 'Noun',\n  },\n\n  // -- people\n  Person: {\n    isA: ['ProperNoun', 'Singular'],\n    notA: ['Place', 'Organization'],\n  },\n  FirstName: {\n    isA: 'Person',\n  },\n  MaleName: {\n    isA: 'FirstName',\n    notA: ['FemaleName', 'LastName'],\n  },\n  FemaleName: {\n    isA: 'FirstName',\n    notA: ['MaleName', 'LastName'],\n  },\n  LastName: {\n    isA: 'Person',\n    notA: ['FirstName'],\n  },\n  Honorific: {\n    isA: 'Noun',\n    notA: ['FirstName', 'LastName'],\n  },\n\n  // -- places\n  Place: {\n    isA: 'Singular',\n    notA: ['Person', 'Organization'],\n  },\n  Country: {\n    isA: ['Place', 'ProperNoun'],\n    notA: ['City'],\n  },\n  City: {\n    isA: ['Place', 'ProperNoun'],\n    notA: ['Country'],\n  },\n  Region: {\n    isA: ['Place', 'ProperNoun'],\n  },\n\n  //---Orgs---\n  Organization: {\n    isA: ['Singular', 'ProperNoun'],\n    notA: ['Person', 'Place'],\n  },\n  SportsTeam: {\n    isA: 'Organization',\n  },\n\n  // - plural\n  Plural: {\n    isA: 'Noun',\n    notA: ['Singular'],\n  },\n  //(not plural or singular)\n  Uncountable: {\n    isA: 'Noun',\n  },\n  Pronoun: {\n    isA: 'Noun',\n    notA: entity,\n  },\n  //a word for someone doing something -'plumber'\n  Actor: {\n    isA: 'Noun',\n    notA: entity,\n  },\n  //a gerund-as-noun - 'swimming'\n  Activity: {\n    isA: 'Noun',\n    notA: ['Person', 'Place'],\n  },\n  //'kilograms'\n  Unit: {\n    isA: 'Noun',\n    notA: entity,\n  },\n  //'Canadians'\n  Demonym: {\n    isA: ['Noun', 'ProperNoun'],\n    notA: entity,\n  },\n  //`john's`\n  Possessive: {\n    isA: 'Noun',\n    // notA: 'Pronoun',\n  },\n}\n","module.exports = {\n  Verb: {\n    notA: ['Noun', 'Adjective', 'Adverb', 'Value'],\n  },\n  // walks\n  PresentTense: {\n    isA: 'Verb',\n    notA: ['PastTense', 'Copula'],\n  },\n  // neutral form - 'walk'\n  Infinitive: {\n    isA: 'PresentTense',\n    notA: ['PastTense', 'Gerund'],\n  },\n  // walking\n  Gerund: {\n    isA: 'PresentTense',\n    notA: ['PastTense', 'Copula'],\n  },\n  // walked\n  PastTense: {\n    isA: 'Verb',\n  },\n  // will walk\n  FutureTense: {\n    isA: 'Verb',\n  },\n\n  // is\n  Copula: {\n    isA: 'Verb',\n  },\n  // would have\n  Modal: {\n    isA: 'Verb',\n  },\n  // had walked\n  PerfectTense: {\n    isA: 'Verb',\n    notA: 'Gerund',\n  },\n  Pluperfect: {\n    isA: 'Verb',\n  },\n  // shown\n  Participle: {\n    isA: 'Verb',\n  },\n  // show up\n  PhrasalVerb: {\n    isA: 'Verb',\n  },\n  //'up' part\n  Particle: {\n    isA: 'PhrasalVerb',\n  },\n}\n","module.exports = {\n  Value: {\n    notA: ['Noun', 'Verb', 'Adjective', 'Adverb'],\n  },\n  Ordinal: {\n    isA: 'Value',\n    notA: ['Cardinal'],\n  },\n  Cardinal: {\n    isA: 'Value',\n    notA: ['Ordinal'],\n  },\n  RomanNumeral: {\n    isA: 'Cardinal', //can be a person, too\n    notA: ['Ordinal', 'TextValue'],\n  },\n  TextValue: {\n    isA: 'Value',\n    notA: ['NumericValue'],\n  },\n  NumericValue: {\n    isA: 'Value',\n    notA: ['TextValue'],\n  },\n  Money: {\n    isA: 'Cardinal',\n  },\n  Fraction: {\n    isA: 'Value',\n  },\n  Percent: {\n    isA: 'Value',\n  },\n}\n","const anything = ['Noun', 'Verb', 'Adjective', 'Adverb', 'Value']\n\nmodule.exports = {\n  //--Adjectives--\n  Adjective: {\n    notA: ['Noun', 'Verb', 'Adverb', 'Value'],\n  },\n  // adjectives that can conjugate\n  Comparable: {\n    isA: ['Adjective'],\n  },\n  // better\n  Comparative: {\n    isA: ['Adjective'],\n  },\n  // best\n  Superlative: {\n    isA: ['Adjective'],\n    notA: ['Comparative'],\n  },\n\n  NumberRange: {\n    isA: ['Contraction'],\n  },\n  Adverb: {\n    notA: ['Noun', 'Verb', 'Adjective', 'Value'],\n  },\n\n  // Dates:\n  //not a noun, but usually is\n  Date: {\n    notA: ['Verb', 'Conjunction', 'Adverb', 'Preposition', 'Adjective'],\n  },\n  Month: {\n    isA: ['Date', 'Singular'],\n    notA: ['Year', 'WeekDay', 'Time'],\n  },\n  WeekDay: {\n    isA: ['Date', 'Noun'],\n  },\n\n  //glue\n  Determiner: {\n    notA: anything,\n  },\n  Conjunction: {\n    notA: anything,\n  },\n  Preposition: {\n    notA: anything,\n  },\n\n  // what, who, why\n  QuestionWord: {\n    notA: ['Determiner'],\n  },\n\n  // peso, euro\n  Currency: {},\n  // ughh\n  Expression: {},\n  // dr.\n  Abbreviation: {},\n\n  // internet tags\n  Url: {\n    notA: ['HashTag', 'PhoneNumber', 'Verb', 'Adjective', 'Value', 'AtMention', 'Email'],\n  },\n  PhoneNumber: {\n    notA: ['HashTag', 'Verb', 'Adjective', 'Value', 'AtMention', 'Email'],\n  },\n  HashTag: {},\n  AtMention: {\n    isA: ['Noun'],\n    notA: ['HashTag', 'Verb', 'Adjective', 'Value', 'Email'],\n  },\n  Emoji: {\n    notA: ['HashTag', 'Verb', 'Adjective', 'Value', 'AtMention'],\n  },\n  Email: {\n    notA: ['HashTag', 'Verb', 'Adjective', 'Value', 'AtMention'],\n  },\n\n  //non-exclusive\n  Auxiliary: {\n    notA: ['Noun', 'Adjective', 'Value'],\n  },\n  Acronym: {\n    notA: ['Plural', 'RomanNumeral'],\n  },\n  Negative: {\n    notA: ['Noun', 'Adjective', 'Value'],\n  },\n}\n","// i just made these up\nconst colorMap = {\n  Noun: 'blue',\n\n  Verb: 'green',\n  Negative: 'green',\n\n  Date: 'red',\n  Value: 'red',\n\n  Adjective: 'magenta',\n\n  Preposition: 'cyan',\n  Conjunction: 'cyan',\n  Determiner: 'cyan',\n  Adverb: 'cyan',\n}\n\n/** add a debug color to some tags */\nconst addColors = function(tags) {\n  Object.keys(tags).forEach(k => {\n    if (colorMap[k]) {\n      tags[k].color = colorMap[k]\n      return\n    }\n    tags[k].isA.some(t => {\n      if (colorMap[t]) {\n        tags[k].color = colorMap[t]\n        return true\n      }\n      return false\n    })\n  })\n  return tags\n}\n\nmodule.exports = addColors\n","const unique = function(arr) {\n  return arr.filter((v, i, a) => a.indexOf(v) === i)\n}\n\n//add 'downward' tags (that immediately depend on this one)\nconst inferIsA = function(tags) {\n  Object.keys(tags).forEach(k => {\n    let tag = tags[k]\n    let len = tag.isA.length\n    for (let i = 0; i < len; i++) {\n      let down = tag.isA[i]\n      if (tags[down]) {\n        tag.isA = tag.isA.concat(tags[down].isA)\n      }\n    }\n    // clean it up\n    tag.isA = unique(tag.isA)\n  })\n  return tags\n}\nmodule.exports = inferIsA\n","const unique = function(arr) {\n  return arr.filter((v, i, a) => a.indexOf(v) === i)\n}\n\n// crawl the tag-graph and infer any conflicts\n// faster than doing this at tag-time\nconst inferNotA = function(tags) {\n  let keys = Object.keys(tags)\n  keys.forEach(k => {\n    let tag = tags[k]\n    tag.notA = tag.notA || []\n    tag.isA.forEach(down => {\n      if (tags[down] && tags[down].notA) {\n        // borrow its conflicts\n        let notA = typeof tags[down].notA === 'string' ? [tags[down].isA] : tags[down].notA || []\n        tag.notA = tag.notA.concat(notA)\n      }\n    })\n    // any tag that lists us as a conflict, we conflict it back.\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      if (tags[key].notA.indexOf(k) !== -1) {\n        tag.notA.push(key)\n      }\n    }\n    // clean it up\n    tag.notA = unique(tag.notA)\n  })\n  return tags\n}\nmodule.exports = inferNotA\n","// a lineage is all 'incoming' tags that have this as 'isA'\nconst inferLineage = function(tags) {\n  let keys = Object.keys(tags)\n  keys.forEach(k => {\n    let tag = tags[k]\n    tag.lineage = []\n    // find all tags with it in their 'isA' set\n    for (let i = 0; i < keys.length; i++) {\n      if (tags[keys[i]].isA.indexOf(k) !== -1) {\n        tag.lineage.push(keys[i])\n      }\n    }\n  })\n  return tags\n}\nmodule.exports = inferLineage\n","const inferColor = require('./_color')\nconst inferIsA = require('./_isA')\nconst inferNotA = require('./_notA')\nconst lineage = require('./_lineage')\n\nconst validate = function(tags) {\n  // cleanup format\n  Object.keys(tags).forEach(k => {\n    let tag = tags[k]\n    // ensure isA is an array\n    tag.isA = tag.isA || []\n    if (typeof tag.isA === 'string') {\n      tag.isA = [tag.isA]\n    }\n    // ensure notA is an array\n    tag.notA = tag.notA || []\n    if (typeof tag.notA === 'string') {\n      tag.notA = [tag.notA]\n    }\n  })\n  return tags\n}\n\n// build-out the tag-graph structure\nconst inferTags = function(tags) {\n  // validate data\n  tags = validate(tags)\n  // build its 'down tags'\n  tags = inferIsA(tags)\n  // infer the conflicts\n  tags = inferNotA(tags)\n  // debug tag color\n  tags = inferColor(tags)\n  // find incoming links\n  tags = lineage(tags)\n  return tags\n}\nmodule.exports = inferTags\n","const nouns = require('./tags/nouns')\nconst verbs = require('./tags/verbs')\nconst values = require('./tags/values')\nconst misc = require('./tags/misc')\nconst inferTags = require('./inference/index')\n\n//extend tagset with new tags\nconst addIn = function(obj, tags) {\n  Object.keys(obj).forEach(k => {\n    tags[k] = obj[k]\n  })\n}\n\nconst build = () => {\n  let tags = {}\n  addIn(nouns, tags)\n  addIn(verbs, tags)\n  addIn(values, tags)\n  addIn(misc, tags)\n  // do the graph-stuff\n  tags = inferTags(tags)\n  return tags\n}\nmodule.exports = build()\n","\"use strict\";const BASE=36,seq=\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\",cache=seq.split(\"\").reduce(function(n,o,e){return n[o]=e,n},{}),toAlphaCode=function(n){if(void 0!==seq[n])return seq[n];let o=1,e=36,t=\"\";for(;n>=e;n-=e,o++,e*=36);for(;o--;){const o=n%36;t=String.fromCharCode((o<10?48:55)+o)+t,n=(n-o)/36}return t},fromAlphaCode=function(n){if(void 0!==cache[n])return cache[n];let o=0,e=1,t=36,r=1;for(;e<n.length;o+=t,e++,t*=36);for(let e=n.length-1;e>=0;e--,r*=36){let t=n.charCodeAt(e)-48;t>10&&(t-=7),o+=t*r}return o};var encoding={toAlphaCode:toAlphaCode,fromAlphaCode:fromAlphaCode},symbols=function(n){const o=new RegExp(\"([0-9A-Z]+):([0-9A-Z]+)\");for(let e=0;e<n.nodes.length;e++){const t=o.exec(n.nodes[e]);if(!t){n.symCount=e;break}n.syms[encoding.fromAlphaCode(t[1])]=encoding.fromAlphaCode(t[2])}n.nodes=n.nodes.slice(n.symCount,n.nodes.length)};const indexFromRef=function(n,o,e){const t=encoding.fromAlphaCode(o);return t<n.symCount?n.syms[t]:e+t+1-n.symCount},toArray=function(n){const o=[],e=(t,r)=>{let s=n.nodes[t];\"!\"===s[0]&&(o.push(r),s=s.slice(1));const c=s.split(/([A-Z0-9,]+)/g);for(let s=0;s<c.length;s+=2){const u=c[s],i=c[s+1];if(!u)continue;const l=r+u;if(\",\"===i||void 0===i){o.push(l);continue}const f=indexFromRef(n,i,t);e(f,l)}};return e(0,\"\"),o},unpack=function(n){const o={nodes:n.split(\";\"),syms:[],symCount:0};return n.match(\":\")&&symbols(o),toArray(o)};var unpack_1=unpack,unpack_1$1=function(n){const o=n.split(\"|\").reduce((n,o)=>{const e=o.split(\"¦\");return n[e[0]]=e[1],n},{}),e={};return Object.keys(o).forEach(function(n){const t=unpack_1(o[n]);\"true\"===n&&(n=!0);for(let o=0;o<t.length;o++){const r=t[o];!0===e.hasOwnProperty(r)?!1===Array.isArray(e[r])?e[r]=[e[r],n]:e[r].push(n):e[r]=n}}),e};module.exports=unpack_1$1;\n","//safely add it to the lexicon\nconst addWord = function(word, tag, lex) {\n  if (lex[word] !== undefined) {\n    if (typeof lex[word] === 'string') {\n      lex[word] = [lex[word]]\n    }\n    lex[word].push(tag)\n  } else {\n    lex[word] = tag\n  }\n}\n\n// blast-out more forms for some given words\nconst addMore = function(word, tag, world) {\n  let lexicon = world.lexicon\n  let transform = world.transforms\n\n  // cache multi-words\n  let words = word.split(' ')\n  if (words.length > 1) {\n    //cache the beginning word\n    world.hasCompound[words[0]] = true\n  }\n  // inflect our nouns\n  if (tag === 'Singular') {\n    let plural = transform.toPlural(word, world)\n    lexicon[plural] = lexicon[plural] || 'Plural' // only if it's safe\n  }\n  //conjugate our verbs\n  if (tag === 'Infinitive') {\n    let conj = transform.conjugate(word)\n    let tags = Object.keys(conj)\n    for (let i = 0; i < tags.length; i++) {\n      let w = conj[tags[i]]\n      lexicon[w] = lexicon[w] || tags[i] // only if it's safe\n    }\n  }\n  //derive more adjective forms\n  if (tag === 'Comparable') {\n    let conj = transform.adjectives(word)\n    let tags = Object.keys(conj)\n    for (let i = 0; i < tags.length; i++) {\n      let w = conj[tags[i]]\n      lexicon[w] = lexicon[w] || tags[i] // only if it's safe\n    }\n  }\n  //conjugate phrasal-verbs\n  if (tag === 'PhrasalVerb') {\n    //add original form\n    addWord(word, 'Infinitive', lexicon)\n    //conjugate first word\n    let conj = transform.conjugate(words[0])\n    let tags = Object.keys(conj)\n    for (let i = 0; i < tags.length; i++) {\n      //add it to our cache\n      world.hasCompound[conj[tags[i]]] = true\n      //first + last words\n      let w = conj[tags[i]] + ' ' + words[1]\n      addWord(w, tags[i], lexicon)\n      addWord(w, 'PhrasalVerb', lexicon)\n    }\n  }\n  // inflect our demonyms - 'germans'\n  if (tag === 'Demonym') {\n    let plural = transform.toPlural(word, world)\n    lexicon[plural] = lexicon[plural] || ['Demonym', 'Plural'] // only if it's safe\n  }\n}\n\n// throw a bunch of words in our lexicon\n// const doWord = function(words, tag, world) {\n//   let lexicon = world.lexicon\n//   for (let i = 0; i < words.length; i++) {\n//     addWord(words[i], tag, lexicon)\n//     // do some fancier stuff\n//     addMore(words[i], tag, world)\n//   }\n// }\nmodule.exports = {\n  addWord: addWord,\n  addMore: addMore,\n}\n","// add words from plurals and conjugations data\nconst addIrregulars = function(world) {\n  //add irregular plural nouns\n  let nouns = world.irregulars.nouns\n  let words = Object.keys(nouns)\n  for (let i = 0; i < words.length; i++) {\n    const w = words[i]\n    world.lexicon[w] = 'Singular'\n    world.lexicon[nouns[w]] = 'Plural'\n  }\n\n  // add irregular verb conjugations\n  let verbs = world.irregulars.verbs\n  let keys = Object.keys(verbs)\n  for (let i = 0; i < keys.length; i++) {\n    const inf = keys[i]\n    //add only if it it's safe...\n    world.lexicon[inf] = world.lexicon[inf] || 'Infinitive'\n    let forms = world.transforms.conjugate(inf)\n    forms = Object.assign(forms, verbs[inf])\n    //add the others\n    Object.keys(forms).forEach(tag => {\n      world.lexicon[forms[tag]] = world.lexicon[forms[tag]] || tag\n    })\n  }\n}\nmodule.exports = addIrregulars\n","//words that can't be compressed, for whatever reason\nmodule.exports = {\n  // numbers\n  '20th century fox': 'Organization',\n  // '3m': 'Organization',\n  '7 eleven': 'Organization',\n  '7-eleven': 'Organization',\n  g8: 'Organization',\n  'motel 6': 'Organization',\n  vh1: 'Organization',\n  q1: 'Date',\n  q2: 'Date',\n  q3: 'Date',\n  q4: 'Date',\n}\n","//nouns with irregular plural/singular forms\n//used in noun.inflect, and also in the lexicon.\n\nmodule.exports = {\n  addendum: 'addenda',\n  alga: 'algae',\n  alumna: 'alumnae',\n  alumnus: 'alumni',\n  analysis: 'analyses',\n  antenna: 'antennae',\n  appendix: 'appendices',\n  avocado: 'avocados',\n  axis: 'axes',\n  bacillus: 'bacilli',\n  barracks: 'barracks',\n  beau: 'beaux',\n  bus: 'buses',\n  cactus: 'cacti',\n  chateau: 'chateaux',\n  child: 'children',\n  circus: 'circuses',\n  clothes: 'clothes',\n  corpus: 'corpora',\n  criterion: 'criteria',\n  curriculum: 'curricula',\n  database: 'databases',\n  deer: 'deer',\n  diagnosis: 'diagnoses',\n  echo: 'echoes',\n  embargo: 'embargoes',\n  epoch: 'epochs',\n  foot: 'feet',\n  formula: 'formulae',\n  fungus: 'fungi',\n  genus: 'genera',\n  goose: 'geese',\n  halo: 'halos',\n  hippopotamus: 'hippopotami',\n  index: 'indices',\n  larva: 'larvae',\n  leaf: 'leaves',\n  libretto: 'libretti',\n  loaf: 'loaves',\n  man: 'men',\n  matrix: 'matrices',\n  memorandum: 'memoranda',\n  modulus: 'moduli',\n  mosquito: 'mosquitoes',\n  mouse: 'mice',\n  move: 'moves',\n  nebula: 'nebulae',\n  nucleus: 'nuclei',\n  octopus: 'octopi',\n  opus: 'opera',\n  ovum: 'ova',\n  ox: 'oxen',\n  parenthesis: 'parentheses',\n  person: 'people',\n  phenomenon: 'phenomena',\n  prognosis: 'prognoses',\n  quiz: 'quizzes',\n  radius: 'radii',\n  referendum: 'referenda',\n  rodeo: 'rodeos',\n  sex: 'sexes',\n  shoe: 'shoes',\n  sombrero: 'sombreros',\n  stimulus: 'stimuli',\n  stomach: 'stomachs',\n  syllabus: 'syllabi',\n  synopsis: 'synopses',\n  tableau: 'tableaux',\n  thesis: 'theses',\n  thief: 'thieves',\n  tooth: 'teeth',\n  tornado: 'tornados',\n  tuxedo: 'tuxedos',\n  vertebra: 'vertebrae',\n  // virus: 'viri',\n  // zero: 'zeros',\n}\n","// a list of irregular verb conjugations\n// used in verbs().conjugate()\n// but also added to our lexicon\n\n//use shorter key-names\nconst mapping = {\n  g: 'Gerund',\n  prt: 'Participle',\n  perf: 'PerfectTense',\n  pst: 'PastTense',\n  fut: 'FuturePerfect',\n  pres: 'PresentTense',\n  pluperf: 'Pluperfect',\n  a: 'Actor',\n}\n\n// '_' in conjugations is the infinitive form\nlet conjugations = {\n  act: {\n    a: '_or',\n  },\n  age: {\n    g: 'ageing',\n    pst: 'aged',\n    pres: 'ages',\n  },\n  aim: {\n    a: '_er',\n    g: '_ing',\n    pst: '_ed',\n  },\n  arise: {\n    prt: '_n',\n    pst: 'arose',\n  },\n  babysit: {\n    a: '_ter',\n    pst: 'babysat',\n  },\n  ban: {\n    a: '',\n    g: '_ning',\n    pst: '_ned',\n  },\n  be: {\n    a: '',\n    g: 'am',\n    prt: 'been',\n    pst: 'was',\n    pres: 'is',\n  },\n  beat: {\n    a: '_er',\n    g: '_ing',\n    prt: '_en',\n  },\n  become: {\n    prt: '_',\n  },\n  begin: {\n    g: '_ning',\n    prt: 'begun',\n    pst: 'began',\n  },\n  being: {\n    g: 'are',\n    pst: 'were',\n    pres: 'are',\n  },\n  bend: {\n    prt: 'bent',\n  },\n  bet: {\n    a: '_ter',\n    prt: '_',\n  },\n  bind: {\n    pst: 'bound',\n  },\n  bite: {\n    g: 'biting',\n    prt: 'bitten',\n    pst: 'bit',\n  },\n  bleed: {\n    prt: 'bled',\n    pst: 'bled',\n  },\n  blow: {\n    prt: '_n',\n    pst: 'blew',\n  },\n  boil: {\n    a: '_er',\n  },\n  brake: {\n    prt: 'broken',\n  },\n  break: {\n    pst: 'broke',\n  },\n  breed: {\n    pst: 'bred',\n  },\n  bring: {\n    prt: 'brought',\n    pst: 'brought',\n  },\n  broadcast: {\n    pst: '_',\n  },\n  budget: {\n    pst: '_ed',\n  },\n  build: {\n    prt: 'built',\n    pst: 'built',\n  },\n  burn: {\n    prt: '_ed',\n  },\n  burst: {\n    prt: '_',\n  },\n  buy: {\n    prt: 'bought',\n    pst: 'bought',\n  },\n  can: {\n    a: '',\n    fut: '_',\n    g: '',\n    pst: 'could',\n    perf: 'could',\n    pluperf: 'could',\n    pres: '_',\n  },\n  catch: {\n    pst: 'caught',\n  },\n  choose: {\n    g: 'choosing',\n    prt: 'chosen',\n    pst: 'chose',\n  },\n  cling: {\n    prt: 'clung',\n  },\n  come: {\n    prt: '_',\n    pst: 'came',\n  },\n  compete: {\n    a: 'competitor',\n    g: 'competing',\n    pst: '_d',\n  },\n  cost: {\n    pst: '_',\n  },\n  creep: {\n    prt: 'crept',\n  },\n  cut: {\n    prt: '_',\n  },\n  deal: {\n    prt: '_t',\n    pst: '_t',\n  },\n  develop: {\n    a: '_er',\n    g: '_ing',\n    pst: '_ed',\n  },\n  die: {\n    g: 'dying',\n    pst: '_d',\n  },\n  dig: {\n    g: '_ging',\n    prt: 'dug',\n    pst: 'dug',\n  },\n  dive: {\n    prt: '_d',\n  },\n  do: {\n    pst: 'did',\n    pres: '_es',\n  },\n  draw: {\n    prt: '_n',\n    pst: 'drew',\n  },\n  dream: {\n    prt: '_t',\n  },\n  drink: {\n    prt: 'drunk',\n    pst: 'drank',\n  },\n  drive: {\n    g: 'driving',\n    prt: '_n',\n    pst: 'drove',\n  },\n  drop: {\n    g: '_ping',\n    pst: '_ped',\n  },\n  eat: {\n    a: '_er',\n    g: '_ing',\n    prt: '_en',\n    pst: 'ate',\n  },\n  edit: {\n    g: '_ing',\n  },\n  egg: {\n    pst: '_ed',\n  },\n  fall: {\n    prt: '_en',\n    pst: 'fell',\n  },\n  feed: {\n    prt: 'fed',\n    pst: 'fed',\n  },\n  feel: {\n    a: '_er',\n    pst: 'felt',\n  },\n  fight: {\n    prt: 'fought',\n    pst: 'fought',\n  },\n  find: {\n    pst: 'found',\n  },\n  flee: {\n    g: '_ing',\n    prt: 'fled',\n  },\n  fling: {\n    prt: 'flung',\n  },\n  fly: {\n    prt: 'flown',\n    pst: 'flew',\n  },\n  forbid: {\n    pst: 'forbade',\n  },\n  forget: {\n    g: '_ing',\n    prt: 'forgotten',\n    pst: 'forgot',\n  },\n  forgive: {\n    g: 'forgiving',\n    prt: '_n',\n    pst: 'forgave',\n  },\n  free: {\n    a: '',\n    g: '_ing',\n  },\n  freeze: {\n    g: 'freezing',\n    prt: 'frozen',\n    pst: 'froze',\n  },\n  get: {\n    pst: 'got',\n    prt: 'gotten',\n  },\n  give: {\n    g: 'giving',\n    prt: '_n',\n    pst: 'gave',\n  },\n  go: {\n    prt: '_ne',\n    pst: 'went',\n    pres: 'goes',\n  },\n  grow: {\n    prt: '_n',\n  },\n  hang: {\n    prt: 'hung',\n    pst: 'hung',\n  },\n  have: {\n    g: 'having',\n    prt: 'had',\n    pst: 'had',\n    pres: 'has',\n  },\n  hear: {\n    prt: '_d',\n    pst: '_d',\n  },\n  hide: {\n    prt: 'hidden',\n    pst: 'hid',\n  },\n  hit: {\n    prt: '_',\n  },\n  hold: {\n    prt: 'held',\n    pst: 'held',\n  },\n  hurt: {\n    prt: '_',\n    pst: '_',\n  },\n  ice: {\n    g: 'icing',\n    pst: '_d',\n  },\n  imply: {\n    pst: 'implied',\n    pres: 'implies',\n  },\n  is: {\n    a: '',\n    g: 'being',\n    pst: 'was',\n    pres: '_',\n  },\n  keep: {\n    prt: 'kept',\n  },\n  kneel: {\n    prt: 'knelt',\n  },\n  know: {\n    prt: '_n',\n  },\n  lay: {\n    prt: 'laid',\n    pst: 'laid',\n  },\n  lead: {\n    prt: 'led',\n    pst: 'led',\n  },\n  leap: {\n    prt: '_t',\n  },\n  leave: {\n    prt: 'left',\n    pst: 'left',\n  },\n  lend: {\n    prt: 'lent',\n  },\n  lie: {\n    g: 'lying',\n    pst: 'lay',\n  },\n  light: {\n    prt: 'lit',\n    pst: 'lit',\n  },\n  log: {\n    g: '_ging',\n    pst: '_ged',\n  },\n  loose: {\n    prt: 'lost',\n  },\n  lose: {\n    g: 'losing',\n    pst: 'lost',\n  },\n  make: {\n    prt: 'made',\n    pst: 'made',\n  },\n  mean: {\n    prt: '_t',\n    pst: '_t',\n  },\n  meet: {\n    a: '_er',\n    g: '_ing',\n    prt: 'met',\n    pst: 'met',\n  },\n  miss: {\n    pres: '_',\n  },\n  pay: {\n    prt: 'paid',\n    pst: 'paid',\n  },\n  prove: {\n    prt: '_n',\n  },\n  puke: {\n    g: 'puking',\n  },\n  put: {\n    prt: '_',\n  },\n  quit: {\n    prt: '_',\n  },\n  read: {\n    prt: '_',\n    pst: '_',\n  },\n  ride: {\n    prt: 'ridden',\n  },\n  ring: {\n    prt: 'rung',\n    pst: 'rang',\n  },\n  rise: {\n    fut: 'will have _n',\n    g: 'rising',\n    prt: '_n',\n    pst: 'rose',\n    pluperf: 'had _n',\n  },\n  rub: {\n    g: '_bing',\n    pst: '_bed',\n  },\n  run: {\n    g: '_ning',\n    prt: '_',\n    pst: 'ran',\n  },\n  say: {\n    prt: 'said',\n    pst: 'said',\n    pres: '_s',\n  },\n  seat: {\n    prt: 'sat',\n  },\n  see: {\n    g: '_ing',\n    prt: '_n',\n    pst: 'saw',\n  },\n  seek: {\n    prt: 'sought',\n  },\n  sell: {\n    prt: 'sold',\n    pst: 'sold',\n  },\n  send: {\n    prt: 'sent',\n  },\n  set: {\n    prt: '_',\n  },\n  sew: {\n    prt: '_n',\n  },\n  shake: {\n    prt: '_n',\n  },\n  shave: {\n    prt: '_d',\n  },\n  shed: {\n    g: '_ding',\n    pst: '_',\n    pres: '_s',\n  },\n  shine: {\n    prt: 'shone',\n    pst: 'shone',\n  },\n  shoot: {\n    prt: 'shot',\n    pst: 'shot',\n  },\n  show: {\n    pst: '_ed',\n  },\n  shut: {\n    prt: '_',\n  },\n  sing: {\n    prt: 'sung',\n    pst: 'sang',\n  },\n  sink: {\n    pst: 'sank',\n    pluperf: 'had sunk',\n  },\n  sit: {\n    pst: 'sat',\n  },\n  ski: {\n    pst: '_ied',\n  },\n  slay: {\n    prt: 'slain',\n  },\n  sleep: {\n    prt: 'slept',\n  },\n  slide: {\n    prt: 'slid',\n    pst: 'slid',\n  },\n  smash: {\n    pres: '_es',\n  },\n  sneak: {\n    prt: 'snuck',\n  },\n  speak: {\n    fut: 'will have spoken',\n    prt: 'spoken',\n    pst: 'spoke',\n    perf: 'have spoken',\n    pluperf: 'had spoken',\n  },\n  speed: {\n    prt: 'sped',\n  },\n  spend: {\n    prt: 'spent',\n  },\n  spill: {\n    prt: '_ed',\n    pst: 'spilt',\n  },\n  spin: {\n    g: '_ning',\n    prt: 'spun',\n    pst: 'spun',\n  },\n  spit: {\n    prt: 'spat',\n  },\n  split: {\n    prt: '_',\n  },\n  spread: {\n    pst: '_',\n  },\n  spring: {\n    prt: 'sprung',\n  },\n  stand: {\n    pst: 'stood',\n  },\n  steal: {\n    a: '_er',\n    pst: 'stole',\n  },\n  stick: {\n    pst: 'stuck',\n  },\n  sting: {\n    pst: 'stung',\n  },\n  stink: {\n    prt: 'stunk',\n    pst: 'stunk',\n  },\n  stream: {\n    a: '_er',\n  },\n  strew: {\n    prt: '_n',\n  },\n  strike: {\n    g: 'striking',\n    pst: 'struck',\n  },\n  suit: {\n    a: '_er',\n    g: '_ing',\n    pst: '_ed',\n  },\n  sware: {\n    prt: 'sworn',\n  },\n  swear: {\n    pst: 'swore',\n  },\n  sweep: {\n    prt: 'swept',\n  },\n  swim: {\n    g: '_ming',\n    pst: 'swam',\n  },\n  swing: {\n    pst: 'swung',\n  },\n  take: {\n    fut: 'will have _n',\n    pst: 'took',\n    perf: 'have _n',\n    pluperf: 'had _n',\n  },\n  teach: {\n    pst: 'taught',\n    pres: '_es',\n  },\n  tear: {\n    pst: 'tore',\n  },\n  tell: {\n    pst: 'told',\n  },\n  think: {\n    pst: 'thought',\n  },\n  thrive: {\n    prt: '_d',\n  },\n  tie: {\n    g: 'tying',\n    pst: '_d',\n  },\n  undergo: {\n    prt: '_ne',\n  },\n  understand: {\n    pst: 'understood',\n  },\n  upset: {\n    prt: '_',\n  },\n  wait: {\n    a: '_er',\n    g: '_ing',\n    pst: '_ed',\n  },\n  wake: {\n    pst: 'woke',\n  },\n  wear: {\n    pst: 'wore',\n  },\n  weave: {\n    prt: 'woven',\n  },\n  weep: {\n    prt: 'wept',\n  },\n  win: {\n    g: '_ning',\n    pst: 'won',\n  },\n  wind: {\n    prt: 'wound',\n  },\n  withdraw: {\n    pst: 'withdrew',\n  },\n  wring: {\n    prt: 'wrung',\n  },\n  write: {\n    g: 'writing',\n    prt: 'written',\n    pst: 'wrote',\n  },\n}\n\n//uncompress our ad-hoc compression scheme\nlet keys = Object.keys(conjugations)\nfor (let i = 0; i < keys.length; i++) {\n  const inf = keys[i]\n  let final = {}\n  Object.keys(conjugations[inf]).forEach(key => {\n    let str = conjugations[inf][key]\n    //swap-in infinitives for '_'\n    str = str.replace('_', inf)\n\n    let full = mapping[key]\n    final[full] = str\n  })\n  //over-write original\n  conjugations[inf] = final\n}\n\nmodule.exports = conjugations\n","const endsWith = {\n  b: [\n    {\n      reg: /([^aeiou][aeiou])b$/i,\n      repl: {\n        pr: '$1bs',\n        pa: '$1bbed',\n        gr: '$1bbing',\n      },\n    },\n  ],\n  d: [\n    {\n      reg: /(end)$/i,\n      repl: {\n        pr: '$1s',\n        pa: 'ent',\n        gr: '$1ing',\n        ar: '$1er',\n      },\n    },\n    {\n      reg: /(eed)$/i,\n      repl: {\n        pr: '$1s',\n        pa: '$1ed',\n        gr: '$1ing',\n        ar: '$1er',\n      },\n    },\n    {\n      reg: /(ed)$/i,\n      repl: {\n        pr: '$1s',\n        pa: '$1ded',\n        ar: '$1der',\n        gr: '$1ding',\n      },\n    },\n    {\n      reg: /([^aeiou][ou])d$/i,\n      repl: {\n        pr: '$1ds',\n        pa: '$1dded',\n        gr: '$1dding',\n      },\n    },\n  ],\n  e: [\n    {\n      reg: /(eave)$/i,\n      repl: {\n        pr: '$1s',\n        pa: '$1d',\n        gr: 'eaving',\n        ar: '$1r',\n      },\n    },\n    {\n      reg: /(ide)$/i,\n      repl: {\n        pr: '$1s',\n        pa: 'ode',\n        gr: 'iding',\n        ar: 'ider',\n      },\n    },\n    {\n      reg: /(ake)$/i,\n      repl: {\n        pr: '$1s',\n        pa: 'ook',\n        gr: 'aking',\n        ar: '$1r',\n      },\n    },\n    {\n      reg: /(a[tg]|i[zn]|ur|nc|gl|is)e$/i,\n      repl: {\n        pr: '$1es',\n        pa: '$1ed',\n        gr: '$1ing',\n        prt: '$1en',\n      },\n    },\n    {\n      reg: /([bd]l)e$/i,\n      repl: {\n        pr: '$1es',\n        pa: '$1ed',\n        gr: '$1ing',\n      },\n    },\n    {\n      reg: /(om)e$/i,\n      repl: {\n        pr: '$1es',\n        pa: 'ame',\n        gr: '$1ing',\n      },\n    },\n  ],\n\n  g: [\n    {\n      reg: /([^aeiou][ou])g$/i,\n      repl: {\n        pr: '$1gs',\n        pa: '$1gged',\n        gr: '$1gging',\n      },\n    },\n  ],\n  h: [\n    {\n      reg: /(..)([cs]h)$/i,\n      repl: {\n        pr: '$1$2es',\n        pa: '$1$2ed',\n        gr: '$1$2ing',\n      },\n    },\n  ],\n  k: [\n    {\n      reg: /(ink)$/i,\n      repl: {\n        pr: '$1s',\n        pa: 'unk',\n        gr: '$1ing',\n        ar: '$1er',\n      },\n    },\n  ],\n\n  m: [\n    {\n      reg: /([^aeiou][aeiou])m$/i,\n      repl: {\n        pr: '$1ms',\n        pa: '$1mmed',\n        gr: '$1mming',\n      },\n    },\n  ],\n\n  n: [\n    {\n      reg: /(en)$/i,\n      repl: {\n        pr: '$1s',\n        pa: '$1ed',\n        gr: '$1ing',\n      },\n    },\n  ],\n  p: [\n    {\n      reg: /(e)(ep)$/i,\n      repl: {\n        pr: '$1$2s',\n        pa: '$1pt',\n        gr: '$1$2ing',\n        ar: '$1$2er',\n      },\n    },\n    {\n      reg: /([^aeiou][aeiou])p$/i,\n      repl: {\n        pr: '$1ps',\n        pa: '$1pped',\n        gr: '$1pping',\n      },\n    },\n    {\n      reg: /([aeiu])p$/i,\n      repl: {\n        pr: '$1ps',\n        pa: '$1p',\n        gr: '$1pping',\n      },\n    },\n  ],\n\n  r: [\n    {\n      reg: /([td]er)$/i,\n      repl: {\n        pr: '$1s',\n        pa: '$1ed',\n        gr: '$1ing',\n      },\n    },\n    {\n      reg: /(er)$/i,\n      repl: {\n        pr: '$1s',\n        pa: '$1ed',\n        gr: '$1ing',\n      },\n    },\n  ],\n  s: [\n    {\n      reg: /(ish|tch|ess)$/i,\n      repl: {\n        pr: '$1es',\n        pa: '$1ed',\n        gr: '$1ing',\n      },\n    },\n  ],\n\n  t: [\n    {\n      reg: /(ion|end|e[nc]t)$/i,\n      repl: {\n        pr: '$1s',\n        pa: '$1ed',\n        gr: '$1ing',\n      },\n    },\n    {\n      reg: /(.eat)$/i,\n      repl: {\n        pr: '$1s',\n        pa: '$1ed',\n        gr: '$1ing',\n      },\n    },\n    {\n      reg: /([aeiu])t$/i,\n      repl: {\n        pr: '$1ts',\n        pa: '$1t',\n        gr: '$1tting',\n      },\n    },\n    {\n      reg: /([^aeiou][aeiou])t$/i,\n      repl: {\n        pr: '$1ts',\n        pa: '$1tted',\n        gr: '$1tting',\n      },\n    },\n  ],\n\n  w: [\n    {\n      reg: /(..)(ow)$/i,\n      repl: {\n        pr: '$1$2s',\n        pa: '$1ew',\n        gr: '$1$2ing',\n        prt: '$1$2n',\n      },\n    },\n  ],\n  y: [\n    {\n      reg: /([i|f|rr])y$/i,\n      repl: {\n        pr: '$1ies',\n        pa: '$1ied',\n        gr: '$1ying',\n      },\n    },\n  ],\n\n  z: [\n    {\n      reg: /([aeiou]zz)$/i,\n      repl: {\n        pr: '$1es',\n        pa: '$1ed',\n        gr: '$1ing',\n      },\n    },\n  ],\n}\n\nmodule.exports = endsWith\n","const suffixes = require('./suffixes')\nconst posMap = {\n  pr: 'PresentTense',\n  pa: 'PastTense',\n  gr: 'Gerund',\n  prt: 'Participle',\n  ar: 'Actor',\n}\n\nconst doTransform = function(str, obj) {\n  let found = {}\n  let keys = Object.keys(obj.repl)\n  for (let i = 0; i < keys.length; i += 1) {\n    let pos = keys[i]\n    found[posMap[pos]] = str.replace(obj.reg, obj.repl[pos])\n  }\n  return found\n}\n\n//look at the end of the word for clues\nconst checkSuffix = function(str = '') {\n  let c = str[str.length - 1]\n  if (suffixes.hasOwnProperty(c) === true) {\n    for (let r = 0; r < suffixes[c].length; r += 1) {\n      const reg = suffixes[c][r].reg\n      if (reg.test(str) === true) {\n        return doTransform(str, suffixes[c][r])\n      }\n    }\n  }\n  return {}\n}\nmodule.exports = checkSuffix\n","//non-specifc, 'hail-mary' transforms from infinitive, into other forms\nconst hasY = /[bcdfghjklmnpqrstvwxz]y$/\n\nconst generic = {\n  Gerund: inf => {\n    if (inf.charAt(inf.length - 1) === 'e') {\n      return inf.replace(/e$/, 'ing')\n    }\n    return inf + 'ing'\n  },\n\n  PresentTense: inf => {\n    if (inf.charAt(inf.length - 1) === 's') {\n      return inf + 'es'\n    }\n    if (hasY.test(inf) === true) {\n      return inf.slice(0, -1) + 'ies'\n    }\n    return inf + 's'\n  },\n\n  PastTense: inf => {\n    if (inf.charAt(inf.length - 1) === 'e') {\n      return inf + 'd'\n    }\n    if (inf.substr(-2) === 'ed') {\n      return inf\n    }\n    if (hasY.test(inf) === true) {\n      return inf.slice(0, -1) + 'ied'\n    }\n    return inf + 'ed'\n  },\n}\n\nmodule.exports = generic\n","const checkSuffix = require('./01-suffixes')\nconst genericFill = require('./02-generic')\n\n//we run this on every verb in the lexicon, so please keep it fast\n//we assume the input word is a proper infinitive\nconst conjugate = function(str = '', world) {\n  let found = {}\n  // 1. look at irregulars\n  //the lexicon doesn't pass this in\n  if (world && world.irregulars) {\n    if (world.irregulars.verbs.hasOwnProperty(str) === true) {\n      found = Object.assign({}, world.irregulars.verbs[str])\n    }\n  }\n  //2. rule-based regex\n  found = Object.assign({}, checkSuffix(str), found)\n\n  //3. generic transformations\n  //'buzzing'\n  if (found.Gerund === undefined) {\n    found.Gerund = genericFill.Gerund(str)\n  }\n  //'buzzed'\n  if (found.PastTense === undefined) {\n    found.PastTense = genericFill.PastTense(str)\n  }\n  //'buzzes'\n  if (found.PresentTense === undefined) {\n    found.PresentTense = genericFill.PresentTense(str)\n  }\n  return found\n}\nmodule.exports = conjugate\n","//turn 'quick' into 'quickest'\nconst do_rules = [/ght$/, /nge$/, /ough$/, /ain$/, /uel$/, /[au]ll$/, /ow$/, /oud$/, /...p$/]\nconst dont_rules = [/ary$/]\n\nconst irregulars = {\n  nice: 'nicest',\n  late: 'latest',\n  hard: 'hardest',\n  inner: 'innermost',\n  outer: 'outermost',\n  far: 'furthest',\n  worse: 'worst',\n  bad: 'worst',\n  good: 'best',\n  big: 'biggest',\n  large: 'largest',\n}\n\nconst transforms = [\n  {\n    reg: /y$/i,\n    repl: 'iest',\n  },\n  {\n    reg: /([aeiou])t$/i,\n    repl: '$1ttest',\n  },\n  {\n    reg: /([aeou])de$/i,\n    repl: '$1dest',\n  },\n  {\n    reg: /nge$/i,\n    repl: 'ngest',\n  },\n  {\n    reg: /([aeiou])te$/i,\n    repl: '$1test',\n  },\n]\n\nconst to_superlative = function(str) {\n  //irregulars\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str]\n  }\n  //known transforms\n  for (let i = 0; i < transforms.length; i++) {\n    if (transforms[i].reg.test(str)) {\n      return str.replace(transforms[i].reg, transforms[i].repl)\n    }\n  }\n  //dont-rules\n  for (let i = 0; i < dont_rules.length; i++) {\n    if (dont_rules[i].test(str) === true) {\n      return null\n    }\n  }\n  //do-rules\n  for (let i = 0; i < do_rules.length; i++) {\n    if (do_rules[i].test(str) === true) {\n      if (str.charAt(str.length - 1) === 'e') {\n        return str + 'st'\n      }\n      return str + 'est'\n    }\n  }\n  return str + 'est'\n}\n\nmodule.exports = to_superlative\n","//turn 'quick' into 'quickly'\nconst do_rules = [/ght$/, /nge$/, /ough$/, /ain$/, /uel$/, /[au]ll$/, /ow$/, /old$/, /oud$/, /e[ae]p$/]\nconst dont_rules = [/ary$/, /ous$/]\n\nconst irregulars = {\n  grey: 'greyer',\n  gray: 'grayer',\n  green: 'greener',\n  yellow: 'yellower',\n  red: 'redder',\n  good: 'better',\n  well: 'better',\n  bad: 'worse',\n  sad: 'sadder',\n  big: 'bigger',\n}\n\nconst transforms = [\n  {\n    reg: /y$/i,\n    repl: 'ier',\n  },\n  {\n    reg: /([aeiou])t$/i,\n    repl: '$1tter',\n  },\n  {\n    reg: /([aeou])de$/i,\n    repl: '$1der',\n  },\n  {\n    reg: /nge$/i,\n    repl: 'nger',\n  },\n]\n\nconst to_comparative = function(str) {\n  //known-irregulars\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str]\n  }\n  //known-transforms\n  for (let i = 0; i < transforms.length; i++) {\n    if (transforms[i].reg.test(str) === true) {\n      return str.replace(transforms[i].reg, transforms[i].repl)\n    }\n  }\n  //dont-patterns\n  for (let i = 0; i < dont_rules.length; i++) {\n    if (dont_rules[i].test(str) === true) {\n      return null\n    }\n  }\n  //do-patterns\n  for (let i = 0; i < do_rules.length; i++) {\n    if (do_rules[i].test(str) === true) {\n      return str + 'er'\n    }\n  }\n  //easy-one\n  if (/e$/.test(str) === true) {\n    return str + 'r'\n  }\n  return str + 'er'\n}\n\nmodule.exports = to_comparative\n","const fns = {\n  toSuperlative: require('./toSuperlative'),\n  toComparative: require('./toComparative'),\n}\n\n/** conjugate an adjective into other forms */\nconst conjugate = function(w) {\n  let res = {}\n  // 'greatest'\n  let sup = fns.toSuperlative(w)\n  if (sup) {\n    res.Superlative = sup\n  }\n  // 'greater'\n  let comp = fns.toComparative(w)\n  if (comp) {\n    res.Comparative = comp\n  }\n  return res\n}\nmodule.exports = conjugate\n","/** patterns for turning 'bus' to 'buses'*/\nconst suffixes = {\n  a: [[/(antenn|formul|nebul|vertebr|vit)a$/i, '$1ae'], [/([ti])a$/i, '$1a']],\n\n  e: [\n    [/(kn|l|w)ife$/i, '$1ives'],\n    [/(hive)$/i, '$1s'],\n    [/([m|l])ouse$/i, '$1ice'],\n    [/([m|l])ice$/i, '$1ice'],\n  ],\n\n  f: [\n    [/^(dwar|handkerchie|hoo|scar|whar)f$/i, '$1ves'],\n    [/^((?:ca|e|ha|(?:our|them|your)?se|she|wo)l|lea|loa|shea|thie)f$/i, '$1ves'],\n  ],\n\n  i: [[/(octop|vir)i$/i, '$1i']],\n\n  m: [[/([ti])um$/i, '$1a']],\n\n  n: [[/^(oxen)$/i, '$1']],\n\n  o: [[/(al|ad|at|er|et|ed|ad)o$/i, '$1oes']],\n\n  s: [\n    [/(ax|test)is$/i, '$1es'],\n    [/(alias|status)$/i, '$1es'],\n    [/sis$/i, 'ses'],\n    [/(bu)s$/i, '$1ses'],\n    [/(sis)$/i, 'ses'],\n    [/^(?!talis|.*hu)(.*)man$/i, '$1men'],\n    [/(octop|vir|radi|nucle|fung|cact|stimul)us$/i, '$1i'],\n  ],\n\n  x: [[/(matr|vert|ind|cort)(ix|ex)$/i, '$1ices'], [/^(ox)$/i, '$1en']],\n\n  y: [[/([^aeiouy]|qu)y$/i, '$1ies']],\n\n  z: [[/(quiz)$/i, '$1zes']],\n}\n\nmodule.exports = suffixes\n","const rules = require('./_rules')\nconst addE = /(x|ch|sh|s|z)$/\n\nconst trySuffix = function(str) {\n  let c = str[str.length - 1]\n  if (rules.hasOwnProperty(c) === true) {\n    for (let i = 0; i < rules[c].length; i += 1) {\n      let reg = rules[c][i][0]\n      if (reg.test(str) === true) {\n        return str.replace(reg, rules[c][i][1])\n      }\n    }\n  }\n  return null\n}\n\n/** Turn a singular noun into a plural\n * assume the given string is singular\n */\nconst pluralize = function(str = '', world) {\n  let irregulars = world.irregulars.nouns\n\n  // check irregulars list\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str]\n  }\n\n  //we have some rules to try-out\n  let plural = trySuffix(str)\n  if (plural !== null) {\n    return plural\n  }\n  //like 'church'\n  if (addE.test(str)) {\n    return str + 'es'\n  }\n  // ¯\\_(ツ)_/¯\n  return str + 's'\n}\nmodule.exports = pluralize\n","//patterns for turning 'dwarves' to 'dwarf'\nmodule.exports = [\n  [/([^v])ies$/i, '$1y'],\n  [/ises$/i, 'isis'],\n  [/(kn|[^o]l|w)ives$/i, '$1ife'],\n  [/^((?:ca|e|ha|(?:our|them|your)?se|she|wo)l|lea|loa|shea|thie)ves$/i, '$1f'],\n  [/^(dwar|handkerchie|hoo|scar|whar)ves$/i, '$1f'],\n  [/(antenn|formul|nebul|vertebr|vit)ae$/i, '$1a'],\n  [/(octop|vir|radi|nucle|fung|cact|stimul)(i)$/i, '$1us'],\n  [/(buffal|tomat|tornad)(oes)$/i, '$1o'],\n  // [/(analy|diagno|parenthe|progno|synop|the)ses$/i, '$1sis'],\n  [/(..[aeiou]s)es$/i, '$1'],\n  [/(vert|ind|cort)(ices)$/i, '$1ex'],\n  [/(matr|append)(ices)$/i, '$1ix'],\n  [/(x|ch|ss|sh|z|o)es$/i, '$1'],\n  [/men$/i, 'man'],\n  [/(n)ews$/i, '$1ews'],\n  [/([ti])a$/i, '$1um'],\n  [/([^aeiouy]|qu)ies$/i, '$1y'],\n  [/(s)eries$/i, '$1eries'],\n  [/(m)ovies$/i, '$1ovie'],\n  [/([m|l])ice$/i, '$1ouse'],\n  [/(cris|ax|test)es$/i, '$1is'],\n  [/(alias|status)es$/i, '$1'],\n  [/(ss)$/i, '$1'],\n  [/(ics)$/i, '$1'],\n  [/s$/i, ''],\n]\n","const rules = require('./_rules')\n\nconst invertObj = function(obj) {\n  return Object.keys(obj).reduce((h, k) => {\n    h[obj[k]] = k\n    return h\n  }, {})\n}\n\nconst toSingular = function(str, world) {\n  let irregulars = world.irregulars.nouns\n  let invert = invertObj(irregulars)\n\n  // check irregulars list\n  if (invert.hasOwnProperty(str)) {\n    return invert[str]\n  }\n\n  // go through our regexes\n  for (let i = 0; i < rules.length; i++) {\n    if (rules[i][0].test(str) === true) {\n      str = str.replace(rules[i][0], rules[i][1])\n      return str\n    }\n  }\n  return str\n}\nmodule.exports = toSingular\n","//rules for turning a verb into infinitive form\nlet rules = {\n  Participle: [\n    {\n      reg: /own$/i,\n      to: 'ow',\n    },\n    {\n      reg: /(.)un([g|k])$/i,\n      to: '$1in$2',\n    },\n  ],\n\n  Actor: [\n    {\n      reg: /(er)er$/i,\n      to: '$1',\n    },\n  ],\n\n  PresentTense: [\n    {\n      reg: /(..)(ies)$/i,\n      to: '$1y',\n    },\n    {\n      reg: /(tch|sh)es$/i,\n      to: '$1',\n    },\n    {\n      reg: /(ss|zz)es$/i,\n      to: '$1',\n    },\n    {\n      reg: /([tzlshicgrvdnkmu])es$/i,\n      to: '$1e',\n    },\n    {\n      reg: /(n[dtk]|c[kt]|[eo]n|i[nl]|er|a[ytrl])s$/i,\n      to: '$1',\n    },\n    {\n      reg: /(ow)s$/i,\n      to: '$1',\n    },\n    {\n      reg: /(op)s$/i,\n      to: '$1',\n    },\n    {\n      reg: /([eirs])ts$/i,\n      to: '$1t',\n    },\n    {\n      reg: /(ll)s$/i,\n      to: '$1',\n    },\n    {\n      reg: /(el)s$/i,\n      to: '$1',\n    },\n    {\n      reg: /(ip)es$/i,\n      to: '$1e',\n    },\n    {\n      reg: /ss$/i,\n      to: 'ss',\n    },\n    {\n      reg: /s$/i,\n      to: '',\n    },\n  ],\n\n  Gerund: [\n    {\n      reg: /pping$/i,\n      to: 'p',\n    },\n    {\n      reg: /lling$/i,\n      to: 'll',\n    },\n    {\n      reg: /tting$/i,\n      to: 't',\n    },\n    {\n      reg: /dding$/i,\n      to: 'd',\n    },\n    {\n      reg: /ssing$/i,\n      to: 'ss',\n    },\n    {\n      reg: /(..)gging$/i,\n      to: '$1g',\n    },\n    {\n      reg: /([^aeiou])ying$/i,\n      to: '$1y',\n    },\n    {\n      reg: /([^ae]i.)ing$/i,\n      to: '$1e',\n    },\n    {\n      reg: /(ea.)ing$/i,\n      to: '$1',\n    },\n    {\n      reg: /(u[rtcb]|[bdtpkg]l|n[cg]|a[gdkvtc]|[ua]s|[dr]g|yz|o[rlsp]|cre)ing$/i,\n      to: '$1e',\n    },\n    {\n      reg: /(ch|sh)ing$/i,\n      to: '$1',\n    },\n    {\n      reg: /(..)ing$/i,\n      to: '$1',\n    },\n  ],\n\n  PastTense: [\n    {\n      reg: /(ued)$/i,\n      to: 'ue',\n    },\n    {\n      reg: /a([^aeiouy])ed$/i,\n      to: 'a$1e',\n    },\n    {\n      reg: /([aeiou]zz)ed$/i,\n      to: '$1',\n    },\n    {\n      reg: /(e|i)lled$/i,\n      to: '$1ll',\n    },\n    {\n      reg: /(.)(sh|ch)ed$/i,\n      to: '$1$2',\n    },\n    {\n      reg: /(tl|gl)ed$/i,\n      to: '$1e',\n    },\n    {\n      reg: /(um?pt?)ed$/i,\n      to: '$1',\n    },\n    {\n      reg: /(ss)ed$/i,\n      to: '$1',\n    },\n    {\n      reg: /pped$/i,\n      to: 'p',\n    },\n    {\n      reg: /tted$/i,\n      to: 't',\n    },\n    {\n      reg: /(..)gged$/i,\n      to: '$1g',\n    },\n    {\n      reg: /(..)lked$/i,\n      to: '$1lk',\n    },\n    {\n      reg: /([^aeiouy][aeiou])ked$/i,\n      to: '$1ke',\n    },\n    {\n      reg: /(.[aeiou])led$/i,\n      to: '$1l',\n    },\n    {\n      reg: /(..)(h|ion|n[dt]|ai.|[cs]t|pp|all|ss|tt|int|ail|ld|en|oo.|er|k|pp|w|ou.|rt|ght|rm)ed$/i,\n      to: '$1$2',\n    },\n    {\n      reg: /(.ut)ed$/i,\n      to: '$1e',\n    },\n    {\n      reg: /(.pt)ed$/i,\n      to: '$1',\n    },\n    {\n      reg: /(us)ed$/i,\n      to: '$1e',\n    },\n    {\n      reg: /(..[^aeiouy])ed$/i,\n      to: '$1e',\n    },\n    {\n      reg: /(..)ied$/i,\n      to: '$1y',\n    },\n    {\n      reg: /(.o)ed$/i,\n      to: '$1o',\n    },\n    {\n      reg: /(..i)ed$/i,\n      to: '$1',\n    },\n    {\n      reg: /(.a[^aeiou])ed$/i,\n      to: '$1',\n    },\n    {\n      reg: /([rl])ew$/i,\n      to: '$1ow',\n    },\n    {\n      reg: /([pl])t$/i,\n      to: '$1t',\n    },\n  ],\n}\nmodule.exports = rules\n","let guessVerb = {\n  Gerund: ['ing'],\n  Actor: ['erer'],\n  Infinitive: [\n    'ate',\n    'ize',\n    'tion',\n    'rify',\n    'then',\n    'ress',\n    'ify',\n    'age',\n    'nce',\n    'ect',\n    'ise',\n    'ine',\n    'ish',\n    'ace',\n    'ash',\n    'ure',\n    'tch',\n    'end',\n    'ack',\n    'and',\n    'ute',\n    'ade',\n    'ock',\n    'ite',\n    'ase',\n    'ose',\n    'use',\n    'ive',\n    'int',\n    'nge',\n    'lay',\n    'est',\n    'ain',\n    'ant',\n    'ent',\n    'eed',\n    'er',\n    'le',\n    'own',\n    'unk',\n    'ung',\n    'en',\n  ],\n  PastTense: ['ed', 'lt', 'nt', 'pt', 'ew', 'ld'],\n  PresentTense: [\n    'rks',\n    'cks',\n    'nks',\n    'ngs',\n    'mps',\n    'tes',\n    'zes',\n    'ers',\n    'les',\n    'acks',\n    'ends',\n    'ands',\n    'ocks',\n    'lays',\n    'eads',\n    'lls',\n    'els',\n    'ils',\n    'ows',\n    'nds',\n    'ays',\n    'ams',\n    'ars',\n    'ops',\n    'ffs',\n    'als',\n    'urs',\n    'lds',\n    'ews',\n    'ips',\n    'es',\n    'ts',\n    'ns',\n  ],\n}\n//flip it into a lookup object\nguessVerb = Object.keys(guessVerb).reduce((h, k) => {\n  guessVerb[k].forEach(a => (h[a] = k))\n  return h\n}, {})\nmodule.exports = guessVerb\n","const rules = require('./_transform')\nconst guess = require('./_guess')\n\n/** it helps to know what we're conjugating from */\nconst guessTense = function(str) {\n  let three = str.substr(str.length - 3)\n  if (guess.hasOwnProperty(three) === true) {\n    return guess[three]\n  }\n  let two = str.substr(str.length - 2)\n  if (guess.hasOwnProperty(two) === true) {\n    return guess[two]\n  }\n  let one = str.substr(str.length - 1)\n  if (one === 's') {\n    return 'PresentTense'\n  }\n  return null\n}\n\nconst toInfinitive = function(str, world, tense) {\n  //1. look at known irregulars\n  if (world.lexicon.hasOwnProperty(str) === true) {\n    let irregs = world.irregulars.verbs\n    let keys = Object.keys(irregs)\n    for (let i = 0; i < keys.length; i++) {\n      let forms = Object.keys(irregs[keys[i]])\n      for (let o = 0; o < forms.length; o++) {\n        if (str === irregs[keys[i]][forms[o]]) {\n          return keys[i]\n        }\n      }\n    }\n  }\n\n  // give'r!\n  tense = tense || guessTense(str)\n  if (tense && rules[tense]) {\n    for (let i = 0; i < rules[tense].length; i++) {\n      const rule = rules[tense][i]\n      if (rule.reg.test(str) === true) {\n        return str.replace(rule.reg, rule.to)\n      }\n    }\n  }\n  return str\n}\nmodule.exports = toInfinitive\n","const lexData = require('./_data')\nconst defaultTags = require('./tags')\nconst unpack = require('efrt-unpack')\nconst addLex = require('./addWords')\nconst addIrregulars = require('./addIrregulars')\nconst inferTagSet = require('./tags/inference')\n\nlet misc = require('./data/misc')\n\n//these let users change inflection / verb conjugation\nconst irregulars = {\n  nouns: require('./data/plurals'),\n  verbs: require('./data/conjugations'),\n}\n\n//these behaviours are configurable & shared across some plugins\nconst transforms = {\n  conjugate: require('../transforms/conjugate'),\n  adjectives: require('../transforms/adjectives'),\n  toPlural: require('../transforms/toPlural'),\n  toSingular: require('../transforms/toSingular'),\n  toInfinitive: require('../transforms/toInfinitive'),\n}\n\nlet isVerbose = false\n\n/** all configurable linguistic data */\nclass World {\n  constructor() {\n    // quiet these properties from a console.log\n    Object.defineProperty(this, 'lexicon', {\n      enumerable: false,\n      value: misc,\n      writable: true,\n    })\n    Object.defineProperty(this, 'hasCompound', {\n      enumerable: false,\n      value: {},\n      writable: true,\n    })\n    Object.defineProperty(this, 'irregulars', {\n      enumerable: false,\n      value: irregulars,\n      writable: true,\n    })\n    Object.defineProperty(this, 'tags', {\n      enumerable: false,\n      value: Object.assign({}, defaultTags),\n      writable: true,\n    })\n    Object.defineProperty(this, 'transforms', {\n      enumerable: false,\n      value: transforms,\n    })\n\n    Object.defineProperty(this, 'taggers', {\n      enumerable: false,\n      value: [],\n    })\n    // add our compressed data to lexicon\n    this.unpackWords(lexData)\n    // add our irregulars to lexicon\n    this.addIrregulars()\n\n    // cache our abbreviations for our sentence-parser\n    Object.defineProperty(this, 'cache', {\n      enumerable: false,\n      value: {\n        abbreviations: this.getByTag('Abbreviation'),\n      },\n    })\n  }\n\n  /** more logs for debugging */\n  verbose(bool) {\n    isVerbose = bool\n    return this\n  }\n  isVerbose() {\n    return isVerbose\n  }\n\n  /** get all terms in our lexicon with this tag */\n  getByTag(tag) {\n    let lex = this.lexicon\n    let res = {}\n    let words = Object.keys(lex)\n    for (let i = 0; i < words.length; i++) {\n      if (typeof lex[words[i]] === 'string') {\n        if (lex[words[i]] === tag) {\n          res[words[i]] = true\n        }\n      } else if (lex[words[i]].some(t => t === tag)) {\n        res[words[i]] = true\n      }\n    }\n    return res\n  }\n\n  /** augment our lingustic data with new data */\n  unpackWords(lex) {\n    let tags = Object.keys(lex)\n    for (let i = 0; i < tags.length; i++) {\n      let words = Object.keys(unpack(lex[tags[i]]))\n      for (let w = 0; w < words.length; w++) {\n        addLex.addWord(words[w], tags[i], this.lexicon)\n        // do some fancier stuff\n        addLex.addMore(words[w], tags[i], this)\n      }\n    }\n  }\n  /** put new words into our lexicon, properly */\n  addWords(obj) {\n    let keys = Object.keys(obj)\n    for (let i = 0; i < keys.length; i++) {\n      let word = keys[i].toLowerCase()\n      addLex.addWord(word, obj[keys[i]], this.lexicon)\n      // do some fancier stuff\n      addLex.addMore(word, obj[keys[i]], this)\n    }\n  }\n\n  addIrregulars() {\n    addIrregulars(this)\n    return this\n  }\n\n  /** extend the compromise tagset */\n  addTags(tags) {\n    tags = Object.assign({}, tags)\n    this.tags = Object.assign(this.tags, tags)\n    // calculate graph implications for the new tags\n    this.tags = inferTagSet(this.tags)\n    return this\n  }\n  /** call methods after tagger runs */\n  postProcess(fn) {\n    this.taggers.push(fn)\n    return this\n  }\n\n  /** helper method for logging + debugging */\n  stats() {\n    return {\n      words: Object.keys(this.lexicon).length,\n      plurals: Object.keys(this.irregular.plurals).length,\n      conjugations: Object.keys(this.irregular.conjugations).length,\n      compounds: Object.keys(this.hasCompound).length,\n      postProcessors: this.taggers.length,\n    }\n  }\n}\n\n//  ¯\\_(:/)_/¯\nconst clone = function(obj) {\n  return JSON.parse(JSON.stringify(obj))\n}\n\n/** produce a deep-copy of all lingustic data */\nWorld.prototype.clone = function() {\n  let w2 = new World()\n  // these are simple to copy:\n  w2.lexicon = Object.assign({}, this.lexicon)\n  w2.hasCompound = Object.assign({}, this.hasCompound)\n  //these ones are nested:\n  w2.irregulars = clone(this.irregulars)\n  w2.tags = clone(this.tags)\n  // these are functions\n  w2.transforms = this.transforms\n  w2.taggers = this.taggers\n  return w2\n}\nmodule.exports = World\n","// const cache = require('./_setCache')\n\n/** return the root, first document */\nexports.all = function() {\n  return this.parents()[0] || this\n}\n\n/** return the previous result */\nexports.parent = function() {\n  if (this.from) {\n    return this.from\n  }\n  return this\n}\n\n/**  return a list of all previous results */\nexports.parents = function(n) {\n  let arr = []\n  const addParent = function(doc) {\n    if (doc.from) {\n      arr.push(doc.from)\n      addParent(doc.from)\n    }\n  }\n  addParent(this)\n  arr = arr.reverse()\n  if (typeof n === 'number') {\n    return arr[n]\n  }\n  return arr\n}\n\n/** deep-copy the document, so that no references remain */\nexports.clone = function(doShallow) {\n  let list = this.list.map(ts => ts.clone(doShallow))\n  let tmp = this.buildFrom(list)\n  return tmp\n}\n\n/** how many seperate terms does the document have? */\nexports.wordCount = function() {\n  return this.list.reduce((count, p) => {\n    count += p.wordCount()\n    return count\n  }, 0)\n}\nexports.wordcount = exports.wordCount\n\n/** turn on logging for decision-debugging */\n// exports.verbose = function(bool) {\n//   if (bool === undefined) {\n//     bool = true\n//   }\n//   this.world.verbose = bool\n// }\n\n/** todo: */\nexports.pre = function(str) {\n  if (str === undefined) {\n    return this.list[0].terms(0).pre\n  }\n  this.list.forEach(p => {\n    let term = p.terms(0)\n    term.pre = str\n  })\n  return this\n}\n\n/** todo: */\nexports.post = function(str) {\n  // return array of post strings\n  if (str === undefined) {\n    return this.list.map(p => {\n      let terms = p.terms()\n      let term = terms[terms.length - 1]\n      return term.post\n    })\n  }\n  // set post string on all ends\n  this.list.forEach(p => {\n    let terms = p.terms()\n    let term = terms[terms.length - 1]\n    term.post = str\n  })\n  return this\n}\n\n/** freeze the current state of the document, for speed-purposes*/\nexports.cache = function(options) {\n  options = options || { words: true }\n  this.list.forEach(p => {\n    let words = {}\n    p.cache.terms = p.terms()\n    // cache all the terms\n    p.cache.terms.forEach(t => {\n      words[t.clean] = true\n      if (t.implicit) {\n        words[t.implicit] = true\n      }\n      if (t.alias) {\n        words = Object.assign(words, t.alias)\n      }\n      if (options.root) {\n        t.setRoot(this.world)\n      }\n    })\n    if (options.words === true) {\n      p.cache.words = words\n    }\n  })\n  return this\n}\n\n/** un-freezes the current state of the document, so it may be transformed */\nexports.uncache = function() {\n  this.list.forEach(p => {\n    p.cache = {}\n  })\n  return this\n}\n","/** use only the first result(s) */\nexports.first = function(n) {\n  if (n === undefined) {\n    return this.get(0)\n  }\n  return this.slice(0, n)\n}\n\n/** use only the last result(s) */\nexports.last = function(n) {\n  if (n === undefined) {\n    return this.get(this.list.length - 1)\n  }\n  let end = this.list.length\n  return this.slice(end - n, end)\n}\n\n/** grab a given subset of the results*/\nexports.slice = function(start, end) {\n  let list = this.list.slice(start, end)\n  return this.buildFrom(list)\n}\n\n/* grab nth result */\nexports.eq = function(n) {\n  let p = this.list[n]\n  if (p === undefined) {\n    return this.buildFrom([])\n  }\n  return this.buildFrom([p])\n}\nexports.get = exports.eq\n\n/** grab term[0] for every match */\nexports.firstTerm = function() {\n  return this.match('^.')\n}\n/** grab the last term for every match  */\nexports.lastTerm = function() {\n  return this.match('.$')\n}\n\n/** return a flat array of term objects */\nexports.termList = function(num) {\n  let arr = []\n  //'reduce' but faster\n  for (let i = 0; i < this.list.length; i++) {\n    let terms = this.list[i].terms()\n    for (let o = 0; o < terms.length; o++) {\n      arr.push(terms[o])\n      //support .termList(4)\n      if (num !== undefined && arr[num] !== undefined) {\n        return arr[num]\n      }\n    }\n  }\n  return arr\n}\n","const parseSyntax = require('./match/syntax')\n\n/** return a new Doc, with this one as a parent */\nexports.match = function(reg) {\n  //parse-up the input expression\n  let regs = parseSyntax(reg)\n  if (regs.length === 0) {\n    return this.buildFrom([])\n  }\n  //try expression on each phrase\n  let matches = this.list.reduce((arr, p) => {\n    return arr.concat(p.match(regs))\n  }, [])\n  return this.buildFrom(matches)\n}\n\n/** return all results except for this */\nexports.not = function(reg) {\n  //parse-up the input expression\n  let regs = parseSyntax(reg)\n  //if it's empty, return them all!\n  if (regs.length === 0) {\n    return this\n  }\n  //try expression on each phrase\n  let matches = this.list.reduce((arr, p) => {\n    return arr.concat(p.not(regs))\n  }, [])\n  return this.buildFrom(matches)\n}\n\n/** return only the first match */\nexports.matchOne = function(reg) {\n  let regs = parseSyntax(reg)\n  for (let i = 0; i < this.list.length; i++) {\n    let match = this.list[i].match(regs)\n    return this.buildFrom(match)\n  }\n  return this.buildFrom([])\n}\n\n/** return each current phrase, only if it contains this match */\nexports.if = function(reg) {\n  let regs = parseSyntax(reg)\n  let found = this.list.filter(p => p.match(regs).length > 0)\n  return this.buildFrom(found)\n}\n\n/** Filter-out any current phrases that have this match*/\nexports.ifNo = function(reg) {\n  let regs = parseSyntax(reg)\n  let found = this.list.filter(p => p.match(regs).length === 0)\n  return this.buildFrom(found)\n}\n\n/**Return a boolean if this match exists */\nexports.has = function(reg) {\n  let regs = parseSyntax(reg)\n  return this.list.some(p => p.has(regs) === true)\n}\n\n/** match any terms after our matches, within the sentence */\nexports.lookAhead = function(reg) {\n  // find everything afterwards, by default\n  if (!reg) {\n    reg = '.*'\n  }\n  let regs = parseSyntax(reg)\n  let matches = []\n  this.list.forEach(p => {\n    matches = matches.concat(p.lookAhead(regs))\n  })\n  matches = matches.filter(p => p)\n  return this.buildFrom(matches)\n}\n\n/** match any terms before our matches, within the sentence */\nexports.lookBehind = function(reg) {\n  // find everything afterwards, by default\n  if (!reg) {\n    reg = '.*'\n  }\n  let regs = parseSyntax(reg)\n  let matches = []\n  this.list.forEach(p => {\n    matches = matches.concat(p.lookBehind(regs))\n  })\n  matches = matches.filter(p => p)\n  return this.buildFrom(matches)\n}\n\n/** return all terms before a match, in each phrase */\nexports.before = function(reg) {\n  let regs = parseSyntax(reg)\n  //only the phrases we care about\n  let phrases = this.if(regs).list\n  let befores = phrases.map(p => {\n    let ids = p.terms().map(t => t.id)\n    //run the search again\n    let m = p.match(regs)[0]\n    let index = ids.indexOf(m.start)\n    //nothing is before a first-term match\n    if (index === 0 || index === -1) {\n      return null\n    }\n    return p.buildFrom(p.start, index)\n  })\n  befores = befores.filter(p => p !== null)\n  return this.buildFrom(befores)\n}\n\n/** return all terms after a match, in each phrase */\nexports.after = function(reg) {\n  let regs = parseSyntax(reg)\n  //only the phrases we care about\n  let phrases = this.if(regs).list\n  let befores = phrases.map(p => {\n    let terms = p.terms()\n    let ids = terms.map(t => t.id)\n    //run the search again\n    let m = p.match(regs)[0]\n    let index = ids.indexOf(m.start)\n    //skip if nothing is after it\n    if (index === -1 || !terms[index + m.length]) {\n      return null\n    }\n    //create the new phrase, after our match.\n    let id = terms[index + m.length].id\n    let len = p.length - index - m.length\n    return p.buildFrom(id, len)\n  })\n  befores = befores.filter(p => p !== null)\n  return this.buildFrom(befores)\n}\n","const eachTerm = function(doc, fn) {\n  let world = doc.world\n  doc.list.forEach(p => {\n    p.terms().forEach(t => t[fn](world))\n  })\n  return doc\n}\n\n/** turn every letter of every term to lower-cse */\nexports.toLowerCase = function() {\n  return eachTerm(this, 'toLowerCase')\n}\n\n/** turn every letter of every term to upper case */\nexports.toUpperCase = function() {\n  return eachTerm(this, 'toUpperCase')\n}\n\n/** upper-case the first letter of each term */\nexports.toTitleCase = function() {\n  this.tag('TitleCase')\n  return eachTerm(this, 'toTitleCase')\n}\n/** remove whitespace and title-case each term */\nexports.toCamelCase = function() {\n  this.toTitleCase()\n  this.list.forEach(p => {\n    //remove whitespace\n    let terms = p.terms()\n    terms.forEach((t, i) => {\n      if (i !== terms.length - 1) {\n        t.post = ''\n      }\n    })\n  })\n  // this.tag('#CamelCase', 'toCamelCase')\n  return this\n}\n","/** remove start and end whitespace */\nexports.trim = function() {\n  this.list = this.list.map(p => p.trim())\n  return this\n}\n\n/** connect words with hyphen, and remove whitespace */\nexports.hyphenate = function() {\n  this.list.forEach(p => {\n    let terms = p.terms()\n    //remove whitespace\n    terms.forEach((t, i) => {\n      if (i !== 0) {\n        t.pre = ''\n      }\n      if (terms[i + 1]) {\n        t.post = '-'\n      }\n    })\n  })\n  this.tag('#Hyphenated', 'hyphenate')\n  return this\n}\n\n/** remove hyphens between words, and set whitespace */\nexports.dehyphenate = function() {\n  const hasHyphen = /(-|–|—)/\n  this.list.forEach(p => {\n    let terms = p.terms()\n    //remove whitespace\n    terms.forEach(t => {\n      if (hasHyphen.test(t.post)) {\n        t.post = ' '\n      }\n    })\n  })\n  this.untag('#Hyphenated', 'hyphenate')\n  return this\n}\n","/** apply a tag, or tags to all terms */\nconst tagTerms = function(tag, doc, safe, reason) {\n  let tagList = []\n  if (typeof tag === 'string') {\n    tagList = tag.split(' ')\n  }\n\n  // console.log(doc.parents().length)\n  //do indepenent tags for each term:\n  doc.list.forEach(p => {\n    let terms = p.terms()\n    // tagSafe - apply only to fitting terms\n    if (safe === true) {\n      terms = terms.filter(t => t.canBe(tag, doc.world))\n    }\n    // set tags in our cache\n    // if (terms.length > 0) {\n    //   p.cache = p.cache || {}\n    //   p.cache.tags = p.cache.tags || {}\n    //   p.cache.tags[tag] = true\n\n    //   if (p.parent) {\n    //     p.parent.cache = p.parent.cache || { tags: {} }\n    //     p.parent.cache.tags[tag] = true\n    //   }\n    // }\n    terms.forEach((t, i) => {\n      //fancy version:\n      if (tagList.length > 1) {\n        if (tagList[i] && tagList[i] !== '.') {\n          t.tag(tagList[i], reason, doc.world)\n        }\n      } else {\n        //non-fancy version (same tag for all terms)\n        t.tag(tag, reason, doc.world)\n      }\n    })\n  })\n  return\n}\nmodule.exports = tagTerms\n","const setTag = require('./_setTag')\n\n/** Give all terms the given tag */\nexports.tag = function(tags, why) {\n  if (!tags) {\n    return this\n  }\n  setTag(tags, this, false, why)\n  return this\n}\n\n/** Only apply tag to terms if it is consistent with current tags */\nexports.tagSafe = function(tags, why) {\n  if (!tags) {\n    return this\n  }\n  setTag(tags, this, true, why)\n  return this\n}\n\n/** Remove this term from the given terms */\nexports.unTag = function(tags, why) {\n  this.list.forEach(p => {\n    p.terms().forEach(t => t.unTag(tags, why, this.world))\n  })\n  return this\n}\n\n/** return only the terms that can be this tag*/\nexports.canBe = function(tag) {\n  if (!tag) {\n    return this\n  }\n  let world = this.world\n  let matches = this.list.reduce((arr, p) => {\n    return arr.concat(p.canBe(tag, world))\n  }, [])\n  return this.buildFrom(matches)\n}\n","/* run each phrase through a function, and create a new document */\nexports.map = function(fn) {\n  if (!fn) {\n    return this\n  }\n  let list = this.list.map((p, i) => {\n    let doc = this.buildFrom([p])\n    doc.from = null //it's not a child/parent\n    let res = fn(doc, i)\n    if (res.list && res.list[0]) {\n      return res.list[0]\n    }\n    return res\n  })\n  return this.buildFrom(list)\n}\n\n/** run a function on each phrase */\nexports.forEach = function(fn, detachParent) {\n  if (!fn) {\n    return this\n  }\n  this.list.forEach((p, i) => {\n    let sub = this.buildFrom([p])\n    // if we're doing fancy insertions, we may want to skip updating the parent each time.\n    if (detachParent === true) {\n      sub.from = null //\n    }\n    // let len\n    // console.log(sub.from.list[0].text())\n    fn(sub, i)\n    // console.log(sub.from.list[0].text())\n  })\n  return this\n}\n\n/** return only the phrases that return true */\nexports.filter = function(fn) {\n  if (!fn) {\n    return this\n  }\n  let list = this.list.filter((p, i) => {\n    let doc = this.buildFrom([p])\n    doc.from = null //it's not a child/parent\n    return fn(doc, i)\n  })\n  return this.buildFrom(list)\n}\n\n/** return a document with only the first phrase that matches */\nexports.find = function(fn) {\n  if (!fn) {\n    return this\n  }\n  let list = this.list.find((p, i) => {\n    let doc = this.buildFrom([p])\n    doc.from = null //it's not a child/parent\n    return fn(doc, i)\n  })\n  if (list) {\n    return this.buildFrom([list])\n  }\n  return undefined\n}\n\n/** return true or false if there is one matching phrase */\nexports.some = function(fn) {\n  if (!fn) {\n    return this\n  }\n  return this.list.some((p, i) => {\n    let doc = this.buildFrom([p])\n    doc.from = null //it's not a child/parent\n    return fn(doc, i)\n  })\n}\n\n/** sample a subset of the results */\nexports.random = function(n) {\n  if (!this.found) {\n    return this\n  }\n  let r = Math.floor(Math.random() * this.list.length)\n  if (n === undefined) {\n    let list = [this.list[r]]\n    return this.buildFrom(list)\n  }\n  //prevent it from going over the end\n  if (r + n > this.length) {\n    r = this.length - n\n    r = r < 0 ? 0 : r\n  }\n  return this.slice(r, r + n)\n}\n\n/** combine each phrase into a new data-structure */\n// exports.reduce = function(fn, h) {\n//   let list = this.list.reduce((_h, ts) => {\n//     let doc = this.buildFrom([ts])\n//     doc.from = null //it's not a child/parent\n//     return fn(_h, doc)\n//   }, h)\n//   return this.buildFrom(list)\n// }\n","const tokenize = require('../../01-tokenizer')\n\n/** substitute-in new content */\nexports.replaceWith = function(replace) {\n  if (!replace) {\n    return this.delete()\n  }\n  this.list.forEach(p => {\n    let newPhrases = tokenize.fromText(replace, this.world, this.pool())\n    //tag the new phrases\n    let tmpDoc = this.buildFrom(newPhrases)\n    tmpDoc.tagger()\n    p.replace(newPhrases[0], this) //TODO: support multi-sentence replacements\n  })\n  return this\n}\n\n/** search and replace match with new content */\nexports.replace = function(match, replace) {\n  // if there's no 2nd param, use replaceWith\n  if (replace === undefined) {\n    return this.replaceWith(match)\n  }\n  this.match(match).replaceWith(replace)\n  return this\n}\n\n/** fully remove these terms from the document */\nexports.delete = function(match) {\n  let toRemove = this\n  if (match) {\n    toRemove = this.match(match)\n  }\n  toRemove.list.forEach(phrase => phrase.delete(this))\n  return this\n}\n// aliases\nexports.remove = exports.delete\n","const tokenize = require('../../01-tokenizer')\n/** add these new terms to the end*/\nexports.append = function(str) {\n  if (!str) {\n    return this\n  }\n  //add it to end of every phrase\n  this.list.forEach(p => {\n    //build it\n    let phrase = tokenize.fromText(str, this.world, this.pool())[0] //assume it's one sentence, for now\n    //tag it\n    let tmpDoc = this.buildFrom([phrase])\n    tmpDoc.tagger()\n    // push it onto the end\n    p.append(phrase, this)\n  })\n  return this\n}\nexports.insertAfter = exports.append\nexports.insertAt = exports.append\n\n/** add these new terms to the front*/\nexports.prepend = function(str) {\n  if (!str) {\n    return this\n  }\n  //add it to start of every phrase\n  this.list.forEach(p => {\n    //build it\n    let phrase = tokenize.fromText(str, this.world, this.pool())[0] //assume it's one sentence, for now\n    //tag it\n    let tmpDoc = this.buildFrom([phrase])\n    tmpDoc.tagger()\n    // add it to the start\n    p.prepend(phrase, this)\n  })\n  return this\n}\nexports.insertBefore = exports.prepend\n\n/** add these new things to the end*/\nexports.concat = function() {\n  let list = this.list.slice(0)\n  //repeat for any number of params\n  for (let i = 0; i < arguments.length; i++) {\n    let arg = arguments[i]\n    //support a fresh string\n    if (typeof arg === 'string') {\n      let arr = tokenize.fromText(arg, this.world)\n      //TODO: phrase.tagger()?\n      list = list.concat(arr)\n    } else if (arg.isA === 'Doc') {\n      list = list.concat(arg.list)\n    } else if (arg.isA === 'Phrase') {\n      list.push(arg)\n    }\n  }\n  return this.buildFrom(list)\n}\n","const methods = {\n  /** alphabetical order */\n  alpha: (a, b) => {\n    let left = a.text('clean')\n    let right = b.text('clean')\n    if (left < right) {\n      return -1\n    }\n    if (left > right) {\n      return 1\n    }\n    return 0\n  },\n\n  /** count the # of characters of each match */\n  length: (a, b) => {\n    let left = a.text().trim().length\n    let right = b.text().trim().length\n    if (left < right) {\n      return 1\n    }\n    if (left > right) {\n      return -1\n    }\n    return 0\n  },\n\n  /** count the # of terms in each match */\n  wordCount: (a, b) => {\n    let left = a.wordCount()\n    let right = b.wordCount()\n    if (left < right) {\n      return 1\n    }\n    if (left > right) {\n      return -1\n    }\n    return 0\n  },\n}\n\n/** sort by # of duplicates in the document*/\nconst byFreq = function(doc) {\n  let counts = {}\n  const options = {\n    case: true,\n    punctuation: false,\n    whitespace: true,\n    unicode: true,\n  }\n  doc.list.forEach(p => {\n    let str = p.text(options)\n    counts[str] = counts[str] || 0\n    counts[str] += 1\n  })\n  // sort by freq\n  doc.list.sort((a, b) => {\n    let left = counts[a.text(options)]\n    let right = counts[b.text(options)]\n    if (left < right) {\n      return 1\n    }\n    if (left > right) {\n      return -1\n    }\n    return 0\n  })\n  return doc\n}\n\n// order results 'chronologically', or document-order\nconst byOffset = function(doc) {\n  let order = {}\n  doc.json({ terms: { offset: true } }).forEach(o => {\n    order[o.terms[0].id] = o.terms[0].offset.start\n  })\n  doc.list = doc.list.sort((a, b) => {\n    if (order[a.start] > order[b.start]) {\n      return 1\n    } else if (order[a.start] < order[b.start]) {\n      return -1\n    }\n    return 0\n  })\n  return doc\n}\n\n//aliases\nmethods.alphabetical = methods.alpha\nmethods.wordcount = methods.wordCount\nmethods.chronological = methods.chron\nmethods.index = methods.chron\n\n/** re-arrange the order of the matches (in place) */\nexports.sort = function(input) {\n  input = input || 'alpha'\n  //do this one up-front\n  if (input === 'freq' || input === 'frequency' || input === 'topk') {\n    return byFreq(this)\n  }\n  if (input === 'chron' || input === 'chronological') {\n    return byOffset(this)\n  }\n\n  input = methods[input] || input\n  // apply sort method on each phrase\n  if (typeof input === 'function') {\n    this.list = this.list.sort(input)\n    return this\n  }\n  return this\n}\n\n/** reverse the order of the matches, but not the words */\nexports.reverse = function() {\n  let list = [].concat(this.list)\n  list = list.reverse()\n  return this.buildFrom(list)\n}\n\n/** remove any duplicate matches */\nexports.unique = function() {\n  let list = [].concat(this.list)\n  let obj = {}\n  list = list.filter(p => {\n    let str = p.text('reduced').trim()\n    if (obj.hasOwnProperty(str) === true) {\n      return false\n    }\n    obj[str] = true\n    return true\n  })\n  return this.buildFrom(list)\n}\n","const entity = ['Person', 'Place', 'Organization']\n\nmodule.exports = {\n  Noun: {\n    notA: ['Verb', 'Adjective', 'Adverb', 'Value'],\n  },\n  // - singular\n  Singular: {\n    isA: 'Noun',\n    notA: 'Plural',\n  },\n  //a specific thing that's capitalized\n  ProperNoun: {\n    isA: 'Noun',\n  },\n\n  // -- people\n  Person: {\n    isA: ['ProperNoun', 'Singular'],\n    notA: ['Place', 'Organization'],\n  },\n  FirstName: {\n    isA: 'Person',\n  },\n  MaleName: {\n    isA: 'FirstName',\n    notA: ['FemaleName', 'LastName'],\n  },\n  FemaleName: {\n    isA: 'FirstName',\n    notA: ['MaleName', 'LastName'],\n  },\n  LastName: {\n    isA: 'Person',\n    notA: ['FirstName'],\n  },\n  Honorific: {\n    isA: 'Noun',\n    notA: ['FirstName', 'LastName'],\n  },\n\n  // -- places\n  Place: {\n    isA: 'Singular',\n    notA: ['Person', 'Organization'],\n  },\n  Country: {\n    isA: ['Place', 'ProperNoun'],\n    notA: ['City'],\n  },\n  City: {\n    isA: ['Place', 'ProperNoun'],\n    notA: ['Country'],\n  },\n  Region: {\n    isA: ['Place', 'ProperNoun'],\n  },\n\n  //---Orgs---\n  Organization: {\n    isA: ['Singular', 'ProperNoun'],\n    notA: ['Person', 'Place'],\n  },\n  SportsTeam: {\n    isA: 'Organization',\n  },\n\n  // - plural\n  Plural: {\n    isA: 'Noun',\n    notA: ['Singular'],\n  },\n  //(not plural or singular)\n  Uncountable: {\n    isA: 'Noun',\n  },\n  Pronoun: {\n    isA: 'Noun',\n    notA: entity,\n  },\n  //a word for someone doing something -'plumber'\n  Actor: {\n    isA: 'Noun',\n    notA: entity,\n  },\n  //a gerund-as-noun - 'swimming'\n  Activity: {\n    isA: 'Noun',\n    notA: ['Person', 'Place'],\n  },\n  //'kilograms'\n  Unit: {\n    isA: 'Noun',\n    notA: entity,\n  },\n  //'Canadians'\n  Demonym: {\n    isA: ['Noun', 'ProperNoun'],\n    notA: entity,\n  },\n  //`john's`\n  Possessive: {\n    isA: 'Noun',\n    // notA: 'Pronoun',\n  },\n}\n","module.exports = {\n  Verb: {\n    notA: ['Noun', 'Adjective', 'Adverb', 'Value'],\n  },\n  // walks\n  PresentTense: {\n    isA: 'Verb',\n    notA: ['PastTense', 'Copula'],\n  },\n  // neutral form - 'walk'\n  Infinitive: {\n    isA: 'PresentTense',\n    notA: ['PastTense', 'Gerund'],\n  },\n  // walking\n  Gerund: {\n    isA: 'PresentTense',\n    notA: ['PastTense', 'Copula'],\n  },\n  // walked\n  PastTense: {\n    isA: 'Verb',\n  },\n  // will walk\n  FutureTense: {\n    isA: 'Verb',\n  },\n\n  // is\n  Copula: {\n    isA: 'Verb',\n  },\n  // would have\n  Modal: {\n    isA: 'Verb',\n  },\n  // had walked\n  PerfectTense: {\n    isA: 'Verb',\n    notA: 'Gerund',\n  },\n  Pluperfect: {\n    isA: 'Verb',\n  },\n  // shown\n  Participle: {\n    isA: 'Verb',\n  },\n  // show up\n  PhrasalVerb: {\n    isA: 'Verb',\n  },\n  //'up' part\n  Particle: {\n    isA: 'PhrasalVerb',\n  },\n}\n","module.exports = {\n  Value: {\n    notA: ['Noun', 'Verb', 'Adjective', 'Adverb'],\n  },\n  Ordinal: {\n    isA: 'Value',\n    notA: ['Cardinal'],\n  },\n  Cardinal: {\n    isA: 'Value',\n    notA: ['Ordinal'],\n  },\n  RomanNumeral: {\n    isA: 'Cardinal', //can be a person, too\n    notA: ['Ordinal', 'TextValue'],\n  },\n  TextValue: {\n    isA: 'Value',\n    notA: ['NumericValue'],\n  },\n  NumericValue: {\n    isA: 'Value',\n    notA: ['TextValue'],\n  },\n  Money: {\n    isA: 'Cardinal',\n  },\n  Fraction: {\n    isA: 'Value',\n  },\n  Percent: {\n    isA: 'Value',\n  },\n}\n","const anything = ['Noun', 'Verb', 'Adjective', 'Adverb', 'Value']\n\nmodule.exports = {\n  //--Adjectives--\n  Adjective: {\n    notA: ['Noun', 'Verb', 'Adverb', 'Value'],\n  },\n  // adjectives that can conjugate\n  Comparable: {\n    isA: ['Adjective'],\n  },\n  // better\n  Comparative: {\n    isA: ['Adjective'],\n  },\n  // best\n  Superlative: {\n    isA: ['Adjective'],\n    notA: ['Comparative'],\n  },\n\n  NumberRange: {\n    isA: ['Contraction'],\n  },\n  Adverb: {\n    notA: ['Noun', 'Verb', 'Adjective', 'Value'],\n  },\n\n  // Dates:\n  //not a noun, but usually is\n  Date: {\n    notA: ['Verb', 'Conjunction', 'Adverb', 'Preposition', 'Adjective'],\n  },\n  Month: {\n    isA: ['Date', 'Singular'],\n    notA: ['Year', 'WeekDay', 'Time'],\n  },\n  WeekDay: {\n    isA: ['Date', 'Noun'],\n  },\n\n  //glue\n  Determiner: {\n    notA: anything,\n  },\n  Conjunction: {\n    notA: anything,\n  },\n  Preposition: {\n    notA: anything,\n  },\n\n  // what, who, why\n  QuestionWord: {\n    notA: ['Determiner'],\n  },\n\n  // peso, euro\n  Currency: {},\n  // ughh\n  Expression: {},\n  // dr.\n  Abbreviation: {},\n\n  // internet tags\n  Url: {\n    notA: ['HashTag', 'PhoneNumber', 'Verb', 'Adjective', 'Value', 'AtMention', 'Email'],\n  },\n  PhoneNumber: {\n    notA: ['HashTag', 'Verb', 'Adjective', 'Value', 'AtMention', 'Email'],\n  },\n  HashTag: {},\n  AtMention: {\n    isA: ['Noun'],\n    notA: ['HashTag', 'Verb', 'Adjective', 'Value', 'Email'],\n  },\n  Emoji: {\n    notA: ['HashTag', 'Verb', 'Adjective', 'Value', 'AtMention'],\n  },\n  Email: {\n    notA: ['HashTag', 'Verb', 'Adjective', 'Value', 'AtMention'],\n  },\n\n  //non-exclusive\n  Auxiliary: {\n    notA: ['Noun', 'Adjective', 'Value'],\n  },\n  Acronym: {\n    notA: ['Plural', 'RomanNumeral'],\n  },\n  Negative: {\n    notA: ['Noun', 'Adjective', 'Value'],\n  },\n}\n","// i just made these up\nconst colorMap = {\n  Noun: 'blue',\n\n  Verb: 'green',\n  Negative: 'green',\n\n  Date: 'red',\n  Value: 'red',\n\n  Adjective: 'magenta',\n\n  Preposition: 'cyan',\n  Conjunction: 'cyan',\n  Determiner: 'cyan',\n  Adverb: 'cyan',\n}\n\n/** add a debug color to some tags */\nconst addColors = function(tags) {\n  Object.keys(tags).forEach(k => {\n    if (colorMap[k]) {\n      tags[k].color = colorMap[k]\n      return\n    }\n    tags[k].isA.some(t => {\n      if (colorMap[t]) {\n        tags[k].color = colorMap[t]\n        return true\n      }\n      return false\n    })\n  })\n  return tags\n}\n\nmodule.exports = addColors\n","const unique = function(arr) {\n  return arr.filter((v, i, a) => a.indexOf(v) === i)\n}\n\n//add 'downward' tags (that immediately depend on this one)\nconst inferIsA = function(tags) {\n  Object.keys(tags).forEach(k => {\n    let tag = tags[k]\n    let len = tag.isA.length\n    for (let i = 0; i < len; i++) {\n      let down = tag.isA[i]\n      if (tags[down]) {\n        tag.isA = tag.isA.concat(tags[down].isA)\n      }\n    }\n    // clean it up\n    tag.isA = unique(tag.isA)\n  })\n  return tags\n}\nmodule.exports = inferIsA\n","const unique = function(arr) {\n  return arr.filter((v, i, a) => a.indexOf(v) === i)\n}\n\n// crawl the tag-graph and infer any conflicts\n// faster than doing this at tag-time\nconst inferNotA = function(tags) {\n  let keys = Object.keys(tags)\n  keys.forEach(k => {\n    let tag = tags[k]\n    tag.notA = tag.notA || []\n    tag.isA.forEach(down => {\n      if (tags[down] && tags[down].notA) {\n        // borrow its conflicts\n        let notA = typeof tags[down].notA === 'string' ? [tags[down].isA] : tags[down].notA || []\n        tag.notA = tag.notA.concat(notA)\n      }\n    })\n    // any tag that lists us as a conflict, we conflict it back.\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      if (tags[key].notA.indexOf(k) !== -1) {\n        tag.notA.push(key)\n      }\n    }\n    // clean it up\n    tag.notA = unique(tag.notA)\n  })\n  return tags\n}\nmodule.exports = inferNotA\n","// a lineage is all 'incoming' tags that have this as 'isA'\nconst inferLineage = function(tags) {\n  let keys = Object.keys(tags)\n  keys.forEach(k => {\n    let tag = tags[k]\n    tag.lineage = []\n    // find all tags with it in their 'isA' set\n    for (let i = 0; i < keys.length; i++) {\n      if (tags[keys[i]].isA.indexOf(k) !== -1) {\n        tag.lineage.push(keys[i])\n      }\n    }\n  })\n  return tags\n}\nmodule.exports = inferLineage\n","const inferColor = require('./_color')\nconst inferIsA = require('./_isA')\nconst inferNotA = require('./_notA')\nconst lineage = require('./_lineage')\n\nconst validate = function(tags) {\n  // cleanup format\n  Object.keys(tags).forEach(k => {\n    let tag = tags[k]\n    // ensure isA is an array\n    tag.isA = tag.isA || []\n    if (typeof tag.isA === 'string') {\n      tag.isA = [tag.isA]\n    }\n    // ensure notA is an array\n    tag.notA = tag.notA || []\n    if (typeof tag.notA === 'string') {\n      tag.notA = [tag.notA]\n    }\n  })\n  return tags\n}\n\n// build-out the tag-graph structure\nconst inferTags = function(tags) {\n  // validate data\n  tags = validate(tags)\n  // build its 'down tags'\n  tags = inferIsA(tags)\n  // infer the conflicts\n  tags = inferNotA(tags)\n  // debug tag color\n  tags = inferColor(tags)\n  // find incoming links\n  tags = lineage(tags)\n  return tags\n}\nmodule.exports = inferTags\n","const nouns = require('./tags/nouns')\nconst verbs = require('./tags/verbs')\nconst values = require('./tags/values')\nconst misc = require('./tags/misc')\nconst inferTags = require('./inference/index')\n\n//extend tagset with new tags\nconst addIn = function(obj, tags) {\n  Object.keys(obj).forEach(k => {\n    tags[k] = obj[k]\n  })\n}\n\nconst build = () => {\n  let tags = {}\n  addIn(nouns, tags)\n  addIn(verbs, tags)\n  addIn(values, tags)\n  addIn(misc, tags)\n  // do the graph-stuff\n  tags = inferTags(tags)\n  return tags\n}\nmodule.exports = build()\n","const tagset = require('../../world/tags')\n\n// https://stackoverflow.com/questions/9781218/how-to-change-node-jss-console-font-color\nconst reset = '\\x1b[0m'\n\nconst padEnd = function(str, width) {\n  str = str.toString()\n  while (str.length < width) {\n    str += ' '\n  }\n  return str\n}\n\n//cheaper than requiring chalk\nconst cli = {\n  green: function(str) {\n    return '\\x1b[32m' + str + reset\n  },\n  red: function(str) {\n    return '\\x1b[31m' + str + reset\n  },\n  blue: function(str) {\n    return '\\x1b[34m' + str + reset\n  },\n  magenta: function(str) {\n    return '\\x1b[35m' + str + reset\n  },\n  cyan: function(str) {\n    return '\\x1b[36m' + str + reset\n  },\n  yellow: function(str) {\n    return '\\x1b[33m' + str + reset\n  },\n  black: function(str) {\n    return '\\x1b[30m' + str + reset\n  },\n}\n\nconst tagString = function(tags) {\n  tags = tags.map(tag => {\n    if (!tagset.hasOwnProperty(tag)) {\n      return tag\n    }\n    const c = tagset[tag].color || 'blue'\n    return cli[c](tag)\n  })\n  return tags.join(', ')\n}\n\n//output some helpful stuff to the console\nconst debug = function(doc) {\n  console.log(cli.blue('====='))\n  doc.list.forEach(p => {\n    console.log(cli.blue('  -----'))\n    p.terms().forEach(t => {\n      let tags = Object.keys(t.tags)\n      let text = t.text || '-'\n      if (t.implicit) {\n        text = '[' + t.implicit + ']'\n      }\n      if (typeof module !== undefined) {\n        text = cli.yellow(text)\n      }\n      let word = \"'\" + text + \"'\"\n      word = padEnd(word, 18)\n      let str = cli.blue('  ｜ ') + word + '  - ' + tagString(tags)\n      console.log(str)\n    })\n  })\n  console.log('')\n  return doc\n}\nmodule.exports = debug\n","const debug = require('./_debug')\n\n/** return the document as text */\nexports.text = function(options = {}) {\n  //are we showing every phrase?\n  let showFull = false\n  if (this.parents().length === 0) {\n    showFull = true\n  }\n  return this.list.reduce((str, p, i) => {\n    const trimPre = !showFull && i === 0\n    const trimPost = !showFull && i === this.list.length - 1\n    return str + p.text(options, trimPre, trimPost)\n  }, '')\n}\n\n/** pretty-print the current document and its tags */\nexports.debug = function() {\n  debug(this)\n  return this\n}\n\n/** some named output formats */\nexports.out = function(method) {\n  if (method === 'text') {\n    return this.text()\n  }\n  if (method === 'normal') {\n    return this.text('normal')\n  }\n  if (method === 'json') {\n    return this.json()\n  }\n  if (method === 'offset' || method === 'offsets') {\n    return this.json({ offset: true })\n  }\n  if (method === 'array') {\n    return this.json({ terms: false }).map(obj => obj.text)\n  }\n  if (method === 'freq') {\n    return this.json({ count: true, terms: false, reduced: true })\n  }\n  if (method === 'terms') {\n    let list = []\n    this.json({ text: false, terms: { text: true } }).forEach(obj => {\n      let terms = obj.terms.map(t => t.text)\n      terms = terms.filter(t => t)\n      list = list.concat(terms)\n    })\n    return list\n  }\n  if (method === 'debug') {\n    debug(this)\n    return this\n  }\n  return this.text()\n}\n","const isPunct = /[\\[\\]{}⟨⟩:,،、‒–—―…‹›«»‐\\-;\\/⁄·*\\•^†‡°¡¿※№÷×ºª%‰=‱¶§~|‖¦©℗®℠™¤₳฿]/g\nconst quotes = /['‘’“”\"′″‴]+/g\nconst killUnicode = require('../../Term/normalize/unicode')\n/*\n  case: true,\n  whitespace: true,\n  unicode: true,\n  punctuation: true,\n\n  contractions: false,\n\n  adverbs: false,\n  emoji: false,\n  parentheses: false,\n  quotations: false,\n  possessives: false,\n\n  verbs: false,\n  nouns: false,\n*/\n\nconst defaults = {}\n/** common ways to clean-up the document, and reduce noise */\nexports.normalize = function(options = {}) {\n  options = Object.assign({}, defaults, options)\n  let termArr = this.list.map(ts => ts.terms())\n  //whitespace\n  if (options.whitespace) {\n    termArr.forEach((terms, o) => {\n      terms.forEach((t, i) => {\n        t.pre = t.pre.replace(/\\s/g, '')\n        t.post = t.post.replace(/\\s/g, '')\n        //last word? ensure there's a next sentence.\n        if (terms.length - 1 === i && !termArr[o + 1]) {\n          return\n        }\n        t.post += ' '\n      })\n    })\n  }\n\n  let termList = this.termList()\n  //punctuation - keep sentence punctation, quotes, parenths\n  if (options.punctuation) {\n    termList.forEach(t => {\n      t.post = t.post.replace(isPunct, '')\n      t.pre = t.pre.replace(isPunct, '')\n    })\n  }\n  // é -> e\n  if (options.unicode) {\n    termList.forEach(t => {\n      t.text = killUnicode(t.text)\n    })\n  }\n  // '(word)' -> 'word'\n  if (options.parentheses) {\n    this.parentheses().unwrap()\n  }\n  // `isn't` -> 'is not'\n  if (options.contraction || options.contractions) {\n    this.contractions().expand()\n  }\n  // `cory hart's -> cory hart'\n  if (options.possessive || options.possessives) {\n    this.possessives().strip()\n  }\n  // remove \"\" punctuation\n  if (options.quotations || options.quotes) {\n    termList.forEach(t => {\n      t.post = t.post.replace(quotes, '')\n      t.pre = t.pre.replace(quotes, '')\n    })\n  }\n  return this\n}\n","const jsonDefaults = { text: true, terms: true, trim: true }\n\n// get all character startings in doc\nconst termOffsets = function(doc) {\n  let elapsed = 0\n  let offsets = {}\n  doc.termList().forEach(term => {\n    offsets[term.id] = {\n      start: elapsed + term.pre.length,\n      length: term.text.length,\n    }\n    elapsed += term.pre.length + term.text.length + term.post.length\n  })\n  return offsets\n}\n\n/** pull out desired metadata from the document */\nexports.json = function(options = {}) {\n  //support json(3) format\n  if (typeof options === 'number') {\n    return this.list[options].json(jsonDefaults)\n  }\n  options = Object.assign({}, jsonDefaults, options)\n  if (options.offset) {\n    options.terms = options.terms === true ? {} : options.terms\n    options.terms.offset = true\n  }\n  let result = this.list.map(p => {\n    return p.json(options, this.world)\n  })\n  // add offset data for each term\n  if (options.terms.offset || options.offset) {\n    let offsets = termOffsets(this.all())\n    result.forEach(o => {\n      o.terms.forEach(t => {\n        t.offset = offsets[t.id] || {}\n      })\n      let len = o.terms.reduce((n, t) => {\n        n += t.offset.length || 0\n        return n\n      }, 0)\n      o.offset = o.terms[0].offset\n      o.offset.length = len\n    })\n  }\n  // add frequency #s\n  if (options.frequency || options.freq || options.count) {\n    let obj = {}\n    this.list.forEach(p => {\n      let str = p.text('reduced')\n      obj[str] = obj[str] || 0\n      obj[str] += 1\n    })\n    this.list.forEach((p, i) => {\n      result[i].count = obj[p.text('reduced')]\n    })\n  }\n  return result\n}\n\n//aliases\nexports.data = exports.json\n","const parseSyntax = require('./match/syntax')\n\n/** return a Document with three parts for every match\n * seperate everything before the word, as a new phrase\n */\nexports.splitOn = function(reg) {\n  let regs = parseSyntax(reg)\n  let matches = []\n  this.list.forEach(p => {\n    let foundEm = p.match(regs)\n    //no match here, add full sentence\n    if (foundEm.length === 0) {\n      matches.push(p)\n      return\n    }\n    // we found something here.\n    let carry = p\n    foundEm.forEach(found => {\n      let parts = carry.splitOn(found)\n      // add em in\n      if (parts.before) {\n        matches.push(parts.before)\n      }\n      if (parts.match) {\n        matches.push(parts.match)\n      }\n      // start matching now on the end\n      carry = parts.after\n    })\n    // add that last part\n    if (carry) {\n      matches.push(carry)\n    }\n  })\n  return this.buildFrom(matches)\n}\n\n/** return a Document with two parts for every match\n * seperate everything after the word, as a new phrase\n */\nexports.splitAfter = function(reg) {\n  let regs = parseSyntax(reg)\n  let matches = []\n  this.list.forEach(p => {\n    let foundEm = p.match(regs)\n    //no match here, add full sentence\n    if (foundEm.length === 0) {\n      matches.push(p)\n      return\n    }\n    // we found something here.\n    let carry = p\n    foundEm.forEach(found => {\n      let parts = carry.splitOn(found)\n      // add em in\n      if (parts.before && parts.match) {\n        // merge these two together\n        parts.before.length += parts.match.length\n        matches.push(parts.before)\n      } else if (parts.match) {\n        matches.push(parts.match)\n      }\n      // start matching now on the end\n      carry = parts.after\n    })\n    // add that last part\n    if (carry) {\n      matches.push(carry)\n    }\n  })\n  return this.buildFrom(matches)\n}\nexports.split = exports.splitAfter //i guess?\n\n/** return a Document with two parts for every match */\nexports.splitBefore = function(reg) {\n  let regs = parseSyntax(reg)\n  let matches = []\n  this.list.forEach(p => {\n    let foundEm = p.match(regs)\n    //no match here, add full sentence\n    if (foundEm.length === 0) {\n      matches.push(p)\n      return\n    }\n    // we found something here.\n    let carry = p\n    foundEm.forEach(found => {\n      let parts = carry.splitOn(found)\n      // add before part in\n      if (parts.before) {\n        matches.push(parts.before)\n      }\n      // merge match+after\n      if (parts.match && parts.after) {\n        parts.match.length += parts.after.length\n      }\n      // start matching now on the end\n      carry = parts.match\n    })\n    // add that last part\n    if (carry) {\n      matches.push(carry)\n    }\n  })\n  return this.buildFrom(matches)\n}\n\n/** split a document into labeled sections */\nexports.segment = function(regs, options) {\n  regs = regs || {}\n  options = options || { text: true }\n  let doc = this\n  let keys = Object.keys(regs)\n  // split em\n  keys.forEach(k => {\n    doc = doc.splitOn(k)\n  })\n  //add labels for each section\n  doc.list.forEach(p => {\n    for (let i = 0; i < keys.length; i += 1) {\n      if (p.has(keys[i])) {\n        p.segment = regs[keys[i]]\n        return\n      }\n    }\n  })\n  return doc.list.map(p => {\n    let res = p.json(options)\n    res.segment = p.segment || null\n    return res\n  })\n}\n","/** make all phrases into one phrase */\nexports.join = function(str) {\n  // make one large phrase - 'main'\n  let main = this.list[0]\n  let before = main.length\n  let removed = {}\n  for (let i = 1; i < this.list.length; i++) {\n    const p = this.list[i]\n    removed[p.start] = true\n    let term = main.lastTerm()\n    // add whitespace between them\n    if (str) {\n      term.post += str\n    }\n    //  main -> p\n    term.next = p.start\n    // main <- p\n    p.terms(0).prev = term.id\n    main.length += p.length\n  }\n\n  // parents are bigger than than their children.\n  // when we increase a child, we increase their parent too.\n  let increase = main.length - before\n  this.parents().forEach(doc => {\n    // increase length on each effected phrase\n    doc.list.forEach(p => {\n      let terms = p.terms()\n      for (let i = 0; i < terms.length; i++) {\n        if (terms[i].id === main.start) {\n          p.length += increase\n          break\n        }\n      }\n    })\n    // remove redundant phrases now\n    doc.list = doc.list.filter(p => removed[p.start] !== true)\n  })\n  // return one major phrase\n  return this.buildFrom([main])\n}\n","// compress a list of things by frequency\nconst topk = function(list) {\n  let counts = {}\n  list.forEach(a => {\n    counts[a] = counts[a] || 0\n    counts[a] += 1\n  })\n  let arr = Object.keys(counts)\n  arr = arr.sort((a, b) => {\n    if (counts[a] > counts[b]) {\n      return -1\n    } else {\n      return 1\n    }\n  })\n  // arr = arr.filter(a => counts[a] > 1)\n  return arr.map(a => [a, counts[a]])\n}\n\n// remove implied tags, like 'Noun' when we have 'Plural'\nconst reduceTags = function(tags, world) {\n  let tagset = world.tags\n  let implied = []\n  tags.forEach(tag => {\n    if (tagset[tag] && tagset[tag].isA) {\n      implied = implied.concat(tagset[tag].isA)\n    }\n  })\n  implied = implied.reduce((h, tag) => {\n    h[tag] = true\n    return h\n  }, {})\n  tags = tags.filter(tag => !implied[tag])\n  // tags\n  return tags\n}\n\n/** store a parsed document for later use */\nexports.export = function() {\n  let phraseList = this.json({ text: true, trim: false, terms: { tags: true, whitespace: true } })\n  // let phraseList = json.map(p => p.terms)\n  let allTags = []\n  phraseList.forEach(p => {\n    p.terms.forEach(t => {\n      // reduce redundant tags\n      let tags = reduceTags(t.tags, this.world)\n      allTags = allTags.concat(tags)\n    })\n  })\n  // compress the top tags\n  allTags = topk(allTags)\n  let tagMap = {}\n  allTags.forEach((a, i) => {\n    tagMap[a[0]] = i\n  })\n\n  //use index numbers instead of redundant tag-names\n  phraseList = phraseList.map(p => {\n    let terms = p.terms.map(term => {\n      let tags = term.tags\n      tags = reduceTags(tags, this.world)\n      tags = tags.map(tag => tagMap[tag])\n      tags = tags.join(',')\n      return tags\n    })\n    terms = terms.join('|')\n    return [p.text, terms]\n  })\n\n  return {\n    tags: Object.keys(tagMap),\n    // words: {},\n    list: phraseList,\n  }\n}\n","module.exports = Object.assign(\n  {},\n  require('./01-utils'),\n  require('./02-accessors'),\n  require('./03-match'),\n  require('./04-case'),\n  require('./05-whitespace'),\n  require('./06-tag'),\n  require('./07-loops'),\n  require('./08-replace'),\n  require('./09-insert'),\n  require('./10-sort'),\n  require('./11-out'),\n  require('./12-normalize'),\n  require('./13-json'),\n  require('./14-split'),\n  require('./15-join'),\n  require('./16-export')\n)\n","//these are selections that don't require their own subclasses/methods\n\n/** split-up results by each term */\nexports.terms = function(n) {\n  let r = this.match('.')\n  if (typeof n === 'number') {\n    r = r.get(n)\n  }\n  return r\n}\nexports.words = exports.terms\n\n/** all terms connected with a hyphen or dash */\nexports.hyphenated = function(n) {\n  let r = this.match('@hasHyphen .')\n  if (typeof n === 'number') {\n    r = r.get(n)\n  }\n  return r\n}\n/** return anything tagged as a phone number */\nexports.phoneNumbers = function(n) {\n  let r = this.splitAfter('@hasComma')\n  r = r.match('#PhoneNumber+')\n  if (typeof n === 'number') {\n    r = r.get(n)\n  }\n  return r\n}\n","// allow helper methods like .adjectives() and .adverbs()\nconst arr = [\n  // ['adjectives', '#Adjective'],\n  ['hashTags', '#HashTag'],\n  ['emails', '#Email'],\n  ['atMentions', '#AtMention'],\n  ['urls', '#Url'],\n  ['adverbs', '#Adverb'],\n  ['pronouns', '#Pronoun'],\n  ['fractions', '#Fraction'],\n  ['money', '#Money'],\n  ['conjunctions', '#Conjunction'],\n  ['prepositions', '#Preposition'],\n  ['abbreviations', '#Abbreviation'],\n  ['romanNumerals', '#RomanNumeral'],\n]\nlet methods = {}\narr.forEach(a => {\n  methods[a[0]] = function(n) {\n    let r = this.match(a[1])\n    if (typeof n === 'number') {\n      r = r.get(n)\n    }\n    return r\n  }\n})\nmodule.exports = methods\n","const findMethods = require('./find')\nconst simpleMethods = require('./simple')\n\nmodule.exports = Object.assign({}, findMethods, simpleMethods)\n","/** match a word-sequence, like 'super bowl' in the lexicon */\nconst tryMultiple = function(terms, t, world) {\n  let lex = world.lexicon\n  //try a two-word version\n  let txt = terms[t].reduced + ' ' + terms[t + 1].reduced\n  if (lex[txt] !== undefined && lex.hasOwnProperty(txt) === true) {\n    terms[t].tag(lex[txt], 'lexicon-two', world)\n    terms[t + 1].tag(lex[txt], 'lexicon-two', world)\n    return 1\n  }\n  //try a three-word version?\n  if (t + 2 < terms.length) {\n    txt += ' ' + terms[t + 2].reduced\n    if (lex[txt] !== undefined && lex.hasOwnProperty(txt) === true) {\n      terms[t].tag(lex[txt], 'lexicon-three', world)\n      terms[t + 1].tag(lex[txt], 'lexicon-three', world)\n      terms[t + 2].tag(lex[txt], 'lexicon-three', world)\n      return 2\n    }\n  }\n  //try a four-word version?\n  if (t + 3 < terms.length) {\n    txt += ' ' + terms[t + 3].reduced\n    if (lex[txt] !== undefined && lex.hasOwnProperty(txt) === true) {\n      terms[t].tag(lex[txt], 'lexicon-four', world)\n      terms[t + 1].tag(lex[txt], 'lexicon-four', world)\n      terms[t + 2].tag(lex[txt], 'lexicon-four', world)\n      terms[t + 3].tag(lex[txt], 'lexicon-four', world)\n      return 3\n    }\n  }\n  return 0\n}\n\n/** look at each word in our list of known-words */\nconst checkLexicon = function(terms, world) {\n  let lex = world.lexicon\n  let hasCompound = world.hasCompound // use reduced?\n  //go through each term, and check the lexicon\n  for (let t = 0; t < terms.length; t += 1) {\n    let str = terms[t].clean\n    //is it the start of a compound word, like 'super bowl'?\n    if (hasCompound[str] === true && t + 1 < terms.length) {\n      let foundWords = tryMultiple(terms, t, world)\n      if (foundWords > 0) {\n        t += foundWords //skip any already-found words\n        continue\n      }\n    }\n    //try one-word lexicon\n    if (lex[str] !== undefined && lex.hasOwnProperty(str) === true) {\n      terms[t].tag(lex[str], 'lexicon', world)\n    }\n    // look at reduced version of term, too\n    if (str !== terms[t].reduced && lex.hasOwnProperty(terms[t].reduced) === true) {\n      terms[t].tag(lex[terms[t].reduced], 'lexicon', world)\n    }\n  }\n  return terms\n}\nmodule.exports = checkLexicon\n","const apostrophes = /[\\'‘’‛‵′`´]$/\nconst oneLetterAcronym = /^[A-Z]('s|,)?$/\n\nconst oneLetterWord = {\n  I: true,\n  A: true,\n}\n\n//\nconst checkPunctuation = function(terms, i, world) {\n  let term = terms[i]\n\n  //check hyphenation\n  // if (term.post.indexOf('-') !== -1 && terms[i + 1] && terms[i + 1].pre === '') {\n  //   term.tag('Hyphenated', 'has-hyphen', world)\n  // }\n\n  //an end-tick (trailing apostrophe) - flanders', or Carlos'\n  if (apostrophes.test(term.text)) {\n    if (!apostrophes.test(term.pre) && !apostrophes.test(term.post) && term.clean.length > 2) {\n      let endChar = term.clean[term.clean.length - 2]\n      //flanders'\n      if (endChar === 's') {\n        term.tag(['Possessive', 'Noun'], 'end-tick', world)\n        return\n      }\n      //chillin'\n      if (endChar === 'n') {\n        term.tag(['Gerund'], 'chillin', world)\n      }\n    }\n  }\n  // NASA\n  if (term.isAcronym()) {\n    term.tag('Acronym', 'acronym-step', world)\n    term.tag('Noun', 'acronym-infer', world)\n  } else if (!oneLetterWord.hasOwnProperty(term.text) && oneLetterAcronym.test(term.text)) {\n    term.tag('Acronym', 'one-letter-acronym', world)\n    term.tag('Noun', 'one-letter-infer', world)\n  }\n}\nmodule.exports = checkPunctuation\n","//these are regexes applied to t.text, instead of t.clean\n// order matters.\nmodule.exports = [\n  //phone numbers\n  [/^[0-9]{3}-[0-9]{4}$/, 'PhoneNumber'], //589-3809\n  [/^[0-9]{3}[ -]?[0-9]{3}-[0-9]{4}$/, 'PhoneNumber'], //632-589-3809\n\n  //money\n  [/^[-+]?[$€¥£][0-9]+(.[0-9]{1,2})?([a-z]{1,4})?$/, ['Money', 'Value']], //like $5.30\n  [/^[-+]?[$€¥£][0-9]{1,3}(,[0-9]{3})+(.[0-9]{1,2})?$/, ['Money', 'Value']], //like $5,231.30\n  [/^[-+]?[0-9]([0-9,.]+)?(usd|eur|jpy|gbp|cad|aud|chf|cny|hkd|nzd|kr|rub)$/i, ['Money', 'Value']], //like 400usd\n\n  //web tags\n  [/^\\w+@\\w+\\.[a-z]{2,3}$/, 'Email'], //not fancy\n  [/^#[a-z0-9_\\u00C0-\\u00FF]{2,}$/, 'HashTag'],\n  [/^@\\w{2,}$/, 'AtMention'],\n  [/^(https?:\\/\\/|www\\.)\\w+\\.[a-z]{2,3}/, 'Url'], //with http/www\n  [/^[\\w\\.\\/]+\\.(com|net|gov|org|ly|edu|info|biz|ru|jp|de|in|uk|br)/, 'Url'], //http://mostpopularwebsites.net/top-level-domain\n\n  //dates/times\n  [/^[012]?[0-9](:[0-5][0-9])(:[0-5][0-9])$/, 'Time'], //4:32:32\n  [/^[012]?[0-9](:[0-5][0-9])?(:[0-5][0-9])? ?(am|pm)$/, 'Time'], //4pm\n  [/^[012]?[0-9](:[0-5][0-9])(:[0-5][0-9])? ?(am|pm)?$/, 'Time'], //4:00pm\n  [/^[PMCE]ST$/, 'Time'], //PST, time zone abbrevs\n  [/^utc ?[+-]?[0-9]+?$/, 'Time'], //UTC 8+\n  [/^[a-z0-9]*? o\\'?clock$/, 'Time'], //3 oclock\n  [/^[0-9]{1,4}-[0-9]{1,2}-[0-9]{1,4}$/, 'Date'], // 03-02-89\n  [/^[0-9]{1,4}\\/[0-9]{1,2}\\/[0-9]{1,4}$/, 'Date'], // 03/02/89\n\n  //names\n  [/^ma?c\\'.*/, 'LastName'], //mc'adams\n  [/^o\\'[drlkn].*/, 'LastName'], //o'douggan\n  [/^ma?cd[aeiou]/, 'LastName'], //macdonell - Last patterns https://en.wikipedia.org/wiki/List_of_family_name_affixes\n\n  //slang things\n  [/^(lol)+[sz]$/, 'Expression'], //lol\n  [/^(un|de|re)\\\\-[a-z\\u00C0-\\u00FF]{2}/, 'Verb'],\n  [/^[\\-\\+]?[0-9]+(\\.[0-9])*$/, ['Cardinal', 'NumericValue']],\n  [/^(over|under)[a-z]{2,}/, 'Adjective'],\n  [/^[0-9]{1,4}\\.[0-9]{1,2}\\.[0-9]{1,4}$/, 'Date'], // 03-02-89\n\n  //numbers\n  [/^[\\-\\+]?[0-9][0-9,]*(\\.[0-9])*$/, ['Cardinal', 'NumericValue']], //like 5\n  [/^[-+]?[0-9]+(.[0-9]+)?$/, ['Cardinal', 'NumericValue']], //like +5.0\n  [/^[0-9\\.]{1,4}(st|nd|rd|th)?[-–][0-9\\.]{1,4}(st|nd|rd|th)?$/, 'NumberRange'], //5-7\n  [/^[-+]?[0-9.,]{1,3}(,[0-9.,]{3})+(.[0-9]+)?$/, 'NiceNumber'], //like 5,999.0\n  [/^.?[0-9]+([0-9,.]+)?%$/, ['Percent', 'Cardinal', 'NumericValue']], //7%  ..\n  [/^[0-9]{1,4}\\/[0-9]{1,4}$/, 'Fraction'], //3/2ths\n  [/^[0-9\\.]{1,2}[-–][0-9]{1,2}$/, ['Value', 'NumberRange']], //7-8\n  [/^[0-9][0-9,\\.]*(st|nd|rd|r?th)$/, ['NumericValue', 'Ordinal']], //like 5th\n  [/[0-9]\\+$/, ['Cardinal', 'NumericValue']], //10+\n  [/^[0-9]+(st|nd|rd|th)$/, 'Ordinal'], //like 5th\n  [/^[0-9\\.]+([a-z]{1,4})$/, 'Value'], //like 5tbsp\n]\n","const regex = require('./regexes')\n\nconst romanNumeral = /^[IVXLCDM]{2,}$/\nconst romanNumValid = /^M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$/ //  https://stackoverflow.com/a/267405/168877\n\n//try each of the ^regexes in our list\nconst checkRegex = function(term, world) {\n  let str = term.text\n  // do them all!\n  for (let r = 0; r < regex.length; r += 1) {\n    if (regex[r][0].test(str) === true) {\n      term.tagSafe(regex[r][1], 'regex #' + r, world)\n      break\n    }\n  }\n  // do some more!\n  //roman numberals - XVII\n  if (term.text.length >= 2 && romanNumeral.test(str) && romanNumValid.test(str)) {\n    term.tag('RomanNumeral', 'xvii', world)\n  }\n}\nmodule.exports = checkRegex\n","//regex suffix patterns and their most common parts of speech,\n//built using wordnet, by spencer kelly.\n//this mapping shrinks-down the uglified build\nconst Adj = 'Adjective'\nconst Inf = 'Infinitive'\nconst Pres = 'PresentTense'\nconst Sing = 'Singular'\nconst Past = 'PastTense'\nconst Adverb = 'Adverb'\nconst Exp = 'Expression'\nconst Actor = 'Actor'\nconst Verb = 'Verb'\nconst Noun = 'Noun'\nconst Last = 'LastName'\n//the order here matters.\n\n//regexes indexed by mandated last-character\nmodule.exports = {\n  a: [\n    [/.[aeiou]na$/, Noun],\n    [/.[oau][wvl]ska$/, Last], //polish (female)\n    [/.[^aeiou]ica$/, Sing],\n    [/^([hyj]a)+$/, Exp], //hahah\n  ],\n  c: [[/.[^aeiou]ic$/, Adj]],\n  d: [\n    [/.[ia]sed$/, Adj],\n    [/.[gt]led$/, Adj],\n    [/.[td]ed$/, Past],\n    [/.[aeiou]red$/, Past],\n    [/.[^aeiou]led$/, Past], //rumbled\n    [/[^aeiou]ard$/, Sing],\n    [/[aeiou][^aeiou]id$/, Adj],\n    [/[aeiou]c?ked$/, Past], //hooked\n    [/[^aeiou][aeiou][tvx]ed$/, Past], //boxed\n    [/.[vrl]id$/, Adj],\n  ],\n  e: [\n    [/.[lnr]ize$/, Inf],\n    [/.[^aeiou]ise$/, Inf],\n    [/.[aeiou]te$/, Inf],\n    [/.[^aeiou][ai]ble$/, Adj],\n    [/.[^aeiou]eable$/, Adj],\n    [/.[ts]ive$/, Adj],\n  ],\n  h: [\n    [/.[^aeiouf]ish$/, Adj],\n    [/.v[iy]ch$/, Last], //east-europe\n    [/^ug?h+$/, Exp], //uhh\n    [/^uh[ -]?oh$/, Exp], //uhoh\n  ],\n  i: [\n    [/.[oau][wvl]ski$/, Last], //polish (male)\n  ],\n  k: [\n    [/^(k)+$/, Exp], //kkkk\n  ],\n  l: [[/.[gl]ial$/, Adj], [/.[^aeiou]ful$/, Adj], [/.[nrtumcd]al$/, Adj], [/.[^aeiou][ei]al$/, Adj]],\n  m: [\n    [/.[^aeiou]ium$/, Sing],\n    [/[^aeiou]ism$/, Sing],\n    [/^h*u*m+$/, Exp], //mmmmmmm / ummmm / huuuuuummmmmm\n    [/^\\d+ ?[ap]m$/, 'Date'],\n  ],\n  n: [[/.[lsrnpb]ian$/, Adj], [/[^aeiou]ician$/, Actor]],\n  o: [\n    [/^no+$/, Exp], //noooo\n    [/^(yo)+$/, Exp], //yoyo\n    [/^woo+[pt]?$/, Exp], //woo\n  ],\n  r: [[/.[ilk]er$/, 'Comparative'], [/[aeiou][pns]er$/, Sing], [/[^i]fer$/, Inf], [/.[^aeiou][ao]pher$/, Actor]],\n  t: [[/.[di]est$/, 'Superlative'], [/.[icldtgrv]ent$/, Adj], [/[aeiou].*ist$/, Adj], [/^[a-z]et$/, Verb]],\n  s: [\n    [/.[rln]ates$/, Pres],\n    [/.[^z]ens$/, Verb],\n    [/.[lstrn]us$/, Sing],\n    [/[aeiou][^aeiou]is$/, Sing],\n    [/[a-z]\\'s$/, Noun],\n    [/^yes+$/, Exp], //yessss\n  ],\n  v: [\n    [/.[^aeiou][ai][kln]ov$/, Last], //east-europe\n  ],\n  y: [\n    [/.[cts]hy$/, Adj],\n    [/.[st]ty$/, Adj],\n    [/.[gk]y$/, Adj],\n    [/.[tnl]ary$/, Adj],\n    [/.[oe]ry$/, Sing],\n    [/[rdntkbhs]ly$/, Adverb],\n    [/...lly$/, Adverb],\n    [/[bszmp]{2}y$/, Adj],\n    [/.(gg|bb|zz)ly$/, Adj],\n    [/.[aeiou]my$/, Adj],\n    [/[ea]{2}zy$/, Adj],\n    [/.[^aeiou]ity$/, Sing],\n  ],\n}\n","//just a foolish lookup of known suffixes\nconst Adj = 'Adjective'\nconst Inf = 'Infinitive'\nconst Pres = 'PresentTense'\nconst Sing = 'Singular'\nconst Past = 'PastTense'\nconst Avb = 'Adverb'\nconst Plrl = 'Plural'\nconst Actor = 'Actor'\nconst Vb = 'Verb'\nconst Noun = 'Noun'\nconst Last = 'LastName'\nconst Modal = 'Modal'\n\n// find any issues - https://observablehq.com/@spencermountain/suffix-word-lookup\nmodule.exports = [\n  null, //0\n  null, //1\n  {\n    //2-letter\n    ea: Sing,\n    ia: Noun,\n    ic: Adj,\n    ly: Avb,\n    \"'n\": Vb,\n    \"'t\": Vb,\n  },\n  {\n    //3-letter\n    que: Adj,\n    lar: Adj,\n    ffy: Adj,\n    nny: Adj,\n    rmy: Adj,\n    azy: Adj,\n    oid: Adj,\n    mum: Adj,\n    ous: Adj,\n    end: Vb,\n    sis: Sing,\n    rol: Sing,\n    ize: Inf,\n    ify: Inf,\n    zes: Pres,\n    nes: Pres,\n    ing: 'Gerund', //likely to be converted to Adj after lexicon pass\n    ' so': Avb,\n    \"'ll\": Modal,\n    \"'re\": 'Copula',\n  },\n  {\n    //4-letter\n    teen: 'Value',\n    tors: Noun,\n    amed: Past,\n    ched: Past,\n    ends: Vb,\n    oses: Pres,\n    fies: Pres,\n    ects: Pres,\n    nded: Past,\n    cede: Inf,\n    tage: Inf,\n    gate: Inf,\n    vice: Sing,\n    tion: Sing,\n    cted: Past,\n    ette: Sing,\n    some: Adj,\n    llen: Adj,\n    ried: Adj,\n    gone: Adj,\n    made: Adj,\n    fore: Avb,\n    less: Avb,\n    ices: Plrl,\n    ions: Plrl,\n    ints: Plrl,\n    aped: Past,\n    lked: Past,\n    ould: Modal,\n    tive: Actor,\n    sson: Last, //swedish male\n    czyk: Last, //polish (male)\n    chuk: Last, //east-europe\n    enko: Last, //east-europe\n    akis: Last, //greek\n    nsen: Last, //norway\n  },\n  {\n    //5-letter\n    fully: Avb,\n    where: Avb,\n    wards: Avb,\n    urned: Past,\n    tized: Past,\n    eased: Past,\n    ances: Plrl,\n    tures: Plrl,\n    ports: Plrl,\n    ettes: Plrl,\n    ities: Plrl,\n    rough: Adj,\n    bound: Adj,\n    tieth: 'Ordinal',\n    ishes: Pres,\n    tches: Pres,\n    nssen: Last, //norway\n    marek: Last, //polish (male)\n  },\n  {\n    //6-letter\n    keeper: Actor,\n    logist: Actor,\n    auskas: Last, //lithuania\n    teenth: 'Value',\n  },\n  {\n    //7-letter\n    sdottir: Last, //swedish female\n    opoulos: Last, //greek\n  },\n]\n","const regexes = require('./suffixes/regex')\nconst suffixList = require('./suffixes/suffixList')\n\nconst suffixRegexes = function(term, world) {\n  let str = term.clean\n  let char = str[str.length - 1]\n  if (regexes.hasOwnProperty(char) === true) {\n    let regs = regexes[char]\n    for (let r = 0; r < regs.length; r += 1) {\n      if (regs[r][0].test(str) === true) {\n        term.tagSafe(regs[r][1], `endsWith ${char} #${r}`, world)\n        break\n      }\n    }\n  }\n}\n\n//sweep-through all suffixes\nconst knownSuffixes = function(term, world) {\n  const len = term.clean.length\n  let max = 7\n  if (len <= max) {\n    max = len - 1\n  }\n  for (let i = max; i > 1; i -= 1) {\n    let str = term.clean.substr(len - i, len)\n    if (suffixList[str.length].hasOwnProperty(str) === true) {\n      let tag = suffixList[str.length][str]\n      term.tagSafe(tag, 'suffix -' + str, world)\n      break\n    }\n  }\n}\n\n//all-the-way-down!\nconst checkRegex = function(term, world) {\n  suffixRegexes(term, world)\n  knownSuffixes(term, world)\n}\nmodule.exports = checkRegex\n","const steps = {\n  lexicon: require('./01-lexicon'),\n  punctuation: require('./02-punctuation'),\n  regex: require('./03-regex'),\n  suffix: require('./04-suffixes'),\n}\n\n//'lookups' look at a term by itself\nconst lookups = function(doc) {\n  let terms = doc.termList()\n  let world = doc.world\n  //our list of known-words\n  steps.lexicon(terms, world)\n\n  //try these other methods\n  for (let i = 0; i < terms.length; i += 1) {\n    let term = terms[i]\n    //or maybe some helpful punctuation\n    steps.punctuation(terms, i, world)\n    //mostly prefix checks\n    steps.regex(term, world)\n    //maybe we can guess\n    steps.suffix(term, world)\n  }\n  return doc\n}\nmodule.exports = lookups\n","//markov-like stats about co-occurance, for hints about unknown terms\n//basically, a little-bit better than the noun-fallback\n//just top n-grams from nlp tags, generated from nlp-corpus\n\n//after this word, here's what happens usually\nlet afterThisWord = {\n  i: 'Verb', //44% //i walk..\n  first: 'Noun', //50% //first principles..\n  it: 'Verb', //33%\n  there: 'Verb', //35%\n  not: 'Verb', //33%\n  because: 'Noun', //31%\n  if: 'Noun', //32%\n  but: 'Noun', //26%\n  who: 'Verb', //40%\n  this: 'Noun', //37%\n  his: 'Noun', //48%\n  when: 'Noun', //33%\n  you: 'Verb', //35%\n  very: 'Adjective', // 39%\n  old: 'Noun', //51%\n  never: 'Verb', //42%\n  before: 'Noun', //28%\n}\n\n//in advance of this word, this is what happens usually\nlet beforeThisWord = {\n  there: 'Verb', //23% // be there\n  me: 'Verb', //31% //see me\n  man: 'Adjective', // 80% //quiet man\n  only: 'Verb', //27% //sees only\n  him: 'Verb', //32% //show him\n  were: 'Noun', //48% //we were\n  took: 'Noun', //38% //he took\n  himself: 'Verb', //31% //see himself\n  went: 'Noun', //43% //he went\n  who: 'Noun', //47% //person who\n  jr: 'Person',\n}\n\n//following this POS, this is likely\nlet afterThisPOS = {\n  Adjective: 'Noun', //36% //blue dress\n  Possessive: 'Noun', //41% //his song\n  Determiner: 'Noun', //47%\n  Adverb: 'Verb', //20%\n  Pronoun: 'Verb', //40%\n  Value: 'Noun', //47%\n  Ordinal: 'Noun', //53%\n  Modal: 'Verb', //35%\n  Superlative: 'Noun', //43%\n  Demonym: 'Noun', //38%\n  Honorific: 'Person', //\n}\n\n//in advance of this POS, this is likely\nlet beforeThisPOS = {\n  Copula: 'Noun', //44% //spencer is\n  PastTense: 'Noun', //33% //spencer walked\n  Conjunction: 'Noun', //36%\n  Modal: 'Noun', //38%\n  Pluperfect: 'Noun', //40%\n  PerfectTense: 'Verb', //32%\n}\nmodule.exports = {\n  beforeThisWord: beforeThisWord,\n  afterThisWord: afterThisWord,\n\n  beforeThisPos: beforeThisPOS,\n  afterThisPos: afterThisPOS,\n}\n","const markov = require('./data/markov')\nconst afterKeys = Object.keys(markov.afterThisPos)\nconst beforeKeys = Object.keys(markov.beforeThisPos)\n\nconst checkNeighbours = function(terms, world) {\n  for (let i = 0; i < terms.length; i += 1) {\n    let term = terms[i]\n    //do we still need a tag?\n    if (term.isKnown() === true) {\n      continue\n    }\n    //ok, this term needs a tag.\n    //look at previous word for clues..\n    let lastTerm = terms[i - 1]\n    if (lastTerm) {\n      // 'foobar term'\n      if (markov.afterThisWord.hasOwnProperty(lastTerm.clean) === true) {\n        let tag = markov.afterThisWord[lastTerm.clean]\n        term.tag(tag, 'after-' + lastTerm.clean, world)\n        continue\n      }\n      // 'Tag term'\n      // (look at previous POS tags for clues..)\n      let foundTag = afterKeys.find(tag => lastTerm.tags[tag])\n      if (foundTag !== undefined) {\n        let tag = markov.afterThisPos[foundTag]\n        term.tag(tag, 'after-' + foundTag, world)\n        continue\n      }\n    }\n\n    //look at next word for clues..\n    let nextTerm = terms[i + 1]\n    if (nextTerm) {\n      // 'term foobar'\n      if (markov.beforeThisWord.hasOwnProperty(nextTerm.clean) === true) {\n        let tag = markov.beforeThisWord[nextTerm.clean]\n        term.tag(tag, 'before-' + nextTerm.clean, world)\n        continue\n      }\n      // 'term Tag'\n      // (look at next POS tags for clues..)\n      let foundTag = beforeKeys.find(tag => nextTerm.tags[tag])\n      if (foundTag !== undefined) {\n        let tag = markov.beforeThisPos[foundTag]\n        term.tag(tag, 'before-' + foundTag, world)\n        continue\n      }\n    }\n  }\n}\nmodule.exports = checkNeighbours\n","const titleCase = /^[A-Z][a-z'\\u00C0-\\u00FF]/\nconst hasNumber = /[0-9]/\n\n/** look for any grammar signals based on capital/lowercase */\nconst checkCase = function(terms, world) {\n  terms.forEach((term, i) => {\n    //is it a titlecased word?\n    if (titleCase.test(term.text) === true && hasNumber.test(term.text) === false) {\n      // tag it as titlecase, if possible\n      if (i !== 0) {\n        term.tag('TitleCase', 'case', world)\n      } else if (term.tags.Person || term.tags.Organization || term.tags.Place) {\n        term.tag('TitleCase', 'case-person', world)\n      }\n      // can we call it a noun?\n      if (i !== 0) {\n        //sure!\n        term.tag('ProperNoun', 'case-noun', world)\n      }\n    }\n  })\n}\nmodule.exports = checkCase\n","//similar to plural/singularize rules, but not the same\nconst isPlural = [\n  /(^v)ies$/i,\n  /ises$/i,\n  /ives$/i,\n  /(antenn|formul|nebul|vertebr|vit)ae$/i,\n  /(octop|vir|radi|nucle|fung|cact|stimul)i$/i,\n  /(buffal|tomat|tornad)oes$/i,\n  /(analy|ba|diagno|parenthe|progno|synop|the)ses$/i,\n  /(vert|ind|cort)ices$/i,\n  /(matr|append)ices$/i,\n  /(x|ch|ss|sh|s|z|o)es$/i,\n  /is$/i,\n  /men$/i,\n  /news$/i,\n  /.tia$/i,\n  /(^f)ves$/i,\n  /(lr)ves$/i,\n  /(^aeiouy|qu)ies$/i,\n  /(m|l)ice$/i,\n  /(cris|ax|test)es$/i,\n  /(alias|status)es$/i,\n  /ics$/i,\n]\n\n//similar to plural/singularize rules, but not the same\nconst isSingular = [\n  /(ax|test)is$/i,\n  /(octop|vir|radi|nucle|fung|cact|stimul)us$/i,\n  /(octop|vir)i$/i,\n  /(rl)f$/i,\n  /(alias|status)$/i,\n  /(bu)s$/i,\n  /(al|ad|at|er|et|ed|ad)o$/i,\n  /(ti)um$/i,\n  /(ti)a$/i,\n  /sis$/i,\n  /(?:(^f)fe|(lr)f)$/i,\n  /hive$/i,\n  /s[aeiou]+ns$/i, // sans, siens\n  /(^aeiouy|qu)y$/i,\n  /(x|ch|ss|sh|z)$/i,\n  /(matr|vert|ind|cort)(ix|ex)$/i,\n  /(m|l)ouse$/i,\n  /(m|l)ice$/i,\n  /(antenn|formul|nebul|vertebr|vit)a$/i,\n  /.sis$/i,\n  /^(?!talis|.*hu)(.*)man$/i,\n]\nmodule.exports = {\n  isSingular: isSingular,\n  isPlural: isPlural,\n}\n","//these tags don't have plurals\nconst noPlurals = ['Uncountable', 'Pronoun', 'Place', 'Value', 'Person', 'Month', 'WeekDay', 'Holiday']\nconst rules = require('./data/isPlural')\nconst notPlural = [/ss$/, /sis$/, /[^aeiou][uo]s$/, /'s$/]\nconst notSingular = [/i$/, /ae$/]\n\n/** turn nouns into singular/plural */\nconst checkPlural = function(t, world) {\n  if (t.tags.Noun && !t.tags.Acronym) {\n    let str = t.clean\n    //skip existing tags, fast\n    if (t.tags.Singular || t.tags.Plural) {\n      return\n    }\n    //too short\n    if (str.length <= 3) {\n      t.tag('Singular', 'short-singular', world)\n      return\n    }\n    //is it impossible to be plural?\n    if (noPlurals.find(tag => t.tags[tag])) {\n      return\n    }\n    // isPlural suffix rules\n    if (rules.isPlural.find(reg => reg.test(str))) {\n      t.tag('Plural', 'plural-rules', world)\n      return\n    }\n    // isSingular suffix rules\n    if (rules.isSingular.find(reg => reg.test(str))) {\n      t.tag('Singular', 'singular-rules', world)\n      return\n    }\n\n    // finally, fallback 'looks plural' rules..\n    if (/s$/.test(str) === true) {\n      //avoid anything too sketchy to be plural\n      if (notPlural.find(reg => reg.test(str))) {\n        return\n      }\n      t.tag('Plural', 'plural-fallback', world)\n      return\n    }\n    //avoid anything too sketchy to be singular\n    if (notSingular.find(reg => reg.test(str))) {\n      return\n    }\n    t.tag('Singular', 'singular-fallback', world)\n  }\n}\nmodule.exports = checkPlural\n","const hasPrefix = /^(re|un)-?[a-z\\u00C0-\\u00FF]/\nconst prefix = /^(re|un)-?/\n\n/** check 'rewatch' in lexicon as 'watch' */\nconst checkPrefix = function(terms, world) {\n  let lex = world.lexicon\n  terms.forEach(term => {\n    // skip if we have a good tag already\n    if (term.isKnown() === true) {\n      return\n    }\n    //does it start with 'un|re'\n    if (hasPrefix.test(term.clean) === true) {\n      // look for the root word in the lexicon:\n      let stem = term.clean.replace(prefix, '')\n      if (stem && stem.length > 3 && lex[stem] !== undefined && lex.hasOwnProperty(stem) === true) {\n        term.tag(lex[stem], 'stem-' + stem, world)\n      }\n    }\n  })\n}\nmodule.exports = checkPrefix\n","const step = {\n  neighbours: require('./01-neighbours'),\n  case: require('./02-case'),\n  plural: require('./04-plurals'),\n  stem: require('./03-stem'),\n}\n//\nconst fallbacks = function(doc) {\n  let terms = doc.termList()\n  let world = doc.world\n\n  // if it's empty, consult it's neighbours, first\n  step.neighbours(terms, world)\n\n  // is there a case-sensitive clue?\n  step.case(terms, world)\n\n  // check 'rewatch' as 'watch'\n  step.stem(terms, world)\n\n  // ... fallback to a noun!\n  terms.forEach(t => {\n    if (t.isKnown() === false) {\n      t.tag('Noun', 'noun-fallback', doc.world)\n    }\n  })\n\n  //are the nouns singular or plural?\n  terms.forEach(t => {\n    step.plural(t, doc.world)\n  })\n\n  return doc\n}\nmodule.exports = fallbacks\n","const hasNegative = /n't$/\n\nconst irregulars = {\n  \"won't\": ['will', 'not'],\n  wont: ['will', 'not'],\n  \"can't\": ['can', 'not'],\n  cant: ['can', 'not'],\n  cannot: ['can', 'not'],\n  \"shan't\": ['should', 'not'],\n  dont: ['do', 'not'],\n  dun: ['do', 'not'],\n  // \"ain't\" is ambiguous for is/was\n}\n\nconst checkNegative = function(term) {\n  //check named-ones\n  if (irregulars.hasOwnProperty(term.clean) === true) {\n    return irregulars[term.clean]\n  }\n  //try it normally\n  if (hasNegative.test(term.clean) === true) {\n    let main = term.clean.replace(hasNegative, '')\n    return [main, 'not']\n  }\n  return null\n}\nmodule.exports = checkNegative\n","const contraction = /([a-z\\u00C0-\\u00FF]+)'([a-z]{1,2})$/i\n\n//these ones don't seem to be ambiguous\nconst easy = {\n  ll: 'will',\n  ve: 'have',\n  re: 'are',\n  m: 'am',\n  \"n't\": 'not',\n}\n//\nconst checkApostrophe = function(term) {\n  let parts = term.text.match(contraction)\n  if (parts === null) {\n    return null\n  }\n  if (easy.hasOwnProperty(parts[2])) {\n    return [parts[1], easy[parts[2]]]\n  }\n  return null\n}\nmodule.exports = checkApostrophe\n","const irregulars = {\n  wanna: ['want', 'to'],\n  gonna: ['going', 'to'],\n  im: ['i', 'am'],\n  alot: ['a', 'lot'],\n  ive: ['i', 'have'],\n  imma: ['I', 'will'],\n\n  \"where'd\": ['where', 'did'],\n  whered: ['where', 'did'],\n  \"when'd\": ['when', 'did'],\n  whend: ['when', 'did'],\n  \"how'd\": ['how', 'did'],\n  howd: ['how', 'did'],\n  \"what'd\": ['what', 'did'],\n  whatd: ['what', 'did'],\n  \"let's\": ['let', 'us'],\n\n  //multiple word contractions\n  dunno: ['do', 'not', 'know'],\n  brb: ['be', 'right', 'back'],\n  gtg: ['got', 'to', 'go'],\n  irl: ['in', 'real', 'life'],\n  tbh: ['to', 'be', 'honest'],\n  imo: ['in', 'my', 'opinion'],\n  til: ['today', 'i', 'learned'],\n  rn: ['right', 'now'],\n  twas: ['it', 'was'],\n  '@': ['at'],\n}\n\n// either 'is not' or 'are not'\nconst doAint = function(term, phrase) {\n  let terms = phrase.terms()\n  let index = terms.indexOf(term)\n  let before = terms.slice(0, index)\n  //look for the preceding noun\n  let noun = before.find(t => {\n    return t.tags.Noun\n  })\n  if (noun && noun.tags.Plural) {\n    return ['are', 'not']\n  }\n  return ['is', 'not']\n}\n\n//\nconst checkIrregulars = function(term, phrase) {\n  //this word needs it's own logic:\n  if (term.clean === `ain't` || term.clean === 'aint') {\n    return doAint(term, phrase)\n  }\n  //check white-list\n  if (irregulars.hasOwnProperty(term.clean)) {\n    return irregulars[term.clean]\n  }\n  return null\n}\nmodule.exports = checkIrregulars\n","const hasApostropheS = /([a-z\\u00C0-\\u00FF]+)'s$/i\n\nconst blacklist = {\n  that: true,\n  there: true,\n}\nconst isPossessive = (term, pool) => {\n  // if we already know it\n  if (term.tags.Possessive) {\n    return true\n  }\n  //a pronoun can't be possessive - \"he's house\"\n  if (term.tags.Pronoun || term.tags.QuestionWord) {\n    return false\n  }\n  if (blacklist.hasOwnProperty(term.clean)) {\n    return false\n  }\n  //if end of sentence, it is possessive - \"was spencer's\"\n  let nextTerm = pool.get(term.next)\n  if (!nextTerm) {\n    return true\n  }\n  //a gerund suggests 'is walking'\n  if (nextTerm.tags.Verb) {\n    //fix 'jamie's bite'\n    if (nextTerm.tags.Infinitive) {\n      return true\n    }\n    return false\n  }\n\n  //spencer's house\n  if (nextTerm.tags.Noun) {\n    return true\n  }\n  //rocket's red glare\n  let twoTerm = pool.get(nextTerm.next)\n  if (twoTerm && twoTerm.tags.Noun && !twoTerm.tags.Pronoun) {\n    return true\n  }\n  //othwerwise, an adjective suggests 'is good'\n  if (nextTerm.tags.Adjective || nextTerm.tags.Adverb || nextTerm.tags.Verb) {\n    return false\n  }\n  return false\n}\n\nconst isHas = (term, phrase) => {\n  let terms = phrase.terms()\n  let index = terms.indexOf(term)\n  let after = terms.slice(index + 1, index + 3)\n  //look for a past-tense verb\n  return after.find(t => {\n    return t.tags.PastTense\n  })\n}\n\nconst checkPossessive = function(term, phrase, world) {\n  //the rest of 's\n  let found = term.text.match(hasApostropheS)\n  if (found !== null) {\n    //spencer's thing vs spencer-is\n    if (isPossessive(term, phrase.pool) === true) {\n      term.tag('#Possessive', 'isPossessive', world)\n      return null\n    }\n    //'spencer is'\n    if (found !== null) {\n      if (isHas(term, phrase)) {\n        return [found[1], 'has']\n      }\n      return [found[1], 'is']\n    }\n  }\n  return null\n}\nmodule.exports = checkPossessive\n","const hasPerfect = /[a-z\\u00C0-\\u00FF]'d$/\n\n/** split `i'd` into 'i had', or 'i would' */\nconst checkPerfect = function(term, phrase) {\n  if (hasPerfect.test(term.clean)) {\n    let root = term.clean.replace(/'d$/, '')\n    //look at the next few words\n    let terms = phrase.terms()\n    let index = terms.indexOf(term)\n    let after = terms.slice(index + 1, index + 4)\n    //is it before a past-tense verb? - 'i'd walked'\n    for (let i = 0; i < after.length; i++) {\n      let t = after[i]\n      if (t.tags.Verb) {\n        if (t.tags.PastTense) {\n          return [root, 'had']\n        }\n        return [root, 'would']\n      }\n    }\n    //otherwise, 'i'd walk'\n    return [root, 'would']\n  }\n  return null\n}\nmodule.exports = checkPerfect\n","const isRange = /([0-9]+)[-–—]([0-9]+)$/i\n\n//split '2-4' into '2 to 4'\nconst checkRange = function(term) {\n  if (term.tags.PhoneNumber === true) {\n    return null\n  }\n  let parts = term.text.match(isRange)\n  if (parts !== null) {\n    return [parts[1], 'to', parts[2]]\n  }\n  return null\n}\nmodule.exports = checkRange\n","const checkLexicon = require('../01-init/01-lexicon')\nconst tokenize = require('../../01-tokenizer')\nconst checkNegative = require('./01-negative')\nconst checkApostrophe = require('./02-simple')\nconst checkIrregulars = require('./03-irregulars')\nconst checkPossessive = require('./04-possessive')\nconst checkPerfect = require('./05-perfectTense')\nconst checkRange = require('./06-ranges')\nconst isNumber = /^[0-9]+$/\n\nconst createPhrase = function(found, doc) {\n  //create phrase from ['would', 'not']\n  let phrase = tokenize.fromText(found.join(' '), doc.world, doc.pool())[0]\n  //tag it\n  let terms = phrase.terms()\n  checkLexicon(terms, doc.world)\n  //make these terms implicit\n  terms.forEach(t => {\n    t.implicit = t.text\n    t.text = ''\n    t.clean = ''\n    // remove whitespace for implicit terms\n    t.pre = ''\n    t.post = ''\n    // tag number-ranges\n    if (isNumber.test(t.implicit)) {\n      t.tags.Number = true\n      t.tags.Cardinal = true\n    }\n  })\n  return phrase\n}\n\nconst contractions = function(doc) {\n  let world = doc.world\n  doc.list.forEach(p => {\n    let terms = p.terms()\n    for (let i = 0; i < terms.length; i += 1) {\n      let term = terms[i]\n      let found = checkNegative(term)\n      found = found || checkApostrophe(term)\n      found = found || checkIrregulars(term, p)\n      found = found || checkPossessive(term, p, world)\n      found = found || checkPerfect(term, p)\n      found = found || checkRange(term, p)\n      //add them in\n      if (found !== null) {\n        let newPhrase = createPhrase(found, doc)\n        //set text as contraction\n        let firstTerm = newPhrase.terms(0)\n        firstTerm.text = term.text\n        //grab sub-phrase to remove\n        let match = p.buildFrom(term.id, 1, doc.pool())\n        match.replace(newPhrase, doc)\n      }\n    }\n  })\n  return doc\n}\nmodule.exports = contractions\n","//mostly pos-corections here\nconst miscCorrection = function(doc) {\n  //misc:\n  //foot/feet\n  doc.match('(foot|feet)').tag('Noun', 'foot-noun')\n  // blood, sweat, and tears\n  doc.match('(#Noun && @hasComma) #Noun (and|or) [#PresentTense]').tag('#Noun', 'noun-list')\n  //3 feet\n  doc.match('#Value [(foot|feet)]').tag('Unit', 'foot-unit')\n  //'u' as pronoun\n  doc.match('#Conjunction [u]').tag('Pronoun', 'u-pronoun-2')\n  //6 am\n  doc.match('#Holiday (day|eve)').tag('Holiday', 'holiday-day')\n  // the captain who\n  doc.match('#Noun [(who|whom)]').tag('Determiner', 'captain-who')\n  //timezones\n  doc.match('(standard|daylight|summer|eastern|pacific|central|mountain) standard? time').tag('Time', 'timezone')\n  //Brazilian pesos\n  doc.match('#Demonym #Currency').tag('Currency', 'demonym-currency')\n  //about to go\n  doc.match('[about to] #Adverb? #Verb').tag(['Auxiliary', 'Verb'], 'about-to')\n  //right of way\n  doc.match('(right|rights) of .').tag('Noun', 'right-of')\n  // a bit\n  doc.match('[much] #Adjective').tag('Adverb', 'bit-1')\n  doc.match('a [bit]').tag('Noun', 'bit-2')\n  doc.match('a bit much').tag('Determiner Adverb Adjective', 'bit-3')\n  doc.match('too much').tag('Adverb Adjective', 'bit-4')\n  // u r cool\n  doc.match('u r').tag('Pronoun #Copula', 'u r')\n  //swear-words as non-expression POS\n  //nsfw\n  doc.match('holy (shit|fuck|hell)').tag('Expression', 'swears-expression')\n  doc.match('#Determiner [(shit|damn|hell)]').tag('Noun', 'swears-noun')\n  doc.match('[(shit|damn|fuck)] (#Determiner|#Possessive|them)').tag('Verb', 'swears-verb')\n  doc\n    .match('#Copula fucked up?')\n    .not('#Copula')\n    .tag('Adjective', 'swears-adjective')\n\n  //ambig prepositions/conjunctions\n  let so = doc.if('so')\n  if (so.found === true) {\n    //so funny\n    so.match('[so] #Adjective').tag('Adverb', 'so-adv')\n    //so the\n    so.match('[so] #Noun').tag('Conjunction', 'so-conj')\n    //do so\n    so.match('do [so]').tag('Noun', 'so-noun')\n  }\n\n  let all = doc.if('all')\n  if (all.found === true) {\n    //all students\n    all.match('[all] #Determiner? #Noun').tag('Adjective', 'all-noun')\n    //it all fell apart\n    all.match('[all] #Verb').tag('Adverb', 'all-verb')\n  }\n\n  //the ambiguous word 'that' and 'which'\n  let which = doc.if('which')\n  if (which.found === true) {\n    //remind john that\n    which.match('#Verb #Adverb? #Noun [(that|which)]').tag('Preposition', 'that-prep')\n    //that car goes\n    which.match('that #Noun [#Verb]').tag('Determiner', 'that-determiner')\n    //work, which has been done.\n    which.match('@hasComma [which] (#Pronoun|#Verb)').tag('Preposition', 'which-copula')\n  }\n\n  //like\n  let like = doc.if('like')\n  if (like.found === true) {\n    like.match('just [like]').tag('Preposition', 'like-preposition')\n    //folks like her\n    like.match('#Noun [like] #Noun').tag('Preposition', 'noun-like')\n    //look like\n    like.match('#Verb [like]').tag('Adverb', 'verb-like')\n    //exactly like\n    like\n      .match('#Adverb like')\n      .notIf('(really|generally|typically|usually|sometimes|often) [like]')\n      .tag('Adverb', 'adverb-like')\n  }\n\n  let title = doc.if('@titleCase')\n  if (title.found === true) {\n    //FitBit Inc\n    title.match('@titleCase (ltd|co|inc|dept|assn|bros)').tag('Organization', 'org-abbrv')\n    //Foo District\n    title\n      .match('@titleCase+ (district|region|province|county|prefecture|municipality|territory|burough|reservation)')\n      .tag('Region', 'foo-district')\n    //District of Foo\n    title\n      .match('(district|region|province|municipality|territory|burough|state) of @titleCase')\n      .tag('Region', 'district-of-Foo')\n  }\n\n  let hyph = doc.if('@hasHyphen')\n  if (hyph.found === true) {\n    //air-flow\n    hyph\n      .match('@hasHyphen .')\n      .match('#Noun #Verb')\n      .tag('Noun', 'hyphen-verb')\n    //connect hyphenated expressions - 'ooh-wee'\n    hyph\n      .if('#Expression')\n      .match('@hasHyphen+')\n      .tag('Expression', 'ooh-wee')\n  }\n\n  let place = doc.if('#Place')\n  if (place.found === true) {\n    //West Norforlk\n    place.match('(west|north|south|east|western|northern|southern|eastern)+ #Place').tag('Region', 'west-norfolk')\n    //some us-state acronyms (exlude: al, in, la, mo, hi, me, md, ok..)\n    place\n      .match('#City [#Acronym]')\n      .match('(al|ak|az|ar|ca|ct|dc|fl|ga|id|il|nv|nh|nj|ny|oh|or|pa|sc|tn|tx|ut|vt|pr)')\n      .tag('Region', 'us-state')\n  }\n\n  return doc\n}\n\nmodule.exports = miscCorrection\n","//Determiner-signals\nconst fixThe = function(doc) {\n  let det = doc.if('#Determiner')\n\n  if (det.found === true) {\n    let adj = det.if('#Adjective')\n    if (adj.found) {\n      //the nice swim\n      adj.match('(the|this|those|these) #Adjective [#Verb]').tag('Noun', 'the-adj-verb')\n      // the truly nice swim\n      adj.match('(the|this|those|these) #Adverb #Adjective [#Verb]').tag('Noun', 'correction-determiner4')\n      //the orange is\n      adj.match('#Determiner [#Adjective] (#Copula|#PastTense|#Auxiliary)').tag('Noun', 'the-adj-2')\n      //the orange.\n      adj\n        .match('#Determiner #Adjective$')\n        .notIf('(#Comparative|#Superlative)')\n        .terms(1)\n        .tag('Noun', 'the-adj-1')\n    }\n\n    let inf = det.if('#Infinitive')\n    if (inf.found) {\n      // a stream runs\n      inf.match('(the|this|a|an) [#Infinitive] #Adverb? #Verb').tag('Noun', 'correction-determiner5')\n      //the test string\n      inf.match('#Determiner [#Infinitive] #Noun').tag('Noun', 'correction-determiner7')\n      //by a bear.\n      inf.match('#Determiner [#Infinitive]$').tag('Noun', 'a-inf')\n    }\n\n    //the wait to vote\n    det.match('(the|this) [#Verb] #Preposition .').tag('Noun', 'correction-determiner1')\n    //a sense of\n    det.match('#Determiner [#Verb] of').tag('Noun', 'the-verb-of')\n    //the threat of force\n    det.match('#Determiner #Noun of [#Verb]').tag('Noun', 'noun-of-noun')\n    //a close\n    det.match('#Determiner #Adverb? [close]').tag('Adjective', 'a-close')\n    //the western line\n    det.match('#Determiner [(western|eastern|northern|southern|central)] #Noun').tag('Noun', 'western-line')\n    //the swim\n    det.match('(the|those|these) [(#Infinitive|#PresentTense|#PastTense)]').tag('Noun', 'correction-determiner2')\n  }\n\n  let an = doc.if('(a|an)')\n  if (an.found === true) {\n    //a staggering cost\n    an.match('(a|an) [#Gerund]').tag('Adjective', 'correction-a|an')\n    //did a 900, paid a 20\n    an.match('#Verb (a|an) [#Value]').tag('Singular', 'a-value')\n    //a tv show\n    an.match('(a|an) #Noun [#Infinitive]').tag('Noun', 'a-noun-inf')\n    //a great run\n    an.match('(a|an) #Adjective (#Infinitive|#PresentTense)')\n      .terms(2)\n      .tag('Noun', 'correction-a|an2')\n    //'a/an' can mean 1 - \"a hour\"\n    an.match('[(a|an)] (#Duration|hundred|thousand|million|billion|trillion)')\n      .ifNo('#Plural')\n      .tag('Value', 'a-is-one')\n  }\n\n  return doc\n}\nmodule.exports = fixThe\n","//\nconst fixNouns = function(doc) {\n  let noun = doc.if('#Noun')\n  if (noun.found === true) {\n    //'more' is not always an adverb\n    noun.match('more #Noun').tag('Noun', 'more-noun')\n    //he quickly foo\n    noun.match('#Noun #Adverb [#Noun]').tag('Verb', 'quickly-foo')\n    //fix for busted-up phrasalVerbs\n    noun.match('#Noun [#Particle]').tag('Preposition', 'repair-noPhrasal')\n    //John & Joe's\n    noun.match('#Noun (&|n) #Noun').tag('Organization', 'Noun-&-Noun')\n    //Aircraft designer\n    noun.match('#Noun #Actor').tag('Actor', 'thing-doer')\n    //j.k Rowling\n    doc.match('#Noun van der? #Noun').tagSafe('#Person', 'von der noun')\n    //king of spain\n    doc.match('(king|queen|prince|saint|lady) of? #Noun').tagSafe('#Person', 'king-of-noun')\n    //the word 'second'\n    noun\n      .match('[second] #Noun')\n      .notIf('#Honorific')\n      .unTag('Unit')\n      .tag('Ordinal', 'second-noun')\n    //linear algebra\n    noun\n      .match('(#Determiner|#Value) [(linear|binary|mobile|lexical|technical|computer|scientific|formal)] #Noun')\n      .tag('Noun', 'technical-noun')\n\n    //organization\n    let org = noun.if('#Organization')\n    if (org.found === true) {\n      org.match('#Organization of the? @titleCase').tagSafe('Organization', 'org-of-place')\n      org.match('#Organization #Country').tag('Organization', 'org-country')\n      org.match('(world|global|international|national|#Demonym) #Organization').tag('Organization', 'global-org')\n    }\n\n    let plural = noun.if('#Plural')\n    if (plural.found === true) {\n      //some pressing issues\n      plural.match('some [#Verb] #Plural').tag('Noun', 'correction-determiner6')\n\n      //this rocks\n      noun.match('(this|that) [#Plural]').tag('PresentTense', 'this-verbs')\n    }\n  }\n\n  //acronyms\n  let acronym = doc.if('#Acronym')\n  if (acronym.found === true) {\n    acronym\n      .match('the [#Acronym]')\n      .notIf('(iou|fomo|yolo|diy|dui|nimby)')\n      .tag('Organization', 'the-acronym')\n    acronym\n      .match('#Acronym')\n      .match('#Possessive')\n      .tag('Organization', 'possessive-acronym')\n  }\n\n  //possessives\n  let poss = doc.if('#Possessive')\n  if (poss.found === true) {\n    //my buddy\n    poss.match('#Possessive [#FirstName]').unTag('Person', 'possessive-name')\n    //spencer kelly's\n    poss\n      .match('#FirstName #Acronym? #Possessive')\n      .ifNo('@hasComma')\n      .match('#FirstName #Acronym? #LastName')\n      .tag('Possessive')\n    //Super Corp's fundraiser\n    poss\n      .match('#Organization+ #Possessive')\n      .ifNo('@hasComma')\n      .tag('Possessive')\n    //Los Angeles's fundraiser\n    poss\n      .match('#Place+ #Possessive')\n      .ifNo('@hasComma')\n      .tag('Possessive')\n    //her polling\n    poss.match('#Possessive [#Verb]').tag('Noun', 'correction-possessive')\n  }\n  return doc\n}\nmodule.exports = fixNouns\n","const maybeNoun =\n  '(rose|robin|dawn|ray|holly|bill|joy|viola|penny|sky|violet|daisy|melody|kelvin|hope|mercedes|olive|jewel|faith|van|charity|miles|lily|summer|dolly|rod|dick|cliff|lane|reed|kitty|art|jean|trinity)'\nconst maybeVerb = '(pat|wade|ollie|will|rob|buck|bob|mark|jack)'\nconst maybeAdj = '(misty|rusty|dusty|rich|randy)'\nconst maybeDate = '(april|june|may|jan|august|eve)'\nconst maybePlace = '(paris|alexandria|houston|kobe|salvador|sydney)'\n\nconst fixPerson = function(doc) {\n  // clues from honorifics\n  let hon = doc.if('#Honorific')\n  if (hon.found === true) {\n    //mr Putin\n    doc.match('(mr|mrs|ms|dr) (#TitleCase|#Possessive)+').tag('#Person', 'mr-putin')\n    //mr X\n    hon.match('#Honorific #Acronym').tag('Person', 'Honorific-TitleCase')\n    //remove single 'mr'\n    hon.match('^#Honorific$').unTag('Person', 'single-honorific')\n    //first general..\n    hon.match('[(1st|2nd|first|second)] #Honorific').tag('Honorific', 'ordinal-honorific')\n  }\n\n  //methods requiring a titlecase\n  let title = doc.if('#TitleCase')\n  if (title.found === true) {\n    title.match('#Acronym #TitleCase').tagSafe('#Person', 'acronym-titlecase')\n    //ludwig van beethovan\n    title.match('#TitleCase (van|al|bin) #TitleCase').tagSafe('Person', 'titlecase-van-titlecase')\n    //jose de Sucre\n    title.match('#TitleCase (de|du) la? #TitleCase').tagSafe('Person', 'titlecase-van-titlecase')\n\n    //pope francis\n    title\n      .match('(lady|queen|sister) #TitleCase')\n      .ifNo('#Date')\n      .ifNo('#Honorific')\n      .tag('#FemaleName', 'lady-titlecase')\n    title\n      .match('(king|pope|father) #TitleCase')\n      .ifNo('#Date')\n      .tag('#MaleName', 'poe')\n\n    // jean Foobar\n    title.match(maybeNoun + ' #Acronym? #TitleCase').tagSafe('Person', 'ray-smith')\n    // rob Foobar\n    title.match(maybeVerb + ' #Acronym? #TitleCase').tag('Person', 'rob-smith')\n    // rusty Foobar\n    title.match(maybeAdj + ' #Acronym? #TitleCase').tag('Person', 'rusty-smith')\n    // june Foobar\n    title.match(maybeDate + ' #Acronym? #TitleCase').tagSafe('Person', 'june-smith')\n  }\n\n  let person = doc.if('#Person')\n  if (person.found === true) {\n    //Frank jr\n    person.match('#Person (jr|sr|md)').tag('Person', 'person-honorific')\n    //peter II\n    person.match('#Person #Person the? #RomanNumeral').tag('Person', 'roman-numeral')\n    //'Professor Fink', 'General McCarthy'\n    person.match('#Honorific #Person').tag('Person', 'Honorific-Person')\n    // 'john E rockefeller'\n    person.match('#FirstName [/^[^aiurck]$/]').tag(['Acronym', 'Person'], 'john-e')\n    //Doctor john smith jr\n    person.match('#Honorific #Person').tag('Person', 'honorific-person')\n    //general pearson\n    person\n      .match('[(private|general|major|corporal|lord|lady|secretary|premier)] #Honorific? #Person')\n      .tag('Honorific', 'ambg-honorifics')\n    //Morgan Shlkjsfne\n    title\n      .match('#Person #TitleCase')\n      .match('#TitleCase #Noun')\n      .tagSafe('Person', 'person-titlecase')\n    //a bunch of ambiguous first names\n\n    //Nouns: 'viola' or 'sky'\n    let ambigNoun = person.if(maybeNoun)\n    if (ambigNoun.found === true) {\n      // ambigNoun.match('(#Determiner|#Adverb|#Pronoun|#Possessive) [' + maybeNoun + ']').tag('Noun', 'the-ray')\n      ambigNoun.match(maybeNoun + ' #Person').tagSafe('Person', 'ray-smith')\n    }\n\n    //Verbs: 'pat' or 'wade'\n    let ambigVerb = person.if(maybeVerb)\n    if (ambigVerb === true) {\n      ambigVerb.match('(#Modal|#Adverb) [' + maybeVerb + ']').tag('Verb', 'would-mark')\n      ambigVerb.match(maybeVerb + ' #Person').tag('Person', 'rob-smith')\n    }\n\n    //Adjectives: 'rusty' or 'rich'\n    let ambigAdj = person.if(maybeAdj)\n    if (ambigAdj.found === true) {\n      ambigAdj.match('#Adverb [' + maybeAdj + ']').tag('Adjective', 'really-rich')\n      ambigAdj.match(maybeAdj + ' #Person').tag('Person', 'randy-smith')\n    }\n\n    //Dates: 'june' or 'may'\n    let ambigDate = person.if(maybeDate)\n    if (ambigDate.found === true) {\n      ambigDate.match(String(maybeDate) + ' #Person').tagSafe('Person', 'june-smith')\n      ambigDate.match('(in|during|on|by|before|#Date) [' + maybeDate + ']').tagSafe('Date', 'in-june')\n      ambigDate.match(maybeDate + ' (#Date|#Value)').tagSafe('Date', 'june-5th')\n    }\n\n    //Places: paris or syndey\n    let ambigPlace = person.if(maybePlace)\n    if (ambigPlace.found === true) {\n      ambigPlace.match('(in|near|at|from|to|#Place) [' + maybePlace + ']').tagSafe('Place', 'in-paris')\n      ambigPlace.match('[' + maybePlace + '] #Place').tagSafe('Place', 'paris-france')\n      // ambigPlace.match('[' + maybePlace + '] #Person').tagSafe('Person', 'paris-hilton')\n    }\n\n    //this one is tricky\n    let al = person.if('al')\n    if (al.found === true) {\n      al.match('al (#Person|#TitleCase)').tagSafe('#Person', 'al-borlen')\n      al.match('#TitleCase al #TitleCase').tagSafe('#Person', 'arabic-al-arabic')\n    }\n\n    let firstName = person.if('#FirstName')\n    if (firstName.found === true) {\n      //ferdinand de almar\n      firstName.match('#FirstName de #Noun').tag('#Person', 'firstname-de-noun')\n      //Osama bin Laden\n      firstName.match('#FirstName (bin|al) #Noun').tag('#Person', 'firstname-al-noun')\n      //John L. Foo\n      firstName.match('#FirstName #Acronym #TitleCase').tag('Person', 'firstname-acronym-titlecase')\n      //Andrew Lloyd Webber\n      firstName.match('#FirstName #FirstName #TitleCase').tag('Person', 'firstname-firstname-titlecase')\n      //Mr Foo\n      firstName.match('#Honorific #FirstName? #TitleCase').tag('Person', 'Honorific-TitleCase')\n      //peter the great\n      firstName.match('#FirstName the #Adjective').tag('Person', 'determiner5')\n\n      //very common-but-ambiguous lastnames\n      firstName\n        .match('#FirstName (green|white|brown|hall|young|king|hill|cook|gray|price)')\n        .tag('#Person', 'firstname-maybe')\n\n      //John Foo\n      firstName\n        .match('#FirstName #TitleCase #TitleCase?')\n        .match('#Noun+')\n        .tag('Person', 'firstname-titlecase')\n      //Joe K. Sombrero\n      firstName\n        .match('#FirstName #Acronym #Noun')\n        .ifNo('#Date')\n        .tag('#Person', 'n-acro-noun')\n        .lastTerm()\n        .tag('#LastName', 'n-acro-noun')\n\n      // Dwayne 'the rock' Johnson\n      firstName\n        .match('#FirstName [#Determiner #Noun] #LastName')\n        .tag('#NickName', 'first-noun-last')\n        .tag('#Person', 'first-noun-last')\n\n      //john bodego's\n      firstName\n        .match('#FirstName (#Singular|#Possessive)')\n        .ifNo('(#Date|#Pronoun|#NickName)')\n        .tag('#Person', 'first-possessive')\n        .lastTerm()\n        .tag('#LastName', 'first-possessive')\n\n      // Firstname x (dangerous)\n      let tmp = firstName\n        .match('#FirstName (#Noun|#TitleCase)')\n        .ifNo('^#Possessive')\n        .ifNo('#ClauseEnd .')\n        .ifNo('#Pronoun')\n      tmp.lastTerm().tag('#LastName', 'firstname-noun')\n    }\n\n    let lastName = person.if('#LastName')\n    if (lastName.found === true) {\n      //is foo Smith\n      lastName.match('#Copula [(#Noun|#PresentTense)] #LastName').tag('#FirstName', 'copula-noun-lastname')\n      // x Lastname\n      lastName\n        .match('[#Noun] #LastName')\n        .canBe('#FirstName')\n        .tag('#FirstName', 'noun-lastname')\n      //ambiguous-but-common firstnames\n      lastName\n        .match(\n          '[(will|may|april|june|said|rob|wade|ray|rusty|drew|miles|jack|chuck|randy|jan|pat|cliff|bill)] #LastName'\n        )\n        .tag('#FirstName', 'maybe-lastname')\n      //Jani K. Smith\n      lastName\n        .match('(#TitleCase|#Singular) #Acronym? #LastName')\n        .ifNo('#Date')\n        .tag('#Person', 'title-acro-noun')\n        .lastTerm()\n        .tag('#LastName', 'title-acro-noun')\n    }\n  }\n\n  return doc\n}\nmodule.exports = fixPerson\n","const advb = '(#Adverb|not)+?'\n//\nconst fixVerb = function(doc) {\n  let vb = doc.if('#Verb')\n  if (vb.found) {\n    vb.match('[(do|does|will|have|had)] (not|#Adverb)? #Verb').tag('Auxiliary', 'have-had')\n    //still make\n    vb.match('[still] #Verb').tag('Adverb', 'still-verb')\n    //'u' as pronoun\n    vb.match('[u] #Verb').tag('Pronoun', 'u-pronoun-1')\n    //is no walk\n    vb.match('is no [#Verb]').tag('Noun', 'is-no-verb')\n    //different views than\n    vb.match('[#Verb] than').tag('Noun', 'correction')\n    // smoked poutine is\n    vb.match('[#PastTense] #Singular is').tag('#Adjective', 'smoked-poutine')\n    // baked onions are\n    vb.match('[#PastTense] #Plural are').tag('#Adjective', 'baked-onions')\n\n    //there are reasons\n    vb.match('there (are|were) #Adjective? [#PresentTense]').tag('Plural', 'there-are')\n    //jack seems guarded\n    vb.match('#Singular (seems|appears) #Adverb? [#PastTense$]').tag('Adjective', 'seems-filled')\n    //fall over\n    vb.match('#PhrasalVerb [#PhrasalVerb]').tag('Particle', 'phrasal-particle')\n    //went to sleep\n    // vb.match('#Verb to #Verb').lastTerm().tag('Noun', 'verb-to-verb');\n    //been walking\n    vb.match(`(be|been) ${advb} #Gerund`)\n      .not('#Verb$')\n      .tag('Auxiliary', 'be-walking')\n\n    //infinitive verbs suggest plural nouns - 'XYZ walk to the store'\n    // r.match(`#Singular+ #Infinitive`).match('#Singular+').tag('Plural', 'infinitive-make-plural');\n\n    let modal = vb.if('(#Modal|did|had|has)')\n    if (modal.found === true) {\n      //support a splattering of auxillaries before a verb\n      modal\n        .match(`(has|had) ${advb} #PastTense`)\n        .not('#Verb$')\n        .tag('Auxiliary', 'had-walked')\n      //would walk\n      modal\n        .match(`(#Modal|did) ${advb} #Verb`)\n        .not('#Verb$')\n        .tag('Auxiliary', 'modal-verb')\n      //would have had\n      modal\n        .match(`#Modal ${advb} have ${advb} had ${advb} #Verb`)\n        .not('#Verb$')\n        .tag('Auxiliary', 'would-have')\n      //would be walking\n      modal\n        .match(`#Modal ${advb} be ${advb} #Verb`)\n        .not('#Verb$')\n        .tag('Auxiliary', 'would-be')\n      //would been walking\n      modal\n        .match(`(#Modal|had|has) ${advb} been ${advb} #Verb`)\n        .not('#Verb$')\n        .tag('Auxiliary', 'would-be')\n    }\n\n    let copula = vb.if('#Copula')\n    if (copula.found === true) {\n      //was walking\n      copula\n        .match(`#Copula ${advb} #Gerund`)\n        .not('#Verb$')\n        .tag('Auxiliary', 'copula-walking')\n      //is mark hughes\n      copula.match('#Copula [#Infinitive] #Noun').tag('Noun', 'is-pres-noun')\n      //\n      copula.match('[#Infinitive] #Copula').tag('Noun', 'inf-copula')\n      //sometimes not-adverbs\n      copula.match('#Copula [(just|alone)]$').tag('Adjective', 'not-adverb')\n      //jack is guarded\n      copula.match('#Singular is #Adverb? [#PastTense$]').tag('Adjective', 'is-filled')\n      //is eager to go\n      copula.match('#Copula [#Adjective to] #Verb').tag('Verb', 'adj-to')\n\n      //sometimes adverbs - 'pretty good','well above'\n      copula\n        .match('#Copula (pretty|dead|full|well) (#Adjective|#Noun)')\n        .ifNo('@hasComma')\n        .tag('#Copula #Adverb #Adjective', 'sometimes-adverb')\n    }\n\n    //Gerund - 'walking'\n    let gerund = vb.if('#Gerund')\n    if (gerund.found === true) {\n      //walking is cool\n      gerund.match('[#Gerund] #Adverb? not? #Copula').tag('Activity', 'gerund-copula')\n      //walking should be fun\n      gerund.match('[#Gerund] #Modal').tag('Activity', 'gerund-modal')\n      //running-a-show\n      gerund.match('#Gerund #Determiner [#Infinitive]').tag('Noun', 'running-a-show')\n      //setting records\n      // doc.match('#Gerund [#PresentTense]').tag('Plural', 'setting-records');\n    }\n\n    //'will be'\n    let willBe = vb.if('will #Adverb? not? #Adverb? be')\n    if (willBe.found === true) {\n      //will be running (not copula\n      if (willBe.has('will #Adverb? not? #Adverb? be #Gerund') === false) {\n        //tag it all\n        willBe.match('will not? be').tag('Copula', 'will-be-copula')\n        //for more complex forms, just tag 'be'\n        willBe\n          .match('will #Adverb? not? #Adverb? be #Adjective')\n          .match('be')\n          .tag('Copula', 'be-copula')\n      }\n    }\n  }\n\n  //question words\n  let m = doc.if('(who|what|where|why|how|when)')\n  if (m.found) {\n    //the word 'how'\n    m.match('^how').tag('QuestionWord', 'how-question')\n    m.match('[how] (#Determiner|#Copula|#Modal|#PastTense)').tag('QuestionWord', 'how-is')\n    // //the word 'which'\n    m.match('^which').tag('QuestionWord', 'which-question')\n    m.match('[which] . (#Noun)+ #Pronoun').tag('QuestionWord', 'which-question2')\n    m.match('which').tag('QuestionWord', 'which-question3')\n\n    //how he is driving\n    m.match('[#QuestionWord] #Noun #Copula #Adverb? (#Verb|#Adjective)')\n      .unTag('QuestionWord')\n      .tag('Conjunction', 'how-he-is-x')\n\n    //when i go fishing\n    m.match('#QuestionWord #Noun #Adverb? #Infinitive not? #Gerund')\n      .unTag('QuestionWord')\n      .tag('Conjunction', 'when i go fishing')\n  }\n\n  return doc\n}\nmodule.exports = fixVerb\n","//\nconst fixAdjective = function(doc) {\n  let adj = doc.if('#Adjective')\n  if (adj.found) {\n    //still good\n    adj.match('[still] #Adjective').tag('Adverb', 'still-advb')\n    //barely even walk\n    adj.match('(barely|hardly) even').tag('#Adverb', 'barely-even')\n    //big dreams, critical thinking\n    adj.match('#Adjective [#PresentTense]').tag('Noun', 'adj-presentTense')\n    //will secure our\n    adj.match('will [#Adjective]').tag('Verb', 'will-adj')\n    //cheering hard - dropped -ly's\n    adj.match('#PresentTense [(hard|quick|long|bright|slow)]').tag('Adverb', 'lazy-ly')\n    //his fine\n    adj.match('(his|her|its) [#Adjective]').tag('Noun', 'his-fine')\n    //he left\n    adj.match('#Noun #Adverb? [left]').tag('PastTense', 'left-verb')\n    //he disguised the thing\n    adj.match('#Pronoun [#Adjective] #Determiner #Adjective? #Noun').tag('Verb', 'he-adj-the')\n  }\n  return doc\n}\nmodule.exports = fixAdjective\n","//\nconst fixValue = function(doc) {\n  let val = doc.if('#Value')\n  if (val.found === true) {\n    //1 800 PhoneNumber\n    val.match('1 #Value #PhoneNumber').tag('PhoneNumber', '1-800-Value')\n    //(454) 232-9873\n    val.match('#NumericValue #PhoneNumber').tag('PhoneNumber', '(800) PhoneNumber')\n    //three trains\n    val.match('#Value [#PresentTense]').tag('Plural', 'value-presentTense')\n    //money\n    val\n      .match('#Value+ #Currency')\n      .tag('Money', 'value-currency')\n      .lastTerm()\n      .tag('Unit', 'money-unit')\n  }\n  return doc\n}\nmodule.exports = fixValue\n","const preps = '(in|by|before|during|on|until|after|of|within|all)' //6\nconst people = '(january|april|may|june|summer|autumn|jan|sep)' //ambiguous month-names\nconst verbs = '(may|march)' //ambiguous month-verbs\n\nconst fixDates = function(doc) {\n  //ambiguous month - person forms\n  let person = doc.if(people)\n  if (person.found === true) {\n    //give to april\n    person.match(`#Infinitive #Determiner? #Adjective? #Noun? (to|for) [${people}]`).tag('Person', 'ambig-person')\n    //remind june\n    person.match(`#Infinitive [${people}]`).tag('Person', 'infinitive-person')\n    //may waits for\n    person.match(`[${people}] #PresentTense (to|for)`).tag('Person', 'ambig-active')\n    //april will\n    person.match(`[${people}] #Modal`).tag('Person', 'ambig-modal')\n    //would april\n    person.match(`#Modal [${people}]`).tag('Person', 'modal-ambig')\n    //with april\n    person.match(`(that|with|for) [${people}]`).tag('Person', 'that-month')\n    //it is may\n    person.match(`#Copula [${people}]`).tag('Person', 'is-may')\n    //may is\n    person.match(`[${people}] #Copula`).tag('Person', 'may-is')\n    //april the 5th\n    person.match(`[${people}] the? #Value`).tag('Month', 'person-value')\n    //wednesday april\n    person.match(`#Date [${people}]`).tag('Month', 'correction-may')\n    //may 5th\n    person.match(`[${people}] the? #Value`).tag('Month', 'may-5th')\n    //5th of may\n    person.match(`#Value of [${people}]`).tag('Month', '5th-of-may')\n    //by april\n    person\n      .match(`${preps} [${people}]`)\n      .ifNo('#Holiday')\n      .tag('Month', 'preps-month')\n    //this april\n    person.match(`(next|this|last) [${people}]`).tag('Month', 'correction-may') //maybe not 'this'\n  }\n\n  //ambiguous month - verb-forms\n  let verb = doc.if(verbs)\n  if (verb.found === true) {\n    //quickly march\n    verb.match(`#Adverb [${verbs}]`).tag('Infinitive', 'ambig-verb')\n    verb.match(`${verbs} [#Adverb]`).tag('Infinitive', 'ambig-verb')\n    //all march\n    verb.match(`${preps} [${verbs}]`).tag('Month', 'in-month')\n    //this march\n    verb.match(`(next|this|last) [${verbs}]`).tag('Month', 'this-month')\n    //with date\n    verb.match(`[${verbs}] the? #Value`).tag('Month', 'march-5th')\n    verb.match(`#Value of? [${verbs}]`).tag('Month', '5th-of-march')\n    //nearby\n    verb.match(`[${verbs}] .? #Date`).tag('Month', 'march-and-feb')\n    verb.match(`#Date .? [${verbs}]`).tag('Month', 'feb-and-march')\n\n    let march = doc.if('march')\n    if (march.found === true) {\n      //march to\n      march.match('[march] (up|down|back|to|toward)').tag('Infinitive', 'march-to')\n      //must march\n      march.match('#Modal [march]').tag('Infinitive', 'must-march')\n    }\n  }\n  //sun 5th\n  let sun = doc.if('sun')\n  if (sun.found === true) {\n    //sun feb 2\n    sun.match('[sun] #Date').tag('WeekDay', 'sun-feb')\n    //sun the 5th\n    sun\n      .match('sun the #Ordinal')\n      .tag('Date')\n      .firstTerm()\n      .tag('WeekDay', 'sun-the-5th')\n    //the sun\n    sun.match('#Determiner [sun]').tag('Singular', 'the-sun')\n  }\n\n  //sat, nov 5th\n  let sat = doc.if('sat')\n  if (sat.found) {\n    //sat november\n    sat.match('[sat] #Date').tag('WeekDay', 'sat-feb')\n    //this sat\n    sat.match(`${preps} [sat]`).tag('WeekDay', 'sat')\n  }\n\n  //months:\n  let month = doc.if('#Month')\n  if (month.found === true) {\n    //June 5-7th\n    month.match(`#Month #DateRange+`).tag('Date', 'correction-numberRange')\n    //5th of March\n    month.match('#Value of #Month').tag('Date', 'value-of-month')\n    //5 March\n    month.match('#Cardinal #Month').tag('Date', 'cardinal-month')\n    //march 5 to 7\n    month.match('#Month #Value to #Value').tag('Date', 'value-to-value')\n    //march the 12th\n    month.match('#Month the #Value').tag('Date', 'month-the-value')\n  }\n\n  //months:\n  let val = doc.if('#Value')\n  if (val.found === true) {\n    //values\n    val.match('#Value #Abbreviation').tag('Value', 'value-abbr')\n    //seven point five\n    val.match('#Value (point|decimal) #Value').tag('Value', 'value-point-value')\n    //minus 7\n    val.match('(minus|negative) #Value').tag('Value', 'minus-value')\n    // ten grand\n    val.match('#Value grand').tag('Value', 'value-grand')\n    //quarter million\n    val.match('(a|the) [(half|quarter)] #Ordinal').tag('Value', 'half-ordinal')\n    //june 7\n    val\n      .match('(#WeekDay|#Month) #Value')\n      .ifNo('#Money')\n      .tag('Date', 'date-value')\n\n    //7 june\n    val\n      .match('#Value (#WeekDay|#Month)')\n      .ifNo('#Money')\n      .tag('Date', 'value-date')\n\n    //may twenty five\n    val\n      .match('#TextValue #TextValue')\n      .if('#Date')\n      .tag('#Date', 'textvalue-date')\n  }\n\n  return doc\n}\nmodule.exports = fixDates\n","const fixMisc = require('./fixMisc')\nconst fixDeterminer = require('./fixThe')\nconst fixNouns = require('./fixNouns')\nconst fixPerson = require('./fixPerson')\nconst fixVerb = require('./fixVerb')\nconst fixAdjective = require('./fixAdjective')\nconst fixValue = require('./fixValue')\nconst fixDates = require('./fixDates')\n\n// det: 131.338ms\n// verb: 100.828ms\n// dates: 80.874ms\n// person: 66.054ms\n// nouns: 51.340ms\n// adj: 19.760ms\n// value: 12.950ms\n// misc: 43.359ms\n\n//sequence of match-tag statements to correct mis-tags\nconst corrections = function(doc) {\n  // console.time('det')\n  fixDeterminer(doc) //27\n  // console.timeEnd('det')\n\n  // console.time('nouns')\n  fixNouns(doc) //30\n  // // console.timeEnd('nouns')\n\n  // // console.time('person')\n  fixPerson(doc) //58\n  // // console.timeEnd('person')\n\n  // // console.time('verb')\n  fixVerb(doc) //50\n  // // console.timeEnd('verb')\n\n  // // console.time('adj')\n  fixAdjective(doc) //8\n  // // console.timeEnd('adj')\n\n  // // console.time('value')\n  fixValue(doc) //12\n  // // console.timeEnd('value')\n\n  // // console.time('dates')\n  fixDates(doc) //92\n  // // console.timeEnd('dates')\n\n  // // console.time('misc')\n  fixMisc(doc) //43\n  // console.timeEnd('misc')\n  return doc\n}\nmodule.exports = corrections\n","const init = require('./01-init')\nconst fallbacks = require('./02-fallbacks')\nconst contractions = require('./03-contractions')\nconst corrections = require('./04-correction')\n\n/** POS-tag all terms in this document */\nconst tagger = function(doc) {\n  let terms = doc.termList()\n  // console.time('init')\n  // check against any known-words\n  doc = init(doc, terms)\n  // console.timeEnd('init')\n\n  // everything has gotta be something. ¯\\_(:/)_/¯\n  // console.time('fallbacks')\n  doc = fallbacks(doc, terms)\n  // console.timeEnd('fallbacks')\n\n  // support \"didn't\" & \"spencer's\"\n  // console.time('contractions')\n  doc = contractions(doc)\n  // console.timeEnd('contractions')\n\n  //set our cache, to speed things up\n  doc.cache()\n\n  // wiggle-around the results, so they make more sense\n  // console.time('corrections')\n  doc = corrections(doc)\n  // console.timeEnd('corrections')\n\n  //remove our cache\n  doc.uncache()\n\n  // run any user-given tagger functions\n  doc.world.taggers.forEach(fn => {\n    fn(doc)\n  })\n\n  return doc\n}\nmodule.exports = tagger\n","const addMethod = function(Doc) {\n  /**  */\n  class Acronyms extends Doc {\n    // stripPeriods() {//TODO:finish\n    //   return this\n    // }\n    // addPeriods() {\n    //   return this\n    // }\n  }\n\n  Doc.prototype.acronyms = function(n) {\n    let match = this.match('#Acronym')\n    if (typeof n === 'number') {\n      match = match.get(n)\n    }\n    return new Acronyms(match.list, this, this.world)\n  }\n  return Doc\n}\nmodule.exports = addMethod\n","const addMethod = function(Doc) {\n  /** split into approximate sub-sentence phrases */\n  Doc.prototype.clauses = function(n) {\n    // an awkward way to disambiguate a comma use\n    let commas = this.if('@hasComma')\n      .notIf('@hasComma @hasComma') //fun, cool...\n      .notIf('@hasComma . .? (and|or) .') //cool, and fun\n      .notIf('(#City && @hasComma) #Country') //'toronto, canada'\n      .notIf('(#Date && @hasComma) #Year') //'july 6, 1992'\n      .notIf('@hasComma (too|also)$') //at end of sentence\n      .match('@hasComma')\n    let found = this.splitAfter(commas)\n\n    let quotes = found.quotations()\n    found = found.splitOn(quotes)\n\n    let parentheses = found.parentheses()\n    found = found.splitOn(parentheses)\n\n    // it is cool and it is ..\n    let conjunctions = found.if('#Copula #Adjective #Conjunction (#Pronoun|#Determiner) #Verb').match('#Conjunction')\n    found = found.splitBefore(conjunctions)\n\n    // if it is this then that\n    let condition = found.if('if .{2,9} then .').match('then')\n    found = found.splitBefore(condition)\n\n    // misc clause partitions\n    found = found.splitBefore('as well as .')\n    found = found.splitBefore('such as .')\n    found = found.splitBefore('in addition to .')\n\n    // semicolons, dashes\n    found = found.splitAfter('@hasSemicolon')\n    found = found.splitAfter('@hasDash')\n\n    // does there appear to have relative/subordinate clause still?\n    let tooLong = found.filter(d => d.wordCount() > 5 && d.match('#Verb+').length >= 2)\n    if (tooLong.found) {\n      let m = tooLong.splitAfter('#Noun .* #Verb .* #Noun+')\n      found = found.splitOn(m.eq(0))\n    }\n\n    if (typeof n === 'number') {\n      found = found.get(n)\n    }\n    return new Doc(found.list, this, this.world)\n  }\n  return Doc\n}\nmodule.exports = addMethod\n","const addMethod = function(Doc) {\n  /**  */\n  class Contractions extends Doc {\n    constructor(list, from, world) {\n      super(list, from, world)\n      this.contracted = null\n    }\n    /** turn didn't into 'did not' */\n    expand() {\n      this.list.forEach(p => {\n        let terms = p.terms()\n        //change the case?\n        let isTitlecase = terms[0].isTitleCase()\n\n        terms.forEach((t, i) => {\n          //use the implicit text\n          // console.log(t.clean)\n          t.set(t.implicit || t.text)\n          t.implicit = undefined\n\n          //add whitespace\n          if (i < terms.length - 1) {\n            t.post += ' '\n          }\n        })\n        //set titlecase\n        if (isTitlecase) {\n          terms[0].toTitleCase()\n        }\n      })\n      return this\n    }\n  }\n\n  //find contractable, expanded-contractions\n  // const findExpanded = r => {\n  //   let remain = r.not('#Contraction')\n  //   let m = remain.match('(#Noun|#QuestionWord) (#Copula|did|do|have|had|could|would|will)')\n  //   m.concat(remain.match('(they|we|you|i) have'))\n  //   m.concat(remain.match('i am'))\n  //   m.concat(remain.match('(#Copula|#Modal|do|does|have|has|can|will) not'))\n  //   return m\n  // }\n\n  Doc.prototype.contractions = function(n) {\n    //find currently-contracted\n    let found = this.match('@hasContraction+')\n    //todo: split consecutive contractions\n    if (typeof n === 'number') {\n      found = found.get(n)\n    }\n    return new Contractions(found.list, this, this.world)\n  }\n\n  //aliases\n  Doc.prototype.expanded = Doc.prototype.isExpanded\n  Doc.prototype.contracted = Doc.prototype.isContracted\n  return Doc\n}\nmodule.exports = addMethod\n","const addMethod = function(Doc) {\n  //pull it apart..\n  const parse = function(doc) {\n    let things = doc.splitAfter('@hasComma').not('(and|or) not?')\n    let beforeLast = doc.match('[.] (and|or)')\n    return {\n      things: things,\n      conjunction: doc.match('(and|or) not?'),\n      beforeLast: beforeLast,\n      hasOxford: beforeLast.has('@hasComma'),\n    }\n  }\n\n  /** cool, fun, and nice */\n  class Lists extends Doc {\n    /** coordinating conjunction */\n    conjunctions() {\n      return this.match('(and|or)')\n    }\n    /** split-up by list object */\n    parts() {\n      return this.splitAfter('(@hasComma|#Conjunction)')\n    }\n    /** remove the conjunction */\n    things() {\n      return this.parts().notIf('#Conjunction')\n    }\n    /** add a new unit to the list */\n    add(str) {\n      this.forEach(p => {\n        let beforeLast = parse(p).beforeLast\n        beforeLast.append(str)\n        //add a comma to it\n        beforeLast.termList(0).addPunctuation(',')\n      })\n      return this\n    }\n    /** remove any matching unit from the list */\n    remove() {\n      return this\n    }\n\n    /** return only lists that use a serial comma */\n    hasOxfordComma() {\n      return this.filter(doc => parse(doc).hasOxford)\n    }\n    addOxfordComma() {\n      return this\n    }\n    removeOxfordComma() {\n      return this\n    }\n  }\n\n  Doc.prototype.lists = function(n) {\n    let m = this.if('@hasComma+ .? (and|or) not? .')\n\n    // person-list\n    let nounList = m.match('(#Noun|#Adjective)+ #Conjunction not? #Adjective? #Noun+')\n    let adjList = m.match('(#Adjective|#Adverb)+ #Conjunction not? #Adverb? #Adjective+')\n    let verbList = m.match('(#Verb|#Adverb)+ #Conjunction not? #Adverb? #Verb+')\n    let result = nounList.concat(adjList)\n    result = result.concat(verbList)\n    result = result.if('@hasComma')\n\n    if (typeof n === 'number') {\n      result = m.get(n)\n    }\n    return new Lists(result.list, this, this.world)\n  }\n  return Doc\n}\nmodule.exports = addMethod\n","const noPlural =\n  '(#Pronoun|#Place|#Value|#Person|#Uncountable|#Month|#WeekDay|#Holiday|#Possessive)'\n\n//certain words can't be plural, like 'peace'\nconst hasPlural = function(doc) {\n  if (doc.has('#Plural') === true) {\n    return true\n  }\n  // these can't be plural\n  if (doc.has(noPlural) === true) {\n    return false\n  }\n  return true\n}\n\nmodule.exports = hasPlural\n","'use strict'\n\n//chooses an indefinite aricle 'a/an' for a word\nconst irregulars = {\n  hour: 'an',\n  heir: 'an',\n  heirloom: 'an',\n  honest: 'an',\n  honour: 'an',\n  honor: 'an',\n  uber: 'an', //german u\n}\n//pronounced letters of acronyms that get a 'an'\nconst an_acronyms = {\n  a: true,\n  e: true,\n  f: true,\n  h: true,\n  i: true,\n  l: true,\n  m: true,\n  n: true,\n  o: true,\n  r: true,\n  s: true,\n  x: true,\n}\n//'a' regexes\nconst a_regexs = [\n  /^onc?e/i, //'wu' sound of 'o'\n  /^u[bcfhjkqrstn][aeiou]/i, // 'yu' sound for hard 'u'\n  /^eul/i,\n]\n\nconst makeArticle = function(doc) {\n  //no 'the john smith', but 'a london hotel'\n  if (doc.has('#Person') || doc.has('#Place')) {\n    return ''\n  }\n  //no a/an if it's plural\n  if (doc.has('#Plural')) {\n    return 'the'\n  }\n  let str = doc.text('normal').trim()\n  //explicit irregular forms\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str]\n  }\n  //spelled-out acronyms\n  let firstLetter = str.substr(0, 1)\n  if (doc.has('^@isAcronym') && an_acronyms.hasOwnProperty(firstLetter)) {\n    return 'an'\n  }\n  //'a' regexes\n  for (let i = 0; i < a_regexs.length; i++) {\n    if (a_regexs[i].test(str)) {\n      return 'a'\n    }\n  }\n  //basic vowel-startings\n  if (/^[aeiou]/i.test(str)) {\n    return 'an'\n  }\n  return 'a'\n}\n\nmodule.exports = makeArticle\n","//similar to plural/singularize rules, but not the same\nconst isPlural = [\n  /(antenn|formul|nebul|vertebr|vit)ae$/i,\n  /(octop|vir|radi|nucle|fung|cact|stimul)i$/i,\n  /men$/i,\n  /.tia$/i,\n  /(m|l)ice$/i,\n]\n\n//similar to plural/singularize rules, but not the same\nconst isSingular = [\n  /(ax|test)is$/i,\n  /(octop|vir|radi|nucle|fung|cact|stimul)us$/i,\n  /(octop|vir)i$/i,\n  /(rl)f$/i,\n  /(alias|status)$/i,\n  /(bu)s$/i,\n  /(al|ad|at|er|et|ed|ad)o$/i,\n  /(ti)um$/i,\n  /(ti)a$/i,\n  /sis$/i,\n  /(?:(^f)fe|(lr)f)$/i,\n  /hive$/i,\n  /(^aeiouy|qu)y$/i,\n  /(x|ch|ss|sh|z)$/i,\n  /(matr|vert|ind|cort)(ix|ex)$/i,\n  /(m|l)ouse$/i,\n  /(m|l)ice$/i,\n  /(antenn|formul|nebul|vertebr|vit)a$/i,\n  /.sis$/i,\n  /^(?!talis|.*hu)(.*)man$/i,\n]\nmodule.exports = {\n  isSingular: isSingular,\n  isPlural: isPlural,\n}\n","const rules = require('./_rules')\nconst endS = /s$/\n// double-check this term, if it is not plural, or singular.\n// (this is a partial copy of ./tagger/fallbacks/plural)\n// fallback plural if it ends in an 's'.\nconst isPlural = function(str) {\n  // isSingular suffix rules\n  if (rules.isSingular.find(reg => reg.test(str))) {\n    return false\n  }\n  // does it end in an s?\n  if (endS.test(str) === true) {\n    return true\n  }\n  // is it a plural like 'fungi'?\n  if (rules.isPlural.find(reg => reg.test(str))) {\n    return true\n  }\n  return null\n}\nmodule.exports = isPlural\n","const exceptions = {\n  he: 'his',\n  she: 'hers',\n  they: 'theirs',\n  we: 'ours',\n  i: 'mine',\n  you: 'yours',\n\n  her: 'hers',\n  their: 'theirs',\n  our: 'ours',\n  my: 'mine',\n  your: 'yours',\n}\n\n// turn \"David\" to \"David's\"\nconst toPossessive = function(doc) {\n  let str = doc.text('text').trim()\n  // exceptions\n  if (exceptions.hasOwnProperty(str)) {\n    doc.replaceWith(exceptions[str])\n    doc.tag('Possessive', 'toPossessive')\n    return\n  }\n  // flanders'\n  if (/s$/.test(str)) {\n    str += \"'\"\n    doc.replaceWith(str)\n    doc.tag('Possessive', 'toPossessive')\n    return\n  }\n  //normal form:\n  str += \"'s\"\n  doc.replaceWith(str)\n  doc.tag('Possessive', 'toPossessive')\n  return\n}\nmodule.exports = toPossessive\n","// .nouns() supports some noun-phrase-ish groupings\n// pull these apart, if necessary\nconst parse = function(doc) {\n  let res = {\n    main: doc,\n  }\n  //support 'mayor of chicago' as one noun-phrase\n  if (doc.has('#Noun (of|by|for) .')) {\n    let m = doc.splitAfter('[#Noun+]')\n    res.main = m.eq(0)\n    res.post = m.eq(1)\n  }\n  return res\n}\nmodule.exports = parse\n","const hasPlural = require('./hasPlural')\nconst getArticle = require('./getArticle')\nconst isPlural = require('./isPlural')\nconst toPossessive = require('./toPossessive')\nconst parse = require('./parse')\n\nconst addMethod = function(Doc) {\n  /**  */\n  class Nouns extends Doc {\n    /** overload the original json with noun information */\n    json(options) {\n      options = options || { text: true, normal: true, trim: true, terms: true }\n      let res = []\n      this.forEach(doc => {\n        let json = doc.json(options)[0]\n        json.article = getArticle(doc)\n        res.push(json)\n      })\n      return res\n    }\n\n    isPlural() {\n      return this.if('#Plural') //assume tagger has run?\n    }\n    hasPlural() {\n      return this.filter(d => hasPlural(d))\n    }\n    toPlural() {\n      let toPlural = this.world.transforms.toPlural\n      this.forEach(doc => {\n        if (doc.has('#Plural') || hasPlural(doc) === false) {\n          return\n        }\n        // double-check it isn't an un-tagged plural\n        let main = parse(doc).main\n        let str = main.text()\n        if (!main.has('#Singular') && isPlural(str) === true) {\n          return\n        }\n        str = toPlural(str, this.world)\n        main.replace(str).tag('#Plural')\n      })\n      return this\n    }\n    toSingular() {\n      let toSingular = this.world.transforms.toSingular\n      this.forEach(doc => {\n        if (doc.has('#Singular') || hasPlural(doc) === false) {\n          return\n        }\n        // double-check it isn't an un-tagged plural\n        let main = parse(doc).main\n        let str = main.text()\n        if (!main.has('#Plural') && isPlural(str) !== true) {\n          return\n        }\n        str = toSingular(str, this.world)\n        main.replace(str).tag('#Singular')\n      })\n      return this\n    }\n    toPossessive() {\n      this.forEach(d => {\n        toPossessive(d)\n      })\n      return this\n    }\n  }\n\n  Doc.prototype.nouns = function(n) {\n    let match = this.clauses()\n    match = match.match('#Noun+ (of|by)? the? #Noun+?')\n    //nouns that we don't want in these results, for weird reasons\n    match = match.not('#Pronoun')\n    match = match.not('(there|these)')\n    match = match.not('(#Month|#WeekDay)') //allow Durations, Holidays\n    // //allow possessives like \"spencer's\", but not generic ones like,\n    match = match.not('(my|our|your|their|her|his)')\n    match = match.not('(of|for|by|the)$')\n\n    // match = match.splitAfter('@hasComma')\n\n    if (typeof n === 'number') {\n      match = match.get(n)\n    }\n    return new Nouns(match.list, this, this.world)\n  }\n  return Doc\n}\nmodule.exports = addMethod\n","const open = /\\(/\nconst close = /\\)/\n\nconst addMethod = function(Doc) {\n  /** anything between (these things) */\n  class Parentheses extends Doc {\n    /** remove the parentheses characters */\n    unwrap() {\n      this.list.forEach(p => {\n        let first = p.terms(0)\n        first.pre = first.pre.replace(open, '')\n        let last = p.lastTerm()\n        last.post = last.post.replace(close, '')\n      })\n      return this\n    }\n  }\n\n  Doc.prototype.parentheses = function(n) {\n    let list = []\n    this.list.forEach(p => {\n      let terms = p.terms()\n      //look for opening brackets\n      for (let i = 0; i < terms.length; i += 1) {\n        const t = terms[i]\n        if (open.test(t.pre)) {\n          //look for the closing bracket..\n          for (let o = i; o < terms.length; o += 1) {\n            if (close.test(terms[o].post)) {\n              let len = o - i + 1\n              list.push(p.buildFrom(t.id, len))\n              i = o\n              break\n            }\n          }\n        }\n      }\n    })\n    //support nth result\n    if (typeof n === 'number') {\n      if (list[n]) {\n        list = [list[n]]\n      } else {\n        list = []\n      }\n      return new Parentheses(list, this, this.world)\n    }\n    return new Parentheses(list, this, this.world)\n  }\n\n  return Doc\n}\nmodule.exports = addMethod\n","const addMethod = function(Doc) {\n  /**  */\n  class Possessives extends Doc {\n    constructor(list, from, world) {\n      super(list, from, world)\n      this.contracted = null\n    }\n    /** turn didn't into 'did not' */\n    strip() {\n      this.list.forEach(p => {\n        let terms = p.terms()\n        terms.forEach(t => {\n          let str = t.text.replace(/'s$/, '')\n          t.set(str || t.text)\n        })\n      })\n      return this\n    }\n  }\n\n  //find contractable, expanded-contractions\n  // const findExpanded = r => {\n  //   let remain = r.not('#Contraction')\n  //   let m = remain.match('(#Noun|#QuestionWord) (#Copula|did|do|have|had|could|would|will)')\n  //   m.concat(remain.match('(they|we|you|i) have'))\n  //   m.concat(remain.match('i am'))\n  //   m.concat(remain.match('(#Copula|#Modal|do|does|have|has|can|will) not'))\n  //   return m\n  // }\n\n  Doc.prototype.possessives = function(n) {\n    //find currently-contracted\n    let found = this.match('#Noun+? #Possessive')\n    //todo: split consecutive contractions\n    if (typeof n === 'number') {\n      found = found.get(n)\n    }\n    return new Possessives(found.list, this, this.world)\n  }\n  return Doc\n}\nmodule.exports = addMethod\n","const pairs = {\n  '\\u0022': '\\u0022', // 'StraightDoubleQuotes'\n  '\\uFF02': '\\uFF02', // 'StraightDoubleQuotesWide'\n  '\\u0027': '\\u0027', // 'StraightSingleQuotes'\n  '\\u201C': '\\u201D', // 'CommaDoubleQuotes'\n  '\\u2018': '\\u2019', // 'CommaSingleQuotes'\n  '\\u201F': '\\u201D', // 'CurlyDoubleQuotesReversed'\n  '\\u201B': '\\u2019', // 'CurlySingleQuotesReversed'\n  '\\u201E': '\\u201D', // 'LowCurlyDoubleQuotes'\n  '\\u2E42': '\\u201D', // 'LowCurlyDoubleQuotesReversed'\n  '\\u201A': '\\u2019', // 'LowCurlySingleQuotes'\n  '\\u00AB': '\\u00BB', // 'AngleDoubleQuotes'\n  '\\u2039': '\\u203A', // 'AngleSingleQuotes'\n  // Prime 'non quotation'\n  '\\u2035': '\\u2032', // 'PrimeSingleQuotes'\n  '\\u2036': '\\u2033', // 'PrimeDoubleQuotes'\n  '\\u2037': '\\u2034', // 'PrimeTripleQuotes'\n  // Prime 'quotation' variation\n  '\\u301D': '\\u301E', // 'PrimeDoubleQuotes'\n  '\\u0060': '\\u00B4', // 'PrimeSingleQuotes'\n  '\\u301F': '\\u301E', // 'LowPrimeDoubleQuotesReversed'\n}\n\nconst hasOpen = RegExp('(' + Object.keys(pairs).join('|') + ')')\n\nconst addMethod = function(Doc) {\n  /** \"these things\" */\n  class Quotations extends Doc {\n    /** remove the quote characters */\n    unwrap() {\n      return this\n    }\n  }\n\n  Doc.prototype.quotations = function(n) {\n    let list = []\n    this.list.forEach(p => {\n      let terms = p.terms()\n      //look for opening quotes\n      for (let i = 0; i < terms.length; i += 1) {\n        const t = terms[i]\n        if (hasOpen.test(t.pre)) {\n          let char = (t.pre.match(hasOpen) || [])[0]\n          let want = pairs[char]\n          // if (!want) {\n          //   console.warn('missing quote char ' + char)\n          // }\n          //look for the closing bracket..\n          for (let o = i; o < terms.length; o += 1) {\n            if (terms[o].post.indexOf(want) !== -1) {\n              let len = o - i + 1\n              list.push(p.buildFrom(t.id, len))\n              i = o\n              break\n            }\n          }\n        }\n      }\n    })\n    //support nth result\n    if (typeof n === 'number') {\n      if (list[n]) {\n        list = [list[n]]\n      } else {\n        list = []\n      }\n      return new Quotations(list, this, this.world)\n    }\n    return new Quotations(list, this, this.world)\n  }\n  // alias\n  Doc.prototype.quotes = Doc.prototype.quotations\n\n  return Doc\n}\nmodule.exports = addMethod\n","// turn 'would not really walk up' into parts\nconst parseVerb = function(vb) {\n  let parsed = {\n    adverb: vb.match('#Adverb+'), // 'really'\n    negative: vb.match('#Negative'), // 'not'\n    auxiliary: vb.match('#Auxiliary').not('(#Negative|#Adverb)'), // 'will' of 'will go'\n    particle: vb.match('#Particle'), // 'up' of 'pull up'\n    verb: vb.match('#Verb').not('(#Adverb|#Negative|#Auxiliary|#Particle)'),\n  }\n  return parsed\n}\nmodule.exports = parseVerb\n","// walked => walk  - turn a verb into it's root form\nconst toInfinitive = function(parsed, world) {\n  let verb = parsed.verb\n\n  //1. if it's already infinitive\n  let str = verb.out('normal')\n  if (verb.has('#Infinitive')) {\n    return str\n  }\n\n  // 2. world transform does the heavy-lifting\n  let tense = null\n  if (verb.has('#PastTense')) {\n    tense = 'PastTense'\n  } else if (verb.has('#Gerund')) {\n    tense = 'Gerund'\n  } else if (verb.has('#PresentTense')) {\n    tense = 'PresentTense'\n  } else if (verb.has('#Participle')) {\n    tense = 'Participle'\n  } else if (verb.has('#Actor')) {\n    tense = 'Actor'\n  }\n  return world.transforms.toInfinitive(str, world, tense)\n}\nmodule.exports = toInfinitive\n","// spencer walks -> singular\n// we walk -> plural\n\n// the most-recent noun-phrase, before this verb.\nconst findNoun = function(vb) {\n  let noun = vb.lookBehind('#Noun+').last()\n  return noun\n}\n\n//sometimes you can tell if a verb is plural/singular, just by the verb\n// i am / we were\n// othertimes you need its subject 'we walk' vs 'i walk'\nconst isPlural = function(parsed) {\n  let vb = parsed.verb\n  if (vb.has('(are|were|does)') || parsed.auxiliary.has('(are|were|does)')) {\n    return true\n  }\n  if (vb.has('(is|am|do|was)') || parsed.auxiliary.has('(is|am|do|was)')) {\n    return false\n  }\n  //consider its prior noun\n  let noun = findNoun(vb)\n  if (noun.has('(we|they|you)')) {\n    return true\n  }\n  if (noun.has('#Plural')) {\n    return true\n  }\n  if (noun.has('#Singular')) {\n    return false\n  }\n  return null\n}\nmodule.exports = isPlural\n","const isPlural = require('../../plural/isPlural')\n\n/** too many special cases for is/was/will be*/\nconst toBe = parsed => {\n  let isI = false\n  let plural = isPlural(parsed)\n  let isNegative = parsed.negative.found\n  //account for 'i is' -> 'i am' irregular\n  // if (vb.parent && vb.parent.has('i #Adverb? #Copula')) {\n  //   isI = true;\n  // }\n\n  let obj = {\n    PastTense: 'was',\n    PresentTense: 'is',\n    FutureTense: 'will be',\n    Infinitive: 'is',\n    Gerund: 'being',\n    Actor: '',\n    PerfectTense: 'been',\n    Pluperfect: 'been',\n  }\n  //\"i is\" -> \"i am\"\n  if (isI === true) {\n    obj.PresentTense = 'am'\n    obj.Infinitive = 'am'\n  }\n  if (plural) {\n    obj.PastTense = 'were'\n    obj.PresentTense = 'are'\n    obj.Infinitive = 'are'\n  }\n  if (isNegative) {\n    obj.PastTense += ' not'\n    obj.PresentTense += ' not'\n    obj.FutureTense = 'will not be'\n    obj.Infinitive += ' not'\n    obj.PerfectTense = 'not ' + obj.PerfectTense\n    obj.Pluperfect = 'not ' + obj.Pluperfect\n    obj.Gerund = 'not ' + obj.Gerund\n  }\n  return obj\n}\nmodule.exports = toBe\n","const toInfinitive = require('../toInfinitive')\nconst toBe = require('./toBe')\n\nconst conjugate = function(parsed, world) {\n  let verb = parsed.verb\n\n  //special handling of 'is', 'will be', etc.\n  if (verb.has('#Copula') || (verb.out('normal') === 'be' && parsed.auxiliary.has('will'))) {\n    return toBe(parsed, world)\n  }\n\n  let infinitive = toInfinitive(parsed, world)\n  // console.log(infinitive)\n  let forms = world.transforms.conjugate(infinitive, world)\n  forms.Infinitive = infinitive\n\n  //apply negative\n  const isNegative = parsed.negative.found\n  if (isNegative) {\n    forms.PastTense = 'did not ' + forms.Infinitive\n    forms.PresentTense = 'does not ' + forms.Infinitive\n    forms.Gerund = 'not ' + forms.Gerund\n  }\n  //future Tense is pretty straightforward\n  if (!forms.FutureTense) {\n    if (isNegative) {\n      forms.FutureTense = 'will not ' + forms.Infinitive\n    } else {\n      forms.FutureTense = 'will ' + forms.Infinitive\n    }\n  }\n  if (isNegative) {\n    forms.Infinitive = 'not ' + forms.Infinitive\n  }\n  return forms\n}\nmodule.exports = conjugate\n","const toInfinitive = require('../tense/toInfinitive')\nconst isPlural = require('../plural/isPlural')\n// #Modal : would walk    -> 'would not walk'\n// #Copula : is           -> 'is not'\n// #PastTense : walked    -> did not walk\n// #PresentTense : walks  -> does not walk\n// #Gerund : walking:     -> not walking\n// #Infinitive : walk     -> do not walk\n\nconst toNegative = function(parsed, world) {\n  let vb = parsed.verb\n  // if it's already negative...\n  if (parsed.negative.found) {\n    return\n  }\n\n  // would walk -> would not walk\n  if (parsed.auxiliary.found) {\n    parsed.auxiliary.eq(0).append('not')\n    return\n  }\n  // is walking -> is not walking\n  if (vb.has('(#Copula|will|has|had|do)')) {\n    vb.append('not')\n    return\n  }\n  // walked -> did not walk\n  if (vb.has('#PastTense')) {\n    let inf = toInfinitive(parsed, world)\n    vb.replace(inf)\n    vb.prepend('did not')\n    return\n  }\n  // walks -> does not walk\n  if (vb.has('#PresentTense')) {\n    let inf = toInfinitive(parsed, world)\n    vb.replace(inf)\n    if (isPlural(parsed, world)) {\n      vb.prepend('do not')\n    } else {\n      vb.prepend('does not')\n    }\n    return\n  }\n  //walking -> not walking\n  if (vb.has('#Gerund')) {\n    let inf = toInfinitive(parsed, world)\n    vb.replace(inf)\n    vb.prepend('not')\n    return\n  }\n\n  //fallback 1:  walk -> does not walk\n  if (isPlural(parsed, world)) {\n    vb.prepend('does not')\n    return\n  }\n  //fallback 2:  walk -> do not walk\n  vb.prepend('do not')\n  return\n}\nmodule.exports = toNegative\n","const toNegative = require('./toNegative')\nconst parseVerb = require('../parse')\n\n/** return only verbs with 'not'*/\nexports.isNegative = function() {\n  return this.if('#Negative')\n}\n\n/**  return only verbs without 'not'*/\nexports.isPositive = function() {\n  return this.ifNo('#Negative')\n}\n\n/** add a 'not' to these verbs */\nexports.toNegative = function() {\n  this.list.forEach(p => {\n    let doc = this.buildFrom([p])\n    let parsed = parseVerb(doc)\n    toNegative(parsed, doc.world)\n  })\n  return this\n}\n\n/** remove 'not' from these verbs */\nexports.toPositive = function() {\n  return this.remove('#Negative')\n}\n","const parseVerb = require('../parse')\nconst isPlural = require('./isPlural')\n\n/** */\nexports.isPlural = function() {\n  let list = []\n  this.forEach(vb => {\n    let parsed = parseVerb(vb)\n    if (isPlural(parsed, this.world) === true) {\n      list.push(vb.list[0])\n    }\n  })\n  return this.buildFrom(list)\n}\n/** */\nexports.isSingular = function() {\n  let list = []\n  this.forEach(vb => {\n    let parsed = parseVerb(vb)\n    if (isPlural(parsed, this.world) === false) {\n      list.push(vb.list[0])\n    }\n  })\n  return this.buildFrom(list)\n}\n","const parseVerb = require('../parse')\nconst conjugate = require('./conjugate')\nconst toInfinitive = require('./toInfinitive')\n\n/**  */\n// exports.tenses = function() {\n// }\n//\n\n/**  */\nexports.conjugate = function() {\n  let result = []\n  this.forEach(vb => {\n    let parsed = parseVerb(vb)\n    let forms = conjugate(parsed, this.world)\n    result.push(forms)\n  })\n  return result\n}\n/** */\nexports.toPastTense = function() {\n  this.forEach(vb => {\n    let parsed = parseVerb(vb)\n    let str = conjugate(parsed, this.world).PastTense\n    vb.replace(str)\n  })\n  return this\n}\n/** */\nexports.toPresentTense = function() {\n  this.forEach(vb => {\n    let parsed = parseVerb(vb)\n    let str = conjugate(parsed, this.world).PresentTense\n    vb.replace(str)\n  })\n  return this\n}\n/** */\nexports.toFutureTense = function() {\n  this.forEach(vb => {\n    let parsed = parseVerb(vb)\n    let inf = toInfinitive(parsed, this.world)\n    vb.replace('will ' + inf) //not smart.\n  })\n  return this\n}\n/** */\nexports.toInfinitive = function() {\n  this.forEach(vb => {\n    let parsed = parseVerb(vb)\n    let inf = toInfinitive(parsed, this.world)\n    vb.replace(inf)\n  })\n  return this\n}\n/** */\nexports.toGerund = function() {\n  this.forEach(vb => {\n    let parsed = parseVerb(vb)\n    let str = conjugate(parsed, this.world).Gerund\n    vb.replace(str)\n  })\n  return this\n}\n/** */\n// exports.asAdjective=function(){}\n","const parseVerb = require('./parse')\nconst conjugations = require('./tense/conjugate')\n\nconst methods = [\n  require('./negative/methods'),\n  require('./plural/methods'),\n  require('./tense/methods'),\n]\n\nconst addMethod = function(Doc) {\n  /**  */\n  class Verbs extends Doc {\n    constructor(list, from, world) {\n      super(list, from, world)\n    }\n\n    /** overload the original json with verb information */\n    json(options) {\n      let n = null\n      if (typeof options === 'number') {\n        n = options\n        options = null\n      }\n      options = options || { text: true, normal: true, trim: true, terms: true }\n      let res = []\n      this.forEach(p => {\n        let json = p.json(options)[0]\n        let parsed = parseVerb(p)\n        json.parts = {}\n        Object.keys(parsed).forEach(k => {\n          json.parts[k] = parsed[k].text('normal')\n        })\n        json.isNegative = p.has('#Negative')\n        json.conjugations = conjugations(parsed, this.world)\n        res.push(json)\n      })\n      if (n !== null) {\n        return res[n]\n      }\n      return res\n    }\n\n    /** grab the adverbs describing these verbs */\n    adverbs() {\n      let list = []\n      this.forEach(vb => {\n        let advb = parseVerb(vb).adverb\n        if (advb.found) {\n          list = list.concat(advb.list)\n        }\n      })\n      return this.buildFrom(list)\n    }\n  }\n\n  // add-in our methods\n  methods.forEach(obj => Object.assign(Verbs.prototype, obj))\n\n  // aliases\n  Verbs.prototype.negate = Verbs.prototype.toNegative\n\n  Doc.prototype.verbs = function(n) {\n    let match = this.match('(#Adverb|#Auxiliary|#Verb|#Negative|#Particle)+')\n    // handle commas\n    match = match.splitAfter('@hasComma')\n    // match = match.clauses()\n    //handle slashes?\n    // match = match.splitAfter('@hasSlash')\n    //ensure there's actually a verb\n    match = match.if('#Verb') //this could be smarter\n    //grab (n)th result\n    if (typeof n === 'number') {\n      match = match.get(n)\n    }\n    let vb = new Verbs(match.list, this, this.world)\n    // this.before(match).debug()\n    return vb\n  }\n  return Doc\n}\nmodule.exports = addMethod\n","const selections = [\n  require('./Acronyms'),\n  require('./Clauses'),\n  require('./Contractions'),\n  require('./Lists'),\n  require('./Nouns'),\n  require('./Parentheses'),\n  require('./Possessives'),\n  require('./Quotations'),\n  require('./Verbs'),\n]\n\nconst extend = function(Doc) {\n  selections.forEach(addFn => addFn(Doc))\n  return Doc\n}\nmodule.exports = extend\n","const methods = {\n  misc: require('./methods'),\n  selections: require('./selections'),\n}\nconst tagger = require('../02-tagger')\nconst tokenize = require('../01-tokenizer')\nconst extend = require('../Subset')\n\n/** a parsed text object */\nclass Doc {\n  constructor(list, from, world) {\n    this.list = list\n    //quiet these properties in console.logs\n    Object.defineProperty(this, 'from', {\n      enumerable: false,\n      value: from,\n      writable: true,\n    })\n    //borrow some missing data from parent\n    if (world === undefined && from !== undefined) {\n      world = from.world\n    }\n    //'world' getter\n    Object.defineProperty(this, 'world', {\n      enumerable: false,\n      value: world,\n      // writable: true, //todo: add me?\n    })\n    //fast-scans for our data\n\n    //'found' getter\n    Object.defineProperty(this, 'found', {\n      get: () => this.list.length > 0,\n    })\n    //'length' getter\n    Object.defineProperty(this, 'length', {\n      get: () => this.list.length,\n    })\n    // this is way easier than .constructor.name...\n    Object.defineProperty(this, 'isA', {\n      get: () => 'Doc',\n    })\n  }\n\n  /** run part-of-speech tagger on all results*/\n  tagger() {\n    return tagger(this)\n  }\n\n  /** pool is stored on phrase objects */\n  pool() {\n    if (this.list.length > 0) {\n      return this.list[0].pool\n    }\n    return this.all().list[0].pool\n  }\n}\n\n/** create a new Document object */\nDoc.prototype.buildFrom = function(list) {\n  list = list.map(p => p.clone(true))\n  let doc = new Doc(list, this, this.world)\n  return doc\n}\n\n/** create a new Document from plaintext. */\nDoc.prototype.fromText = function(str) {\n  let list = tokenize.fromText(str, this.world, this.pool())\n  return this.buildFrom(list)\n}\n/** add new subclass methods */\nDoc.prototype.extend = function(fn) {\n  fn(this)\n  return this\n}\n\nObject.assign(Doc.prototype, methods.misc)\nObject.assign(Doc.prototype, methods.selections)\n\n//add sub-classes\nextend(Doc)\n\n//aliases\nconst aliases = {\n  untag: 'unTag',\n  and: 'match',\n  notIf: 'ifNo',\n  only: 'if',\n  onlyIf: 'if',\n}\nObject.keys(aliases).forEach(k => (Doc.prototype[k] = Doc.prototype[aliases[k]]))\nmodule.exports = Doc\n","const tokenize = require('./01-tokenizer')\nconst version = require('./_version')\nconst World = require('./World/World')\nconst Doc = require('./Doc/Doc')\n\n//blast-out our word-lists, just once\nlet world = new World()\n\n/** parse and tag text into a compromise object  */\nconst nlp = function(text = '', lexicon) {\n  if (lexicon) {\n    world.addWords(lexicon)\n  }\n  let list = tokenize.fromText(text, world)\n  let doc = new Doc(list, null, world)\n  doc.tagger()\n  return doc\n}\n\n/** parse text into a compromise object, without running POS-tagging */\nnlp.tokenize = function(text = '', lexicon) {\n  if (lexicon) {\n    world.addWords(lexicon)\n  }\n  let list = tokenize.fromText(text, world)\n  let doc = new Doc(list, null, world)\n  return doc\n}\n\n/** mix in a compromise-plugin */\nnlp.extend = function(fn) {\n  fn(Doc, world)\n  return this\n}\n\n/** make a deep-copy of the library state */\nnlp.clone = function() {\n  world = world.clone()\n  return this\n}\n\n/** re-generate a Doc object from .json() results */\nnlp.load = function(json) {\n  let list = tokenize.fromJSON(json, world)\n  return new Doc(list, null, world)\n}\n\n/** log our decision-making for debugging */\nnlp.verbose = function(bool = true) {\n  world.verbose(bool)\n  return this\n}\n\n/** current version of the library */\nnlp.version = version\n// alias\nnlp.import = nlp.load\n\nmodule.exports = nlp\n"],"names":["chars","split","makeId","str","text","i","Math","floor","random","length","compact","a","b","c","d","e","f","g","h","I","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","unicode","Object","keys","forEach","killUnicode","join","periodAcronym","oneLetterAcronym","noPeriodAcronym","lowerCaseAcronym","isAcronym","test","hasSlash","clean","toLowerCase","trim","original","replace","reduced","startings","endings","hasApostrophe","minusNumber","parseTerm","pre","post","found","after","normalize","parsed","reduce","word","alias","titleCase","exports","toUpperCase","isTitleCase","startQuote","endQuote","punct","indexOf","hasPost","hyphen","Boolean","implicit","wrapMatch","doesMatch","reg","index","id","anything","start","end","undefined","hasOwnProperty","soft","root","tag","tags","method","regex","choices","operator","every","some","result","negative","boring","world","transform","transforms","Plural","toSingular","Verb","Negative","Infinitive","tense","PastTense","Gerund","PresentTense","Participle","Actor","toInfinitive","hasSpace","options","showPre","showPost","before","whitespace","last","lowercase","punctuation","hasEllipses","boringTags","Auxiliary","Possessive","rankTags","term","tagSet","sort","lineage","jsonDefault","raw","offset","bestTag","assign","normal","require$$0","require$$1","require$$2","require$$3","require$$4","padEnd","width","toString","reason","log","console","arr","prototype","call","charAt","substr","addTag","tagset","fns","isVerbose","logTag","isA","down","unTag","notA","addTags","isArray","logUntag","untagAll","canBe","enemies","add","Term","String","obj","prev","next","clone","methods","tagMethods","terms","pool","get","error","push","isShallow","buildFrom","newTerms","map","wantId","lastId","filter","trimEnd","isFirst","isLast","isFull","textOut","lastTerm","endOfSentence","combinePost","match","addWhitespace","beforeTerms","newTerm","stitchIn","main","newPhrase","afterId","afterTerm","beforeId","unique","list","appendPhrase","doc","toStretch","hasId","docs","concat","parents","parent","shouldChange","joinPhrase","starterId","shrinkAll","deleteLength","phrase","find","from","deletePhrase","set","remove","append","prepend","firstLength","tmp","findIndex","slice","res","json","regs","getAfter","all","getBefore","require$$5","failFast","optional","cache","words","getGreedy","until","count","max","min","greedyTo","nextReg","tryHere","captures","hasNeeds","remain","greedy","skipto","startAt","capture","isImplicit","hasMinMax","andSign","stripStart","stripEnd","stripBoth","parseToken","RegExp","Number","byParentheses","byWords","byArray","postProcess","tokens","captureArr","first","reverse","fromDoc","ids","syntax","input","matchAll","matchOne","minLength","matches","tryMatch","notMatch","ts","current","results","previous","can","Phrase","defineProperty","enumerable","writable","value","matchMethods","aliases","Pool","initSplit","hasSomething","hasEllipse","newLine","hasLetter","startWhitespace","naiive_split","lines","isSentence","abbrevs","txt","lastWord","splitSentences","abbreviations","sentences","chunks","splits","ws","wordlike","isBoundary","naiiveSplit","isSlash","notWord","hasHyphen","combineSlashes","splitHyphens","hyphens","splitWords","carry","addLinks","fromText","splitTerms","phrases","parseTags","tagList","numList","parseInt","num","warn","fromJSON","JSON","parse","tagArr","entity","Noun","Singular","ProperNoun","Person","FirstName","MaleName","FemaleName","LastName","Honorific","Place","Country","City","Region","Organization","SportsTeam","Uncountable","Pronoun","Activity","Unit","Demonym","FutureTense","Copula","Modal","PerfectTense","Pluperfect","PhrasalVerb","Particle","Value","Ordinal","Cardinal","RomanNumeral","TextValue","NumericValue","Money","Fraction","Percent","Adjective","Comparable","Comparative","Superlative","NumberRange","Adverb","Date","Month","WeekDay","Determiner","Conjunction","Preposition","QuestionWord","Currency","Expression","Abbreviation","Url","PhoneNumber","HashTag","AtMention","Emoji","Email","Acronym","colorMap","addColors","color","inferIsA","len","inferNotA","key","inferLineage","validate","inferTags","inferColor","addIn","build","nouns","verbs","values","misc","seq","toAlphaCode","fromCharCode","fromAlphaCode","charCodeAt","encoding","symbols","nodes","exec","symCount","syms","indexFromRef","toArray","unpack","unpack_1","unpack_1$1","Array","addWord","lex","addMore","lexicon","hasCompound","plural","toPlural","conj","conjugate","adjectives","addIrregulars","irregulars","inf","forms","g8","vh1","q1","q2","q3","q4","addendum","alga","alumna","alumnus","analysis","antenna","appendix","avocado","axis","bacillus","barracks","beau","bus","cactus","chateau","child","circus","clothes","corpus","criterion","curriculum","database","deer","diagnosis","echo","embargo","epoch","foot","formula","fungus","genus","goose","halo","hippopotamus","larva","leaf","libretto","loaf","man","matrix","memorandum","modulus","mosquito","mouse","move","nebula","nucleus","octopus","opus","ovum","ox","parenthesis","person","phenomenon","prognosis","quiz","radius","referendum","rodeo","sex","shoe","sombrero","stimulus","stomach","syllabus","synopsis","tableau","thesis","thief","tooth","tornado","tuxedo","vertebra","mapping","prt","perf","pst","fut","pres","pluperf","conjugations","act","age","aim","arise","babysit","ban","be","beat","become","begin","being","bend","bet","bind","bite","bleed","blow","boil","brake","breed","bring","broadcast","budget","burn","burst","buy","choose","cling","come","compete","cost","creep","cut","deal","develop","die","dig","dive","draw","dream","drink","drive","drop","eat","edit","egg","fall","feed","feel","fight","flee","fling","fly","forbid","forget","forgive","free","freeze","give","go","grow","hang","have","hear","hide","hit","hold","hurt","ice","imply","is","keep","kneel","know","lay","lead","leap","leave","lend","lie","light","loose","lose","make","mean","meet","miss","pay","prove","puke","put","quit","read","ride","ring","rise","rub","run","say","seat","see","seek","sell","send","sew","shake","shave","shed","shine","shoot","show","shut","sing","sink","sit","ski","slay","sleep","slide","smash","sneak","speak","speed","spend","spill","spin","spit","spread","spring","stand","steal","stick","sting","stink","stream","strew","strike","suit","sware","swear","sweep","swim","swing","take","teach","tear","tell","think","thrive","tie","undergo","understand","upset","wait","wake","wear","weave","weep","win","wind","withdraw","wring","write","final","full","endsWith","repl","pr","pa","gr","ar","posMap","doTransform","pos","checkSuffix","suffixes","hasY","generic","genericFill","do_rules","dont_rules","nice","late","hard","inner","outer","far","worse","bad","good","big","large","to_superlative","grey","gray","green","yellow","red","well","sad","to_comparative","toSuperlative","toComparative","sup","comp","addE","trySuffix","rules","pluralize","invertObj","invert","to","guessVerb","guessTense","three","guess","two","one","irregs","rule","require$$6","World","defaultTags","unpackWords","lexData","getByTag","bool","addLex","inferTagSet","fn","taggers","plurals","irregular","compounds","postProcessors","stringify","w2","addParent","doShallow","wordCount","setRoot","eq","parseSyntax","not","has","lookAhead","lookBehind","befores","eachTerm","toTitleCase","untag","tagTerms","safe","why","setTag","detachParent","sub","newPhrases","tokenize","tmpDoc","tagger","replaceWith","toRemove","arguments","arg","alpha","left","right","byFreq","counts","byOffset","order","alphabetical","wordcount","chronological","chron","reset","cli","blue","magenta","cyan","black","tagString","debug","module","showFull","trimPre","trimPost","isPunct","quotes","defaults","termArr","termList","parentheses","unwrap","contraction","contractions","expand","possessive","possessives","strip","quotations","jsonDefaults","termOffsets","elapsed","offsets","frequency","freq","foundEm","parts","splitOn","splitAfter","segment","removed","increase","topk","reduceTags","implied","phraseList","allTags","tagMap","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","findMethods","simpleMethods","tryMultiple","checkLexicon","foundWords","apostrophes","oneLetterWord","A","checkPunctuation","endChar","romanNumeral","romanNumValid","checkRegex","tagSafe","Adj","Inf","Pres","Sing","Past","Exp","Last","Avb","Plrl","Vb","ea","ia","ic","ly","que","lar","ffy","nny","rmy","azy","oid","mum","ous","sis","rol","ize","ify","zes","nes","ing","teen","tors","amed","ched","ends","oses","fies","ects","nded","cede","tage","gate","vice","tion","cted","ette","llen","ried","gone","made","fore","less","ices","ions","ints","aped","lked","ould","tive","sson","czyk","chuk","enko","akis","nsen","fully","where","wards","urned","tized","eased","ances","tures","ports","ettes","ities","rough","bound","tieth","ishes","tches","nssen","marek","keeper","logist","auskas","teenth","sdottir","opoulos","suffixRegexes","char","regexes","knownSuffixes","suffixList","steps","suffix","lookups","afterThisWord","it","there","because","but","who","his","when","you","very","old","never","beforeThisWord","me","only","him","were","took","himself","went","jr","afterThisPOS","beforeThisPOS","beforeThisPos","afterThisPos","afterKeys","markov","beforeKeys","checkNeighbours","isKnown","foundTag","nextTerm","hasNumber","checkCase","isPlural","isSingular","noPlurals","notPlural","notSingular","checkPlural","hasPrefix","prefix","checkPrefix","stem","step","neighbours","fallbacks","hasNegative","wont","cant","cannot","dont","dun","checkNegative","easy","ll","ve","re","checkApostrophe","wanna","gonna","im","alot","ive","imma","whered","whend","howd","whatd","dunno","brb","gtg","irl","tbh","imo","til","rn","twas","doAint","noun","checkIrregulars","hasApostropheS","blacklist","that","isPossessive","twoTerm","isHas","checkPossessive","hasPerfect","checkPerfect","isRange","checkRange","isNumber","createPhrase","firstTerm","miscCorrection","so","which","like","notIf","title","hyph","place","fixThe","det","adj","an","ifNo","fixNouns","org","acronym","poss","maybeNoun","maybeVerb","maybeAdj","maybeDate","maybePlace","fixPerson","hon","ambigNoun","ambigVerb","ambigAdj","ambigDate","ambigPlace","al","firstName","lastName","advb","fixVerb","vb","modal","copula","gerund","willBe","fixAdjective","fixValue","val","preps","people","fixDates","verb","march","sun","sat","month","corrections","fixDeterminer","fixMisc","init","uncache","addMethod","Doc","Acronyms","acronyms","clauses","commas","conjunctions","splitBefore","condition","tooLong","Contractions","contracted","isTitlecase","expanded","isExpanded","isContracted","things","beforeLast","conjunction","hasOxford","Lists","addPunctuation","lists","nounList","adjList","verbList","noPlural","hasPlural","hour","heir","heirloom","honest","honour","honor","uber","an_acronyms","a_regexs","makeArticle","firstLetter","endS","exceptions","he","she","they","we","her","their","our","my","your","toPossessive","Nouns","article","getArticle","open","close","Parentheses","Possessives","pairs","hasOpen","Quotations","want","parseVerb","adverb","auxiliary","particle","out","findNoun","toBe","isNegative","infinitive","toNegative","Verbs","negate","selections","extend","addFn","and","onlyIf","nlp","addWords","load","verbose","version"],"mappings":"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"}