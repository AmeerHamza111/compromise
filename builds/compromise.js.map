{"version":3,"file":"compromise.js","sources":["../src/Term/_id.js","../src/Term/normalize/unicode.js","../src/Term/normalize/isAcronym.js","../src/Term/normalize/index.js","../src/Term/parse.js","../src/Term/methods/01-case.js","../src/Term/methods/02-punctuation.js","../src/Term/methods/_match.js","../src/Term/methods/04-out.js","../src/Term/methods/03-misc.js","../src/Term/methods/index.js","../src/Term/tag/fns.js","../src/Term/tag/add.js","../src/Term/tag/unTag.js","../src/Term/tag/canBe.js","../src/Term/tag/index.js","../src/Term/Term.js","../src/Phrase/methods/01-utils.js","../src/Phrase/methods/02-change.js","../src/Phrase/methods/_join/append.js","../src/Phrase/methods/_join/prepend.js","../src/Phrase/methods/_join/delete.js","../src/Phrase/methods/03-split.js","../src/Phrase/methods/index.js","../src/Phrase/match/02-failFast.js","../src/Phrase/match/03-tryMatch.js","../src/Doc/match/parseToken.js","../src/Doc/match/syntax.js","../src/Phrase/match/01-matchAll.js","../src/Phrase/match/not.js","../src/Phrase/match/index.js","../src/Phrase/Phrase.js","../src/01-tokenizer/Pool.js","../src/01-tokenizer/lib/abbreviations.js","../src/01-tokenizer/01-sentences.js","../src/01-tokenizer/02-words.js","../src/01-tokenizer/index.js","../src/World/_data.js","../src/World/tags/conflicts.js","../src/World/tags/tags/nouns.js","../src/World/tags/tags/verbs.js","../src/World/tags/tags/values.js","../src/World/tags/tags/dates.js","../src/World/tags/tags/misc.js","../src/World/tags/addDownward.js","../src/World/tags/index.js","../node_modules/efrt-unpack/efrt-unpack.min.js","../src/World/transforms/inflect/01-suffixes.js","../src/World/transforms/inflect/index.js","../src/World/transforms/conjugate/suffixes.js","../src/World/transforms/conjugate/01-suffixes.js","../src/World/transforms/conjugate/02-generic.js","../src/World/transforms/conjugate/index.js","../src/World/01-addWords.js","../src/World/02-conjugations.js","../src/World/03-plurals.js","../src/World/04-addTags.js","../src/World/misc/misc.js","../src/02-tagger/04-inference/data/orgWords.js","../src/World/misc/index.js","../src/World/index.js","../src/Doc/methods/_tag.js","../src/Doc/methods/01-utils.js","../src/Doc/methods/02-misc.js","../src/Doc/methods/03-split.js","../src/Doc/methods/04-loops.js","../src/world/tags/conflicts.js","../src/world/tags/tags/nouns.js","../src/world/tags/tags/verbs.js","../src/world/tags/tags/values.js","../src/world/tags/tags/dates.js","../src/world/tags/tags/misc.js","../src/world/tags/addDownward.js","../src/world/tags/index.js","../src/Doc/methods/_debug.js","../src/Doc/methods/05-output.js","../src/Doc/methods/06-replace.js","../src/Doc/methods/index.js","../src/Doc/match/index.js","../src/Doc/selections/find.js","../src/Doc/selections/index.js","../src/02-tagger/01-init/01-lexicon.js","../src/02-tagger/01-init/02-punctuation.js","../src/02-tagger/01-init/regexes/index.js","../src/02-tagger/01-init/03-regex.js","../src/02-tagger/01-init/suffixes/regex.js","../src/02-tagger/01-init/suffixes/suffixList.js","../src/02-tagger/01-init/04-suffixes.js","../src/02-tagger/01-init/emoji/regex.js","../src/02-tagger/01-init/emoji/list.js","../src/02-tagger/01-init/05-emoji.js","../src/02-tagger/01-init/index.js","../src/02-tagger/02-fallbacks/data/markov.js","../src/02-tagger/02-fallbacks/01-neighbours.js","../src/02-tagger/02-fallbacks/02-case.js","../src/02-tagger/02-fallbacks/04-plurals.js","../src/02-tagger/02-fallbacks/03-stem.js","../src/02-tagger/02-fallbacks/index.js","../src/02-tagger/03-contractions/01-negative.js","../src/02-tagger/03-contractions/02-simple.js","../src/02-tagger/03-contractions/03-irregulars.js","../src/02-tagger/03-contractions/04-possessive.js","../src/02-tagger/03-contractions/05-perfectTense.js","../src/02-tagger/03-contractions/index.js","../src/02-tagger/04-inference/02-organizations.js","../src/02-tagger/04-inference/01-acronyms.js","../src/02-tagger/04-inference/index.js","../src/02-tagger/05-correction/fixMisc.js","../src/02-tagger/05-correction/fixThe.js","../src/02-tagger/05-correction/fixNouns.js","../src/02-tagger/05-correction/fixPerson.js","../src/02-tagger/05-correction/fixVerb.js","../src/02-tagger/05-correction/fixAdjective.js","../src/02-tagger/05-correction/fixValue.js","../src/02-tagger/05-correction/index.js","../src/02-tagger/index.js","../src/Subset/acronyms.js","../src/Subset/contractions.js","../src/Subset/index.js","../src/Doc/Doc.js","../src/index.js"],"sourcesContent":["//this is a not-well-thought-out way to reduce our dependence on `object===object` stuff\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'.split('')\n\n//generates a unique id for this term\nfunction makeId(str) {\n  str = str || '_'\n  var text = str + '-'\n  for (var i = 0; i < 7; i++) {\n    text += chars[Math.floor(Math.random() * chars.length)]\n  }\n  return text\n}\n\nmodule.exports = makeId\n","//a hugely-ignorant, and widely subjective transliteration of latin, cryllic, greek unicode characters to english ascii.\n//approximate visual (not semantic or phonetic) relationship between unicode and ascii characters\n//http://en.wikipedia.org/wiki/List_of_Unicode_characters\n//https://docs.google.com/spreadsheet/ccc?key=0Ah46z755j7cVdFRDM1A2YVpwa1ZYWlpJM2pQZ003M0E\nlet compact = {\n  '!': '¡',\n  '?': '¿Ɂ',\n  '\"': '“”\"❝❞',\n  \"'\": '‘‛❛❜',\n  '-': '—–',\n  a: 'ªÀÁÂÃÄÅàáâãäåĀāĂăĄąǍǎǞǟǠǡǺǻȀȁȂȃȦȧȺΆΑΔΛάαλАДадѦѧӐӑӒӓƛɅæ',\n  b: 'ßþƀƁƂƃƄƅɃΒβϐϦБВЪЬбвъьѢѣҌҍҔҕƥƾ',\n  c: '¢©ÇçĆćĈĉĊċČčƆƇƈȻȼͻͼͽϲϹϽϾϿЄСсєҀҁҪҫ',\n  d: 'ÐĎďĐđƉƊȡƋƌǷ',\n  e: 'ÈÉÊËèéêëĒēĔĕĖėĘęĚěƎƏƐǝȄȅȆȇȨȩɆɇΈΕΞΣέεξϱϵ϶ЀЁЕЭеѐёҼҽҾҿӖӗӘәӚӛӬӭ',\n  f: 'ƑƒϜϝӺӻҒғӶӷſ',\n  g: 'ĜĝĞğĠġĢģƓǤǥǦǧǴǵ',\n  h: 'ĤĥĦħƕǶȞȟΉΗЂЊЋНнђћҢңҤҥҺһӉӊ',\n  I: 'ÌÍÎÏ',\n  i: 'ìíîïĨĩĪīĬĭĮįİıƖƗȈȉȊȋΊΐΪίιϊІЇії',\n  j: 'ĴĵǰȷɈɉϳЈј',\n  k: 'ĶķĸƘƙǨǩΚκЌЖКжкќҚқҜҝҞҟҠҡ',\n  l: 'ĹĺĻļĽľĿŀŁłƚƪǀǏǐȴȽΙӀӏ',\n  m: 'ΜϺϻМмӍӎ',\n  n: 'ÑñŃńŅņŇňŉŊŋƝƞǸǹȠȵΝΠήηϞЍИЙЛПийлпѝҊҋӅӆӢӣӤӥπ',\n  o: 'ÒÓÔÕÖØðòóôõöøŌōŎŏŐőƟƠơǑǒǪǫǬǭǾǿȌȍȎȏȪȫȬȭȮȯȰȱΌΘΟθοσόϕϘϙϬϭϴОФоѲѳӦӧӨөӪӫ¤ƍΏ',\n  p: 'ƤƿΡρϷϸϼРрҎҏÞ',\n  q: 'Ɋɋ',\n  r: 'ŔŕŖŗŘřƦȐȑȒȓɌɍЃГЯгяѓҐґ',\n  s: 'ŚśŜŝŞşŠšƧƨȘșȿςϚϛϟϨϩЅѕ',\n  t: 'ŢţŤťŦŧƫƬƭƮȚțȶȾΓΤτϮϯТт҂Ҭҭ',\n  u: 'µÙÚÛÜùúûüŨũŪūŬŭŮůŰűŲųƯưƱƲǓǔǕǖǗǘǙǚǛǜȔȕȖȗɄΰμυϋύϑЏЦЧцџҴҵҶҷӋӌӇӈ',\n  v: 'νѴѵѶѷ',\n  w: 'ŴŵƜωώϖϢϣШЩшщѡѿ',\n  x: '×ΧχϗϰХхҲҳӼӽӾӿ',\n  y: 'ÝýÿŶŷŸƳƴȲȳɎɏΎΥΫγψϒϓϔЎУучўѰѱҮүҰұӮӯӰӱӲӳ',\n  z: 'ŹźŻżŽžƩƵƶȤȥɀΖζ',\n}\n//decompress data into two hashes\nlet unicode = {}\nObject.keys(compact).forEach(function(k) {\n  compact[k].split('').forEach(function(s) {\n    unicode[s] = k\n  })\n})\n\nconst killUnicode = str => {\n  let chars = str.split('')\n  chars.forEach((s, i) => {\n    if (unicode[s]) {\n      chars[i] = unicode[s]\n    }\n  })\n  return chars.join('')\n}\nmodule.exports = killUnicode\n// console.log(killUnicode('bjŏȒk—Ɏó'));\n","const periodAcronym = /([A-Z]\\.)+[A-Z]?,?$/\nconst oneLetterAcronym = /^[A-Z]\\.,?$/\nconst noPeriodAcronym = /[A-Z]{2}('s|,)?$/\nconst lowerCaseAcronym = /([a-z]\\.){2,}[a-z]\\.?$/\n//(we intentionally do not support unicode acronyms)\n\n/** does it appear to be an acronym, like FBI or M.L.B. */\nconst isAcronym = function(str) {\n  //like N.D.A\n  if (periodAcronym.test(str) === true) {\n    return true\n  }\n  //like c.e.o\n  if (lowerCaseAcronym.test(str) === true) {\n    return true\n  }\n  //like 'F.'\n  if (oneLetterAcronym.test(str) === true) {\n    return true\n  }\n  //like NDA\n  if (noPeriodAcronym.test(str) === true) {\n    return true\n  }\n  return false\n}\nmodule.exports = isAcronym\n","const killUnicode = require('./unicode')\nconst isAcronym = require('./isAcronym')\nconst hasSlash = /[a-z\\u00C0-\\u00FF] ?\\/ ?[a-z\\u00C0-\\u00FF]/\n\n/** some basic operations on a string to reduce noise */\nconst normalize = function(str) {\n  str = str || ''\n  str = str.toLowerCase()\n  str = str.trim()\n  let original = str\n  //(very) rough ASCII transliteration -  bjŏrk -> bjork\n  str = killUnicode(str)\n  //rough handling of slashes - 'see/saw'\n  if (hasSlash.test(str) === true) {\n    str = str.replace(/\\/.*/, '')\n  }\n  //#tags, @mentions\n  str = str.replace(/^[#@]/, '')\n  //punctuation\n  str = str.replace(/[,;.!?]+$/, '')\n  // coerce single curly quotes\n  str = str.replace(/[\\u0027\\u0060\\u00B4\\u2018\\u2019\\u201A\\u201B\\u2032\\u2035\\u2039\\u203A]+/g, \"'\")\n  // coerce double curly quotes\n  str = str.replace(\n    /[\\u0022\\u00AB\\u00BB\\u201C\\u201D\\u201E\\u201F\\u2033\\u2034\\u2036\\u2037\\u2E42\\u301D\\u301E\\u301F\\uFF02]+/g,\n    '\"'\n  )\n  //coerce Unicode ellipses\n  str = str.replace(/\\u2026/g, '...')\n  //en-dash\n  str = str.replace(/\\u2013/g, '-')\n  //lookin'->looking (make it easier for conjugation)\n  if (/[a-z][^aeiou]in['’]$/.test(str) === true) {\n    str = str.replace(/in['’]$/, 'ing')\n  }\n  //turn re-enactment to reenactment\n  if (/^(re|un)-?[^aeiou]./.test(str) === true) {\n    str = str.replace('-', '')\n  }\n  //strip leading & trailing grammatical punctuation\n  if (/^[:;]/.test(str) === false) {\n    str = str.replace(/\\.{3,}$/g, '')\n    str = str.replace(/['\",\\.!:;\\?\\)]+$/g, '')\n    str = str.replace(/^['\"\\(]+/g, '')\n  }\n  //do this again..\n  str = str.trim()\n  //oh shucks,\n  if (str === '') {\n    str = original\n  }\n  //compact acronyms\n  if (isAcronym(str)) {\n    str = str.replace(/\\./g, '')\n  }\n  //nice-numbers\n  str = str.replace(/([0-9]),([0-9])/g, '$1$2')\n  return str\n}\n\nmodule.exports = normalize\n// console.log(normalize('Dr. V Cooper'));\n","const normalize = require('./normalize')\n\n//all punctuation marks, from https://en.wikipedia.org/wiki/Punctuation\nlet endings = /[ \\.’'\\[\\](){}⟨⟩:,،、‒–—―…!.‹›«»‐\\-?‘’“”'\";\\/⁄·\\&*@\\•^†‡°”¡¿※#№÷×ºª%‰+−=‱¶′″‴§~_|‖¦©℗®℠™¤₳฿]+$/\nlet startings = /^[ \\.’'\\[\\](){}⟨⟩:,،、‒–—―…!.‹›«»‐\\-?‘’“”'\";\\/⁄·\\&*@\\•^†‡°”¡¿※№÷×ºª%‰+−=‱¶′″‴§~_|‖¦©℗®℠™¤₳฿]+/\n// let punctuation = '[ \\.’\\'\\[\\(\\)\\{\\}⟨⟩:,،、‒–—―…!.‹›«»‐-\\?]';\n//money = ₵¢₡₢$₫₯֏₠€ƒ₣₲₴₭₺₾ℳ₥₦₧₱₰£៛₽₹₨₪৳₸₮₩¥\n/** turn given text into a parsed-up object\n * seperate the 'meat' of the word from the whitespace+punctuation\n */\nconst parseTerm = str => {\n  let preText = ''\n  let postText = ''\n  str = str.replace(startings, found => {\n    preText = found\n    return ''\n  })\n  str = str.replace(endings, found => {\n    postText = found\n    return ''\n  })\n  //we went too far..\n  if (str === '') {\n    str = preText.replace(/[.?!]/, '') //.trim(); //huh?\n    preText = ''\n  }\n  return {\n    text: str,\n    normal: normalize(str),\n    preText: preText,\n    postText: postText,\n  }\n}\nmodule.exports = parseTerm\n","/** convert all text to uppercase */\nexports.toUpperCase = function(world) {\n  this.text = this.text.toUpperCase()\n  this.tag('#UpperCase', 'toUpperCase', world)\n  return this\n}\n\n/** convert all text to lowercase */\nexports.toLowerCase = function(world) {\n  this.text = this.text.toLowerCase()\n  this.unTag('#TitleCase', world)\n  this.unTag('#UpperCase', world)\n  return this\n}\n\n/** only set the first letter to uppercase\n * leave any existing uppercase alone\n */\nexports.toTitleCase = function(world) {\n  this.text = this.text.replace(/^ *[a-z\\u00C0-\\u00FF]/, x => x.toUpperCase()) //support unicode?\n  this.tag('#TitleCase', 'toTitleCase', world)\n  return this\n}\n","/** does it have a comma?  */\nexports.hasComma = function() {\n  return this.postText.includes(',')\n}\n\n/** does it end in a period? */\nexports.hasPeriod = function() {\n  return this.postText.includes('.') === true && this.postText.includes('...') === false\n}\n\n/** does it end in an exclamation */\nexports.hasExclamation = function() {\n  return this.postText.includes('!')\n}\n\n/** does it end with a question mark? */\nexports.hasQuestionMark = function() {\n  return this.postText.includes('?') || this.postText.includes('¿')\n}\n\n/** is there a ... at the end? */\nexports.hasElipses = function() {\n  return this.postText.includes('..') || this.postText.includes('…')\n}\n\n/** is there a semicolon after this word? */\nexports.hasSemicolon = function() {\n  return this.postText.includes(';')\n}\n\n/** clopper any atypical whitespace */\nexports.normalizeWhitespace = function() {\n  let punct = this.punctuation() || ''\n  this.preText = ' '\n  this.postText = punct\n  return this\n}\n\n/** return any expected forms of trailing punctuation */\nexports.punctuation = function() {\n  let str = this.postText.trim()\n  let m = str.match(/[\\.,\\?\\!]/)\n  if (m !== null) {\n    return m[0]\n  }\n  return null\n}\n","/** ignore optional/greedy logic, straight-up term match*/\nconst doesMatch = function(t, reg) {\n  if (reg.normal !== undefined) {\n    return reg.normal === t.normal\n  }\n  if (reg.tag !== undefined) {\n    return t.tags[reg.tag] === true\n  }\n  if (reg.regex !== undefined) {\n    return reg.regex.test(t.normal)\n  }\n  if (reg.choices !== undefined) {\n    //recursion alert\n    let foundOne = reg.choices.find(r => doesMatch(t, r))\n    return foundOne !== undefined\n  }\n  return false\n}\nmodule.exports = doesMatch\n","//\nexports.out = function(options) {\n  let word = this.text\n  let before = this.preText\n  let after = this.postText\n  if (options.normal === true) {\n    word = this.normal\n    before = ''\n    after = ' '\n    if (options.last === true) {\n      after = ''\n    }\n    //normalized end punctuation\n    if (this.hasPeriod() === true) {\n      after = '.' + after\n    } else if (this.hasQuestionMark() === true) {\n      after = '?' + after\n    } else if (this.hasExclamation() === true) {\n      after = '!' + after\n    } else if (this.hasComma() === true) {\n      after = ',' + after\n    } else if (this.hasElipses() === true) {\n      after = '...' + after\n    }\n  }\n  return before + word + after\n}\n\n/** return various metadata for this term */\nexports.json = function() {\n  let result = {\n    text: this.text,\n    tags: Object.keys(this.tags),\n    preText: this.preText,\n    postText: this.postText,\n  }\n  return result\n}\n","const doesMatch = require('./_match')\nconst out = require('./04-out')\nconst isAcronym = require('../normalize/isAcronym')\n\n// these tags aren't juicy-enough\nconst boring = {\n  TitleCase: true,\n  UpperCase: true,\n  CamelCase: true,\n  Hyphenated: true,\n  StartBracket: true,\n  EndBracket: true,\n  Comma: true,\n  ClauseEnd: true,\n}\n\n/** check a match object against this term */\nexports.doesMatch = function(reg) {\n  return doesMatch(this, reg)\n}\n\n/** return term meta-data in a given format */\nexports.out = function(reg) {\n  return out(this, reg)\n}\n\n/** does this term look like an acryonym? */\nexports.isAcronym = function() {\n  return isAcronym(this.text)\n}\n\n/** does the term have at least one good tag? */\nexports.isKnown = function() {\n  return Object.keys(this.tags).some(t => boring[t] !== true)\n}\n","module.exports = Object.assign(\n  {},\n  require('./01-case'),\n  require('./02-punctuation'),\n  require('./03-misc'),\n  require('./04-out')\n)\n","/** add spaces at the end */\nconst padEnd = function(str, width) {\n  str = str.toString()\n  while (str.length < width) {\n    str += ' '\n  }\n  return str\n}\n\n/** output for verbose-mode */\nexports.logTag = function(t, tag, reason) {\n  let log = '\\x1b[33m' + padEnd(t.normal, 15) + '\\x1b[0m + \\x1b[32m' + tag + '\\x1b[0m '\n  if (reason) {\n    log = padEnd(log, 35) + ' ' + reason + ''\n  }\n  console.log(log)\n}\n\n/** output for verbose mode  */\nexports.logUntag = function(t, tag, reason) {\n  let log = '\\x1b[33m' + padEnd(t.normal, 3) + ' \\x1b[31m - #' + tag + '\\x1b[0m '\n  if (reason) {\n    log = padEnd(log, 35) + ' ' + reason\n  }\n  console.log(log)\n}\n\nexports.isArray = function(arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]'\n}\n\nexports.titleCase = str => {\n  return str.charAt(0).toUpperCase() + str.substr(1)\n}\n","const fns = require('./fns')\n\n/** add a tag, and its descendents, to a term */\nconst addTag = function(t, tag, reason, world) {\n  if (!world) {\n    console.warn('World not found - ' + reason)\n  }\n  //support '.' or '-' notation for skipping the tag\n  if (tag === '' || tag === '.' || tag === '-') {\n    return\n  }\n  if (tag[0] === '#') {\n    tag = tag.replace(/^#/, '')\n  }\n  tag = fns.titleCase(tag)\n  //if we already got this one\n  if (t.tags[tag] === true) {\n    return\n  }\n  if (world !== undefined && world.isVerbose() === true) {\n    fns.logTag(t, tag, reason)\n  }\n  //add tag\n  t.tags[tag] = true //whee!\n\n  //check tagset for any additional things to do...\n  if (world !== undefined && world.tags !== undefined) {\n    let tagset = world.tags\n    if (tagset.hasOwnProperty(tag) === true) {\n      //add parent Tags\n      if (tagset[tag].isA !== undefined) {\n        let parentTag = tagset[tag].isA\n        addTag(t, parentTag, '→', world) //recursive\n      }\n      //remove any contrary tags\n      if (typeof tagset[tag].notA !== 'undefined') {\n        t.unTag(tagset[tag].notA, '←', world)\n      }\n    }\n  }\n}\n\n/** support an array of tags */\nconst addTags = function(term, tags, reason, world) {\n  if (fns.isArray(tags) === true) {\n    tags.forEach(tag => addTag(term, tag, reason, world))\n  } else {\n    addTag(term, tags, reason, world)\n  }\n}\nmodule.exports = addTags\n","const fns = require('./fns')\n\n/** remove this tag, and its descentents from the term */\nconst unTag = function(t, tag, reason, world) {\n  if (t.tags.hasOwnProperty(tag) === true) {\n    delete t.tags[tag]\n    //log in verbose-mode\n    if (world !== undefined && world.isVerbose() === true) {\n      fns.logUntag(t, tag, reason)\n    }\n  }\n  //delete downstream tags too\n  if (world) {\n    //TODO: properly support Term calling itself directly\n    const tagset = world.tags\n    if (tagset[tag]) {\n      let also = tagset[tag].downward\n      for (let i = 0; i < also.length; i++) {\n        unTag(t, also[i], ' - -   - ', world) //recursive\n      }\n    }\n  }\n  return t\n}\n\n//handle an array of tags\nconst untagAll = function(term, tags, reason, world) {\n  if (fns.isArray(tags) === true) {\n    tags.forEach(tag => unTag(term, tag, reason, world))\n  } else {\n    unTag(term, tags, reason, world)\n  }\n}\nmodule.exports = untagAll\n","'use strict'\n\n//recursively-check compatibility of this tag and term\nconst canBe = function(term, tag, world) {\n  const tagset = world.tags\n  // cleanup tag\n  if (tag[0] === '#') {\n    tag = tag.replace(/^#/, '')\n  }\n  //fail-fast\n  if (tagset[tag] === undefined) {\n    return true\n  }\n  //loop through tag's contradictory tags\n  let enemies = tagset[tag].notA || []\n  for (let i = 0; i < enemies.length; i++) {\n    if (term.tags[enemies[i]] === true) {\n      return false\n    }\n  }\n  if (tagset[tag].isA !== undefined) {\n    return canBe(term, tagset[tag].isA, world) //recursive\n  }\n  return true\n}\n\nmodule.exports = canBe\n","const add = require('./add')\nconst unTag = require('./unTag')\nconst canBe = require('./canBe')\n\n/** add a tag or tags, and their descendents to this term\n * @param  {string | string[]} tags - a tag or tags\n * @param {string?} [reason] a clue for debugging\n */\nexports.tag = function(tags, reason, world) {\n  add(this, tags, reason, world)\n  return this\n}\n\n/** only tag this term if it's consistent with it's current tags */\nexports.tagSafe = function(tags, reason, world) {\n  if (canBe(this, tags, world)) {\n    add(this, tags, reason, world)\n  }\n  return this\n}\n\n/** remove a tag or tags, and their descendents from this term\n * @param {string | string[]} tags  - a tag or tags\n * @param {string?} [reason] a clue for debugging\n */\nexports.unTag = function(tags, reason, world) {\n  unTag(this, tags, reason, world)\n  return this\n}\n\n/** is this tag consistent with the word's current tags?\n * @param {string | string[]} tags - a tag or tags\n * @returns {boolean}\n */\nexports.canBe = function(tags, world) {\n  return canBe(this, tags, world)\n}\n","const makeId = require('./_id')\nconst parseTerm = require('./parse')\nconst methods = require('./methods')\nconst tagMethods = require('./tag')\n\nclass Term {\n  constructor(text = '') {\n    text = String(text)\n    let obj = parseTerm(text)\n    this.text = obj.text || ''\n    this.normal = obj.normal || ''\n    this.implicit = obj.implicit || null\n    this.preText = obj.preText || ''\n    this.postText = obj.postText || ''\n    this.raw = text.trim()\n    this.tags = {}\n    this.prev = null\n    this.next = null\n    this.id = makeId(this.normal)\n    this.isA = 'Term' // easier than .constructor...\n  }\n}\n\n/** create a deep-copy of this term */\nTerm.prototype.clone = function() {\n  let term = new Term(this.text)\n  term.preText = this.preText\n  term.postText = this.postText\n  term.tags = this.tags.slice(0)\n  return term\n}\n\nObject.assign(Term.prototype, methods)\nObject.assign(Term.prototype, tagMethods)\n\nmodule.exports = Term\n","/** return a flat array of Term objects */\nexports.terms = function(n) {\n  let terms = [this.pool.get(this.start)]\n  if (this.length === 0) {\n    return []\n  }\n  for (let i = 0; i < this.length - 1; i += 1) {\n    let id = terms[terms.length - 1].next\n    if (id === null) {\n      console.warn('linked-list broken')\n      break\n    }\n    let term = this.pool.get(id)\n    terms.push(term)\n  }\n  if (n !== undefined) {\n    return terms[n]\n  }\n  return terms\n}\n\n/** return a deep-copy of this phrse  */\nexports.clone = function() {\n  //how do we clone part of the pool?\n  let terms = this.terms()\n  let newTerms = terms.map(t => t.clone())\n  //connect these new ids up\n  newTerms.forEach((t, i) => {\n    //add it to the pool..\n    this.pool.add(t)\n    if (newTerms[i + 1]) {\n      t.next = newTerms[i + 1].id\n    }\n    if (newTerms[i - 1]) {\n      t.prev = newTerms[i - 1].id\n    }\n  })\n  return this.buildFrom(newTerms[0].id, newTerms.length)\n}\n\n/** return last term object */\nexports.lastTerm = function() {\n  let terms = this.terms()\n  return terms[terms.length - 1]\n}\n\n/** quick lookup for a term id */\nexports.hasId = function(id) {\n  let terms = this.terms()\n  return terms.find(t => t.id === id) !== undefined\n}\n\n/** produce output in the given format */\nexports.out = function(options = {}) {\n  let terms = this.terms()\n  return terms.reduce((str, t, i) => {\n    options.last = i === terms.length - 1\n    return str + t.out(options)\n  }, '')\n}\n\n/** return json metadata for this phrase */\nexports.json = function(options = {}) {\n  return this.terms().map(t => t.json(options))\n}\n","/** remove start and end whitespace */\nexports.trim = function() {\n  let terms = this.terms()\n  if (terms.length > 0) {\n    //trim starting\n    terms[0].preText = terms[0].preText.replace(/^\\s+/, '')\n    //trim ending\n    let lastTerm = terms[terms.length - 1]\n    lastTerm.postText = lastTerm.postText.replace(/\\s+$/, '')\n  }\n  return this\n}\n","const hasSpace = / /\n\n//add whitespace to the start of the second bit\nconst addWhitespace = function(two) {\n  let firstWord = two[0]\n  if (hasSpace.test(firstWord.preText) === false) {\n    firstWord.preText = ' ' + firstWord.preText\n  }\n}\n\n//insert this segment into the linked-list\nconst stitchIn = function(main, newPhrase) {\n  let afterId = main.lastTerm().next\n  //connect ours in (main → newPhrase)\n  main.lastTerm().next = newPhrase.start\n  //stich the end in  (newPhrase → after)\n  newPhrase.lastTerm().next = afterId\n  //do it backwards, too\n  if (afterId) {\n    // newPhrase ← after\n    let afterTerm = main.pool.get(afterId)\n    afterTerm.prev = newPhrase.lastTerm().id\n  }\n  // before ← newPhrase\n  let beforeId = main.terms(0).id\n  if (beforeId) {\n    let newTerm = newPhrase.terms(0)\n    newTerm.prev = beforeId\n  }\n}\n\n//recursively increase the length of all parent phrases\nconst stretchAll = function(doc, id, len) {\n  //find our phrase to stretch\n  let phrase = doc.list.find(p => p.hasId(id))\n  phrase.length += len\n  if (doc.from) {\n    stretchAll(doc.from, id, len)\n  }\n}\n\n//append one phrase onto another\nconst joinPhrase = function(main, newPhrase, doc) {\n  let firstTerms = main.terms()\n  //spruce-up the whitespace issues\n  addWhitespace(newPhrase.terms())\n  //insert this segment into the linked-list\n  stitchIn(main, newPhrase)\n  //increase the length of our phrases\n  stretchAll(doc, firstTerms[0].id, newPhrase.length)\n  return main\n}\nmodule.exports = joinPhrase\n","const hasSpace = / /\n\n//a new space needs to be added, either on the new phrase, or the old one\n// '[new] [◻old]'   -or-   '[old] [◻new] [old]'\nconst addWhitespace = function(original, newPhrase) {\n  //is there a word before our entry-point?\n  let term = original.pool.get(original.start)\n  if (term.prev) {\n    //add our space ahead of our new terms\n    let firstWord = newPhrase.terms()[0]\n    if (hasSpace.test(firstWord.preText) === false) {\n      firstWord.preText = ' ' + firstWord.preText\n    }\n    return\n  }\n  //otherwise, add our space to the start of original\n  if (hasSpace.test(term.preText) === false) {\n    term.preText = ' ' + term.preText\n  }\n  return\n}\n\n//insert this segment into the linked-list\nconst stitchIn = function(main, newPhrase) {\n  // [newPhrase] → [main]\n  let newTerms = newPhrase.terms()\n  let lastTerm = newTerms[newTerms.length - 1]\n  lastTerm.next = main.start\n  // [before] → [main]\n  let pool = main.pool\n  let start = pool.get(main.start)\n  if (start.prev) {\n    let before = pool.get(start.prev)\n    before.next = newPhrase.start\n  }\n  //do it backwards, too\n  // before ← newPhrase\n  newTerms[0].prev = main.terms(0).prev\n  // newPhrase ← main\n  main.terms(0).prev = lastTerm.id\n}\n\n//recursively increase the length of all parent phrases\nconst stretchAll = function(doc, original, newPhrase) {\n  //find our phrase to stretch\n  let phrase = doc.list.find(p => p.hasId(original.start))\n  if (phrase === undefined) {\n    console.error('compromise error: Prepend missing start - ' + original.start)\n    return\n  }\n  //should we update the phrase's starting?\n  if (phrase.start === original.start) {\n    phrase.start = newPhrase.start\n  }\n  phrase.length += newPhrase.length\n  if (doc.from) {\n    stretchAll(doc.from, original, newPhrase)\n  }\n}\n\n//append one phrase onto another\nconst joinPhrase = function(original, newPhrase, doc) {\n  //spruce-up the whitespace issues\n  addWhitespace(original, newPhrase)\n  //insert this segment into the linked-list\n  stitchIn(original, newPhrase)\n  //increase the length of our phrases\n  stretchAll(doc, original, newPhrase)\n  return original\n}\nmodule.exports = joinPhrase\n","//recursively decrease the length of all the parent phrases\nconst shrinkAll = function(doc, id, deleteLength, after) {\n  //find our phrase to shrink\n  let phrase = doc.list.find(p => p.hasId(id))\n  phrase.length -= deleteLength\n\n  //does it start with this soon-removed word?\n  if (phrase.start === id) {\n    phrase.start = after.id\n  }\n  if (doc.from) {\n    shrinkAll(doc.from, id, deleteLength, after)\n  }\n}\n\n/** wrap the linked-list around these terms\n * so they don't appear any more\n */\nconst deletePhrase = function(phrase, doc) {\n  let pool = doc.pool()\n  let terms = phrase.terms()\n\n  // console.log('---' + phrase.start + '---')\n\n  //grab both sides of the chain,\n  let prev = pool.get(terms[0].prev) || {}\n  let after = pool.get(terms[terms.length - 1].next) || {}\n  // console.log(terms)\n  // console.log('\\n   ' + after.id + '\\n')\n\n  //first, change phrase lengths\n  shrinkAll(doc, phrase.start, phrase.length, after)\n\n  // connect [prev]->[after]\n  if (prev) {\n    prev.next = after.id\n  }\n  // connect [prev]<-[after]\n  if (after) {\n    after.prev = prev.id\n  }\n  // lastly, actually delete the terms from the pool\n  for (let i = 0; i < terms.length; i++) {\n    // pool.remove(terms[i].id)\n  }\n}\nmodule.exports = deletePhrase\n","const append = require('./_join/append')\nconst prepend = require('./_join/prepend')\nconst deletePhrase = require('./_join/delete')\n// const build = require('../../tokenizer')\n\n/** put this text at the end */\nexports.append = function(newPhrase, doc) {\n  append(this, newPhrase, doc)\n  return this\n}\n\n/** add this text to the beginning */\nexports.prepend = function(newPhrase, doc) {\n  prepend(this, newPhrase, doc)\n  return this\n}\n\nexports.delete = function(doc) {\n  deletePhrase(this, doc)\n  return this\n}\n\nexports.replace = function(newPhrase, doc) {\n  //add it do the end\n  let firstLength = this.length\n  append(this, newPhrase, doc)\n  //delete original terms\n  let tmp = this.buildFrom(this.start, this.length)\n  tmp.length = firstLength\n\n  deletePhrase(tmp, doc)\n  return this\n}\n\n/**\n * Turn this phrase object into 3 phrase objects\n */\nexports.splitOn = function(p) {\n  let terms = this.terms()\n  let result = {\n    before: null,\n    match: null,\n    after: null,\n  }\n  let index = terms.findIndex(t => t.id === p.start)\n  if (index === -1) {\n    return result\n  }\n  //make all three sections into phrase-objects\n  let start = terms.slice(0, index)\n  if (start.length > 0) {\n    result.before = this.buildFrom(start[0].id, start.length)\n  }\n  let match = terms.slice(index, index + p.length)\n  if (match.length > 0) {\n    result.match = this.buildFrom(match[0].id, match.length)\n  }\n  let end = terms.slice(index + p.length, terms.length)\n  if (end.length > 0) {\n    result.after = this.buildFrom(end[0].id, end.length, this.pool)\n  }\n  return result\n}\n","module.exports = Object.assign(\n  {},\n  require('./01-utils'),\n  require('./02-change'),\n  require('./03-split')\n)\n","//\nconst failFast = function(terms, regs) {\n  for (let i = 0; i < regs.length; i += 1) {\n    let reg = regs[i]\n    //logical quick-ones\n    if (reg.optional !== true) {\n      //this is not possible\n      if (reg.anything === true && reg.negative === true) {\n        return true\n      }\n      //start/end impossibilites\n      if (reg.start === true && i > 0) {\n        return true\n      }\n      if (reg.end === true && i < regs.length - 1) {\n        return true\n      }\n      if (reg.start === true && reg.end === true && terms.length > 1) {\n        return true\n      }\n      //empty choices\n      if (reg.choices && reg.choices.length === 0) {\n        return true\n      }\n    }\n  }\n  return false\n}\nmodule.exports = failFast\n","//found a match? it's greedy? keep going!\nconst getGreedy = function(terms, t, reg) {\n  for (; t < terms.length; t += 1) {\n    if (terms[t].doesMatch(reg) === false) {\n      return t\n    }\n  }\n  return t\n}\n\n//'unspecific greedy' is a weird situation.\nconst greedyTo = function(terms, t, nextReg) {\n  //if there's no next one, just go off the end!\n  if (!nextReg) {\n    return terms.length\n  }\n  //otherwise, we're looking for the next one\n  for (; t < terms.length; t += 1) {\n    if (terms[t].doesMatch(nextReg) === true) {\n      return t\n    }\n  }\n  //guess it doesn't exist, then.\n  return null\n}\n\n/** tries to match a sequence of terms, starting from here */\nconst tryHere = function(terms, regs) {\n  let captureGroup = []\n  let t = 0\n  // we must satisfy each rule in 'regs'\n  for (let r = 0; r < regs.length; r += 1) {\n    let reg = regs[r]\n    if (!terms[t]) {\n      return false\n    }\n\n    //support 'unspecific greedy' properly\n    if (reg.anything === true && reg.greedy === true) {\n      let goto = greedyTo(terms, t, regs[r + 1])\n      if (goto === null) {\n        return false //couldn't find it\n      }\n      t = goto\n      continue\n    }\n\n    //looks like a match, continue\n    if (reg.anything === true || terms[t].doesMatch(reg) === true) {\n      let startAt = t\n      //advance to the next term!\n      t += 1\n      //check any ending '$' flags\n      if (reg.end === true) {\n        //if this isn't the last term, refuse the match\n        if (t !== terms.length && reg.greedy !== true) {\n          return false\n        }\n      }\n      //try keep it going!\n      if (reg.greedy === true) {\n        t = getGreedy(terms, t, reg)\n      }\n      if (reg.capture) {\n        captureGroup = terms.slice(startAt, t)\n      }\n      continue\n    }\n\n    //bah, who cares, keep going\n    if (reg.optional === true) {\n      continue\n    }\n    // console.log('   ❌\\n\\n');\n    return false\n  }\n  //we got to the end of the regs, and haven't failed!\n\n  //try to only return our [captured] segment\n  if (captureGroup.length > 0) {\n    return captureGroup\n  }\n  //return our result\n  return terms.slice(0, t)\n}\nmodule.exports = tryHere\n","/* break-down a match expression into this:\n{\n  normal:'',\n  tag:'',\n  regex:'',\n\n  start:false,\n  end:false,\n  negative:false,\n  anything:false,\n  greedy:false,\n  optional:false,\n\n  capture:false,\n  choices:[],\n}\n*/\nconst end = function(str) {\n  return str[str.length - 1]\n}\nconst start = function(str) {\n  return str[0]\n}\nconst stripStart = function(str) {\n  return str.substr(1)\n}\nconst stripEnd = function(str) {\n  return str.substr(0, str.length - 1)\n}\nconst stripBoth = function(str) {\n  str = stripStart(str)\n  str = stripEnd(str)\n  return str\n}\n\n//\nconst token = function(w) {\n  let obj = {}\n\n  //collect any flags (do it twice)\n  for (let i = 0; i < 2; i += 1) {\n    //back-flags\n    if (end(w) === '+') {\n      obj.greedy = true\n      w = stripEnd(w)\n    }\n    if (w !== '*' && end(w) === '*') {\n      obj.greedy = true\n      w = stripEnd(w)\n    }\n    if (end(w) === '?') {\n      obj.optional = true\n      w = stripEnd(w)\n    }\n    if (end(w) === '$') {\n      obj.end = true\n      w = stripEnd(w)\n    }\n    //front-flags\n    if (start(w) === '^') {\n      obj.start = true\n      w = stripStart(w)\n    }\n    if (start(w) === '!') {\n      obj.negative = true\n      w = stripStart(w)\n    }\n    //wrapped-flags\n    if (start(w) === '(' && end(w) === ')') {\n      obj.choices = w.split('|')\n      //remove '(' and ')'\n      obj.choices[0] = stripStart(obj.choices[0])\n      let last = obj.choices.length - 1\n      obj.choices[last] = stripEnd(obj.choices[last])\n      obj.choices = obj.choices.filter(s => s)\n      //recursion alert!\n      obj.choices = obj.choices.map(token)\n      w = ''\n    }\n    //capture group\n    if (start(w) === '[' && end(w) === ']') {\n      obj.capture = true\n      w = stripBoth(w)\n    }\n    //regex\n    if (start(w) === '/' && end(w) === '/') {\n      w = stripBoth(w)\n      obj.regex = new RegExp(w)\n      return obj\n    }\n  }\n\n  //do the actual token content\n  if (start(w) === '#') {\n    obj.tag = stripStart(w)\n    return obj\n  }\n  if (w === '.') {\n    obj.anything = true\n    return obj\n  }\n  //support alone-astrix\n  if (w === '*') {\n    obj.anything = true\n    obj.greedy = true\n    obj.optional = true\n    return obj\n  }\n  if (w) {\n    //somehow handle encoded-chars?\n    obj.normal = w\n  }\n  return obj\n}\nmodule.exports = token\n","const parseToken = require('./parseToken')\n\nconst isArray = function(arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]'\n}\n\n//split-up by (these things)\nconst byParentheses = function(str) {\n  let arr = str.split(/(\\(.*?\\)[?+*]*)/)\n  arr = arr.map(s => s.trim())\n  return arr\n}\n\nconst byWords = function(arr) {\n  let words = []\n  arr.forEach(a => {\n    //keep brackets lumped together\n    if (/^[[^_/]?\\(/.test(a[0])) {\n      words.push(a)\n      return\n    }\n    let list = a.split(' ')\n    list = list.filter(w => w)\n    words = words.concat(list)\n  })\n  return words\n}\n\n//turn an array into a 'choices' list\nconst byArray = function(arr) {\n  return [\n    {\n      choices: arr.map(s => {\n        return {\n          normal: s,\n        }\n      }),\n    },\n  ]\n}\n\n/** parse a match-syntax string into json */\nconst syntax = function(str) {\n  //support a flat array of normalized words\n  if (typeof str === 'object' && isArray(str)) {\n    return byArray(str)\n  }\n  let tokens = byParentheses(str)\n  tokens = byWords(tokens)\n  tokens = tokens.map(parseToken)\n  return tokens\n}\nmodule.exports = syntax\n","const failFast = require('./02-failFast')\nconst tryMatch = require('./03-tryMatch')\nconst syntax = require('../../Doc/match/syntax')\n\n/**  returns a simple array of arrays */\nconst matchAll = function(p, regs) {\n  //if we forgot to parse it..\n  if (typeof regs === 'string') {\n    regs = syntax(regs)\n  }\n\n  let terms = p.terms()\n  //try to dismiss it, at-once\n  if (failFast(terms, regs) === true) {\n    return []\n  }\n  //any match needs to be this long, at least\n  const minLength = regs.filter(r => r.optional !== true).length\n  let matches = []\n\n  //optimisation for '^' start logic\n  if (regs[0].start === true) {\n    let match = tryMatch(terms, regs)\n    if (match !== false && match.length > 0) {\n      matches.push(match)\n    }\n    return matches\n  }\n  //try starting, from every term\n  for (let i = 0; i < terms.length; i += 1) {\n    // slice may be too short\n    if (i + minLength > terms.length) {\n      break\n    }\n    //try it!\n    // console.log('- #' + i);\n    let match = tryMatch(terms.slice(i), regs)\n    if (match !== false && match.length > 0) {\n      matches.push(match)\n      i += match.length - 1 //zoom forward\n    }\n  }\n  return matches\n}\nmodule.exports = matchAll\n","const matchAll = require('./01-matchAll')\n\n/** return anything that doesn't match.\n * returns a simple array of arrays\n */\nconst notMatch = function(p, regs) {\n  let found = {}\n  let arr = matchAll(p, regs)\n  arr.forEach(ts => {\n    ts.forEach(t => {\n      found[t.id] = true\n    })\n  })\n  //return anything not found\n  let terms = p.terms()\n  let result = []\n  let current = []\n  terms.forEach(t => {\n    if (found[t.id] === true) {\n      if (current.length > 0) {\n        result.push(current)\n        current = []\n      }\n      return\n    }\n    current.push(t)\n  })\n  if (current.length > 0) {\n    result.push(current)\n  }\n  return result\n}\nmodule.exports = notMatch\n","const matchAll = require('./01-matchAll')\nconst notMatch = require('./not')\n\n/** return an array of matching phrases */\nexports.match = function(str) {\n  let matches = matchAll(this, str)\n  //make them phrase objects\n  matches = matches.map(list => {\n    return this.buildFrom(list[0].id, list.length)\n  })\n  return matches\n}\n\n/** remove all matches from the result */\nexports.not = function(str) {\n  let matches = notMatch(this, str)\n  //make them phrase objects\n  matches = matches.map(list => {\n    return this.buildFrom(list[0].id, list.length)\n  })\n  return matches\n}\n\n/** return a list of phrases that can have this tag */\nexports.canBe = function(tag, world) {\n  let results = []\n  let terms = this.terms()\n  let previous = false\n  for (let i = 0; i < terms.length; i += 1) {\n    let can = terms[i].canBe(tag, world)\n    if (can === true) {\n      if (previous === true) {\n        //add it to the end\n        results[results.length - 1].push(terms[i])\n      } else {\n        results.push([terms[i]]) //make a new one\n      }\n      previous = can\n    }\n  }\n  //turn them into Phrase objects\n  results = results\n    .filter(a => a.length > 0)\n    .map(arr => {\n      return this.buildFrom(arr[0].id, arr.length)\n    })\n  return results\n}\n","const methods = require('./methods')\nconst matchMethods = require('./match')\n\nclass Phrase {\n  constructor(id, length, pool) {\n    this.start = id\n    this.length = length\n    this.isA = 'Phrase' // easier than .constructor...\n    Object.defineProperty(this, 'pool', {\n      enumerable: false,\n      writable: true,\n      value: pool,\n    })\n  }\n}\n\n/** create a new Phrase object from an id and length */\nPhrase.prototype.buildFrom = function(id, length) {\n  return new Phrase(id, length, this.pool)\n}\n\n//apply methods\nObject.assign(Phrase.prototype, matchMethods)\nObject.assign(Phrase.prototype, methods)\n\n//apply aliases\nconst aliases = {\n  term: 'terms',\n}\nObject.keys(aliases).forEach(k => (Phrase.prototype[k] = Phrase.prototype[aliases[k]]))\n\nmodule.exports = Phrase\n","/** a key-value store of all terms in our Document */\nclass Pool {\n  constructor(words = {}) {\n    //quiet this property in console.logs\n    Object.defineProperty(this, 'words', {\n      enumerable: false,\n      value: words,\n    })\n  }\n  /** throw a new term object in */\n  add(term) {\n    this.words[term.id] = term\n    return this\n  }\n  /** find a term by it's id */\n  get(id) {\n    return this.words[id]\n  }\n  /** find a term by it's id */\n  remove(id) {\n    delete this.words[id]\n  }\n  /** helper method */\n  stats() {\n    return {\n      words: Object.keys(this.words).length,\n    }\n  }\n}\n\n/** make a deep-copy of all terms */\nPool.prototype.clone = function() {\n  let keys = Object.keys(this.words)\n  let words = keys.reduce((h, k) => {\n    let t = this.words[k].clone()\n    h[t.id] = t\n    return h\n  }, {})\n  return new Pool(words)\n}\n\nmodule.exports = Pool\n","//these are common word shortenings used in the lexicon and sentence segmentation methods\n//there are all nouns,or at the least, belong beside one.\n\n//common abbreviations\nlet compact = {\n  Noun: [\n    'arc',\n    'al',\n    'exp',\n    'fy',\n    'pd',\n    'pl',\n    'plz',\n    'tce',\n    'bl',\n    'ma',\n    'ba',\n    'lit',\n    'ex',\n    'eg',\n    'ie',\n    'ca',\n    'cca',\n    'vs',\n    'etc',\n    'esp',\n    'ft',\n    //these are too ambiguous\n    'bc',\n    'ad',\n    'md',\n    'corp',\n    'col',\n  ],\n  Organization: [\n    'dept',\n    'univ',\n    'assn',\n    'bros',\n    'inc',\n    'ltd',\n    'co',\n    //proper nouns with exclamation marks\n    'yahoo',\n    'joomla',\n    'jeopardy',\n  ],\n\n  Place: [\n    'rd',\n    'st',\n    'dist',\n    'mt',\n    'ave',\n    'blvd',\n    'cl',\n    'ct',\n    'cres',\n    'hwy',\n    //states\n    'ariz',\n    'cal',\n    'calif',\n    'colo',\n    'conn',\n    'fla',\n    'fl',\n    'ga',\n    'ida',\n    'ia',\n    'kan',\n    'kans',\n\n    'minn',\n    'neb',\n    'nebr',\n    'okla',\n    'penna',\n    'penn',\n    'pa',\n    'dak',\n    'tenn',\n    'tex',\n    'ut',\n    'vt',\n    'va',\n    'wis',\n    'wisc',\n    'wy',\n    'wyo',\n    'usafa',\n    'alta',\n    'ont',\n    'que',\n    'sask',\n  ],\n\n  Month: ['jan', 'feb', 'mar', 'apr', 'jun', 'jul', 'aug', 'sep', 'sept', 'oct', 'nov', 'dec'],\n  Date: ['circa'],\n\n  //Honorifics\n  Honorific: [\n    'adj',\n    'adm',\n    'adv',\n    'asst',\n    'atty',\n    'bldg',\n    'brig',\n    'capt',\n    'cmdr',\n    'comdr',\n    'cpl',\n    'det',\n    'dr',\n    'esq',\n    'gen',\n    'gov',\n    'hon',\n    'jr',\n    'llb',\n    'lt',\n    'maj',\n    'messrs',\n    'mister',\n    'mlle',\n    'mme',\n    'mr',\n    'mrs',\n    'ms',\n    'mstr',\n    'op',\n    'ord',\n    'phd',\n    'prof',\n    'pvt',\n    'rep',\n    'reps',\n    'res',\n    'rev',\n    'sen',\n    'sens',\n    'sfc',\n    'sgt',\n    'sir',\n    'sr',\n    'supt',\n    'surg',\n    //miss\n    //misses\n  ],\n  Value: ['no'],\n}\n\n//unpack the compact terms into the misc lexicon..\nlet abbreviations = {}\nconst keys = Object.keys(compact)\nfor (let i = 0; i < keys.length; i++) {\n  const arr = compact[keys[i]]\n  for (let i2 = 0; i2 < arr.length; i2++) {\n    abbreviations[arr[i2]] = [keys[i], 'Abbreviation']\n  }\n}\nmodule.exports = abbreviations\n","//(Rule-based sentence boundary segmentation) - chop given text into its proper sentences.\n// Ignore periods/questions/exclamations used in acronyms/abbreviations/numbers, etc.\n// @spencermountain 2017 MIT\nconst abbreviations = Object.keys(require('./lib/abbreviations'))\n\n//regs-\nconst abbrev_reg = new RegExp('\\\\b(' + abbreviations.join('|') + ')[.!?\\u203D\\u2E18\\u203C\\u2047-\\u2049] *$', 'i')\nconst acronym_reg = /[ .][A-Z]\\.? *$/i\nconst ellipses_reg = /(?:\\u2026|\\.{2,}) *$/\n\n// Match different formats of new lines. (Mac: \\r, Linux: \\n, Windows: \\r\\n)\nconst new_line = /((?:\\r?\\n|\\r)+)/\nconst naiive_sentence_split = /(\\S.+?[.!?\\u203D\\u2E18\\u203C\\u2047-\\u2049])(?=\\s+|$)/g\n\nconst letter_regex = /[a-z\\u00C0-\\u00FF]/i\nconst not_ws_regex = /\\S/\nconst startWhitespace = /^\\s+/\n\n// Start with a regex:\nconst naiive_split = function(text) {\n  let all = []\n  //first, split by newline\n  let lines = text.split(new_line)\n  for (let i = 0; i < lines.length; i++) {\n    //split by period, question-mark, and exclamation-mark\n    let arr = lines[i].split(naiive_sentence_split)\n    for (let o = 0; o < arr.length; o++) {\n      all.push(arr[o])\n    }\n  }\n  return all\n}\n\nconst splitSentences = function(text) {\n  text = text || ''\n  text = String(text)\n  let sentences = []\n  // First do a greedy-split..\n  let chunks = []\n  // Ensure it 'smells like' a sentence\n  if (!text || typeof text !== 'string' || not_ws_regex.test(text) === false) {\n    return sentences\n  }\n  // Start somewhere:\n  let splits = naiive_split(text)\n  // Filter-out the crap ones\n  for (let i = 0; i < splits.length; i++) {\n    let s = splits[i]\n    if (s === undefined || s === '') {\n      continue\n    }\n    //this is meaningful whitespace\n    if (not_ws_regex.test(s) === false) {\n      //add it to the last one\n      if (chunks[chunks.length - 1]) {\n        chunks[chunks.length - 1] += s\n        continue\n      } else if (splits[i + 1]) {\n        //add it to the next one\n        splits[i + 1] = s + splits[i + 1]\n        continue\n      }\n    }\n    //else, only whitespace, no terms, no sentence\n    chunks.push(s)\n  }\n\n  //detection of non-sentence chunks:\n  //loop through these chunks, and join the non-sentence chunks back together..\n  for (let i = 0; i < chunks.length; i++) {\n    let c = chunks[i]\n    //should this chunk be combined with the next one?\n    if (chunks[i + 1] && letter_regex.test(c) && (abbrev_reg.test(c) || acronym_reg.test(c) || ellipses_reg.test(c))) {\n      chunks[i + 1] = c + (chunks[i + 1] || '')\n    } else if (c && c.length > 0 && letter_regex.test(c)) {\n      //this chunk is a proper sentence..\n      sentences.push(c)\n      chunks[i] = ''\n    }\n  }\n  //if we never got a sentence, return the given text\n  if (sentences.length === 0) {\n    return [text]\n  }\n\n  //move whitespace to the ends of sentences, when possible\n  //['hello',' world'] -> ['hello ','world']\n  for (let i = 1; i < sentences.length; i += 1) {\n    let ws = sentences[i].match(startWhitespace)\n    if (ws !== null) {\n      sentences[i - 1] += ws[0]\n      sentences[i] = sentences[i].replace(startWhitespace, '')\n    }\n  }\n  return sentences\n}\n\nmodule.exports = splitSentences\n// console.log(sentence_parser('john f. kennedy'));\n","const wordlike = /\\S/\nconst isBoundary = /^[!?.]+$/\n\nconst notWord = {\n  '.': true,\n  '-': true, //dash\n  '–': true, //en-dash\n  '—': true, //em-dash\n  '--': true,\n  '...': true,\n}\n\nconst hasHyphen = function(str) {\n  //dont split 're-do'\n  if (/^(re|un)-?[^aeiou]./.test(str) === true) {\n    return false\n  }\n  //letter-number\n  let reg = /^([a-z\\u00C0-\\u00FF`\"'/]+)(-|–|—)([a-z0-9\\u00C0-\\u00FF].*)/i\n  if (reg.test(str) === true) {\n    return true\n  }\n  //support weird number-emdash combo '2010–2011'\n  let reg2 = /^([0-9]+)(–|—)([0-9].*)/i\n  if (reg2.test(str)) {\n    return true\n  }\n  return false\n}\n\n//turn a string into an array of terms (naiive for now, lumped later)\nconst splitWords = function(str) {\n  let result = []\n  let arr = []\n  //start with a naiive split\n  str = str || ''\n  if (typeof str === 'number') {\n    str = String(str)\n  }\n  const firstSplit = str.split(/(\\S+)/)\n  for (let i = 0; i < firstSplit.length; i++) {\n    const word = firstSplit[i]\n    if (hasHyphen(word) === true) {\n      //support multiple-hyphenated-terms\n      const hyphens = word.split(/[-–—]/)\n      for (let o = 0; o < hyphens.length; o++) {\n        if (o === hyphens.length - 1) {\n          arr.push(hyphens[o])\n        } else {\n          arr.push(hyphens[o] + '-')\n        }\n      }\n    } else {\n      arr.push(word)\n    }\n  }\n  //greedy merge whitespace+arr to the right\n  let carry = ''\n  for (let i = 0; i < arr.length; i++) {\n    //if it's more than a whitespace\n    if (\n      wordlike.test(arr[i]) === true &&\n      notWord.hasOwnProperty(arr[i]) === false &&\n      isBoundary.test(arr[i]) === false\n    ) {\n      result.push(carry + arr[i])\n      carry = ''\n    } else {\n      carry += arr[i]\n    }\n  }\n  //handle last one\n  if (carry && result.length > 0) {\n    result[result.length - 1] += carry //put it on the end\n  }\n  return result\n}\nmodule.exports = splitWords\n","const Term = require('../Term/Term')\nconst Phrase = require('../Phrase/Phrase')\nconst Pool = require('./Pool')\n\nconst splitSentences = require('./01-sentences')\nconst splitTerms = require('./02-words')\n\n//add forward/backward 'linked-list' prev/next ids\nconst addLinks = terms => {\n  terms.forEach((term, i) => {\n    if (i > 0) {\n      term.prev = terms[i - 1].id\n    }\n    if (terms[i + 1]) {\n      term.next = terms[i + 1].id\n    }\n  })\n}\n\n/** turn a string into an array of Phrase objects */\nconst fromText = function(text = '', pool) {\n  //tokenize into words\n  let sentences = splitSentences(text)\n  sentences = sentences.map(str => splitTerms(str))\n\n  //turn them into proper objects\n  pool = pool || new Pool()\n  let phrases = sentences.map(terms => {\n    terms = terms.map(str => {\n      let term = new Term(str)\n      pool.add(term)\n      return term\n    })\n\n    //add next/previous ids\n    addLinks(terms)\n\n    //return phrase objects\n    return new Phrase(terms[0].id, terms.length, pool)\n  })\n  //return them ready for a Document object\n  return phrases\n}\n\n/** create a word-pool and Phrase objects from .json() results*/\nconst fromJSON = function(data) {\n  let pool = new Pool()\n  //create Phrase objects\n  let phrases = data.map(terms => {\n    //create Term objects\n    terms = terms.map(obj => {\n      let term = new Term(obj.text)\n      term.preText = obj.preText\n      term.postText = obj.postText\n      term.tags = obj.tags.reduce((h, tag) => {\n        h[tag] = true\n        return h\n      }, {})\n      pool.add(term)\n      return term\n    })\n    //add prev/next links\n    addLinks(terms)\n    return new Phrase(terms[0].id, terms.length, pool)\n  })\n  return phrases\n}\n\nmodule.exports = {\n  fromText,\n  fromJSON,\n}\n","module.exports=`{\"words\":\"Comparative¦better|Superlative¦earlier|PresentTense¦sounds|Value¦a few|Noun¦autumn,daylight9eom,here,no doubt,one d8s5t2w0yesterd8;eek0int5;d6end;mr1o0;d4morrow;!w;ome 1tandard3umm0;er;d0point;ay; time|Copula¦a1is,w0;as,ere;m,re|Condition¦if,unless|PastTense¦be2came,d1had,mea0sa1taken,we0;nt;id;en,gan|Gerund¦accord0be0develop0go0result0stain0;ing|Negative¦n0;ever,o0;!n,t|QuestionWord¦how3wh0;at,e1ich,o0y;!m,se;n,re; come,'s|Singular¦a0Bb01cTdQeOfKgJhFici0Fjel0Ckitty,lEmCnBoAp7question mark,r6s4t1us 0;dollVstX; rex,a1h0ic,ragedy,v show;ere,i0C;l08x return;ky,tu0uper bowl,yst0B;dJff;al05i08oom;a1i02robl08u0;dCrpo8;rt,tF;cean,thers;othi03umbY;ayfZeeQo0;del,nopoY;iXunch;ead start,o0;lVme1u0;se;! run;adfSirlLlaciQod,rand slam,ulS;amiRly,olRr1un0;diT;iJo0;ntiMsF;conomy,gg,ner3v0xampI;ent;eath,innJo0ragonfL;cument8g0iKlKor;gy;a5eiliLh3i1o0redit card;ttage,uE;ty,vil w0;ar;andeliCocol0;ate;n0r9;ary;a6elAlesCo2reakfast,u0;n0tterf9;tiB;dy,tt2y0;fri0;end;le;nki6r0;ri0;er;d1l0noma0;ly; homin2verti0;si0;ng;em|Actor¦aJbGcFdCengineIfAgardenIh9instructPjournalLlawyIm8nurse,opeOp5r3s1t0;echnCherapK;ailNcientJoldiGu0;pervKrgeon;e0oofE;ceptionGsearC;hotographClumbColi1r0sychologF;actitionBogrammB;cem6t5;echanic,inist9us4;airdress8ousekeep8;arm7ire0;fight6m2;eputy,iet0;ici0;an;arpent2lerk;ricklay1ut0;ch0;er;ccoun6d2ge7r0ssis6ttenda7;chitect,t0;ist;minist1v0;is1;rat0;or;ta0;nt|Honorific¦aObrigadiNcHdGexcellency,fiBking,liDmaAofficNp6queen,r3s0taoiseach,vice5;e0ultJ;c0rgeaC;ond liAretary;abbi,e0;ar0verend; adJ;astFr0;eside6i0ofessE;me ministEnce0;!ss;gistrate,r4yB;eld mar3rst l0;ady,i0;eutena0;nt;shA;oct5utchess;aptain,hance3o0;lonel,mmand4ngress0unci2;m0wom0;an;ll0;or;er;d0yatullah;mir0;al|SportsTeam¦0:1A;1:1H;2:1G;a1Eb16c0Td0Kfc dallas,g0Ihouston 0Hindiana0Gjacksonville jagua0k0El0Bm01newToQpJqueens parkIreal salt lake,sAt5utah jazz,vancouver whitecaps,w3yW;ashington 3est ham0Rh10;natio1Oredski2wizar0W;ampa bay 6e5o3;ronto 3ttenham hotspur;blue ja0Mrapto0;nnessee tita2xasC;buccanee0ra0K;a7eattle 5heffield0Kporting kansas0Wt3;. louis 3oke0V;c1Frams;marine0s3;eah15ounG;cramento Rn 3;antonio spu0diego 3francisco gJjose earthquak1;char08paA; ran07;a8h5ittsburgh 4ortland t3;imbe0rail blaze0;pirat1steele0;il3oenix su2;adelphia 3li1;eagl1philNunE;dr1;akland 3klahoma city thunder,rlando magic;athle0Mrai3;de0; 3castle01;england 7orleans 6york 3;city fc,g4je0FknXme0Fred bul0Yy3;anke1;ian0D;pelica2sain0C;patrio0Brevolut3;ion;anchester Be9i3ontreal impact;ami 7lwaukee b6nnesota 3;t4u0Fvi3;kings;imberwolv1wi2;rewe0uc0K;dolphi2heat,marli2;mphis grizz3ts;li1;cXu08;a4eicesterVos angeles 3;clippe0dodDla9; galaxy,ke0;ansas city 3nE;chiefs,roya0E; pace0polis colU;astr06dynamo,rockeTtexa2;olden state warrio0reen bay pac3;ke0;.c.Aallas 7e3i05od5;nver 5troit 3;lio2pisto2ti3;ge0;broncZnuggeM;cowbo4maver3;ic00;ys; uQ;arCelKh8incinnati 6leveland 5ol3;orado r3umbus crew sc;api5ocki1;brow2cavalie0india2;bengaWre3;ds;arlotte horAicago 3;b4cubs,fire,wh3;iteB;ea0ulR;diff3olina panthe0; c3;ity;altimore 9lackburn rove0oston 5rooklyn 3uffalo bilN;ne3;ts;cel4red3; sox;tics;rs;oriol1rave2;rizona Ast8tlanta 3;brav1falco2h4u3;nited;aw9;ns;es;on villa,r3;os;c5di3;amondbac3;ks;ardi3;na3;ls|Uncountable¦0:1C;a1Jb1Bc13d10e0Tf0Ng0Jh0Ei0Aj09knowled1Il04mWnews,oVpSrNsBt6vi5w1;a3ea07i2oo1;d,l;ldlife,ne;rmth,t0;neg8ol08tae;e4h3oothpaste,r1una;affRou1;ble,sers,t;ermod1Fund0;a,nnis;aAcene06eri0Qh9il8kittl0Qnow,o7p5t3u1;g1nshi0J;ar;ati1De1;am,el;ace16e1;ci0Ked;ap,cc0;k,v0;eep,ingl0H;d05fe10l1nd;m0St;a4e2ic1;e,ke0E;c1laxa0Asearch;ogni09rea09;bi0Ain;aKe2hys10last6o1ressW;lit0Zrk,w0;a0Vtrol;bstetr0Xil,xygen;a6e4ilk,o3u1;mps,s1;ic;nHo0A;a1chan0S;sl00t;chine1il,themat0Q; learn05ry;aught0e3i2ogi0Nu1;ck,g0C;ce,ghtn02ngui0LteratI;a1isH;th0;ewel8usti0G;ce,mp1nformaPtself;a1ortan0E;ti1;en0C;a4isto3o1;ck1mework,n1spitali06;ey;ry;ir,libut,ppi8;en01o2r1um,ymna08;a7ound;l1ssip;d,f;i5lour,o2urnit1;ure;od,rgive1uri0wl;ne1;ss;c7sh;conomZduca6lectr5n3quip4thZvery1;body,o1thE;ne;joy1tertain1;ment;iciNonU;tiF;ar2iabet1raugh2;es;ts;a7elcius,h3ivPl2o1urrency;al,nfusiAttA;assNoth3;aos,e1;e2w1;ing;se;r5sh;a5eef,i2lood,owls,read,utt0;er;lliar2s1;on;ds;g1ss;ga1;ge;c7dvi6ero4ir3mnes2rt,thl1;et8;ty;craft;b5d1naut5;ynam4;ce;id,ou1;st1;ics|Infinitive¦0:6I;1:6W;2:56;3:6T;4:6U;5:5X;6:6O;7:65;8:6S;9:6G;A:6N;B:6Q;C:6B;D:6X;a68b5Xc4Zd47e3Rf3Eg37h30i2Nj2Lk2Jl2Am20n1Xo1Tp1Eques3Fr0Ms01tTuPvMwFyE;awn,ield;aHe1Thist7iGoEre61;nd0rE;k,ry;pe,sh,th0;lk,nFrEsh,tCve;n,raD;d0t;aFiEo8;ew,sA;l69ry;nFpEr3se;gra4Kli3X;dEi8lo5P;er48o;aKeJhIoHrFuEwi6;ne,rn;aEe0Ki5Lu6y;de,in,nsf0p,v5D;r2WuC;ank,reat2L;nd,st;lk,rg1Ms8;aXcUeThRi49kip,lQmPnee3Io4XpOtHuEwitC;bmAck,ff0gge6ppFrEspe5;ge,pri1rou4Uvi4;ly,o33;aJeIoHrFuE;dy,mb7;a4OeEi4;ngth2Bss,tC;p,re;m,p;in,ke,r0Oy;la51oil,rink7;e1Vi7o3G;am,ip;a2iv0oE;ck,ut;arCem,le5n1r4tt7;aFo2rE;atCew;le,re;il,ve;a03eGisk,oFuE;in,le,sh;am,ll;aZcXdu9fWgVje5lSmRnt,pOquNsItHvEwa5M;eEiew,o33;al,l,rE;se,t;a42i2u3Z;eHi6oGtE;!o2rE;i5uc1X;l4rt;mb7nt,r4;e6i2;air,eFlEo3YreseD;a9y;at;a3Semb0i3Uo4;aFeEi4y;a1nt;te,x;a54r0F;act1Ver,le5u1;a0Zei4k5GoEyc7;gni29nci7rd;ch,li28s5E;i1nE;ge,k;aRerQiPlMoKrGuE;b1Yll,mp,rEsh;cha1s4H;ai1eGiDoE;cEdu9greBhibAmi1te6vi2S;eBlaim;di5pa2ss,veD;iDp,rtr3XsEur;e,t;aFuE;g,n3;n,y;ck,le;fo2ZmAsi6;ck,iDrt4Dss,u1;bGccur,ff0pera8utweFverEwe;co3Ylap,ta1Zu1whelm;igh;ser4ta2Z;eFotE;e,i9;ed,gle5;aJeIiGoFuE;ltip3Brd0;nit11ve;nErr10;d,g7us;asu2lt,n0Nr3ssa3;inta2Pke d3Rna3rFtE;ch,t0;ch,kEry;et;aKeJiGoEu1B;aEck,ok,ve;d,n;ft,ke,mAnFstEve;!en;e,k;a2Cc0Dt;b0Mck,uE;gh,nC;iEno2X;ck,ll,ss;am,o2AuE;d3mp;gno2mOnEss3A;cMdica8flu0LhLsItGvE;eEol4;nt,st;erErodu9;a5fe2;i6tE;aEru5;ll;abAibA;lu1Dr1B;agi21pE;lemeDo1Zro4;aIeGi2oFuE;nt,rry;ld fa6n01pe,st;aElp;d,t;nd7ppErm,te;en;aJloBoIrGuE;arEeBi12;ant31d;aEip,umb7;b,sp;es,ve1G;in,th0ze;aOeaNiLlJoGracFuncE;ti3A;tu2;cus,lFrE;ce,eca6m,s2S;d,l1W;a1ToE;at,od,w;gu2lEni1Rx;e,l;r,tu2;il,vE;or;a11cho,le5mQnNstLvalua8xE;a08cJerIi6pEte15;a14eFla12oEreB;rt,se;ct,riE;en9;ci1t;el,han3;abEima8;li1D;ab7couVdFfor9ga3han9j01riCsu2t0vE;isi2Ny;!u2;body,er3pE;hasiEow0;ze;a04eSiJoIrFuE;mp;aFeBiE;ft;g,in;d3ubt;ff0p,re5sFvE;iWor9;aIcFliEmiBpl13tingui0Y;ke;oEuB;uEv0;ra3;gr1QppE;ear,ro4;cLem,fJliv0ma0Bny,pIsFterE;mi0C;cribe,er4iFtrE;oy;gn,re;a07e06i5osA;eEi07y;at,ct;iGlFrE;ea1;a2i03;de;ma3n9re,te;a08e07h04i8l02oHrE;aFeEoBu0Dy;a8dA;ck,ve;llXmQnFok,py,uEv0;gh,nt;ceNdu5fKsItGvE;eEin9;rt,y;aNin0PrE;a6ibu8ol;iEtitu8;d0st;iFoEroD;rm;gu2rm;rn;biJfoImaHpE;a2laE;in;re;nd;rt;ne;ap1e5;aEip,o1;im,w;aFeE;at,ck,w;llen3n3r3se;a1nt0;ll,ncFrEt0u1;e,ry;el;aNeKloJoHruGuE;lEry;ly;sh;a6mb,o6rrEth0un9;ow;ck;ar,lFnefAtrE;ay;ie4ong;ng,se;band0Hc09d04ffo03gr02id,lZmu1nWppRrOsIttEvoid,waA;acGeFra5;ct;m0Dnd;h,k;k,sE;eGiFocia8uE;me;gn,st;mb7rt;le;chFgEri4;ue;!i4;eaHlGroE;aCve;ch;aud,y;l,r;noun9sw0tE;icipa8;ce;lFt0;er;e3ow;ee;rd;aPdGju6mAoP;it;st;!reB;ss;cHhie4knowled3tiva8;te;ge;ve;eGouDu1;se;nt;pt;on|Unit¦0:17;a12b10c0Md0Le0Jf0Fg0Bh08in07joule0k01lZmOnNoMpIqHsqCt7volts,w6y4z3°2µ1;g,s;c,f,n;b,e2;a0Lb,d0Rears old,o1;tt0F;att0b;able4b3e2on1sp;!ne0;a2r0B;!l,sp;spo03; ft,uare 1;c0Gd0Ff3i0Dkilo0Hm1ya0C;e0Kil1;e0li0F;eet0o0B;t,uart0;a3e2i1ou0Nt;c0Knt0;rcent,t00;!scals;hms,uVz;an0GewtR;/s,b,e7g,i3l,m2p1²,³;h,s;!²;!/h,cro3l1;e1li05;! DsC²;g05s0A;gPter1;! 2s1;! 1;per second;b,iZm,u1x;men0x0;b,elvin0g,ilo2m1nQ;!/h,ph,²;byYgWmeter1;! 2s1;! 1;per hour;²,³;e1g,z;ct1rtz0;aWogP;al2b,ig9ra1;in0m0;!l1;on0;a3emtOl1tG; oz,uid ou1;nce0;hrenheit0rad0;b,x1;abyH;eciCg,l,mA;arat0eAg,l,m9oulomb0u1;bic 1p0;c5d4fo3i2meAya1;rd0;nch0;ot0;eci2;enti1;me4;!²,³;lsius0nti1;g2li1me1;ter0;ram0;bl,y1;te0;c4tt1;os1;eco1;nd0;re0;!s|Pronoun¦'em,elle,h4i3me,ourselves,she5th1us,we,you0;!rself;e0ou;m,y;!l,t;e0im;!'s|Organization¦0:44;a39b2Qc2Ad22e1Yf1Ug1Mh1Hi1Ej1Ak18l14m0Tn0Go0Dp07qu06rZsStFuBv8w3y1;amaha,m0You1w0Y;gov,tu2R;a3e1orld trade organizati3Z;lls fargo,st1;fie23inghou17;l1rner br3B;-m12gree30l street journ25m12;an halNeriz3Uisa,o1;dafo2Gl1;kswagLvo;bs,kip,n2ps,s1;a tod2Qps;es33i1;lev2Wted natio2T; mobi2Jaco bePd bMeAgi frida9h3im horto2Smz,o1witt2V;shiba,y1;ota,s r Y;e 1in lizzy;b3carpen31daily ma2Vguess w2holli0rolling st1Ns1w2;mashing pumpki2Nuprem0;ho;ea1lack eyed pe3Dyrds;ch bo1tl0;ys;l2s1;co,la m13;efoni08us;a6e4ieme2Fnp,o2pice gir5ta1ubaru;rbucks,to2L;ny,undgard1;en;a2Px pisto1;ls;few24insbu25msu1W;.e.m.,adiohead,b6e3oyal 1yan2V;b1dutch she4;ank;/max,aders dige1Ed 1vl30;bu1c1Thot chili peppe2Ilobst27;ll;c,s;ant2Tizno2D;an5bs,e3fiz23hilip morrBi2r1;emier25octer & gamb1Qudenti14;nk floyd,zza hut;psi26tro1uge09;br2Ochina,n2O; 2ason1Wda2E;ld navy,pec,range juli2xf1;am;us;aAb9e5fl,h4i3o1sa,wa;kia,tre dame,vart1;is;ke,ntendo,ss0L;l,s;c,stl3tflix,w1; 1sweek;kids on the block,york09;e,é;a,c;nd1Rs2t1;ional aca2Co,we0P;a,cYd0N;aAcdonald9e5i3lb,o1tv,yspace;b1Knsanto,ody blu0t1;ley crue,or0N;crosoft,t1;as,subisO;dica3rcedes2talli1;ca;!-benz;id,re;'s,s;c's milk,tt11z1V;'ore08a3e1g,ittle caesa1H;novo,x1;is,mark; pres5-z-boy,bour party;atv,fc,kk,m1od1H;art;iffy lu0Jo3pmorgan1sa;! cha1;se;hnson & johns1Py d1O;bm,hop,n1tv;g,te1;l,rpol; & m,asbro,ewlett-packaSi3o1sbc,yundai;me dep1n1G;ot;tac1zbollah;hi;eneral 6hq,l5mb,o2reen d0Gu1;cci,ns n ros0;ldman sachs,o1;dye1g09;ar;axo smith kliYencore;electr0Gm1;oto0S;a3bi,da,edex,i1leetwood mac,oFrito-l08;at,nancial1restoU; tim0;cebook,nnie mae;b04sa,u3xxon1; m1m1;ob0E;!rosceptics;aiml08e5isney,o3u1;nkin donuts,po0Tran dur1;an;j,w j1;on0;a,f leppa2ll,peche mode,r spiegXstiny's chi1;ld;rd;aEbc,hBi9nn,o3r1;aigsli5eedence clearwater reviv1ossra03;al;ca c5l4m1o08st03;ca2p1;aq;st;dplLgate;ola;a,sco1tigroup;! systems;ev2i1;ck fil-a,na daily;r0Fy;dbury,pital o1rl's jr;ne;aFbc,eBf9l5mw,ni,o1p,rexiteeV;ei3mbardiJston 1;glo1pizza;be;ng;ack & deckFo2ue c1;roW;ckbuster video,omingda1;le; g1g1;oodriM;cht3e ge0n & jer2rkshire hathaw1;ay;ryG;el;nana republ3s1xt5y5;f,kin robbi1;ns;ic;bWcRdidQerosmith,ig,lKmEnheuser-busDol,pple9r6s3t&t,v2y1;er;is,on;hland1sociated F; o1;il;by4g2m1;co;os; compu2bee1;'s;te1;rs;ch;c,d,erican3t1;!r1;ak; ex1;pre1;ss; 4catel2t1;air;!-luce1;nt;jazeera,qae1;da;as;/dc,a3er,t1;ivisi1;on;demy of scienc0;es;ba,c|Demonym¦0:16;1:13;a0Wb0Nc0Cd0Ae09f07g04h02iYjVkTlPmLnIomHpDqatari,rBs7t5u4v3wel0Rz2;am0Fimbabwe0;enezuel0ietnam0H;g9krai1;aiwThai,rinida0Iu2;ni0Qrkmen;a4cot0Ke3ingapoOlovak,oma0Tpa05udRw2y0X;edi0Kiss;negal0Br08;mo0uU;o6us0Lw2;and0;a3eru0Hhilipp0Po2;li0Ertugu06;kist3lesti1na2raguay0;ma1;ani;amiZi2orweP;caragu0geri2;an,en;a3ex0Mo2;ngo0Erocc0;cedo1la2;gasy,y08;a4eb9i2;b2thua1;e0Dy0;o,t02;azakh,eny0o2uwaiti;re0;a2orda1;ma0Bp2;anN;celandic,nd4r2sraeli,ta02vo06;a2iT;ni0qi;i0oneV;aiDin2ondur0unN;di;amDe2hanai0reek,uatemal0;or2rm0;gi0;i2ren7;lipino,n4;cuadoVgyp6ngliJsto1thiopi0urope0;a2ominXut4;niH;a9h6o4roa3ub0ze2;ch;ti0;lom2ngol5;bi0;a6i2;le0n2;ese;lifor1m2na3;bo2eroo1;di0;angladeshi,el8o6r3ul2;gaG;aziBi2;ti2;sh;li2s1;vi0;aru2gi0;si0;fAl7merBngol0r5si0us2;sie,tr2;a2i0;li0;gent2me1;ine;ba1ge2;ri0;ni0;gh0r2;ic0;an|Possessive¦anyAh5its,m3noCo1sometBthe0yo1;ir1mselves;ur0;!s;i8y0;!se4;er1i0;mse2s;!s0;!e0;lf;o1t0;hing;ne|Currency¦$,aud,bRcPdKeurJfIgbp,hkd,inr,jpy,kGlEp8r7s3usd,x2y1z0¢,£,¥,ден,лв,руб,฿,₡,₨,€,₭,﷼;lotyRł;en,uanQ;af,of;h0t5;e0il5;k0q0;elL;iel,oubleKp,upeeK;e2ound st0;er0;lingH;n0soG;ceFn0;ies,y;e0i7;i,mpi6;n,r0wanzaByatB;!onaAw;ori7ranc9;!o8;en3i2kk,o0;b0ll2;ra5;me4n0rham4;ar3;ad,e0ny;nt1;aht,itcoin0;!s|Country¦0:38;1:2L;a2Wb2Dc21d1Xe1Rf1Lg1Bh19i13j11k0Zl0Um0Gn05om3CpZqat1JrXsKtCu6v4wal3yemTz2;a24imbabwe;es,lis and futu2X;a2enezue31ietnam;nuatu,tican city;.5gTkraiZnited 3ruXs2zbeE;a,sr;arab emirat0Kkingdom,states2;! of am2X;k.,s.2; 27a.;a7haBimor-les0Bo6rinidad4u2;nis0rk2valu;ey,me2Xs and caic1T; and 2-2;toba1J;go,kel0Ynga;iw2Vji2nz2R;ki2T;aCcotl1eBi8lov7o5pa2Bri lanka,u4w2yr0;az2ed9itzerl1;il1;d2Qriname;lomon1Vmal0uth 2;afr2IkLsud2O;ak0en0;erra leoEn2;gapo1Wt maart2;en;negKrb0ychellY;int 2moa,n marino,udi arab0;hele24luc0mart1Z;epublic of ir0Com2Cuss0w2;an25;a3eHhilippinTitcairn1Ko2uerto riM;l1rtugE;ki2Bl3nama,pua new0Tra2;gu6;au,esti2;ne;aAe8i6or2;folk1Gth3w2;ay; k2ern mariana1B;or0M;caragua,ger2ue;!ia;p2ther18w zeal1;al;mib0u2;ru;a6exi5icro09o2yanm04;ldova,n2roc4zamb9;a3gol0t2;enegro,serrat;co;c9dagascZl6r4urit3yot2;te;an0i14;shall0Vtin2;ique;a3div2i,ta;es;wi,ys0;ao,ed00;a5e4i2uxembourg;b2echtenste10thu1E;er0ya;ban0Gsotho;os,tv0;azakh1De2iriba02osovo,uwait,yrgyz1D;eling0Jnya;a2erF;ma15p1B;c6nd5r3s2taly,vory coast;le of m19rael;a2el1;n,q;ia,oI;el1;aiSon2ungary;dur0Mg kong;aAermany,ha0Pibralt9re7u2;a5ern4inea2ya0O;!-biss2;au;sey;deloupe,m,tema0P;e2na0M;ce,nl1;ar;bTmb0;a6i5r2;ance,ench 2;guia0Dpoly2;nes0;ji,nl1;lklandTroeT;ast tim6cu5gypt,l salv5ngl1quatorial3ritr4st2thiop0;on0; guin2;ea;ad2;or;enmark,jibou4ominica3r con2;go;!n B;ti;aAentral african 9h7o4roat0u3yprQzech2; 8ia;ba,racao;c3lo2morPngo-brazzaville,okFsta r03te d'ivoiK;mb0;osD;i2ristmasF;le,na;republic;m2naTpe verde,yman9;bod0ero2;on;aFeChut00o8r4u2;lgar0r2;kina faso,ma,undi;azil,itish 2unei;virgin2; is2;lands;liv0nai4snia and herzegoviGtswaGuvet2; isl1;and;re;l2n7rmuF;ar2gium,ize;us;h3ngladesh,rbad2;os;am3ra2;in;as;fghaFlCmAn5r3ustr2zerbaijH;al0ia;genti2men0uba;na;dorra,g4t2;arct6igua and barbu2;da;o2uil2;la;er2;ica;b2ger0;an0;ia;ni2;st2;an|Region¦a20b1Sc1Id1Des1Cf19g13h10i0Xj0Vk0Tl0Qm0FnZoXpSqPrMsDtAut9v5w2y0zacatec22;o05u0;cat18kZ;a0est vir4isconsin,yomi14;rwick1Qshington0;! dc;er2i0;cto1Ir0;gin1R;acruz,mont;ah,tar pradesh;a1e0laxca1Cusca9;nnessee,x1Q;bas0Jmaulip1PsmI;a5i3o1taf0Nu0ylh12;ffUrrZs0X;me0Zno19uth 0;cRdQ;ber1Hc0naloa;hu0Rily;n1skatchew0Qxo0;ny; luis potosi,ta catari1H;a0hode6;j0ngp01;asth0Lshahi;inghai,u0;e0intana roo;bec,ensVreta0D;ara3e1rince edward0; isT;i,nnsylv0rnambu01;an13;!na;axa0Mdisha,h0klaho1Antar0reg3x03;io;ayarit,eAo2u0;evo le0nav0K;on;r0tt0Qva scot0W;f5mandy,th0; 0ampton0P;c2d1yo0;rk0N;ako0X;aroli0U;olk;bras0Wva00w0; 1foundland0;! and labrador;brunswick,hamp0Gjers0mexiIyork state;ey;a5i1o0;nta0Mrelos;ch2dlanAn1ss0;issippi,ouri;as geraFneso0L;igPoacP;dhya,harasht03ine,ni2r0ssachusetts;anhao,y0;land;p0toba;ur;anca03e0incoln03ouis7;e0iG;ds;a0entucky,hul09;ns07rnata0Cshmir;alis0iangxi;co;daho,llino1nd0owa;ia04;is;a1ert0idalDun9;fordS;mpRwaii;ansu,eorgVlou4u0;an1erre0izhou,jarat;ro;ajuato,gdo0;ng;cesterL;lori1uji0;an;da;sex;e3o1uran0;go;rs0;et;lawaDrbyC;a7ea6hi5o0umbrG;ahui3l2nnectic1rsi0ventry;ca;ut;iLorado;la;apDhuahua;ra;l7m0;bridge2peche;a4r3uck0;ingham0;shi0;re;emen,itish columb2;h1ja cal0sque,var1;iforn0;ia;guascalientes,l3r0;izo1kans0;as;na;a1ber0;ta;ba1s0;ka;ma|City¦a2Wb26c1Wd1Re1Qf1Og1Ih1Ai18jakar2Hk0Zl0Tm0Gn0Co0ApZquiYrVsLtCuBv8w3y1z0;agreb,uri1Z;ang1Te0okohama;katerin1Hrev34;ars3e2i0rocl3;ckl0Vn0;nipeg,terth0W;llingt1Oxford;aw;a1i0;en2Hlni2Z;lenc2Uncouv0Gr2G;lan bat0Dtrecht;a6bilisi,e5he4i3o2rondheim,u0;nVr0;in,ku;kyo,ronIulouC;anj23l13miso2Jra2A; haJssaloni0X;gucigalpa,hr2Ol av0L;i0llinn,mpe2Bngi07rtu;chu22n2MpT;a3e2h1kopje,t0ydney;ockholm,uttga12;angh1Fenzh1X;o0KvZ;int peters0Ul3n0ppo1F; 0ti1B;jo0salv2;se;v0z0Q;adU;eykjavik,i1o0;me,sario,t25;ga,o de janei17;to;a8e6h5i4o2r0ueb1Qyongya1N;a0etor24;gue;rt0zn24; elizabe3o;ls1Grae24;iladelph1Znom pe07oenix;r0tah tik19;th;lerJr0tr10;is;dessa,s0ttawa;a1Hlo;a2ew 0is;delTtaip0york;ei;goya,nt0Upl0Uv1R;a5e4i3o1u0;mb0Lni0I;nt0scH;evideo,real;l1Mn01skolc;dellín,lbour0S;drid,l5n3r0;ib1se0;ille;or;chest0dalWi0Z;er;mo;a4i1o0vAy01;nd00s angel0F;ege,ma0nz,sbZverpo1;!ss0;ol; pla0Iusan0F;a5hark4i3laipeda,o1rak0uala lump2;ow;be,pavog0sice;ur;ev,ng8;iv;b3mpa0Kndy,ohsiu0Hra0un03;c0j;hi;ncheMstanb0̇zmir;ul;a5e3o0; chi mi1ms,u0;stI;nh;lsin0rakliG;ki;ifa,m0noi,va0A;bu0SiltD;alw4dan3en2hent,iza,othen1raz,ua0;dalaj0Gngzhou;bu0P;eUoa;sk;ay;es,rankfu0;rt;dmont4indhovU;a1ha01oha,u0;blRrb0Eshanbe;e0kar,masc0FugavpiJ;gu,je0;on;a7ebu,h2o0raioJuriti01;lo0nstanJpenhagNrk;gFmbo;enn3i1ristchur0;ch;ang m1c0ttagoL;ago;ai;i0lgary,pe town,rac4;ro;aHeBirminghWogoAr5u0;char3dap3enos air2r0sZ;g0sa;as;es;est;a2isba1usse0;ls;ne;silPtisla0;va;ta;i3lgrade,r0;g1l0n;in;en;ji0rut;ng;ku,n3r0sel;celo1ranquil0;la;na;g1ja lu0;ka;alo0kok;re;aBb9hmedabad,l7m4n2qa1sh0thens,uckland;dod,gabat;ba;k0twerp;ara;m5s0;terd0;am;exandr0maty;ia;idj0u dhabi;an;lbo1rh0;us;rg|Place¦aMbKcIdHeFfEgBhAi9jfk,kul,l7m5new eng4ord,p2s1the 0upJyyz;bronx,hamptons;fo,oho,under2yd;acifMek,h0;l,x;land;a0co,idDuc;libu,nhattK;a0gw,hr;s,x;ax,cn,ndianGst;arlem,kg,nd;ay village,re0;at 0enwich;britain,lak2;co,ra;urope,verglad0;es;en,fw,own1xb;dg,gk,hina0lt;town;cn,e0kk,rooklyn;l air,verly hills;frica,m5ntar1r1sia,tl0;!ant1;ct0;ic0; oce0;an;ericas,s|WeekDay¦fri4mon4s2t1wed0;!nesd4;hurs2ues2;at0un1;!urd1;!d0;ay0;!s|Date¦autumn,daylight9eom,one d8s5t2w0yesterd8;eek0int5;d6end;mr1o0;d4morrow;!w;ome 1tandard3umm0;er;d0point;ay; time|Time¦a6breakfast 5dinner5e3lunch5m2n0oclock,some5to7;i7o0;on,w;id4or1;od,ve0;ning;time;fternoon,go,ll day,t 0;ni0;ght|Holiday¦0:1Q;1:1P;a1Fb1Bc12d0Ye0Of0Kg0Hh0Di09june07kwanzaa,l04m00nYoVpRrPsFt9v6w4xm03y2;om 2ule;hasho16kippur;hit2int0Xomens equalit8; 0Ss0T;alentines3e2ictor1E;r1Bteran1;! 0;-0ax 0h6isha bav,rinityMu2; b3rke2;y 0;ish2she2;vat;a0Xe prophets birth0;a6eptember14h4imchat tor0Ut 3u2;kk4mmer T;a8p7s6valentines day ;avu2mini atzeret;ot;int 2mhain;a4p3s2valentine1;tephen1;atrick1;ndrew1;amadan,ememberanc0Yos2;a park1h hashana;a3entecost,reside0Zur2;im,ple heart 0;lm2ssovE; s04;rthodox 2stara;christma1easter2goOhoJn0C;! m07;ational 2ew years09;freedom 0nurse1;a2emorial 0lHoOuharram;bMr2undy thurs0;ch0Hdi gr2tin luther k0B;as;a2itRughnassadh;bour 0g baom2ilat al-qadr;er; 2teenth;soliU;d aJmbolc,n2sra and miraj;augurGd2;ependen2igenous people1;c0Bt1;a3o2;ly satur0;lloween,nukkUrvey mil2;k 0;o3r2;ito de dolores,oundhoW;odW;a4east of 2;our lady of guadalupe,the immaculate concepti2;on;ther1;aster8id 3lectYmancip2piphany;atX;al-3u2;l-f3;ad3f2;itr;ha;! 2;m8s2;un0;ay of the dead,ecemb3i2;a de muertos,eciseis de septiembre,wali;er sol2;stice;anad8h4inco de mayo,o3yber m2;on0;lumbu1mmonwealth 0rpus christi;anuk4inese n3ristmas2;! N;ew year;ah;a 0ian tha2;nksgiving;astillCeltaine,lack4ox2;in2;g 0; fri0;dvent,ll 9pril fools,rmistic8s6u2;stral4tum2;nal2; equinox;ia 0;cens2h wednes0sumption of mary;ion 0;e 0;hallows 6s2;ai2oul1t1;nt1;s 0;day;eve|Month¦aBdec9feb7j2mar,nov9oct1sep0;!t8;!o8;an3u0;l1n0;!e;!y;!u1;!ru0;ary;!em0;ber;pr1ug0;!ust;!il|Duration¦centur4d2hour3m0seconds,week3year3;i0onth2;llisecond1nute1;ay0ecade0;!s;ies,y|FirstName¦aEblair,cCdevBj8k6lashawn,m3nelly,re2sh0;ay,e0iloh;a,lby;g1ne;ar1el,org0;an;ion,lo;as8e0r9;ls7nyatta,rry;am0ess1;ie,m0;ie;an,on;as0heyenne;ey,sidy;lex1ndra,ubr0;ey;is|MaleName¦0:CE;1:BK;2:C2;3:BS;4:B4;5:AS;6:9U;7:BZ;8:BC;9:AN;A:8V;aB3bA7c96d86e7Ff6Xg6Fh5Vi5Hj4Kk4Al3Qm2On2Do27p21qu1Zr19s0Pt06u05v00wNxavi3yGzB;aBor0;cBh8Hne;hCkB;!aB0;ar50eAZ;ass2i,oCuB;sDu24;nEsDusB;oBsC;uf;ef;at0g;aJeHiCoByaAO;lfgang,odrow;lBn1N;bDey,frBIlB;aA4iB;am,e,s;e88ur;i,nde6sB;!l5t1;de,lCrr7yB;l1ne;lBt3;a92y;aEern1iB;cCha0nceBrg9Ava0;!nt;ente,t59;lentin48n8Xughn;lyss4Lsm0;aSeNhKiIoErCyB;!l3ro8s1;av9PeBist0oy,um0;nt9Hv53y;bDd7WmBny;!as,mBoharu;aAXie,y;iAy;mBtA2;!my,othy;adCeoBia7ComA;!do7M;!de9Y;dErB;en8HrB;an8GeBy;ll,n8F;!dy;dgh,ic9Tnn3req,ts45;aRcotPeNhJiHoFpenc3tBur1Oylve8Hzym1;anDeBua7B;f0phAFvBwa7A;e57ie;!islaw,l5;lom1nA3uB;leyma8ta;dBlAm1;!n5;aDeB;lBrm0;d1t1;h6Sne,qu0Uun,wn,y8;aBbasti0k1Xl41rg40th,ymo9I;m9Dn;!tB;!ie,y;lCmBnti21q4Iul;!m9u4;ik,vato6V;aWeShe92iOoFuCyB;an,ou;b6LdCf95pe6QssB;!elAJ;ol2Uy;an,bIcHdGel,geFh0landA3mEnDry,sCyB;!ce;coe,s;!a95n9;an,eo;l3Jr;e4Qg3n5oA4ri68;co,ky;b9e9U;cBl5;ar5Oc5NhCkBo;!ey,ie,y;a85ie;gCid,ub7x,yBza;ansh,nS;g8WiB;na8Ss;ch5Yfa4lDmCndBpha4sh6Uul,ymo70;al9Zol2By;i9Ion;f,ph;ent2inB;cy,n,t1;aFeDhilCier62ol,reB;st1;!ip,lip;d9Brcy,tB;ar,e2V;b3Sdra6Ft44ul;ctav2Vliv3m96rFsCtBum8Uw7;is,to;aCc8SvB;al52;ma;i,l49vJ;athJeHiDoB;aBel,l0ma0r2X;h,m;cCg4i3IkB;h6Uola;holAkBolA;!olA;al,d,il,ls1vB;il50;anBy;!a4i4;aWeTiKoFuCyB;l21r1;hamCr5ZstaB;fa,p4G;ed,mF;dibo,e,hamDis1XntCsBussa;es,he;e,y;ad,ed,mB;ad,ed;cGgu4kElDnCtchB;!e6;a78ik;o03t1;e,olB;aj;ah,hBk5;a4eB;al,l;hClv2rB;le,ri6v2;di,met;ck,hNlLmOnu4rHs1tDuricCxB;!imilian86we6;e,io;eo,hCiAtB;!eo,hew,ia;eBis;us,w;cDio,k80lCqu6Gsha6tBv2;i2Hy;in,on;!el,oKus;achBcolm,ik;ai,y;amBdi,moud;adB;ou;aReNiMlo2RoIuCyB;le,nd1;cEiDkBth3;aBe;!s;gi,s;as,iaB;no;g0nn6RrenDuBwe6;!iB;e,s;!zo;am,on4;a7Bevi,la4SnDoBst3vi;!nB;!a60el;!ny;mCnBr67ur4Twr4T;ce,d1;ar,o4N;aIeDhaled,iBrist4Vu48y3B;er0p,rB;by,k,ollos;en0iEnBrmit,v2;!dCnBt5C;e0Yy;a6ri4N;r,th;na68rBthem;im,l;aYeQiOoDuB;an,liBst2;an,o,us;aqu2eJhnInGrEsB;eChBi7Cue;!ua;!ph;dBge;an,i,on;!aBny;h,s,th4X;!ath4Wie,n9;!l,sBy;ph;an,e,mB;!m9;d,ffGrDsB;sBus;!e;a5JemCmai8oBry;me,ni0O;i6Vy;!e58rB;ey,y;cHd7kGmFrDsCvi3yB;!d7s1;on,p3;ed,od,rBv4M;e4Zod;al,es,is1;e,ob,ub;k,ob,quB;es;aNbrahMchika,gKkeJlija,nuIrGsDtBv0;ai,sB;uki;aBha0i6Gma4sac;ac,iaB;h,s;a,vinBw2;!g;k,nngu52;!r;nacBor;io;im;in,n;aJeFina4VoDuByd56;be25gBmber4CsD;h,o;m3ra33sBwa3X;se2;aDctCitCn4ErB;be20m0;or;th;bKlJmza,nIo,rDsCyB;a43d7;an,s0;lEo4FrDuBv5;hi40ki,tB;a,o;is1y;an,ey;k,s;!im;ib;aQeMiLlenKoIrEuB;illerCsB;!tavo;mo;aDegBov3;!g,orB;io,y;dy,h58nt;nzaBrd1;lo;!n;lbe4Qno,ovan4S;ne,oDrB;aBry;ld,rd4O;ffr5rge;bri4l7rBv2;la1Zr3Eth,y;aReNiLlJorr0IrB;anDedBitz;!d9eBri24;ri23;cDkB;!ie,lB;in,yn;esJisB;!co,zek;etch3oB;yd;d4lBonn;ip;deriDliCng,rnB;an01;pe,x;co;bi0di;arZdUfrTit0lNmGnFo2rCsteb0th0uge8vBym7zra;an,ere2V;gi,iCnBrol,v2w2;est3Zie;c07k;och,rique,zo;aGerFiCmB;aFe2P;lCrB;!h0;!io;s1y;nu4;be09d1iEliDmCt1viBwood;n,s;er,o;ot1Ts;!as,j44sB;ha;a2en;!d9g32mEuCwB;a25in;arB;do;o0Su0S;l,nB;est;aYeOiLoErDuCwByl0;ay8ight;a8dl5nc0st2;ag0ew;minFnDri0ugCyB;le;!lA;!a29nBov0;e6ie,y;go,icB;!k;armuCeBll1on,rk;go;id;anIj0lbeHmetri1WnFon,rEsDvCwBxt3;ay8ey;en,in;hawn,mo08;ek,ri0F;is,nBv3;is,y;rt;!dB;re;lKmInHrDvB;e,iB;!d;en,iDne6rByl;eBin,yl;l2Wn;n,o,us;!e,i4ny;iBon;an,en,on;e,lA;as;a06e04hWiar0lLoGrEuCyrB;il,us;rtB;!is;aBistobal;ig;dy,lEnCrB;ey,neli13y;or,rB;ad;by,e,in,l2t1;aGeDiByI;fBnt;fo0Ct1;meCt0WvelaB;nd;nt;rDuCyB;!t1;de;enB;ce;aFeErisCuB;ck;!tB;i0oph3;st3;d,rlBs;eBie;s,y;cBdric,s11;il;lEmer1rB;ey,lCro6y;ll;!os,t1;eb,v2;ar02eUilTlaSoPrCuByr1;ddy,rtI;aJeEiDuCyB;an,ce,on;ce,no;an,ce;nCtB;!t;dCtB;!on;an,on;dCndB;en,on;!foBl5y;rd;bCrByd;is;!by;i8ke;al,l9;nFrBshoi;at,nCtB;!r11;aBie;rd0M;!edict,iCjam2n9;ie,y;to;n5rBt;eBy;tt;ey;ar0Yb0Od0Kgust2hm0Hid7ja0FlZmXnPputsiOrFsaEuCveBya0ziz;ry;gustBst2;us;hi;aIchHi4jun,maFnDon,tBy0;hBu06;ur;av,oB;ld;an,nd04;el;ie;ta;aq;dGgelZtB;hoEoB;i8nB;!iWy;ne;ny;reBy;!as,s,w;ir,mBos;ar;an,beOd7eIfFi,lEonDphonHt1vB;aMin;on;so,zo;an,en;onCrB;edJ;so;c,jaEksandDssaExB;!and3;er;ar,er;ndB;ro;rtB;!o;ni;en;ad,eB;d,t;in;aCoBri0vik;lfo;mBn;!a;dFeEraCuB;!bakr,lfazl;hBm;am;!l;allEel,oulaye,ulB;!lCrahm0;an;ah,o;ah;av,on|LastName¦0:34;1:39;2:3B;3:2Y;4:2E;5:30;a3Bb31c2Od2Ee2Bf25g1Zh1Pi1Kj1Ek17l0Zm0Nn0Jo0Gp05rYsMtHvFwCxBy8zh6;a6ou,u;ng,o;a6eun2Uoshi1Kun;ma6ng;da,guc1Zmo27sh21zaR;iao,u;a7eb0il6o3right,u;li3Bs1;gn0lk0ng,tanabe;a6ivaldi;ssilj37zqu2;a9h8i2Go7r6sui,urn0;an,ynisJ;lst0Prr1Uth;at1Uomps1;kah0Vnaka,ylor;aEchDeChimizu,iBmiAo9t7u6zabo;ar2lliv2AzuE;a6ein0;l23rm0;sa,u3;rn4th;lva,mmo24ngh;mjon4rrano;midt,neid0ulz;ito,n7sa6to;ki;ch2dLtos,z;amBeag1Zi9o7u6;bio,iz,sD;b6dri1MgIj0Tme24osevelt,ssi,ux;erts,ins1;c6ve0F;ci,hards1;ir2os;aEeAh8ic6ow20;as6hl0;so;a6illips;m,n1T;ders5et8r7t6;e0Nr4;ez,ry;ers;h21rk0t6vl4;el,te0J;baBg0Blivei01r6;t6w1O;ega,iz;a6eils1guy5ix1owak,ym1E;gy,ka6var1K;ji6muW;ma;aEeCiBo8u6;ll0n6rr0Bssolini,ñ6;oz;lina,oKr6zart;al0Me6r0U;au,no;hhail4ll0;rci0ssi6y0;!er;eWmmad4r6tsu07;in6tin2;!o;aCe8i6op2uo;!n6u;coln,dholm;fe7n0Qr6w0J;oy;bv6v6;re;mmy,rs5u;aBennedy,imuAle0Lo8u7wo6;k,n;mar,znets4;bay6vacs;asY;ra;hn,rl9to,ur,zl4;aAen9ha3imen2o6u3;h6nYu3;an6ns1;ss1;ki0Es5;cks1nsse0D;glesi9ke8noue,shik7to,vano6;u,v;awa;da;as;aBe8itchcock,o7u6;!a3b0ghNynh;a3ffmann,rvat;mingw7nde6rN;rs1;ay;ns5rrQs7y6;asDes;an4hi6;moJ;a9il,o8r7u6;o,tierr2;ayli3ub0;m2nzal2;nd6o,rcia;hi;erAis9lor8o7uj6;ita;st0urni0;es;ch0;nand2;d7insteHsposi6vaL;to;is1wards;aCeBi9omin8u6;bo6rand;is;gu2;az,mitr4;ov;lgado,vi;nkula,rw7vi6;es,s;in;aFhBlarkAo6;h5l6op0rbyn,x;em7li6;ns;an;!e;an8e7iu,o6ristens5u3we;i,ng,u3w,y;!n,on6u3;!g;mpb7rt0st6;ro;ell;aBe8ha3lanco,oyko,r6yrne;ooks,yant;ng;ck7ethov5nnett;en;er,ham;ch,h8iley,rn6;es,i0;er;k,ng;dDl9nd6;ers6rA;en,on,s1;on;eks7iy8var2;ez;ej6;ev;ams|Person¦a01bZcTdQeOfMgJhHinez,jFkEleDmAnettPo9p7r4s3t2uncle,v0womL;a0irgin maH;lentino rossi,n go3;heresa may,iger woods,yra banks;addam hussaQcarlett johanssRistZlobodan milosevic,omeone,tepGuC;ay romano,eese witherspoQo1ush limbau0;gh;d stewart,naldinho;a0ipV;lmUris hiltM;prah winfrOra;an,essiaen,itt romnNo0ubarek;m0thR;!my;bron james,e;anye west,iefer sutherland,obe bryaN;aime,effersFk rowli0;ng;alle ber0itlLulk hog3;ry;astBentlem1irl,rand0uy;fa2mo2;an;a0ella;thF;ff0meril lagasse,zekiel;ie;a0enzel washingt4ick wolf,ude;d0lt3nte;!dy;ar2lint1ous0ruz;in;on;dinal wols1son0;! palm5;ey;arack obama,oy,ro0;!ck,th2;shton kutch1u0;nt;er|FemaleName¦0:FY;1:G2;2:FR;3:FD;4:FC;5:FS;6:EP;7:ER;8:EZ;9:GF;A:GB;B:E5;C:FO;D:G8;E:FL;F:EG;aE2bD4cB7dAHe9Ff90g8Gh82i7Rj6Tk5Zl4Nm38n2To2Qp2Fqu2Er1Os0Qt04ursu7vUwOyLzG;aJeHoG;e,la,ra;lGna;da,ma;da,ra;as7DeHol1TvG;et6onB8;le0sen3;an8endBNhiB3iG;lInG;if39niGo0;e,f38;a,helmi0lGma;a,ow;aMeJiG;cHviG;an9WenG1;kCZtor3;da,l8Unus,rG;a,nGoniD2;a,iDC;leGnesEC;nDLrG;i1y;aSePhNiMoJrGu7y4;acG3iGu0E;c3na,sG;h9Lta;nHrG;a,i;i9Iya;a5HffaCGna,s5;al3eGomasi0;a,l8Fo6Wres1;g7To6VrHssG;!a,ie;eFi,ri9;bNliMmKnIrHs5tGwa0;ia0um;a,yn;iGya;a,ka,s5;a4e4iGmCAra;!ka;a,t5;at5it5;a05carlet2Xe04hUiSkye,oQtMuHyG;bFJlvi1;e,sHzG;an2Set6ie,y;anGi9;!a,e,nG;aEe;aIeG;fGl3CphG;an2;cF8r71;f3nGphi1;d4ia,ja,ya;er4lv3mon1nGobh74;dy;aKeGirlBLo0y7;ba,e0i7lIrG;iGrBPyl;!d6Z;ia,lBV;ki4nIrHu0w0yG;la,na;i,leAon,ron;a,da,ia,nGon;a,on;l5Xre0;bMdLi8lKmIndHrGs5vannaE;aEi0;ra,y;aGi4;nt5ra;lBNome;e,ie;in1ri0;a02eXhViToHuG;by,thBK;bQcPlOnNsHwe0xG;an93ie,y;aHeGie,lD;ann9ll1marBFtB;!lGnn1;iGyn;e,nG;a,d7V;da,i,na;an8;hel52io;bin,erByn;a,cGkki,na,ta;helBZki;ea,iannDXoG;da,n11;an0bIgi0i0nGta,y0;aGee;!e,ta;a,eG;cARkaE;chGe,i0mo0n5DquCDvCy0;aCCelGi8;!e,le;een2ia0;aMeLhJoIrG;iGudenAW;scil1Tyamva8;lly,rt3;ilome0oebe,ylG;is,lis;arl,ggy,nelope,r7t4;ige,m0En4No7rvaBBtHulG;a,et6in1;ricGsy,tA8;a,e,ia;ctav3deHf85lGph85;a,ga,iv3;l3t6;aQePiJoGy7;eHrG;aEeCma;ll1mi;aKcIkGla,na,s5ta;iGki;!ta;hoB2k8BolG;a,eBH;!mh;l7Tna,risF;dIi5OnHo22taG;li1s5;cy,et6;eAiCO;a00ckenz2eUiKoHrignayani,uriBGyrG;a,na,tAT;i4ll9YnG;a,iG;ca,ka,qB5;a,chOkaNlJmi,nIrGtzi;aGiam;!n8;a,dy,erva,h,n2;a,dIi9KlG;iGy;cent,e;red;!e7;ae7el3G;ag4KgKi,lHrG;edi61isFyl;an2iGliF;nGsAN;a,da;!an,han;b08c9Fd06e,g04i03l01nZrKtJuHv6Sx88yGz2;a,bell,ra;de,rG;a,eC;h76il8t2;a,cSgOiJjor2l6In2s5tIyG;!aGbe5QjaAlou;m,n9T;a,ha,i0;!aIbAMeHja,lDna,sGt53;!a,ol,sa;!l06;!h,m,nG;!a,e,n1;arIeHie,oGr3Kueri6;!t;!ry;et3IiB;elGi61y;a,l1;dGon,ue7;akranBy;iGlo36;a,ka,n8;a,re,s2;daGg2;!l2W;alDd2elGge,isBHon0;eiAin1yn;el,le;a0Ie08iWoQuKyG;d3la,nG;!a,dHe9TnGsAR;!a,e9S;a,sAP;aB2cJelIiFlHna,pGz;e,iB;a,u;a,la;iGy;a2Ae,l25n8;is,l1GrHtt2uG;el7is1;aIeHi9na,rG;a70i9;lei,n1tB;!in1;aQbPd3lLnIsHv3zG;!a,be4Ket6z2;a,et6;a,dG;a,sGy;ay,ey,i,y;a,iaIlG;iGy;a8He;!n4F;b7Uerty;!n5S;aNda,e0iLla,nKoIslAStGx2;iGt2;c3t3;la,nGra;a,ie,o4;a,or1;a,gh,laG;!ni;!h,nG;a,d4e,n4N;cNdon7Ti7kes5na,rMtKurIvHxGy7;mi;ern1in3;a,eGie,yn;l,n;as5is5oG;nya,ya;a,isF;ey,ie,y;aZeUhadija,iMoLrIyG;lGra;a,ee,ie;istGy5C;a,en,iGy;!e,n48;ri,urtn9B;aMerLl9AmIrGzzy;a,stG;en,in;!berlG;eGi,y;e,y;a,stC;!na,ra;el6QiJlInHrG;a,i,ri;d4na;ey,i,l9Rs2y;ra,s5;c8Xi5YlOma7nyakumari,rMss5MtJviByG;!e,lG;a,eG;e,i79;a5FeHhGi3PlDri0y;ar5Der5Die,leCr9Gy;!lyn74;a,en,iGl4Vyn;!ma,n31sF;ei73i,l2;a04eVilToMuG;anKdJliGst57;aHeGsF;!nAt0W;!n8Y;e,i2Ry;a,iB;!anLcelDd5Wel72han6JlJni,sHva0yG;a,ce;eGie;fi0lDph4Y;eGie;en,n1;!a,e,n36;!i10lG;!i0Z;anLle0nIrHsG;i5Rsi5R;i,ri;!a,el6Qif1RnG;a,et6iGy;!e,f1P;a,e73iHnG;a,e72iG;e,n1;cLd1mi,nHqueliAsmin2Uvie4yAzG;min9;a9eHiG;ce,e,n1s;!lGsFt06;e,le;inHk2lDquelG;in1yn;da,ta;da,lPmNnMo0rLsHvaG;!na;aHiGob6V;do4;!belGdo4;!a,e,l2G;en1i0ma;a,di4es,gr5S;el8ogG;en1;a,eAia0o0se;aNeKilHoGyacin1N;ll2rten1H;aHdGlaH;a,egard;ry;ath0WiHlGnrietBrmiAst0W;en24ga;di;il76lKnJrGtt2yl76z6E;iGmo4Gri4H;etG;!te;aEnaE;ey,l2;aYeTiOlMold12rIwG;enGyne18;!dolD;acHetGisel8;a,chC;e,ieG;!la;adys,enGor3yn1Y;a,da,na;aJgi,lHna,ov72selG;a,e,le;da,liG;an;!n0;mYnIorgHrG;ald36i,m2Ttru74;et6i5U;a,eGna;s1Nvieve;briel3Gil,le,rnet,yle;aReOio0loMrG;anHe8iG;da,e8;!cG;esHiGoi0G;n1s3W;!ca;!rG;a,en44;lHrnG;!an8;ec3ic3;rHtiGy9;ma;ah,rah;d0FileCkBl00mUn4BrRsMtLuKvG;aIelHiG;e,ta;in0Ayn;!ngel2I;geni1la,ni3S;h53ta;meral8peranJtG;eHhGrel7;er;l2Qr;za;iGma,nest2Ayn;cGka,n;a,ka;eJilImG;aGie,y;!liA;ee,i1y;lGrald;da,y;aTeRiMlLma,no4oJsIvG;a,iG;na,ra;a,ie;iGuiG;se;a,en,ie,y;a0c3da,nJsGzaH;aGe;!beG;th;!a,or;anor,nG;!a;in1na;en,iGna,wi0;e,th;aWeKiJoGul2V;lor52miniq3Zn31rGtt2;a,eCis,la,othGthy;ea,y;an09naEonAx2;anPbOde,eNiLja,lImetr3nGsir4V;a,iG;ce,se;a,iHla,orGphiA;es,is;a,l5K;dGrdG;re;!d4Nna;!b2DoraEra;a,d4nG;!a,e;hl3i0mMnKphn1rHvi1XyG;le,na;a,by,cHia,lG;a,en1;ey,ie;a,et6iG;!ca,el1Bka;arGia;is;a0Re0Nh05i03lVoJrHynG;di,th3;istGy05;al,i0;lPnMrHurG;tn1E;aJdIiGnIriA;!nG;a,e,n1;el3;!l1S;n2sG;tanGuelo;ce,za;eGleC;en,t6;aIeoHotG;il4B;!pat4;ir9rIudG;et6iG;a,ne;a,e,iG;ce,sX;a4er4ndG;i,y;aPeMloe,rG;isHyG;stal;sy,tG;aHen,iGy;!an1e,n1;!l;lseHrG;!i9yl;a,y;nLrG;isJlHmG;aiA;a,eGot6;n1t6;!sa;d4el1PtG;al,el1O;cHlG;es6i3F;el3ilG;e,ia,y;iYlXmilWndVrNsLtGy7;aJeIhGri0;erGleCrDy;in1;ri0;li0ri0;a2GsG;a2Fie;a,iMlKmeIolHrG;ie,ol;!e,in1yn;lGn;!a,la;a,eGie,y;ne,y;na,sF;a0Di0D;a,e,l1;isBl2;tlG;in,yn;arb0CeYianXlVoTrG;andRePiIoHyG;an0nn;nwDok9;an2NdgKg0ItG;n27tG;!aHnG;ey,i,y;ny;etG;!t9;an0e,nG;da,na;i9y;bbi9nG;iBn2;ancGossom,ythe;a,he;ca;aRcky,lin8niBrNssMtIulaEvG;!erlG;ey,y;hHsy,tG;e,i0Zy9;!anG;ie,y;!ie;nGt5yl;adHiG;ce;et6iA;!triG;ce,z;a4ie,ra;aliy29b24d1Lg1Hi19l0Sm0Nn01rWsNthe0uJvIyG;anGes5;a,na;a,r25;drIgusHrG;el3o4;ti0;a,ey,i,y;hHtrG;id;aKlGt1P;eHi9yG;!n;e,iGy;gh;!nG;ti;iIleHpiB;ta;en,n1t6;an19elG;le;aYdWeUgQiOja,nHtoGya;inet6n3;!aJeHiGmI;e,ka;!mGt6;ar2;!belHliFmT;sa;!le;ka,sGta;a,sa;elGie;a,iG;a,ca,n1qG;ue;!t6;te;je7rea;la;!bHmGstas3;ar3;el;aIberHel3iGy;e,na;!ly;l3n8;da;aTba,eNiKlIma,ta,yG;a,c3sG;a,on,sa;iGys0J;e,s0I;a,cHna,sGza;a,ha,on,sa;e,ia;c3is5jaIna,ssaIxG;aGia;!nd4;nd4;ra;ia;i0nHyG;ah,na;a,is,naE;c5da,leCmLnslKsG;haElG;inGyW;g,n;!h;ey;ee;en;at5g2nG;es;ie;ha;aVdiSelLrG;eIiG;anLenG;a,e,ne;an0;na;aKeJiHyG;nn;a,n1;a,e;!ne;!iG;de;e,lDsG;on;yn;!lG;iAyn;ne;agaJbHiG;!gaI;ey,i9y;!e;il;ah|Verb¦awak9born,cannot,fr8g7h5k3le2m1s0wors9;e8h3;ake sure,sg;ngth6ss6;eep tabs,n0;own;as0e2;!t2;iv1onna;ight0;en|PhrasalVerb¦0:71;1:6P;2:7D;3:73;4:6I;5:7G;6:75;7:6O;8:6B;9:6C;A:5H;B:70;C:6Z;a7Gb62c5Cd59e57f45g3Nh37iron0j33k2Yl2Km2Bn29o27p1Pr1Es09tQuOvacuum 1wGyammerCzD;eroAip EonD;e0k0;by,up;aJeGhFiEorDrit52;d 1k2Q;mp0n49pe0r8s8;eel Bip 7K;aEiD;gh 06rd0;n Br 3C;it 5Jk8lk6rm 0Qsh 73t66v4O;rgeCsD;e 9herA;aRePhNiJoHrFuDype 0N;ckArn D;d2in,o3Fup;ade YiDot0y 32;ckle67p 79;ne66p Ds4C;d2o6Kup;ck FdEe Dgh5Sme0p o0Dre0;aw3ba4d2in,up;e5Jy 1;by,o6U;ink Drow 5U;ba4ov7up;aDe 4Hll4N;m 1r W;ckCke Elk D;ov7u4N;aDba4d2in,o30up;ba4ft7p4Sw3;a0Gc0Fe09h05i02lYmXnWoVpSquare RtJuHwD;earFiD;ngEtch D;aw3ba4o6O; by;ck Dit 1m 1ss0;in,up;aIe0RiHoFrD;aigh1LiD;ke 5Xn2X;p Drm1O;by,in,o6A;n2Yr 1tc3H;c2Xmp0nd Dr6Gve6y 1;ba4d2up;d2o66up;ar2Uell0ill4TlErDurC;ingCuc8;a32it 3T;be4Brt0;ap 4Dow B;ash 4Yoke0;eep EiDow 9;c3Mp 1;in,oD;ff,v7;gn Eng2Yt Dz8;d2o5up;in,o5up;aFoDu4E;ot Dut0w 5W;aw3ba4f36o5Q;c2EdeAk4Rve6;e Hll0nd GtD; Dtl42;d2in,o5upD;!on;aw3ba4d2in,o1Xup;o5to;al4Kout0rap4K;il6v8;at0eKiJoGuD;b 4Dle0n Dstl8;aDba4d2in52o3Ft2Zu3D;c1Ww3;ot EuD;g2Jnd6;a1Wf2Qo5;ng 4Np6;aDel6inAnt0;c4Xd D;o2Su0C;aQePiOlMoKrHsyc29uD;ll Ft D;aDba4d2in,o1Gt33up;p38w3;ap37d2in,o5t31up;attleCess EiGoD;p 1;ah1Gon;iDp 52re3Lur44wer 52;nt0;ay3YuD;gAmp 9;ck 52g0leCn 9p3V;el 46ncilA;c3Oir 2Hn0ss FtEy D;ba4o4Q; d2c1X;aw3ba4o11;pDw3J;e3It B;arrow3Serd0oD;d6te3R;aJeHiGoEuD;ddl8ll36;c16p 1uth6ve D;al3Ad2in,o5up;ss0x 1;asur8lt 9ss D;a19up;ke Dn 9r2Zs1Kx0;do,o3Xup;aOeMiHoDuck0;a16c36g 0AoDse0;k Dse34;aft7ba4d2forw2Ain3Vov7uD;nd7p;e GghtFnEsDv1T;ten 4D;e 1k 1; 1e2Y;ar43d2;av1Ht 2YvelD; o3L;p 1sh DtchCugh6y1U;in3Lo5;eEick6nock D;d2o3H;eDyA;l2Hp D;aw3ba4d2fSin,o05to,up;aFoEuD;ic8mpA;ke2St2W;c31zz 1;aPeKiHoEuD;nker2Ts0U;lDneArse2O;d De 1;ba4d2oZup;de Et D;ba4on,up;aw3o5;aDlp0;d Fr Dt 1;fDof;rom;in,oO;cZm 1nDve it;d Dg 27kerF;d2in,o5;aReLive Jloss1VoFrEunD; f0M;in39ow 23; Dof 0U;aEb17it,oDr35t0Ou12;ff,n,v7;bo5ft7hJw3;aw3ba4d2in,oDup,w3;ff,n,ut;a17ek0t D;aEb11d2oDr2Zup;ff,n,ut,v7;cEhDl1Pr2Xt,w3;ead;ross;d aEnD;g 1;bo5;a08e01iRlNoJrFuD;cDel 1;k 1;eEighten DownCy 1;aw3o2L;eDshe1G; 1z8;lFol D;aDwi19;bo5r2I;d 9;aEeDip0;sh0;g 9ke0mDrD;e 2K;gLlJnHrFsEzzD;le0;h 2H;e Dm 1;aw3ba4up;d0isD;h 1;e Dl 11;aw3fI;ht ba4ure0;eInEsD;s 1;cFd D;fDo1X;or;e B;dQl 1;cHll Drm0t0O;apYbFd2in,oEtD;hrough;ff,ut,v7;a4ehi1S;e E;at0dge0nd Dy8;o1Mup;o09rD;ess 9op D;aw3bNin,o15;aShPlean 9oDross But 0T;me FoEuntD; o1M;k 1l6;aJbIforGin,oFtEuD;nd7;ogeth7;ut,v7;th,wD;ard;a4y;pDr19w3;art;eDipA;ck BeD;r 1;lJncel0rGsFtch EveA; in;o16up;h Bt6;ry EvD;e V;aw3o12;l Dm02;aDba4d2o10up;r0Vw3;a0He08l01oSrHuD;bbleFcklTilZlEndlTrn 05tDy 10zz6;t B;k 9; ov7;anMeaKiDush6;ghHng D;aEba4d2forDin,o5up;th;bo5lDr0Lw3;ong;teD;n 1;k D;d2in,o5up;ch0;arKgJil 9n8oGssFttlEunce Dx B;aw3ba4;e 9; ar0B;k Bt 1;e 1;d2up; d2;d 1;aIeed0oDurt0;cFw D;aw3ba4d2o5up;ck;k D;in,oK;ck0nk0st6; oJaGef 1nd D;d2ov7up;er;up;r0t D;d2in,oDup;ff,ut;ff,nD;to;ck Jil0nFrgEsD;h B;ainCe B;g BkC; on;in,o5; o5;aw3d2o5up;ay;cMdIsk Fuction6; oD;ff;arDo5;ouD;nd;d D;d2oDup;ff,n;own;t D;o5up;ut|Modal¦c5lets,m4ought3sh1w0;ill,o5;a0o4;ll,nt;! to;ay,ight,ust;an,o0;uld|Adjective¦0:76;1:7L;2:7R;3:7K;4:7D;5:5D;6:4T;7:49;8:4A;9:62;A:7I;B:74;C:5Y;D:70;a6Jb65c5Rd57e4Tf49g40h3Pi34j32k31l2Qm2Fn26o1Qp19quack,r0Zs0Ft08uPvMwEyear5;arp0eIholeHiGoE;man5oEu6C;d6Ezy;despr75s5G;!sa8;eFlEste25;co1Hl o4L;!k5;aFiEola4B;b7Tce versa,ol55;ca2gabo63nilla;ltVnIpFrb5Asu4tterE;!moD; f33b1NpFsEti1G;ca8et,ide dLtairs;er,i3M;aObeco6Rconvin26deLeKfair,ivers4knJprecedXrHsFwE;iel1Zritt5Z;i1UuE;pervis0specti3;eEu5;cognKgul6Hl6H;own;ndi3v5Txpect0;cid0rE;!grou5OsE;iz0tood;b8ppeaKssu6GuthorE;iz0;i23ra;aIeGhough4PoFrE;i1oubl0;geth6p,rp6H;en5QlEm50rr2Tst0;li3;boo,lEn;ent0;aWcVeThSiQmug,nobbi3EoOpNqueami3EtIuEymb64;bGi gener55pErprisi3;erEre0K;! dup6b,i28;du0seq4U;anda6UeHi0OrEy38;aightEip0; fEfE;or5B;adfaDreotyp0;aCec2Fir1Ilend62ot on; call0le,mb6phist1WrEu0Wvi42;d60ry;gnifica2nE;ceCg8;am2Pe6ocki3ut;cEda1em5lfi2Yni1Vpa69re7;o1Fr3W;at58ient27reec58;cr0me,ns serif;aLeHiFoE;buDtt4UuRy4;ghtEv4;!-28f9;ar,bel,condi1du63fres52lGpublic3WsEta2D;is48oE;lu1na2;e1Duc46;b5KciE;al,st;aPeNicayu7lac5IopuliDrFuE;bl5Amp0;eIiFoE;!b09fuBmi32p6;mFor,sEva1;ti7;a4We;ciBmE;a0HiE;er,um;ac20rEti1;feAma2Uplexi3v34;rEst;allelGtE;-tiEi4;me;!ed;bPffNkMld fashion0nLpKrg1Gth6utJvE;al,erE;!aGniFt,wE;eiErouE;ght;ll;do0Uer,g2Msi46;en,posi1; boa5Gg2Kli7;!ay; gua5EbEli7;eat;eGsE;cEer0Gole1;e7uC;d2Tse;ak0eLiKoEua4P;nIrFtE;ab8;thE;!eE;rn;chala2descri50stop;ght5;arby,cessa3Xighbor5xt;aMeKiHoEultip8;bi8derFlEnth5ot,st;dy;a1n;nEx0;iaEor;tuC;di4FnaEre;ci3;cEgenta,in,j02keshift,le,mmoth,ny,sculi7;abCho;aNeIiFoEu13;uti12vi3;mFteraE;l,te;it0;ftHgEth4;al,eFitiE;ma1;nda3D;!-0B;ngu3Rst,tt6;ap1Tind5no09;agg0uE;niNstifi0veni8;de4gno4Clleg4mRnGpso 1WrE;a1releE;va2; MaLbr0corKdIfluenSiSnHsGtE;aAenBoxE;ic37;a7i2S;a1er,oce2;iFoE;or;reA;deq3Kppr2Z;fEsitu,vitro;ro2;mIpE;arGerfeAoErop6;li1rtE;a2ed;ti4;eEi0R;d2RnB;aJelIiGoEumdr3C;neDok0rrEs07ur5;if2T;ghfalut1PspE;an2R;liZpf9;lHnGrE;d05roE;wi3;dy,gi3;f,low0;ainf9ener2Kiga23lLoKraHuE;aFilEng ho;ty;rd0;cFtE;ef9is;ef9;ne,od;ea2Dob4;aTeNinMlLoGrE;a1TeEoz1K;e2Dq12tf9;oGrE; keeps,eEm6tuna1;g04ign;liE;sh;ag2Zue2;al,i1;dImFrE;ti8;a8ini7;ne;le; up;bl0i2lBr Fux,voE;ri1uri1;oEreac1E;ff;aNfficie2lMmiLnJreAthere4veIxE;aAcess,peGtraFuE;be2Ll0H;!va1D;ct0rt;n,ryday; Ecouragi3tiC;rou1sui1;ne2;abo22dPe17i1;g6sE;t,ygE;oi3;er;aUeMiGoErea14ue;mina2ne,ubE;le,tf9;dact1Afficu1NsFvE;erB;creGeas0gruntl0honeDordFtE;a2ress0;er5;et; KadpJfIgene1OliGrang0spe1OtFvoE;ut;ail0ermin0;be1Lca1ghE;tf9;ia2;an;facto;i5magEngeroYs0H;ed,i3;ly;ertaQhief,ivil,oGrE;aEowd0u0G;mp0v01z0;loMmKnFoi3rrEve0O;eAu1H;cre1grHsGtE;emEra0E;po0C;ta2;ue2;mer07pleE;te,x;ni4ss4;in;aOeKizarClIoFrE;and new,isk,okO;gFna fiVttom,urgeoE;is;us;ank,iH;re;autif9hiFlov0nEst,yoF;eUt;nd;ul;ckFnkru0WrrE;en;!wards; priori,b0Mc0Jd09fra08g04h03lYma05ntiquXpTrNsLttracti06utheKvHwE;aFkE;wa0T;ke,re;ant garFerE;age;de;ntU;leep,tonisE;hi3;ab,bitHroGtiE;fiE;ci4;ga2;raE;ry;pEt;are2etiOrE;oprE;ia1;at0;arHcohFeEiLl,oof;rt;olE;ic;mi3;ead;ainDgressiFoniE;zi3;ve;st;id; LeJuIvE;aFerB;se;nc0;ed;lt;pt,qE;ua1;hoc,infinitE;um;cuFtu4u1;al;ra1;erOlNoLruKsFuE;nda2;e2oFtraA;ct;lu1rbi3;ng;te;pt;aEve;rd;aze,e;ra2;nt|Comparable¦0:41;1:4I;2:45;3:4B;4:2Y;5:3X;a4Ob44c3Od3De35f2Rg2Fh24i1Vj1Uk1Rl1Im1Cn16o14p0Tqu0Rr0IsRtKuIvFw7y6za12;ell27ou3;aBe9hi1Yi7r6;o3y;ck0Mde,l6n1ry,se;d,y;a6i4Mt;k,ry;n1Tr6sI;m,y;a7e6ulgar;nge5rda2xi3;gue,in,st;g0n6pco3Mse5;like0ti1;aAen9hi8i7ough,r6;anqu2Qen1ue;dy,g3Ume0ny,r09;ck,n,rs2R;d42se;ll,me,rt,s6wd47;te5;aVcarUeThRiQkin0GlMmKoHpGqua1HtAu7w6;eet,ift;b7dd15per0Hr6;e,re2J;sta2Ht4;aAe9iff,r7u6;pXr1;a6ict,o3;ig3Hn0W;a1ep,rn;le,rk;e24i3Hright0;ci2Aft,l7o6re,ur;n,thi3;emn,id;a6el0ooth;ll,rt;e8i6ow,y;ck,g37m6;!y;ek,nd3F;ck,l0mp4;a6iUort,rill,y;dy,ll0Zrp;cu0Tve0Txy;ce,ed,y;d,fe,int0l1Xv16;aBe9i8o6ude;mantic,o1Ksy,u6;gh,nd;ch,pe,tzy;a6d,mo0J;dy,l;gg7ndom,p6re,w;id;ed;ai2i6;ck,et;aFhoEi1SlCoBr8u6;ny,r6;e,p4;egna2ic7o6;fou00ud;ey,k0;li06or,te1D;a6easa2;in,nt;ny;in5le;dd,f6i0ld,ranR;fi11;aAe8i7o6;b4isy,rm16sy;ce,mb4;a6w;r,t;ive,rr02;aAe8ild,o7u6;nda1Ate;ist,o1;a6ek,llY;n,s0ty;d,tuR;aCeBi9o6ucky;f0Vn7o1Eu6ve0w18y0U;d,sy;e0g;g1Uke0tt4v6;e0i3;an,wd;me,r6te;ge;e7i6;nd;en;ol0ui1P;cy,ll,n6;sBt6;e6ima8;llege2r6;es7media6;te;ti3;ecu6ta2;re;aEeBiAo8u6;ge,m6ng1R;b4id;ll6me0t;ow;gh,l0;a6f04sita2;dy,v6;en0y;nd1Hppy,r6te5;d,sh;aGenFhDiClBoofy,r6;a9e8is0o6ue1E;o6ss;vy;at,en,y;nd,y;ad,ib,ooI;a2d1;a6o6;st0;t4uiY;u1y;aIeeb4iDlat,oAr8u6;ll,n6r14;!ny;aHe6iend0;e,sh;a7r6ul;get5mG;my;erce8n6rm,t;an6e;ciC;! ;le;ir,ke,n0Fr,st,t,ulA;aAerie,mp9sse7v6xtre0Q;il;nti6;al;ty;r7s6;tern,y;ly,th0;aFeCi9r7u6;ll,mb;u6y;nk;r7vi6;ne;e,ty;a6ep,nD;d6f,r;!ly;mp,pp03rk;aHhDlAo8r7u6;dd0r0te;isp,uel;ar6ld,mmon,ol,st0ward0zy;se;e6ou1;a6vW;n,r;ar8e6il0;ap,e6;sy;mi3;gey,lm8r6;e5i3;ful;!i3;aNiLlIoEr8u6;r0sy;ly;aAi7o6;ad,wn;ef,g7llia2;nt;ht;sh,ve;ld,r7un6;cy;ed,i3;ng;a7o6ue;nd,o1;ck,nd;g,tt6;er;d,ld,w1;dy;bsu9ng8we6;so6;me;ry;rd|Adverb¦a07by 05d01eYfShQinPjustOkinda,mMnJoEpCquite,r9s5t2up1very,w0Bye0;p,s; to,wards5;h1o0wiO;o,t6ward;en,us;everal,o0uch;!me1rt0; of;hXtimes,w07;a1e0;alS;ndomRthN;ar excellDer0oint blank; Mhaps;f3n0;ce0ly;! 0;ag00moU; courHten;ewJo0; longEt 0;onHwithstanding;aybe,eanwhiAore0;!ovB;! aboS;deed,steT;en0;ce;or2u0;l9rther0;!moH; 0ev3;examp0good,suF;le;n mas1v0;er;se;e0irect1; 1finite0;ly;ju7trop;far,n0;ow; CbroBd nauseam,gAl5ny2part,side,t 0w3;be5l0mo5wor5;arge,ea4;mo1w0;ay;re;l 1mo0one,ready,so,ways;st;b1t0;hat;ut;ain;ad;lot,posteriori|Ordinal¦bGeDf9hundredHmGnin7qu6s4t0zeroH;enGh1rFwe0;lfFn9;ir0ousandE;d,t4;e0ixt9;cond,ptAvent8xtA;adr9int9;et0th;e6ie8;i2o0;r0urt3;tie5;ft1rst;ight0lev1;e0h,ie2;en1;illion0;th|Cardinal¦bGeDf7hundred,mGnine9one,qu6s4t0zero;en,h2rFw0;e0o;lve,n7;irt8ousand,ree;e0ix4;ptAven3xtA;adr9int9;i3o0;r1ur0;!t2;ty;ft0ve;e2y;ight0lev1;!e0y;en;illion|Expression¦a02b01dXeVfuck,gShLlImHnGoDpBshAu7voi04w3y0;a1eLu0;ck,p;!a,hoo,y;h1ow,t0;af,f;e0oa;e,w;gh,h0;! 0h,m;huh,oh;eesh,hh,it;ff,hew,l0sst;ease,z;h1o0w,y;h,o,ps;!h;ah,ope;eh,mm;m1ol0;!s;ao,fao;a4e2i,mm,oly1urr0;ah;! mo6;e,ll0y;!o;ha0i;!ha;ah,ee,o0rr;l0odbye;ly;e0h,t cetera,ww;k,p;'oh,a0uh;m0ng;mit,n0;!it;ah,oo,ye; 1h0rgh;!em;la|Preposition¦'o,-,aKbHcGdFexcept,fEinDmidPnotwithstandiQoBpRqua,sAt6u3vi2w0;/o,hereMith0;!in,oQ;a,s-a-vis;n1p0;!on;like,til;h0ill,owards;an,r0;ough0u;!oI;ans,ince,o that;',f0n1ut;!f;!to;or,rom;espite,own,u3;hez,irca;ar1e0oAy;low,sides,tween;ri6;',bo7cross,ft6lo5m3propos,round,s1t0;!op;! long 0;as;id0ong0;!st;ng;er;ut|Conjunction¦aEbAcuz,how8in caDno7o6p4supposing,t1vers5wh0yet;eth8ile;h0o;eref9o0;!uC;l0rovided that;us;r,therwi6; matt1r;!ev0;er;e0ut;cau1f0;ore;se;lthou1nd,s 0;far as,if;gh|Determiner¦aAboth,d8e5few,l3mu7neiCown,plenty,some,th2various,wh0;at0ich0;evB;at,e3is,ose;a,e0;!ast,s;a1i6l0nough,very;!se;ch;e0u;!s;!n0;!o0y;th0;er\",\"conjugations\":\":act,,,,|age:_,d,s,ing|aim:_,ed,,ing|ar:ise,ose,,,isen|babys:it,at|ban:_,ned,,ning|:be,was,is,am,been|beat:_,,,ing,en|become:_,,,,_|beg:in,an,,inning,un|:being,were,are,are|ben:d,,,,t|bet:_,,,,_|b:ind,ound|bit:e,_,,ing,ten|ble:ed,d,,,d|bl:ow,ew,,,own|:boil,,,,|br:ake,,,,oken|br:eak,oke|bre:ed,d|br:ing,ought,,,ought|broadcast:_,_|budget:_,ed|buil:d,t,,,t|burn:_,,,,ed|burst:_,,,,_|b:uy,ought,,,ought|:can,could,can,_|ca:tch,ught|cho:ose,se,,osing,sen|cl:ing,,,,ung|c:ome,ame,,,ome|compet:e,ed,,ing|cost:_,_|cre:ep,,,,pt|cut:_,,,,_|deal:_,t,,,t|develop:_,ed,,ing|d:ie,ied,,ying|d:ig,ug,,igging,ug|dive:_,,,,d|d:o,id,oes|dr:aw,ew,,,awn|dream:_,,,,t|dr:ink,ank,,,unk|dr:ive,ove,,iving,iven|drop:_,ped,,ping|:eat,ate,,eating,eaten|edit:_,,,ing|egg:_,ed|f:all,ell,,,allen|fe:ed,d,,,d|fe:el,lt|f:ight,ought,,,ought|f:ind,ound|fle:e,,,eing,d|fl:ing,,,,ung|fl:y,ew,,,own|forb:id,ade|forg:et,ot,,eting,otten|forg:ive,ave,,iving,iven|free:_,,,ing|fr:eeze,oze,,eezing,ozen|g:et,ot,,,otten|g:ive,ave,,iving,iven|:go,went,goes,,gone|grow:_,,,,n|h:ang,ung,,,ung|ha:ve,d,s,ving,d|hear:_,d,,,d|hid:e,_,,,den|hit:_,,,,_|h:old,eld,,,eld|hurt:_,_,,,_|ic:e,ed,,ing|impl:y,ied,ies|:is,was,is,being|ke:ep,,,,pt|kne:el,,,,lt|know:_,,,,n|la:y,id,,,id|le:ad,d,,,d|leap:_,,,,t|le:ave,ft,,,ft|len:d,,,,t|l:ie,ay,,ying|li:ght,t,,,t|log:_,ged,,ging|lo:ose,,,,st|los:e,t,,ing|ma:ke,de,,,de|mean:_,t,,,t|me:et,t,,eting,t|miss:_,,_|pa:y,id,,,id|prove:_,,,,n|puk:e,,,ing|put:_,,,,_|quit:_,,,,_|read:_,_,,,_|rid:e,,,,den|r:ing,ang,,,ung|r:ise,ose,,ising,isen|rub:_,bed,,bing|r:un,an,,unning,un|sa:y,id,ys,,id|s:eat,,,,at|s:ee,aw,,eeing,een|s:eek,,,,ought|s:ell,old,,,old|sen:d,,,,t|set:_,,,,_|sew:_,,,,n|shake:_,,,,n|shave:_,,,,d|shed:_,_,s,ding|sh:ine,one,,,one|sho:ot,t,,,t|show:_,ed|shut:_,,,,_|s:ing,ang,,,ung|s:ink,ank|s:it,at|ski:_,ied|sla:y,,,,in|sle:ep,,,,pt|slid:e,_,,,_|smash:_,,es|sn:eak,,,,uck|sp:eak,oke,,,oken|spe:ed,,,,d|spen:d,,,,t|spil:l,t,,,led|sp:in,un,,inning,un|sp:it,,,,at|split:_,,,,_|spread:_,_|spr:ing,,,,ung|st:and,ood|st:eal,ole|st:ick,uck|st:ing,ung|st:ink,unk,,,unk|:stream,,,,|strew:_,,,,n|str:ike,uck,,iking|suit:_,ed,,ing|sw:are,,,,orn|sw:ear,ore|swe:ep,,,,pt|sw:im,am,,imming|sw:ing,ung|t:ake,ook|t:each,aught,eaches|t:ear,ore|t:ell,old|th:ink,ought|thrive:_,,,,d|t:ie,ied,,ying|undergo:_,,,,ne|underst:and,ood|upset:_,,,,_|wait:_,ed,,ing|w:ake,oke|w:ear,ore|w:eave,,,,oven|we:ep,,,,pt|w:in,on,,inning|w:ind,,,,ound|withdr:aw,ew|wr:ing,,,,ung|wr:ite,ote,,iting,itten\",\"plurals\":\"addend|um|a,alga|e,alumna|e,alumn|us|i,analys|is|es,antenna|e,appendi|x|ces,avocado|s,ax|is|es,bacill|us|i,barracks|,beau|x,bus|es,cact|us|i,chateau|x,child|ren,circus|es,clothes|,corp|us|ora,criteri|on|a,curricul|um|a,database|s,deer|,diagnos|is|es,echo|es,embargo|es,epoch|s,f|oot|eet,formula|e,fung|us|i,gen|us|era,g|oose|eese,halo|s,hippopotam|us|i,ind|ex|ices,larva|e,lea|f|ves,librett|o|i,loa|f|ves,m|an|en,matri|x|ces,memorand|um|a,modul|us|i,mosquito|es,m|ouse|ice,move|s,nebula|e,nucle|us|i,octop|us|i,op|us|era,ov|um|a,ox|en,parenthes|is|es,pe|rson|ople,phenomen|on|a,prognos|is|es,quiz|zes,radi|us|i,referend|um|a,rodeo|s,sex|es,shoe|s,sombrero|s,stimul|us|i,stomach|s,syllab|us|i,synops|is|es,tableau|x,thes|is|es,thie|f|ves,t|ooth|eeth,tornado|s,tuxedo|s,vertebra|e,zero|s\"}`","//list of inconsistent parts-of-speech\nmodule.exports = [\n  //top-level pos are all inconsistent\n  [\n    'Noun',\n    'Verb',\n    'Adjective',\n    'Adverb',\n    'Determiner',\n    'Conjunction',\n    'Preposition',\n    'QuestionWord',\n    'Expression',\n    'Url',\n    'PhoneNumber',\n    'Email',\n    'Emoji',\n  ],\n  //exlusive-nouns\n  ['Person', 'Organization', 'Value', 'Place', 'Actor', 'Demonym', 'Pronoun'],\n  //acronyms\n  ['Acronym', 'Pronoun', 'Actor', 'Unit', 'Address'],\n  ['Acronym', 'Plural'],\n  //things that can't be plural\n  ['Plural', 'Singular'],\n  //exlusive-people\n  ['MaleName', 'FemaleName'],\n  ['FirstName', 'LastName', 'Honorific'],\n  //adjectives\n  ['Comparative', 'Superlative'],\n  //values\n  ['Value', 'Verb', 'Adjective'],\n  ['Ordinal', 'Cardinal'],\n  ['TextValue', 'NumericValue'],\n  ['NiceNumber', 'TextValue'],\n  ['Ordinal', 'Currency'], //$5.50th\n  //verbs\n  ['PastTense', 'PresentTense', 'FutureTense'],\n  ['Pluperfect', 'Copula', 'Modal', 'Participle', 'Infinitive', 'Gerund', 'FuturePerfect', 'PerfectTense'],\n  ['Auxiliary', 'Noun', 'Value'],\n  //date\n  ['Month', 'WeekDay', 'Year', 'Duration', 'Holiday'],\n  ['Particle', 'Conjunction', 'Adverb', 'Preposition'],\n  ['Date', 'Verb', 'Adjective', 'Person'],\n  ['Date', 'Money', 'RomanNumeral', 'Fraction'],\n  //a/an -> 1\n  ['Value', 'Determiner'],\n  ['Url', 'Value', 'HashTag', 'PhoneNumber', 'Emoji'],\n  //roman numerals\n  ['RomanNumeral', 'Fraction', 'NiceNumber'],\n  ['RomanNumeral', 'Money', 'Acronym'],\n  //cases\n  ['UpperCase', 'TitleCase', 'CamelCase'],\n  //phrases\n  ['Verb', 'Noun', 'Adjective', 'Value'], //VerbPhrase',\n  //QuestionWord\n  ['QuestionWord', 'Verb'],\n  //acronyms\n  ['Acronym', 'Verb'],\n]\n","module.exports = {\n  Noun: {},\n  // - singular\n  Singular: {\n    isA: 'Noun',\n  },\n  //a specific thing that's capitalized\n  ProperNoun: {\n    isA: 'Noun',\n  },\n\n  // -- people\n  Person: {\n    isA: 'Singular',\n  },\n  FirstName: {\n    isA: 'Person',\n  },\n  MaleName: {\n    isA: 'FirstName',\n  },\n  FemaleName: {\n    isA: 'FirstName',\n  },\n  LastName: {\n    isA: 'Person',\n  },\n  Honorific: {\n    isA: 'Noun',\n  },\n  Place: {\n    isA: 'Singular',\n  },\n\n  // -- places\n  Country: {\n    isA: 'Place',\n  },\n  City: {\n    isA: 'Place',\n  },\n  Region: {\n    isA: 'Place',\n  },\n  Address: {\n    isA: 'Place',\n  },\n  Organization: {\n    isA: 'Singular',\n  },\n  SportsTeam: {\n    isA: 'Organization',\n  },\n  Company: {\n    isA: 'Organization',\n  },\n  School: {\n    isA: 'Organization',\n  },\n\n  // - plural\n  Plural: {\n    isA: 'Noun',\n  },\n  Uncountable: {\n    //(not plural or singular)\n    isA: 'Noun',\n  },\n  Pronoun: {\n    isA: 'Noun',\n  },\n  //a word for someone doing something -'plumber'\n  Actor: {\n    isA: 'Noun',\n  },\n  //a gerund-as-noun - 'swimming'\n  Activity: {\n    isA: 'Noun',\n  },\n  //'kilograms'\n  Unit: {\n    isA: 'Noun',\n  },\n  //'Canadians'\n  Demonym: {\n    isA: 'Noun',\n  },\n  //`john's`\n  Possessive: {\n    isA: 'Noun',\n  },\n}\n","module.exports = {\n  Verb: {\n    // isA: 'VerbPhrase',\n  },\n  PresentTense: {\n    isA: 'Verb',\n  },\n  Infinitive: {\n    isA: 'PresentTense',\n  },\n  Gerund: {\n    isA: 'PresentTense',\n  },\n  PastTense: {\n    isA: 'Verb',\n  },\n  PerfectTense: {\n    isA: 'Verb',\n  },\n  FuturePerfect: {\n    isA: 'Verb',\n  },\n  Pluperfect: {\n    isA: 'Verb',\n  },\n  Copula: {\n    isA: 'Verb',\n  },\n  Modal: {\n    isA: 'Verb',\n  },\n  Participle: {\n    isA: 'Verb',\n  },\n  Particle: {\n    isA: 'Verb',\n  },\n  PhrasalVerb: {\n    isA: 'Verb',\n  },\n}\n","module.exports = {\n  Value: {},\n  Ordinal: {\n    isA: 'Value',\n  },\n  Cardinal: {\n    isA: 'Value',\n  },\n  // Multiple: {\n  //   isA: 'Value',\n  // },\n  RomanNumeral: {\n    isA: 'Cardinal',\n  },\n  Fraction: {\n    isA: 'Value',\n  },\n  TextValue: {\n    isA: 'Value',\n  },\n  NumericValue: {\n    isA: 'Value',\n  },\n  NiceNumber: {\n    isA: 'Value',\n  },\n  Money: {\n    //isA: 'Cardinal'\n  },\n  Percent: {\n    isA: 'Value',\n  },\n}\n","module.exports = {\n  Date: {}, //not a noun, but usually is\n  Month: {\n    isA: 'Date',\n    also: 'Singular',\n  },\n  WeekDay: {\n    isA: 'Date',\n    also: 'Noun',\n  },\n  RelativeDay: {\n    isA: 'Date',\n  },\n  Year: {\n    isA: 'Date',\n  },\n  Duration: {\n    isA: 'Date',\n    also: 'Noun',\n  },\n  Time: {\n    isA: 'Date',\n    also: 'Noun',\n  },\n  Holiday: {\n    isA: 'Date',\n    also: 'Noun',\n  },\n}\n","module.exports = {\n  Adjective: {},\n  Comparable: {\n    isA: 'Adjective',\n  },\n  Comparative: {\n    isA: 'Adjective',\n  },\n  Superlative: {\n    isA: 'Adjective',\n  },\n\n  NumberRange: {\n    isA: 'Contraction',\n  },\n  Adverb: {},\n\n  Currency: {},\n  //glue\n  Determiner: {},\n  Conjunction: {},\n  Preposition: {},\n  QuestionWord: {},\n  RelativeProunoun: {\n    isA: 'Pronoun',\n  },\n  Expression: {},\n  Abbreviation: {},\n  Url: {},\n  PhoneNumber: {},\n  HashTag: {},\n  AtMention: {\n    isA: 'Noun',\n  },\n  Emoji: {},\n  Email: {},\n\n  //non-exclusive\n  Auxiliary: {},\n  Negative: {},\n  Contraction: {},\n\n  TitleCase: {},\n  CamelCase: {},\n  UpperCase: {},\n  Hyphenated: {},\n  Acronym: {},\n  ClauseEnd: {},\n\n  // Quotes\n  Quotation: {},\n  StartQuotation: {\n    isA: 'Quotation',\n  },\n  EndQuotation: {\n    isA: 'Quotation',\n  },\n  //parentheses\n  Parentheses: {},\n  EndBracket: {\n    isA: 'Parentheses',\n  },\n  StartBracket: {\n    isA: 'Parentheses',\n  },\n}\n","//add 'downward' tags (that immediately depend on this one)\nconst addDownword = function(tags) {\n  const keys = Object.keys(tags)\n  keys.forEach(k => {\n    tags[k].downward = []\n    //look for tags with this as parent\n    for (let i = 0; i < keys.length; i++) {\n      if (tags[keys[i]].isA && tags[keys[i]].isA === k) {\n        tags[k].downward.push(keys[i])\n      }\n    }\n  })\n}\nmodule.exports = addDownword\n","const conflicts = require('./conflicts')\nconst nouns = require('./tags/nouns')\nconst verbs = require('./tags/verbs')\nconst values = require('./tags/values')\nconst dates = require('./tags/dates')\nconst misc = require('./tags/misc')\nconst addDownward = require('./addDownward')\n\n//used for pretty-printing on the server-side\nconst colors = {\n  Noun: 'blue',\n  // NounPhrase: 'blue',\n\n  Verb: 'green',\n  Auxiliary: 'green',\n  Negative: 'green',\n  // VerbPhrase: 'green',\n\n  Date: 'red',\n  Value: 'red',\n\n  Adjective: 'magenta',\n\n  Preposition: 'cyan',\n  Conjunction: 'cyan',\n  Determiner: 'cyan',\n  Adverb: 'cyan',\n  // Condition: 'cyan',\n}\n\n//extend tagset with new tags\nconst addIn = function(obj, tags) {\n  Object.keys(obj).forEach(k => {\n    tags[k] = obj[k]\n  })\n}\n\n//add tags to remove when tagging this one\nconst addConflicts = function(tags) {\n  Object.keys(tags).forEach(k => {\n    tags[k].notA = {}\n    for (let i = 0; i < conflicts.length; i++) {\n      let arr = conflicts[i]\n      if (arr.indexOf(k) !== -1) {\n        arr = arr.filter(a => a !== k)\n        arr.forEach(e => {\n          tags[k].notA[e] = true\n        })\n      }\n    }\n    tags[k].notA = Object.keys(tags[k].notA)\n  })\n}\n\nconst addColors = function(tags) {\n  Object.keys(tags).forEach(k => {\n    if (colors[k]) {\n      tags[k].color = colors[k]\n      return\n    }\n    if (tags[k].isA && colors[tags[k].isA]) {\n      tags[k].color = colors[tags[k].isA]\n      return\n    }\n    if (tags[k].isA && tags[tags[k].isA].color) {\n      tags[k].color = tags[tags[k].isA].color\n    }\n  })\n}\n\nconst build = () => {\n  let tags = {}\n  addIn(nouns, tags)\n  addIn(verbs, tags)\n  addIn(values, tags)\n  addIn(dates, tags)\n  addIn(misc, tags)\n  //downstream\n  addDownward(tags)\n  //add enemies\n  addConflicts(tags)\n  //for nice-logging\n  addColors(tags)\n  return tags\n}\nmodule.exports = build()\n","\"use strict\";const BASE=36,seq=\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\",cache=seq.split(\"\").reduce(function(n,o,e){return n[o]=e,n},{}),toAlphaCode=function(n){if(void 0!==seq[n])return seq[n];let o=1,e=36,t=\"\";for(;n>=e;n-=e,o++,e*=36);for(;o--;){const o=n%36;t=String.fromCharCode((o<10?48:55)+o)+t,n=(n-o)/36}return t},fromAlphaCode=function(n){if(void 0!==cache[n])return cache[n];let o=0,e=1,t=36,r=1;for(;e<n.length;o+=t,e++,t*=36);for(let e=n.length-1;e>=0;e--,r*=36){let t=n.charCodeAt(e)-48;t>10&&(t-=7),o+=t*r}return o};var encoding={toAlphaCode:toAlphaCode,fromAlphaCode:fromAlphaCode},symbols=function(n){const o=new RegExp(\"([0-9A-Z]+):([0-9A-Z]+)\");for(let e=0;e<n.nodes.length;e++){const t=o.exec(n.nodes[e]);if(!t){n.symCount=e;break}n.syms[encoding.fromAlphaCode(t[1])]=encoding.fromAlphaCode(t[2])}n.nodes=n.nodes.slice(n.symCount,n.nodes.length)};const indexFromRef=function(n,o,e){const t=encoding.fromAlphaCode(o);return t<n.symCount?n.syms[t]:e+t+1-n.symCount},toArray=function(n){const o=[],e=(t,r)=>{let s=n.nodes[t];\"!\"===s[0]&&(o.push(r),s=s.slice(1));const c=s.split(/([A-Z0-9,]+)/g);for(let s=0;s<c.length;s+=2){const u=c[s],i=c[s+1];if(!u)continue;const l=r+u;if(\",\"===i||void 0===i){o.push(l);continue}const f=indexFromRef(n,i,t);e(f,l)}};return e(0,\"\"),o},unpack=function(n){const o={nodes:n.split(\";\"),syms:[],symCount:0};return n.match(\":\")&&symbols(o),toArray(o)};var unpack_1=unpack,unpack_1$1=function(n){const o=n.split(\"|\").reduce((n,o)=>{const e=o.split(\"¦\");return n[e[0]]=e[1],n},{}),e={};return Object.keys(o).forEach(function(n){const t=unpack_1(o[n]);\"true\"===n&&(n=!0);for(let o=0;o<t.length;o++){const r=t[o];!0===e.hasOwnProperty(r)?!1===Array.isArray(e[r])?e[r]=[e[r],n]:e[r].push(n):e[r]=n}}),e};module.exports=unpack_1$1;\n","/** patterns for turning 'bus' to 'buses'*/\nconst suffixes = {\n  a: [[/(antenn|formul|nebul|vertebr|vit)a$/i, '$1ae'], [/([ti])a$/i, '$1a']],\n\n  e: [\n    [/(kn|l|w)ife$/i, '$1ives'],\n    [/(hive)$/i, '$1s'],\n    [/([m|l])ouse$/i, '$1ice'],\n    [/([m|l])ice$/i, '$1ice'],\n  ],\n\n  f: [\n    [/^(dwar|handkerchie|hoo|scar|whar)f$/i, '$1ves'],\n    [/^((?:ca|e|ha|(?:our|them|your)?se|she|wo)l|lea|loa|shea|thie)f$/i, '$1ves'],\n  ],\n\n  i: [[/(octop|vir)i$/i, '$1i']],\n\n  m: [[/([ti])um$/i, '$1a']],\n\n  n: [[/^(oxen)$/i, '$1']],\n\n  o: [[/(al|ad|at|er|et|ed|ad)o$/i, '$1oes']],\n\n  s: [\n    [/(ax|test)is$/i, '$1es'],\n    [/(alias|status)$/i, '$1es'],\n    [/sis$/i, 'ses'],\n    [/(bu)s$/i, '$1ses'],\n    [/(sis)$/i, 'ses'],\n    [/^(?!talis|.*hu)(.*)man$/i, '$1men'],\n    [/(octop|vir|radi|nucle|fung|cact|stimul)us$/i, '$1i'],\n  ],\n\n  x: [[/(matr|vert|ind|cort)(ix|ex)$/i, '$1ices'], [/^(ox)$/i, '$1en']],\n\n  y: [[/([^aeiouy]|qu)y$/i, '$1ies']],\n\n  z: [[/(quiz)$/i, '$1zes']],\n}\n\nmodule.exports = suffixes\n","const suffixes = require('./01-suffixes')\nconst addE = /(x|ch|sh|s|z)$/\n\nconst trySuffix = function(str) {\n  let c = str[str.length - 1]\n  if (suffixes.hasOwnProperty(c) === true) {\n    for (let i = 0; i < suffixes[c].length; i += 1) {\n      let reg = suffixes[c][i][0]\n      if (reg.test(str) === true) {\n        return str.replace(reg, suffixes[c][i][1])\n      }\n    }\n  }\n  return null\n}\n\n/** Turn a singular noun into a plural\n * assume the given string is singular\n */\nconst pluralize = function(str = '') {\n  //we have some rules to try-out\n  let plural = trySuffix(str)\n  if (plural !== null) {\n    return plural\n  }\n  //like 'church'\n  if (addE.test(str)) {\n    return str + 'es'\n  }\n  // ¯\\_(ツ)_/¯\n  return str + 's'\n}\nmodule.exports = pluralize\n","const endsWith = {\n  b: [\n    {\n      reg: /([^aeiou][aeiou])b$/i,\n      repl: {\n        pr: '$1bs',\n        pa: '$1bbed',\n        gr: '$1bbing',\n      },\n    },\n  ],\n  d: [\n    {\n      reg: /(end)$/i,\n      repl: {\n        pr: '$1s',\n        pa: 'ent',\n        gr: '$1ing',\n        ar: '$1er',\n      },\n    },\n    {\n      reg: /(eed)$/i,\n      repl: {\n        pr: '$1s',\n        pa: '$1ed',\n        gr: '$1ing',\n        ar: '$1er',\n      },\n    },\n    {\n      reg: /(ed)$/i,\n      repl: {\n        pr: '$1s',\n        pa: '$1ded',\n        ar: '$1der',\n        gr: '$1ding',\n      },\n    },\n    {\n      reg: /([^aeiou][ou])d$/i,\n      repl: {\n        pr: '$1ds',\n        pa: '$1dded',\n        gr: '$1dding',\n      },\n    },\n  ],\n  e: [\n    {\n      reg: /(eave)$/i,\n      repl: {\n        pr: '$1s',\n        pa: '$1d',\n        gr: 'eaving',\n        ar: '$1r',\n      },\n    },\n    {\n      reg: /(ide)$/i,\n      repl: {\n        pr: '$1s',\n        pa: 'ode',\n        gr: 'iding',\n        ar: 'ider',\n      },\n    },\n    {\n      reg: /(ake)$/i,\n      repl: {\n        pr: '$1s',\n        pa: 'ook',\n        gr: 'aking',\n        ar: '$1r',\n      },\n    },\n    {\n      reg: /(a[tg]|i[zn]|ur|nc|gl|is)e$/i,\n      repl: {\n        pr: '$1es',\n        pa: '$1ed',\n        gr: '$1ing',\n        prt: '$1en',\n      },\n    },\n    {\n      reg: /([bd]l)e$/i,\n      repl: {\n        pr: '$1es',\n        pa: '$1ed',\n        gr: '$1ing',\n      },\n    },\n    {\n      reg: /(om)e$/i,\n      repl: {\n        pr: '$1es',\n        pa: 'ame',\n        gr: '$1ing',\n      },\n    },\n  ],\n\n  g: [\n    {\n      reg: /([^aeiou][ou])g$/i,\n      repl: {\n        pr: '$1gs',\n        pa: '$1gged',\n        gr: '$1gging',\n      },\n    },\n  ],\n  h: [\n    {\n      reg: /(..)([cs]h)$/i,\n      repl: {\n        pr: '$1$2es',\n        pa: '$1$2ed',\n        gr: '$1$2ing',\n      },\n    },\n  ],\n  k: [\n    {\n      reg: /(ink)$/i,\n      repl: {\n        pr: '$1s',\n        pa: 'unk',\n        gr: '$1ing',\n        ar: '$1er',\n      },\n    },\n  ],\n\n  m: [\n    {\n      reg: /([^aeiou][aeiou])m$/i,\n      repl: {\n        pr: '$1ms',\n        pa: '$1mmed',\n        gr: '$1mming',\n      },\n    },\n  ],\n\n  n: [\n    {\n      reg: /(en)$/i,\n      repl: {\n        pr: '$1s',\n        pa: '$1ed',\n        gr: '$1ing',\n      },\n    },\n  ],\n  p: [\n    {\n      reg: /(e)(ep)$/i,\n      repl: {\n        pr: '$1$2s',\n        pa: '$1pt',\n        gr: '$1$2ing',\n        ar: '$1$2er',\n      },\n    },\n    {\n      reg: /([^aeiou][aeiou])p$/i,\n      repl: {\n        pr: '$1ps',\n        pa: '$1pped',\n        gr: '$1pping',\n      },\n    },\n    {\n      reg: /([aeiu])p$/i,\n      repl: {\n        pr: '$1ps',\n        pa: '$1p',\n        gr: '$1pping',\n      },\n    },\n  ],\n\n  r: [\n    {\n      reg: /([td]er)$/i,\n      repl: {\n        pr: '$1s',\n        pa: '$1ed',\n        gr: '$1ing',\n      },\n    },\n    {\n      reg: /(er)$/i,\n      repl: {\n        pr: '$1s',\n        pa: '$1ed',\n        gr: '$1ing',\n      },\n    },\n  ],\n  s: [\n    {\n      reg: /(ish|tch|ess)$/i,\n      repl: {\n        pr: '$1es',\n        pa: '$1ed',\n        gr: '$1ing',\n      },\n    },\n  ],\n\n  t: [\n    {\n      reg: /(ion|end|e[nc]t)$/i,\n      repl: {\n        pr: '$1s',\n        pa: '$1ed',\n        gr: '$1ing',\n      },\n    },\n    {\n      reg: /(.eat)$/i,\n      repl: {\n        pr: '$1s',\n        pa: '$1ed',\n        gr: '$1ing',\n      },\n    },\n    {\n      reg: /([aeiu])t$/i,\n      repl: {\n        pr: '$1ts',\n        pa: '$1t',\n        gr: '$1tting',\n      },\n    },\n    {\n      reg: /([^aeiou][aeiou])t$/i,\n      repl: {\n        pr: '$1ts',\n        pa: '$1tted',\n        gr: '$1tting',\n      },\n    },\n  ],\n\n  w: [\n    {\n      reg: /(..)(ow)$/i,\n      repl: {\n        pr: '$1$2s',\n        pa: '$1ew',\n        gr: '$1$2ing',\n        prt: '$1$2n',\n      },\n    },\n  ],\n  y: [\n    {\n      reg: /([i|f|rr])y$/i,\n      repl: {\n        pr: '$1ies',\n        pa: '$1ied',\n        gr: '$1ying',\n      },\n    },\n  ],\n\n  z: [\n    {\n      reg: /([aeiou]zz)$/i,\n      repl: {\n        pr: '$1es',\n        pa: '$1ed',\n        gr: '$1ing',\n      },\n    },\n  ],\n}\n\nmodule.exports = endsWith\n","const suffixes = require('./suffixes')\nconst posMap = {\n  pr: 'PresentTense',\n  pa: 'PastTense',\n  gr: 'Gerund',\n  prt: 'Participle',\n  ar: 'Actor',\n}\n\nconst doTransform = function(str, obj) {\n  let found = {}\n  let keys = Object.keys(obj.repl)\n  for (let i = 0; i < keys.length; i += 1) {\n    let pos = keys[i]\n    found[posMap[pos]] = str.replace(obj.reg, obj.repl[pos])\n  }\n  return found\n}\n\n//look at the end of the word for clues\nconst checkSuffix = function(str = '') {\n  let c = str[str.length - 1]\n  if (suffixes.hasOwnProperty(c) === true) {\n    for (let r = 0; r < suffixes[c].length; r += 1) {\n      const reg = suffixes[c][r].reg\n      if (reg.test(str) === true) {\n        return doTransform(str, suffixes[c][r])\n      }\n    }\n  }\n  return {}\n}\nmodule.exports = checkSuffix\n","//non-specifc, 'hail-mary' transforms from infinitive, into other forms\nconst hasY = /[bcdfghjklmnpqrstvwxz]y$/\n\nconst generic = {\n  Gerund: inf => {\n    if (inf.charAt(inf.length - 1) === 'e') {\n      return inf.replace(/e$/, 'ing')\n    }\n    return inf + 'ing'\n  },\n\n  PresentTense: inf => {\n    if (inf.charAt(inf.length - 1) === 's') {\n      return inf + 'es'\n    }\n    if (hasY.test(inf) === true) {\n      return inf.slice(0, -1) + 'ies'\n    }\n    return inf + 's'\n  },\n\n  PastTense: inf => {\n    if (inf.charAt(inf.length - 1) === 'e') {\n      return inf + 'd'\n    }\n    if (inf.substr(-2) === 'ed') {\n      return inf\n    }\n    if (hasY.test(inf) === true) {\n      return inf.slice(0, -1) + 'ied'\n    }\n    return inf + 'ed'\n  },\n}\n\nmodule.exports = generic\n","const checkSuffix = require('./01-suffixes')\nconst genericFill = require('./02-generic')\n\n//we run this on every verb in the lexicon, so please keep it fast\n//we assume the input word is a proper infinitive\nconst fastConjucate = function(str = '') {\n  let found = checkSuffix(str)\n  //'buzzing'\n  if (found.Gerund === undefined) {\n    found.Gerund = genericFill.Gerund(str)\n  }\n  //'buzzed'\n  if (found.PastTense === undefined) {\n    found.PastTense = genericFill.PastTense(str)\n  }\n  //'buzzes'\n  if (found.PresentTense === undefined) {\n    found.PresentTense = genericFill.PresentTense(str)\n  }\n  return found\n}\nmodule.exports = fastConjucate\n","const inflect = require('./transforms/inflect')\nconst conjugate = require('./transforms/conjugate')\n\n//takes a basic wordlist and expands it into more words, using science\nconst doOneWord = function(str, pos, world) {\n  //sort words into singular/compound\n  if (str.indexOf(' ') === -1) {\n    world.lexicon[str] = world.lexicon[str] || pos\n  } else {\n    let w = str.split(' ')[0]\n    world.hasCompound[w] = true //cache for quick-lookups\n    world.compounds[str] = pos\n  }\n  //pluralize singular nouns\n  if (pos === 'Singular') {\n    let plural = inflect(str)\n    doOneWord(plural, 'Plural', world)\n    return\n  }\n  if (pos === 'Infinitive') {\n    let conj = conjugate(str)\n    doOneWord(conj.Gerund, 'Gerund', world)\n    doOneWord(conj.PastTense, 'PastTense', world)\n    doOneWord(conj.PresentTense, 'PresentTense', world)\n    return\n  }\n}\n\n//one does not simply add a world to the lexicon..\nconst addWords = function(world, obj) {\n  const words = Object.keys(obj)\n  for (let i = 0; i < words.length; i += 1) {\n    doOneWord(words[i], obj[words[i]], world)\n  }\n}\nmodule.exports = addWords\n","const conjugate = require('./transforms/conjugate')\n//supported verb forms:\nconst forms = [null, 'PastTense', 'PresentTense', 'Gerund', 'Participle']\n\n//simply put these words in our lexicon\nconst addWords = function(obj, lex) {\n  let keys = Object.keys(obj)\n  for (let i = 0; i < keys.length; i += 1) {\n    let k = keys[i]\n    //add infinitive\n    lex[k] = lex[k] || 'Infinitive'\n    //add other forms\n    for (let f = 1; f < forms.length; f += 1) {\n      if (obj[k][forms[f]] !== undefined && lex[obj[k][forms[f]]] === undefined) {\n        lex[obj[k][forms[f]]] = forms[f]\n      }\n    }\n  }\n}\n\n//unpack this ad-hoc compression format for our verbs\nconst unpackVerbs = function(str) {\n  let verbs = str.split('|')\n  return verbs.reduce((h, s) => {\n    let parts = s.split(':')\n    let prefix = parts[0]\n    let ends = parts[1].split(',')\n    //grab the infinitive\n    let inf = prefix + ends[0]\n    if (ends[0] === '_') {\n      inf = prefix\n    }\n    h[inf] = {}\n    //we did the infinitive, now do the rest:\n    for (let i = 1; i < forms.length; i++) {\n      let word = parts[0] + ends[i]\n      if (ends[i] === '_') {\n        word = parts[0]\n      }\n      if (ends[i]) {\n        h[inf][forms[i]] = word\n      }\n    }\n    return h\n  }, {})\n}\n\n// automatically conjugate the non-irregular verbs\nconst bulkUp = function(conjugations) {\n  const keys = Object.keys(conjugations)\n  for (let i = 0; i < keys.length; i += 1) {\n    let inf = keys[i]\n    let conj = conjugations[inf]\n    //do we need to add the rest ourselves?\n    if (conj.PastTense === undefined || conj.PresentTense === undefined || conj.Gerund === undefined) {\n      //this is a little redundant, when we have some forms already\n      let auto = conjugate(inf)\n      conjugations[inf] = Object.assign(auto, conj)\n    }\n  }\n  return conjugations\n}\n\n//bulk-up our irregular verb list\nconst addVerbs = function(str, lexicon) {\n  let conjugations = unpackVerbs(str)\n  //ensure all the conjugations are there..\n  conjugations = bulkUp(conjugations)\n  //add them all to the lexicon\n  addWords(conjugations, lexicon)\n  return conjugations\n}\nmodule.exports = addVerbs\n","//put them in our lexicon\nconst addWords = function(plurals, lex) {\n  let keys = Object.keys(plurals)\n  for (let i = 0; i < keys.length; i += 1) {\n    let k = keys[i]\n    lex[k] = 'Singular'\n    lex[plurals[k]] = 'Plural'\n  }\n}\n\n//pull-apart our ad-hoc compression format for irregular plurals\nconst unpackPlurals = function(str, lexicon) {\n  const plurals = str.split(/,/g).reduce((h, s) => {\n    let arr = s.split(/\\|/g)\n    if (arr.length === 3) {\n      h[arr[0] + arr[1]] = arr[0] + arr[2]\n    } else if (arr.length === 2) {\n      h[arr[0]] = arr[0] + arr[1]\n    } else {\n      h[arr[0]] = arr[0]\n    }\n    return h\n  }, {})\n  //add them both to our lexicon..\n  addWords(plurals, lexicon)\n  return plurals\n}\nmodule.exports = unpackPlurals\n","//add 'downward' tags (that immediately depend on this one)\nconst addDownword = require('./tags/addDownward')\n\n//extend our known tagset with these new ones\nconst addTags = function(tags) {\n  let out = {}\n  Object.keys(tags).forEach(tag => {\n    let obj = tags[tag]\n    obj.notA = obj.notA || []\n    obj.downward = obj.downward || []\n    out.tags[tag] = obj\n  })\n  addDownword(out.tags)\n  return out\n}\nmodule.exports = addTags\n","//words that can't be compressed, for whatever reason\nmodule.exports = {\n  // numbers\n  '20th century fox': 'Organization',\n  '3m': 'Organization',\n  '7 eleven': 'Organization',\n  '7-eleven': 'Organization',\n  g8: 'Organization',\n  'motel 6': 'Organization',\n  vh1: 'Organization',\n  q1: 'Date',\n  q2: 'Date',\n  q3: 'Date',\n  q4: 'Date',\n\n  //misc\n  records: 'Plural',\n  '&': 'Conjunction',\n  was: ['Copula', 'PastTense'],\n  is: ['Copula', 'PresentTense'],\n\n  //pronouns\n  i: ['Pronoun', 'Singular'],\n  he: ['Pronoun', 'Singular'],\n  she: ['Pronoun', 'Singular'],\n  it: ['Pronoun', 'Singular'],\n  // 'me',\n  // 'him',\n  // 'her',\n  they: ['Pronoun', 'Plural'],\n  we: ['Pronoun', 'Plural'],\n  // 'them',\n  // 'ourselves',\n  // 'us',\n}\n","//nouns that also signal the title of an unknown organization\n//todo remove/normalize plural forms\nconst orgWords = [\n  'academy',\n  'administration',\n  'agence',\n  'agences',\n  'agencies',\n  'agency',\n  'airlines',\n  'airways',\n  'army',\n  'assoc',\n  'associates',\n  'association',\n  'assurance',\n  'authority',\n  'autorite',\n  'aviation',\n  'bank',\n  'banque',\n  'board',\n  'boys',\n  'brands',\n  'brewery',\n  'brotherhood',\n  'brothers',\n  'building society',\n  'bureau',\n  'cafe',\n  'caisse',\n  'capital',\n  'care',\n  'cathedral',\n  'center',\n  'central bank',\n  'centre',\n  'chemicals',\n  'choir',\n  'chronicle',\n  'church',\n  'circus',\n  'clinic',\n  'clinique',\n  'club',\n  'co',\n  'coalition',\n  'coffee',\n  'collective',\n  'college',\n  'commission',\n  'committee',\n  'communications',\n  'community',\n  'company',\n  'comprehensive',\n  'computers',\n  'confederation',\n  'conference',\n  'conseil',\n  'consulting',\n  'containers',\n  'corporation',\n  'corps',\n  'corp',\n  'council',\n  'crew',\n  'daily news',\n  'data',\n  'departement',\n  'department',\n  'department store',\n  'departments',\n  'design',\n  'development',\n  'directorate',\n  'division',\n  'drilling',\n  'education',\n  'eglise',\n  'electric',\n  'electricity',\n  'energy',\n  'ensemble',\n  'enterprise',\n  'enterprises',\n  'entertainment',\n  'estate',\n  'etat',\n  'evening news',\n  'faculty',\n  'federation',\n  'financial',\n  'fm',\n  'foundation',\n  'fund',\n  'gas',\n  'gazette',\n  'girls',\n  'government',\n  'group',\n  'guild',\n  'health authority',\n  'herald',\n  'holdings',\n  'hospital',\n  'hotel',\n  'hotels',\n  'inc',\n  'industries',\n  'institut',\n  'institute',\n  'institute of technology',\n  'institutes',\n  'insurance',\n  'international',\n  'interstate',\n  'investment',\n  'investments',\n  'investors',\n  'journal',\n  'laboratory',\n  'labs',\n  // 'law',\n  'liberation army',\n  'limited',\n  'local authority',\n  'local health authority',\n  'machines',\n  'magazine',\n  'management',\n  'marine',\n  'marketing',\n  'markets',\n  'media',\n  'memorial',\n  'mercantile exchange',\n  'ministere',\n  'ministry',\n  'military',\n  'mobile',\n  'motor',\n  'motors',\n  'musee',\n  'museum',\n  // 'network',\n  'news',\n  'news service',\n  'observatory',\n  'office',\n  'oil',\n  'optical',\n  'orchestra',\n  'organization',\n  'partners',\n  'partnership',\n  // 'party',\n  \"people's party\",\n  'petrol',\n  'petroleum',\n  'pharmacare',\n  'pharmaceutical',\n  'pharmaceuticals',\n  'pizza',\n  'plc',\n  'police',\n  'polytechnic',\n  'post',\n  'power',\n  'press',\n  'productions',\n  'quartet',\n  'radio',\n  'regional authority',\n  'regional health authority',\n  'reserve',\n  'resources',\n  'restaurant',\n  'restaurants',\n  'savings',\n  'school',\n  'securities',\n  'service',\n  'services',\n  'social club',\n  'societe',\n  'society',\n  'sons',\n  'standard',\n  'state police',\n  'state university',\n  'stock exchange',\n  'subcommittee',\n  'syndicat',\n  'systems',\n  'telecommunications',\n  'telegraph',\n  'television',\n  'times',\n  'tribunal',\n  'tv',\n  'union',\n  'university',\n  'utilities',\n  'workers',\n]\n\nmodule.exports = orgWords.reduce(function(h, str) {\n  h[str] = 'Noun'\n  return h\n}, {})\n","// here, we grab things from around the repo.\n// these are words that aren't packed with efrt, in ../_data.js\n// (for whatever reasons)\n\n//words with numbers\nconst misc = require('./misc')\n\n//period-abbreviations, like 'blvd'\nconst abbreviations = require('../../01-tokenizer/lib/abbreviations')\n\n//organization forms, like 'academy'\nconst orgWords = require('../../02-tagger/04-inference/data/orgWords')\n\n//irregular adjective conjugations\n// const adjectives = require('../../01-doc/selections/adjectives/irregulars').lexicon;\n\nconst result = Object.assign({}, misc, abbreviations, orgWords)\nmodule.exports = result\n","const defaultData = require('./_data')\nconst defaultTags = require('./tags')\nconst efrt = require('efrt-unpack')\nconst addWords = require('./01-addWords')\nconst addConjugations = require('./02-conjugations')\nconst addPlurals = require('./03-plurals')\nconst addTags = require('./04-addTags')\n\nlet startLexicon = require('./misc')\n\nlet isVerbose = false\n\n/** all configurable linguistic data */\nclass World {\n  constructor() {\n    this.lexicon = startLexicon\n    this.plurals = {}\n    this.conjugations = {}\n    this.hasCompound = {}\n    this.compounds = {}\n    this.tags = Object.assign({}, defaultTags)\n    this.plugin(defaultData)\n  }\n  /** more logs for debugging */\n  verbose(bool) {\n    isVerbose = bool\n    return this\n  }\n  isVerbose() {\n    return isVerbose\n  }\n\n  /** augment our lingustic data with new data */\n  plugin(x) {\n    let obj = x\n    if (typeof x === 'string') {\n      obj = JSON.parse(x)\n    }\n    if (obj.words) {\n      let words = efrt(obj.words)\n      addWords(this, words)\n    }\n    if (obj.plurals) {\n      let plurals = addPlurals(obj.plurals, this.lexicon)\n      this.plurals = Object.assign(this.plurals, plurals)\n    }\n    if (obj.conjugations) {\n      let conjugations = addConjugations(obj.conjugations, this.lexicon)\n      this.conjugations = Object.assign(this.conjugations, conjugations) //merge this one properly\n    }\n    if (obj.tags) {\n      let tags = addTags(obj.tags)\n      this.tags = Object.assign(this.tags, tags)\n    }\n  }\n  /** helper method for logging + debugging */\n  stats() {\n    return {\n      words: Object.keys(this.lexicon).length,\n      plurals: Object.keys(this.plurals).length,\n      conjugations: Object.keys(this.conjugations).length,\n      compounds: Object.keys(this.compounds).length,\n    }\n  }\n}\n\n//  ¯\\_(:/)_/¯\nconst clone = function(obj) {\n  return JSON.parse(JSON.stringify(obj))\n}\n\n/** produce a deep-copy of all lingustic data */\nWorld.prototype.clone = function() {\n  let w2 = new World()\n  //who really knows about this one:\n  w2.lexicon = clone(this.lexicon)\n  w2.plurals = clone(this.plurals)\n  w2.conjugations = clone(this.conjugations)\n  w2.tags = clone(this.tags)\n  return w2\n}\nmodule.exports = World\n","/** apply a tag, or tags to all terms */\nconst tagTerms = function(tag, doc, safe, reason) {\n  let tagList = []\n  if (typeof tag === 'string') {\n    tagList = tag.split(' ')\n  }\n  //do indepenent tags for each term:\n  doc.list.forEach(p => {\n    let terms = p.terms()\n    // tagSafe - apply only to fitting terms\n    if (safe === true) {\n      terms = terms.filter(t => t.canBe(tag, doc.world))\n    }\n    terms.forEach((t, i) => {\n      //fancy version:\n      if (tagList.length > 1) {\n        t.tag(tagList[i], reason, doc.world)\n      } else {\n        //non-fancy version (same tag for all terms)\n        t.tag(tag, reason, doc.world)\n      }\n    })\n  })\n  return\n}\nmodule.exports = tagTerms\n","const setTag = require('./_tag')\n\n/** Give all terms the given tag */\nexports.tag = function(tag, why) {\n  setTag(tag, this, false, why)\n  return this\n}\n\n/** Only apply tag to terms if it is consistent with current tags */\nexports.tagSafe = function(tag, why) {\n  setTag(tag, this, true, why)\n  return this\n}\n\n/** Remove this term from the given terms */\nexports.untag = function(tag, why) {\n  this.list.forEach(p => {\n    p.terms().forEach(t => t.unTag(tag, why, this.world))\n  })\n  return this\n}\n\n/** turn on logging for decision-debugging */\nexports.verbose = function(bool) {\n  if (bool === undefined) {\n    bool = true\n  }\n  this.world.verbose = bool\n}\n\n/** create a Doc from the first Term of each phrase */\nexports.term = function(n) {\n  let list = this.list.map(p => {\n    let term = p.terms(n)\n    return p.buildFrom(term.id, 1, this.pool())\n  })\n  return this.buildFrom(list)\n}\n\n/** create a Doc from the first Term of each phrase */\nexports.firstTerm = function() {\n  let list = this.list.map(p => {\n    let term = p.terms(0)\n    return p.buildFrom([term])\n  })\n  return this.buildFrom(list)\n}\n\n/** create a Doc from the last Term of each phrase */\nexports.lastTerm = function() {\n  let list = this.list.map(p => {\n    let term = p.lastTerm()\n    return p.buildFrom([term])\n  })\n  return this.buildFrom(list)\n}\n","const eachTerm = function(doc, fn) {\n  let world = doc.world\n  doc.list.forEach(p => {\n    p.terms().forEach(t => t[fn](world))\n  })\n  return doc\n}\nconst eachPhrase = function(doc, fn) {\n  doc.list = doc.list.map(p => p[fn]())\n  return doc\n}\n\n/** turn every letter of every term to lower-cse */\nexports.toLowerCase = function() {\n  return eachTerm(this, 'toLowerCase')\n}\n\n/** turn every letter of every term to upper case */\nexports.toUpperCase = function() {\n  return eachTerm(this, 'toUpperCase')\n}\n\n/** upper-case the first letter of each term */\nexports.toTitleCase = function() {\n  return eachTerm(this, 'toTitleCase')\n}\n/** remove start and end whitespace */\nexports.trim = function() {\n  return eachPhrase(this, 'trim')\n}\n\n/**  */\nexports.wordCount = function() {\n  return this.terms().length //TODO: remove implicit terms\n}\n/**  */\nexports.firstTerm = function() {\n  return this.match('^.')\n}\n/**  */\nexports.lastTerm = function() {\n  return this.match('.$')\n}\n/** use only the first result(s) */\nexports.first = function(n) {\n  if (n === undefined) {\n    return this.get(n)\n  }\n  return this.slice(0, n)\n}\n/** use only the last result(s) */\nexports.last = function(n) {\n  if (n === undefined) {\n    return this.get(this.list.length - 1)\n  }\n  let end = this.list.length\n  return this.slice(end - n, end)\n}\n\n/** grab a subset of the results*/\nexports.slice = function(start, end) {\n  let list = this.list.slice(start, end)\n  return this.buildFrom(list)\n}\n/** use only the nth result*/\nexports.get = function(n) {\n  //return an empty result\n  if ((!n && n !== 0) || !this.list[n]) {\n    return this.buildFrom([])\n  }\n  let list = [this.list[n]]\n  return this.buildFrom(list)\n}\n\n/** sample a subset of the results */\nexports.random = function(n) {\n  if (!this.found) {\n    return this\n  }\n  let r = Math.floor(Math.random() * this.list.length)\n  if (n === undefined) {\n    let list = [this.list[r]]\n    return this.buildFrom(list)\n  }\n  //prevent it from going over the end\n  if (r + n > this.length) {\n    r = this.length - n\n    r = r < 0 ? 0 : r\n  }\n  return this.slice(r, r + n)\n}\n\n/** remove whitespace and title-case each term */\nexports.toCamelCase = function() {\n  this.toTitleCase()\n  this.list.forEach(p => {\n    //remove whitespace\n    p.terms().forEach((t, i) => {\n      if (i !== 0) {\n        t.preText = ''\n      }\n      t.postText = ''\n    })\n  })\n  this.tag('#CamelCase', 'toCamelCase')\n  return this\n}\n\n/** return a flat array of term objects */\nexports.termList = function() {\n  return this.list.reduce((arr, p) => {\n    let terms = p.terms()\n    arr = arr.concat(terms)\n    return arr\n  }, [])\n}\n","const build = require('../../01-tokenizer')\n\n/** add these new terms to the front*/\nexports.prepend = function(str) {\n  let phrase = build.fromText(str, this.pool())[0] //assume it's one sentence, for now\n  this.list.forEach(p => {\n    p.prepend(phrase, this)\n  })\n  return this\n}\n\n/** add these new terms to the end*/\nexports.append = function(str) {\n  let phrase = build.fromText(str, this.pool())[0] //assume it's one sentence, for now\n  this.list.forEach(p => {\n    p.append(phrase, this)\n  })\n  return this\n}\n\n/** add these new things to the end*/\nexports.concat = function() {\n  let list = this.list.slice(0)\n  //repeat for any number of params\n  for (let i = 0; i < arguments.length; i++) {\n    let arg = arguments[i]\n    //support a fresh string\n    if (typeof arg === 'string') {\n      let arr = build.fromText(arg)\n      //TODO: phrase.tagger()?\n      list = list.concat(arr)\n    } else if (arg.isA === 'Doc') {\n      list = list.concat(arg.list)\n    } else if (arg.isA === 'Phrase') {\n      list.push(arg)\n    }\n  }\n  return this.buildFrom(list)\n}\n","/* javascript array loop-wrappers */\nexports.map = function(fn) {\n  return this.list.map((ts, i) => {\n    let doc = this.buildFrom([ts])\n    return fn(doc, i)\n  })\n}\nexports.forEach = function(fn) {\n  this.list.forEach((ts, i) => {\n    let doc = this.buildFrom([ts])\n    fn(doc, i)\n  })\n  return this\n}\nexports.filter = function(fn) {\n  let list = this.list.filter((ts, i) => {\n    let doc = this.buildFrom([ts])\n    return fn(doc, i)\n  })\n  return new Text(list, this.world)\n}\nexports.reduce = function(fn, h) {\n  return this.list.reduce((_h, ts) => {\n    let doc = this.buildFrom([ts])\n    return fn(_h, doc)\n  }, h)\n}\nexports.find = function(fn) {\n  for (let i = 0; i < this.list.length; i++) {\n    let ts = this.list[i]\n    let doc = this.buildFrom([ts])\n    if (fn(doc)) {\n      return doc\n    }\n  }\n  return undefined\n}\n","//list of inconsistent parts-of-speech\nmodule.exports = [\n  //top-level pos are all inconsistent\n  [\n    'Noun',\n    'Verb',\n    'Adjective',\n    'Adverb',\n    'Determiner',\n    'Conjunction',\n    'Preposition',\n    'QuestionWord',\n    'Expression',\n    'Url',\n    'PhoneNumber',\n    'Email',\n    'Emoji',\n  ],\n  //exlusive-nouns\n  ['Person', 'Organization', 'Value', 'Place', 'Actor', 'Demonym', 'Pronoun'],\n  //acronyms\n  ['Acronym', 'Pronoun', 'Actor', 'Unit', 'Address'],\n  ['Acronym', 'Plural'],\n  //things that can't be plural\n  ['Plural', 'Singular'],\n  //exlusive-people\n  ['MaleName', 'FemaleName'],\n  ['FirstName', 'LastName', 'Honorific'],\n  //adjectives\n  ['Comparative', 'Superlative'],\n  //values\n  ['Value', 'Verb', 'Adjective'],\n  ['Ordinal', 'Cardinal'],\n  ['TextValue', 'NumericValue'],\n  ['NiceNumber', 'TextValue'],\n  ['Ordinal', 'Currency'], //$5.50th\n  //verbs\n  ['PastTense', 'PresentTense', 'FutureTense'],\n  ['Pluperfect', 'Copula', 'Modal', 'Participle', 'Infinitive', 'Gerund', 'FuturePerfect', 'PerfectTense'],\n  ['Auxiliary', 'Noun', 'Value'],\n  //date\n  ['Month', 'WeekDay', 'Year', 'Duration', 'Holiday'],\n  ['Particle', 'Conjunction', 'Adverb', 'Preposition'],\n  ['Date', 'Verb', 'Adjective', 'Person'],\n  ['Date', 'Money', 'RomanNumeral', 'Fraction'],\n  //a/an -> 1\n  ['Value', 'Determiner'],\n  ['Url', 'Value', 'HashTag', 'PhoneNumber', 'Emoji'],\n  //roman numerals\n  ['RomanNumeral', 'Fraction', 'NiceNumber'],\n  ['RomanNumeral', 'Money', 'Acronym'],\n  //cases\n  ['UpperCase', 'TitleCase', 'CamelCase'],\n  //phrases\n  ['Verb', 'Noun', 'Adjective', 'Value'], //VerbPhrase',\n  //QuestionWord\n  ['QuestionWord', 'Verb'],\n  //acronyms\n  ['Acronym', 'Verb'],\n]\n","module.exports = {\n  Noun: {},\n  // - singular\n  Singular: {\n    isA: 'Noun',\n  },\n  //a specific thing that's capitalized\n  ProperNoun: {\n    isA: 'Noun',\n  },\n\n  // -- people\n  Person: {\n    isA: 'Singular',\n  },\n  FirstName: {\n    isA: 'Person',\n  },\n  MaleName: {\n    isA: 'FirstName',\n  },\n  FemaleName: {\n    isA: 'FirstName',\n  },\n  LastName: {\n    isA: 'Person',\n  },\n  Honorific: {\n    isA: 'Noun',\n  },\n  Place: {\n    isA: 'Singular',\n  },\n\n  // -- places\n  Country: {\n    isA: 'Place',\n  },\n  City: {\n    isA: 'Place',\n  },\n  Region: {\n    isA: 'Place',\n  },\n  Address: {\n    isA: 'Place',\n  },\n  Organization: {\n    isA: 'Singular',\n  },\n  SportsTeam: {\n    isA: 'Organization',\n  },\n  Company: {\n    isA: 'Organization',\n  },\n  School: {\n    isA: 'Organization',\n  },\n\n  // - plural\n  Plural: {\n    isA: 'Noun',\n  },\n  Uncountable: {\n    //(not plural or singular)\n    isA: 'Noun',\n  },\n  Pronoun: {\n    isA: 'Noun',\n  },\n  //a word for someone doing something -'plumber'\n  Actor: {\n    isA: 'Noun',\n  },\n  //a gerund-as-noun - 'swimming'\n  Activity: {\n    isA: 'Noun',\n  },\n  //'kilograms'\n  Unit: {\n    isA: 'Noun',\n  },\n  //'Canadians'\n  Demonym: {\n    isA: 'Noun',\n  },\n  //`john's`\n  Possessive: {\n    isA: 'Noun',\n  },\n}\n","module.exports = {\n  Verb: {\n    // isA: 'VerbPhrase',\n  },\n  PresentTense: {\n    isA: 'Verb',\n  },\n  Infinitive: {\n    isA: 'PresentTense',\n  },\n  Gerund: {\n    isA: 'PresentTense',\n  },\n  PastTense: {\n    isA: 'Verb',\n  },\n  PerfectTense: {\n    isA: 'Verb',\n  },\n  FuturePerfect: {\n    isA: 'Verb',\n  },\n  Pluperfect: {\n    isA: 'Verb',\n  },\n  Copula: {\n    isA: 'Verb',\n  },\n  Modal: {\n    isA: 'Verb',\n  },\n  Participle: {\n    isA: 'Verb',\n  },\n  Particle: {\n    isA: 'Verb',\n  },\n  PhrasalVerb: {\n    isA: 'Verb',\n  },\n}\n","module.exports = {\n  Value: {},\n  Ordinal: {\n    isA: 'Value',\n  },\n  Cardinal: {\n    isA: 'Value',\n  },\n  // Multiple: {\n  //   isA: 'Value',\n  // },\n  RomanNumeral: {\n    isA: 'Cardinal',\n  },\n  Fraction: {\n    isA: 'Value',\n  },\n  TextValue: {\n    isA: 'Value',\n  },\n  NumericValue: {\n    isA: 'Value',\n  },\n  NiceNumber: {\n    isA: 'Value',\n  },\n  Money: {\n    //isA: 'Cardinal'\n  },\n  Percent: {\n    isA: 'Value',\n  },\n}\n","module.exports = {\n  Date: {}, //not a noun, but usually is\n  Month: {\n    isA: 'Date',\n    also: 'Singular',\n  },\n  WeekDay: {\n    isA: 'Date',\n    also: 'Noun',\n  },\n  RelativeDay: {\n    isA: 'Date',\n  },\n  Year: {\n    isA: 'Date',\n  },\n  Duration: {\n    isA: 'Date',\n    also: 'Noun',\n  },\n  Time: {\n    isA: 'Date',\n    also: 'Noun',\n  },\n  Holiday: {\n    isA: 'Date',\n    also: 'Noun',\n  },\n}\n","module.exports = {\n  Adjective: {},\n  Comparable: {\n    isA: 'Adjective',\n  },\n  Comparative: {\n    isA: 'Adjective',\n  },\n  Superlative: {\n    isA: 'Adjective',\n  },\n\n  NumberRange: {\n    isA: 'Contraction',\n  },\n  Adverb: {},\n\n  Currency: {},\n  //glue\n  Determiner: {},\n  Conjunction: {},\n  Preposition: {},\n  QuestionWord: {},\n  RelativeProunoun: {\n    isA: 'Pronoun',\n  },\n  Expression: {},\n  Abbreviation: {},\n  Url: {},\n  PhoneNumber: {},\n  HashTag: {},\n  AtMention: {\n    isA: 'Noun',\n  },\n  Emoji: {},\n  Email: {},\n\n  //non-exclusive\n  Auxiliary: {},\n  Negative: {},\n  Contraction: {},\n\n  TitleCase: {},\n  CamelCase: {},\n  UpperCase: {},\n  Hyphenated: {},\n  Acronym: {},\n  ClauseEnd: {},\n\n  // Quotes\n  Quotation: {},\n  StartQuotation: {\n    isA: 'Quotation',\n  },\n  EndQuotation: {\n    isA: 'Quotation',\n  },\n  //parentheses\n  Parentheses: {},\n  EndBracket: {\n    isA: 'Parentheses',\n  },\n  StartBracket: {\n    isA: 'Parentheses',\n  },\n}\n","//add 'downward' tags (that immediately depend on this one)\nconst addDownword = function(tags) {\n  const keys = Object.keys(tags)\n  keys.forEach(k => {\n    tags[k].downward = []\n    //look for tags with this as parent\n    for (let i = 0; i < keys.length; i++) {\n      if (tags[keys[i]].isA && tags[keys[i]].isA === k) {\n        tags[k].downward.push(keys[i])\n      }\n    }\n  })\n}\nmodule.exports = addDownword\n","const conflicts = require('./conflicts')\nconst nouns = require('./tags/nouns')\nconst verbs = require('./tags/verbs')\nconst values = require('./tags/values')\nconst dates = require('./tags/dates')\nconst misc = require('./tags/misc')\nconst addDownward = require('./addDownward')\n\n//used for pretty-printing on the server-side\nconst colors = {\n  Noun: 'blue',\n  // NounPhrase: 'blue',\n\n  Verb: 'green',\n  Auxiliary: 'green',\n  Negative: 'green',\n  // VerbPhrase: 'green',\n\n  Date: 'red',\n  Value: 'red',\n\n  Adjective: 'magenta',\n\n  Preposition: 'cyan',\n  Conjunction: 'cyan',\n  Determiner: 'cyan',\n  Adverb: 'cyan',\n  // Condition: 'cyan',\n}\n\n//extend tagset with new tags\nconst addIn = function(obj, tags) {\n  Object.keys(obj).forEach(k => {\n    tags[k] = obj[k]\n  })\n}\n\n//add tags to remove when tagging this one\nconst addConflicts = function(tags) {\n  Object.keys(tags).forEach(k => {\n    tags[k].notA = {}\n    for (let i = 0; i < conflicts.length; i++) {\n      let arr = conflicts[i]\n      if (arr.indexOf(k) !== -1) {\n        arr = arr.filter(a => a !== k)\n        arr.forEach(e => {\n          tags[k].notA[e] = true\n        })\n      }\n    }\n    tags[k].notA = Object.keys(tags[k].notA)\n  })\n}\n\nconst addColors = function(tags) {\n  Object.keys(tags).forEach(k => {\n    if (colors[k]) {\n      tags[k].color = colors[k]\n      return\n    }\n    if (tags[k].isA && colors[tags[k].isA]) {\n      tags[k].color = colors[tags[k].isA]\n      return\n    }\n    if (tags[k].isA && tags[tags[k].isA].color) {\n      tags[k].color = tags[tags[k].isA].color\n    }\n  })\n}\n\nconst build = () => {\n  let tags = {}\n  addIn(nouns, tags)\n  addIn(verbs, tags)\n  addIn(values, tags)\n  addIn(dates, tags)\n  addIn(misc, tags)\n  //downstream\n  addDownward(tags)\n  //add enemies\n  addConflicts(tags)\n  //for nice-logging\n  addColors(tags)\n  return tags\n}\nmodule.exports = build()\n","const tagset = require('../../world/tags')\n\n// https://stackoverflow.com/questions/9781218/how-to-change-node-jss-console-font-color\nconst reset = '\\x1b[0m'\n\nconst padEnd = function(str, width) {\n  str = str.toString()\n  while (str.length < width) {\n    str += ' '\n  }\n  return str\n}\n\n//cheaper than requiring chalk\nconst colors = {\n  green: function(str) {\n    return '\\x1b[32m' + str + reset\n  },\n  red: function(str) {\n    return '\\x1b[31m' + str + reset\n  },\n  blue: function(str) {\n    return '\\x1b[34m' + str + reset\n  },\n  magenta: function(str) {\n    return '\\x1b[35m' + str + reset\n  },\n  cyan: function(str) {\n    return '\\x1b[36m' + str + reset\n  },\n  yellow: function(str) {\n    return '\\x1b[33m' + str + reset\n  },\n  black: function(str) {\n    return '\\x1b[30m' + str + reset\n  },\n}\n\nconst tagString = function(tags) {\n  tags = tags.map(tag => {\n    if (!tagset.hasOwnProperty(tag)) {\n      return tag\n    }\n    const c = tagset[tag].color || 'blue'\n    return colors[c](tag)\n  })\n  return tags.join(', ')\n}\n\n//output some helpful stuff to the console\nconst debug = function(doc) {\n  console.log(colors.blue('====='))\n  doc.list.forEach(p => {\n    console.log(colors.blue('  -----'))\n    p.terms().forEach(t => {\n      let tags = Object.keys(t.tags)\n      let text = t.text || '-'\n      if (t.implicit) {\n        text = '[' + t.implicit + ']'\n      }\n      if (typeof module !== undefined) {\n        text = colors.yellow(text)\n      }\n      let word = \"'\" + text + \"'\"\n      word = padEnd(word, 18)\n      let str = colors.blue('  ｜ ') + word + '  - ' + tagString(tags)\n      console.log(str)\n    })\n  })\n  console.log('')\n  return doc\n}\nmodule.exports = debug\n","const debug = require('./_debug')\n\n// output\nexports.text = function(options = {}) {\n  return this.list.reduce((str, p) => str + p.out(options), '')\n}\nexports.normal = function(options = {}) {\n  options.normal = true\n  return this.list.map(p => p.out(options)).join(' ')\n}\nexports.json = function(options = {}) {\n  return this.list.map(p => p.json(options))\n}\nexports.array = function(options = {}) {\n  return this.list.map(p => p.out(options).trim())\n}\nexports.debug = function() {\n  debug(this)\n  return this\n}\n//in v7-style - doc.out('text')\nexports.out = function(method) {\n  if (method === 'text') {\n    return this.text()\n  }\n  if (method === 'normal') {\n    return this.normal()\n  }\n  if (method === 'json') {\n    return this.json()\n  }\n  if (method === 'array') {\n    return this.array()\n  }\n  if (method === 'debug') {\n    debug(this)\n    return this\n  }\n  return this.text()\n}\n","const build = require('../../01-tokenizer')\n\n/** substitute-in new content */\nexports.replace = function(match, replace) {\n  let old = this\n  if (replace) {\n    old = this.match(match)\n  } else {\n    replace = match\n  }\n  let newPhrases = build.fromText(replace, this.pool())\n  // let doc = old.delete()\n\n  // doc.append(newPhrases)\n  // console.log(newPhrases)\n  // let firstPhrase = build.fromText(replacement, this.pool())[0]\n\n  // this.match(match).forEach(found => {\n  //   let phrase = found.list[0]\n  //   phrase.insertBefore(firstPhrase, this)\n  // })\n\n  // console.log(replacement)\n  // found.debug()\n  return this\n}\n\n/** fully remove these terms from the document */\nexports.delete = function(match) {\n  let toRemove = this\n  if (match) {\n    toRemove = this.match(match)\n  }\n  toRemove.list.forEach(phrase => phrase.delete(this))\n  return this\n}\n\n/** add new text after every match result */\nexports.insertAfter = function(match, add) {\n  let m = this.match(match)\n  let phrases = build.fromText(add, this.pool())\n  m.list.forEach(p => p.append(phrases[0], m))\n  //re-run tagger\n  m.tagger()\n  return this\n}\n\n/** add new text before every match result */\nexports.insertBefore = function(match, add) {\n  let m = this.match(match)\n  let phrases = build.fromText(add, this.pool())\n  m.list.forEach(p => p.prepend(phrases[0], m))\n  //re-run tagger\n  m.tagger()\n  return this\n}\n\nexports.insertAt = exports.insertAfter\n","module.exports = Object.assign(\n  {},\n  require('./01-utils'),\n  require('./02-misc'),\n  require('./03-split'),\n  require('./04-loops'),\n  require('./05-output'),\n  require('./06-replace')\n)\n","const parseSyntax = require('./syntax')\n\n/** return a new Doc, with this one as a parent */\nexports.match = function(reg) {\n  //parse-up the input expression\n  let regs = parseSyntax(reg)\n  //try expression on each phrase\n  let matches = this.list.reduce((arr, p) => {\n    return arr.concat(p.match(regs))\n  }, [])\n  return this.buildFrom(matches)\n}\n\n/** return all results except for this */\nexports.not = function(reg) {\n  //parse-up the input expression\n  let regs = parseSyntax(reg)\n  //try expression on each phrase\n  let matches = this.list.reduce((arr, p) => {\n    return arr.concat(p.not(regs))\n  }, [])\n  return this.buildFrom(matches)\n}\n\n/** return only the first match */\nexports.matchOne = function(reg) {\n  let regs = parseSyntax(reg)\n  let found = this.list.find(p => p.match(regs).length > 0)\n  return this.buildFrom([found])\n}\n\n/** return a Document with three parts for every match\n * seperate everything before the word, as a new phrase\n */\nexports.split = function(reg) {\n  let regs = parseSyntax(reg)\n  let matches = []\n  this.list.forEach(p => {\n    let allFound = p.match(regs)\n    //no match, keep it going\n    if (allFound.length === 0) {\n      matches.push(p)\n    }\n    allFound.forEach(found => {\n      // do it again, at the end\n      let last = matches.pop() || p\n      let results = last.splitOn(found) //splits into three parts\n      if (results.before) {\n        matches.push(results.before)\n      }\n      if (results.match) {\n        matches.push(results.match)\n      }\n      if (results.after) {\n        matches.push(results.after)\n      }\n    })\n  })\n  return this.buildFrom(matches)\n}\n\n/** return a Document with two parts for every match\n * seperate everything after the word, as a new phrase\n */\nexports.splitAfter = function(reg) {\n  let regs = parseSyntax(reg)\n  let matches = []\n  this.list.forEach(p => {\n    let allFound = p.match(regs)\n    //no match, return whole phrase\n    if (allFound.length === 0) {\n      matches.push(p)\n    }\n    allFound.forEach(found => {\n      // apply it to the end, recursively\n      let last = matches.pop() || p\n      let results = last.splitOn(found) //splits into three parts\n      //merge first and second parts\n      if (results.before && results.match) {\n        results.before.length += results.match.length\n        matches.push(results.before)\n      } else if (results.match) {\n        matches.push(results.match)\n      }\n      // add third part, if it exists\n      if (results.after) {\n        matches.push(results.after)\n      }\n    })\n  })\n  return this.buildFrom(matches)\n}\n\n/** return a Document with two parts for every match */\nexports.splitBefore = function(reg) {\n  let regs = parseSyntax(reg)\n  let matches = []\n  this.list.forEach(p => {\n    let allFound = p.match(regs)\n    //no match, keep it going\n    if (allFound.length === 0) {\n      matches.push(p)\n    }\n    allFound.forEach(found => {\n      // do it again, at the end\n      let last = matches.pop() || p\n      let results = last.splitOn(found) //splits into three parts\n      //support multiple-matches per phrase\n      if (results.before) {\n        matches.push(results.before)\n      }\n      //merge 'match' and 'after'\n      if (results.match && results.after) {\n        results.match.length += results.after.length\n        matches.push(results.match)\n      } else if (results.match) {\n        matches.push(results.match)\n      }\n    })\n  })\n  return this.buildFrom(matches)\n}\n\n/**Return a boolean if this match exists */\nexports.has = function(reg) {\n  let regs = parseSyntax(reg)\n  let found = this.list.find(p => p.match(regs).length > 0)\n  return found !== undefined\n}\n\n/** return each current phrase, only if it contains this match */\nexports.if = function(reg) {\n  let regs = parseSyntax(reg)\n  let found = this.list.filter(p => p.match(regs).length > 0)\n  return this.buildFrom(found)\n}\n\n/** Filter-out any current phrases that have this match*/\nexports.ifNo = function(reg) {\n  let regs = parseSyntax(reg)\n  let found = this.list.filter(p => p.match(regs).length === 0)\n  return this.buildFrom(found)\n}\n\n/** return only the terms that can be this tag*/\nexports.canBe = function(tag) {\n  let world = this.world\n  let matches = this.list.reduce((arr, p) => {\n    return arr.concat(p.canBe(tag, world))\n  }, [])\n  return this.buildFrom(matches)\n}\n\n//aliases\n// methods.splitOn = methods.split\n","//these are selections that don't require their own subclasses/methods\n\n/** split-up results by each term */\nexports.terms = function(n) {\n  let r = this.match('.')\n  if (typeof n === 'number') {\n    r = r.get(n)\n  }\n  return r\n}\n// exports.term = exports.terms\n\n/** split-up results into multi-term phrases */\nexports.clauses = function(n) {\n  let r = this.splitAfter('#ClauseEnd')\n  if (typeof n === 'number') {\n    r = r.get(n)\n  }\n  return r\n}\n/** return anything tagged as a hashtag*/\nexports.hashTags = function(n) {\n  let r = this.match('#HashTag').terms()\n  if (typeof n === 'number') {\n    r = r.get(n)\n  }\n  return r\n}\n/** return anything tagged as an organization*/\nexports.organizations = function(n) {\n  let r = this.splitAfter('#Comma')\n  r = r.match('#Organization+')\n  if (typeof n === 'number') {\n    r = r.get(n)\n  }\n  return r\n}\n/** return anything tagged as a phone number */\nexports.phoneNumbers = function(n) {\n  let r = this.splitAfter('#Comma')\n  r = r.match('#PhoneNumber+')\n  if (typeof n === 'number') {\n    r = r.get(n)\n  }\n  return r\n}\n/** return anything tagged as a Place*/\nexports.places = function(n) {\n  let r = this.splitAfter('#Comma')\n  r = r.match('#Place+')\n  if (typeof n === 'number') {\n    r = r.get(n)\n  }\n  return r\n}\n\n/** return anything tagged as a URL*/\nexports.urls = function(n) {\n  let r = this.match('#Url')\n  if (typeof n === 'number') {\n    r = r.get(n)\n  }\n  return r\n}\n/** return anything inside parentheses */\nexports.parentheses = function(n) {\n  let r = this.match('#Parentheses+')\n  //split-up consecutive ones\n  r = r.splitAfter('#EndBracket')\n  if (typeof n === 'number') {\n    r = r.get(n)\n  }\n  return r\n}\n\n/** return any sentences that ask a question */\nexports.questions = function(doc) {\n  let list = doc.sentences().list.filter(p => {\n    return p.lastTerm().hasQuestionMark()\n  })\n  return doc.buildFrom(list)\n}\n\n/** return any sentences that are not a question */\nexports.statements = function(doc) {\n  let list = doc.sentences().list.filter(p => {\n    return p.lastTerm().hasQuestionMark() === false\n  })\n  return doc.buildFrom(list)\n}\n","const findMethods = require('./find')\n\nmodule.exports = Object.assign({}, findMethods)\n","/** match a word-sequence, like 'super bowl' in the lexicon */\nconst tryMultiple = function(terms, t, world) {\n  let compounds = world.compounds\n  //try a two-word version\n  let txt = terms[t].normal + ' ' + terms[t + 1].normal\n  if (compounds[txt] !== undefined && compounds.hasOwnProperty(txt) === true) {\n    terms[t].tag(compounds[txt], 'lexicon-two', world)\n    terms[t + 1].tag(compounds[txt], 'lexicon-two', world)\n    return true\n  }\n  //try a three-word version?\n  if (t + 2 < terms.length) {\n    txt += ' ' + terms[t + 2].normal\n    if (compounds[txt] !== undefined && compounds.hasOwnProperty(txt) === true) {\n      terms[t].tag(compounds[txt], 'lexicon-three', world)\n      terms[t + 1].tag(compounds[txt], 'lexicon-three', world)\n      terms[t + 2].tag(compounds[txt], 'lexicon-three', world)\n      return true\n    }\n  }\n  return false\n}\n\n/** look at each word in our list of known-words */\nconst checkLexicon = function(terms, world) {\n  let lex = world.lexicon\n  let hasCompound = world.hasCompound\n  //go through each term, and check the lexicon\n  for (let t = 0; t < terms.length; t += 1) {\n    let str = terms[t].normal\n    //is it the start of a compound word, like 'super bowl'?\n    if (hasCompound[str] === true && t + 1 < terms.length) {\n      let found = tryMultiple(terms, t, world)\n      if (found === true) {\n        continue\n      }\n    }\n    //try one-word lexicon\n    if (lex[str] !== undefined && lex.hasOwnProperty(str) === true) {\n      terms[t].tag(lex[str], 'lexicon', world)\n    }\n  }\n  return terms\n}\nmodule.exports = checkLexicon\n","const apostrophes = /[\\'‘’‛‵′`´]/\n\n//\nconst checkPunctuation = function(terms, i, world) {\n  let term = terms[i]\n\n  //check hyphenation\n  if (term.postText.indexOf('-') !== -1 && terms[i + 1] && terms[i + 1].preText === '') {\n    term.tag('Hyphenated', 'has-hyphen', world)\n  }\n\n  //an end-tick (trailing apostrophe) - flanders', or Carlos'\n  if (apostrophes.test(term.postText) && !apostrophes.test(term.preText)) {\n    let endChar = term.normal[term.normal.length - 1]\n    //flanders'\n    if (endChar === 's') {\n      term.tag(['Possessive', 'Noun'], 'end-tick', world)\n      return\n    }\n    //chillin'\n    if (endChar === 'n') {\n      term.tag(['Gerund'], 'chillin', world)\n    }\n  }\n}\nmodule.exports = checkPunctuation\n","//these are regexes applied to t.text, instead of t.normal\nmodule.exports = [\n  //589-3809\n  [/^[0-9]{3}-[0-9]{4}$/, 'PhoneNumber'],\n  //632-589-3809\n  [/^[0-9]{3}[ -]?[0-9]{3}-[0-9]{4}$/, 'PhoneNumber'],\n\n  //dates/times\n  [/^[012]?[0-9](:[0-5][0-9])(:[0-5][0-9])$/, 'Time'], //4:32:32\n  [/^[012]?[0-9](:[0-5][0-9])?(:[0-5][0-9])? ?(am|pm)$/, 'Time'], //4pm\n  [/^[012]?[0-9](:[0-5][0-9])(:[0-5][0-9])? ?(am|pm)?$/, 'Time'], //4:00pm\n  [/^[PMCE]ST$/, 'Time'], //PST, time zone abbrevs\n  [/^utc ?[+-]?[0-9]+?$/, 'Time'], //UTC 8+\n  [/^[a-z0-9]*? o\\'?clock$/, 'Time'], //3 oclock\n  [/^[0-9]{1,4}-[0-9]{1,2}-[0-9]{1,4}$/, 'Date'], // 03-02-89\n  [/^[0-9]{1,4}\\/[0-9]{1,2}\\/[0-9]{1,4}$/, 'Date'], // 03/02/89\n\n  //names\n  [/^ma?c\\'.*/, 'LastName'], //mc'adams\n  [/^o\\'[drlkn].*/, 'LastName'], //o'douggan\n  [/^ma?cd[aeiou]/, 'LastName'], //macdonell - Last patterns https://en.wikipedia.org/wiki/List_of_family_name_affixes\n\n  //web tags\n  [/^\\w+@\\w+\\.[a-z]{2,3}$/, 'Email'], //not fancy\n  [/^#[a-z0-9_\\u00C0-\\u00FF]{2,}$/, 'HashTag'],\n  [/^@\\w{2,}$/, 'AtMention'],\n  [/^(https?:\\/\\/|www\\.)\\w+\\.[a-z]{2,3}/, 'Url'], //with http/www\n  [/^[\\w\\.\\/]+\\.(com|net|gov|org|ly|edu|info|biz|ru|jp|de|in|uk|br)/, 'Url'], //http://mostpopularwebsites.net/top-level-domain\n\n  //slang things\n  [/^(lol)+[sz]$/, 'Expression'], //lol\n  [/^(un|de|re)\\\\-[a-z\\u00C0-\\u00FF]{2}/, 'Verb'],\n  [/^[\\-\\+]?[0-9]+(\\.[0-9])*$/, 'NumericValue'],\n  [/^(over|under)[a-z]{2,}/, 'Adjective'],\n  [/^[0-9]{1,4}\\.[0-9]{1,2}\\.[0-9]{1,4}$/, 'Date'], // 03-02-89\n\n  //numbers\n  [/^[\\-\\+]?[0-9][0-9,]*(\\.[0-9])*$/, ['Cardinal', 'NumericValue']], //like 5\n  [/^[-+]?[0-9]+(.[0-9]+)?$/, ['Cardinal', 'NumericValue']], //like +5.0\n  [/^[0-9\\.]{1,4}(st|nd|rd|th)?[-–][0-9\\.]{1,4}(st|nd|rd|th)?$/, 'NumberRange'], //5-7\n  [/^[-+]?[0-9.,]{1,3}(,[0-9.,]{3})+(.[0-9]+)?$/, 'NiceNumber'], //like 5,999.0\n  [/^.?[0-9]+([0-9,.]+)?%$/, ['Percent', 'Cardinal', 'NumericValue']], //7%  ..\n  [/^[0-9]{1,4}\\/[0-9]{1,4}$/, 'Fraction'], //3/2ths\n  [/^[0-9\\.]{1,2}[-–][0-9]{1,2}$/, ['Value', 'NumberRange']], //7-8\n  [/^[0-9]+([a-z]{1,2})$/, 'Value'], //like 5kg\n  [/^[0-9][0-9,\\.]*(st|nd|rd|r?th)$/, ['NumericValue', 'Ordinal']], //like 5th\n  [/[0-9]\\+$/, ['Cardinal', 'NumericValue']], //10+\n\n  //money\n  [/^[-+]?[$€¥£][0-9]+(.[0-9]{1,2})?$/, ['Money', 'Value']], //like $5.30\n  [/^[-+]?[$€¥£][0-9]{1,3}(,[0-9]{3})+(.[0-9]{1,2})?$/, ['Money', 'Value']], //like $5,231.30\n]\n","const regex = require('./regexes')\n\nconst romanNumeral = /^[IVXLCDM]{2,}$/\nconst romanNumValid = /^M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$/ //  https://stackoverflow.com/a/267405/168877\n\n//try each of the ^regexes in our list\nconst checkRegex = function(term, world) {\n  let str = term.text\n\n  // do them all!\n  for (let r = 0; r < regex.length; r += 1) {\n    if (regex[r][0].test(str) === true) {\n      term.tagSafe(regex[r][1], 'regex #' + r, world)\n      break\n    }\n  }\n  // do some more!\n  //roman numberals - XVII\n  if (term.text.length >= 2 && romanNumeral.test(str) && romanNumValid.test(str)) {\n    term.tagSafe('RomanNumeral', 'xvii', world)\n  }\n}\nmodule.exports = checkRegex\n","//regex suffix patterns and their most common parts of speech,\n//built using wordnet, by spencer kelly.\n//this mapping shrinks-down the uglified build\nconst Adj = 'Adjective'\nconst Inf = 'Infinitive'\nconst Pres = 'PresentTense'\nconst Sing = 'Singular'\nconst Past = 'PastTense'\nconst Adverb = 'Adverb'\nconst Exp = 'Expression'\nconst Actor = 'Actor'\nconst Verb = 'Verb'\nconst Noun = 'Noun'\nconst Last = 'LastName'\n//the order here matters.\n\n//regexes indexed by mandated last-character\nmodule.exports = {\n  a: [\n    [/.[aeiou]na$/, Noun],\n    [/.[oau][wvl]ska$/, Last], //polish (female)\n    [/.[^aeiou]ica$/, Sing],\n    [/^([hyj]a)+$/, Exp], //hahah\n  ],\n  c: [[/.[^aeiou]ic$/, Adj]],\n  d: [\n    [/.[ia]sed$/, Adj],\n    [/.[gt]led$/, Adj],\n    [/.[aeiou][td]ed$/, Past],\n    [/.[^aeiou]led$/, Past], //rumbled\n    [/[^aeiou]ard$/, Sing],\n    [/[aeiou][^aeiou]id$/, Adj],\n    [/[aeiou]c?ked$/, Past], //hooked\n    [/[^aeiou][aeiou][tvx]ed$/, Past], //boxed\n    [/.[vrl]id$/, Adj],\n  ],\n  e: [\n    [/.[lnr]ize$/, Inf],\n    [/.[^aeiou]ise$/, Inf],\n    [/.[aeiou]te$/, Inf],\n    [/.[^aeiou][ai]ble$/, Adj],\n    [/.[^aeiou]eable$/, Adj],\n    [/.[^aeiou]ive$/, Adj],\n  ],\n  h: [\n    [/.[^aeiouf]ish$/, Adj],\n    [/.v[iy]ch$/, Last], //east-europe\n    [/^ug?h+$/, Exp], //uhh\n    [/^uh[ -]?oh$/, Exp], //uhoh\n  ],\n  i: [\n    [/.[oau][wvl]ski$/, Last], //polish (male)\n  ],\n  k: [\n    [/^(k)+$/, Exp], //kkkk\n  ],\n  l: [\n    [/.[gl]ial$/, Adj],\n    [/.[^aeiou]ful$/, Adj],\n    [/.[nrtumcd]al$/, Adj],\n    [/.[^aeiou][ei]al$/, Adj],\n  ],\n  m: [\n    [/.[^aeiou]ium$/, Sing],\n    [/[^aeiou]ism$/, Sing],\n    [/^h*u*m+$/, Exp], //mmmmmmm / ummmm / huuuuuummmmmm\n    [/^\\d+ ?[ap]m$/, 'Date'],\n  ],\n  n: [[/.[lsrnpb]ian$/, Adj], [/[^aeiou]ician$/, Actor]],\n  o: [\n    [/^no+$/, Exp], //noooo\n    [/^(yo)+$/, Exp], //yoyo\n    [/^woo+[pt]?$/, Exp], //woo\n  ],\n  r: [\n    [/.[ilk]er$/, 'Comparative'],\n    [/[aeiou][pns]er$/, Sing],\n    [/[^i]fer$/, Inf],\n    [/.[^aeiou][ao]pher$/, Actor],\n  ],\n  t: [\n    [/.[di]est$/, 'Superlative'],\n    [/.[icldtgrv]ent$/, Adj],\n    [/[aeiou].*ist$/, Adj],\n    [/^[a-z]et$/, Verb],\n  ],\n  s: [\n    [/.[rln]ates$/, Pres],\n    [/.[^z]ens$/, Verb],\n    [/.[lstrn]us$/, Sing],\n    [/[aeiou][^aeiou]is$/, Sing],\n    [/[a-z]\\'s$/, Noun],\n    [/^yes+$/, Exp], //yessss\n  ],\n  v: [\n    [/.[^aeiou][ai][kln]ov$/, Last], //east-europe\n  ],\n  y: [\n    [/.[cts]hy$/, Adj],\n    [/.[st]ty$/, Adj],\n    [/.[gk]y$/, Adj],\n    [/.[tnl]ary$/, Adj],\n    [/.[oe]ry$/, Sing],\n    [/[rdntkbhs]ly$/, Adverb],\n    [/...lly$/, Adverb],\n    [/[bszmp]{2}y$/, Adj],\n    [/.(gg|bb|zz)ly$/, Adj],\n    [/.[aeiou]my$/, Adj],\n    [/[ea]{2}zy$/, Adj],\n    [/.[^aeiou]ity$/, Sing],\n  ],\n}\n","//just a foolish lookup of known suffixes\nconst Adj = 'Adjective'\nconst Inf = 'Infinitive'\nconst Pres = 'PresentTense'\nconst Sing = 'Singular'\nconst Past = 'PastTense'\nconst Avb = 'Adverb'\nconst Plrl = 'Plural'\nconst Actor = 'Actor'\nconst Vb = 'Verb'\nconst Noun = 'Noun'\nconst Last = 'LastName'\nconst Modal = 'Modal'\n\n// find any issues - https://observablehq.com/@spencermountain/suffix-word-lookup\nmodule.exports = [\n  null, //0\n  null, //1\n  {\n    //2-letter\n    ea: Sing,\n    ia: Noun,\n    ic: Adj,\n    ly: Avb,\n    \"'n\": Vb,\n    \"'t\": Vb,\n  },\n  {\n    //3-letter\n    que: Adj,\n    lar: Adj,\n    ffy: Adj,\n    nny: Adj,\n    rmy: Adj,\n    azy: Adj,\n    oid: Adj,\n    mum: Adj,\n    ous: Adj,\n    end: Vb,\n    sis: Sing,\n    rol: Sing,\n    ize: Inf,\n    ify: Inf,\n    zes: Pres,\n    nes: Pres,\n    ing: 'Gerund', //likely to be converted to Adj after lexicon pass\n    ' so': Avb,\n    \"'ll\": Modal,\n    \"'re\": 'Copula',\n  },\n  {\n    //4-letter\n    teen: 'Value',\n    tors: Noun,\n    amed: Past,\n    ched: Past,\n    ends: Vb,\n    oses: Pres,\n    fies: Pres,\n    ects: Pres,\n    nded: Past,\n    cede: Inf,\n    tage: Inf,\n    gate: Inf,\n    vice: Sing,\n    tion: Sing,\n    cted: Past,\n    ette: Sing,\n    some: Adj,\n    llen: Adj,\n    ried: Adj,\n    gone: Adj,\n    made: Adj,\n    fore: Avb,\n    less: Avb,\n    ices: Plrl,\n    ions: Plrl,\n    ints: Plrl,\n    aped: Past,\n    lked: Past,\n    ould: Modal,\n    tive: Actor,\n    sson: Last, //swedish male\n    czyk: Last, //polish (male)\n    chuk: Last, //east-europe\n    enko: Last, //east-europe\n    akis: Last, //greek\n    nsen: Last, //norway\n  },\n  {\n    //5-letter\n    fully: Avb,\n    where: Avb,\n    wards: Avb,\n    urned: Past,\n    tized: Past,\n    eased: Past,\n    ances: Plrl,\n    tures: Plrl,\n    ports: Plrl,\n    ettes: Plrl,\n    ities: Plrl,\n    rough: Adj,\n    bound: Adj,\n    tieth: 'Ordinal',\n    ishes: Pres,\n    tches: Pres,\n    nssen: Last, //norway\n    marek: Last, //polish (male)\n  },\n  {\n    //6-letter\n    keeper: Actor,\n    logist: Actor,\n    auskas: Last, //lithuania\n    teenth: 'Value',\n  },\n  {\n    //7-letter\n    sdottir: Last, //swedish female\n    opoulos: Last, //greek\n  },\n]\n","const regexes = require('./suffixes/regex')\nconst suffixList = require('./suffixes/suffixList')\n\nconst suffixRegexes = function(term, world) {\n  let str = term.normal\n  let char = str[str.length - 1]\n  if (regexes.hasOwnProperty(char) === true) {\n    let regs = regexes[char]\n    for (let r = 0; r < regs.length; r += 1) {\n      if (regs[r][0].test(str) === true) {\n        term.tagSafe(regs[r][1], `endsWith ${char} #${r}`, world)\n        break\n      }\n    }\n  }\n}\n\n//sweep-through all suffixes\nconst knownSuffixes = function(term, world) {\n  const len = term.normal.length\n  let max = 7\n  if (len <= max) {\n    max = len - 1\n  }\n  for (let i = max; i > 1; i -= 1) {\n    let str = term.normal.substr(len - i, len)\n    if (suffixList[str.length].hasOwnProperty(str) === true) {\n      let tag = suffixList[str.length][str]\n      term.tagSafe(tag, 'suffix -' + str, world)\n      break\n    }\n  }\n}\n\n//all-the-way-down!\nconst checkRegex = function(term, world) {\n  suffixRegexes(term, world)\n  knownSuffixes(term, world)\n}\nmodule.exports = checkRegex\n","//yep,\n//https://github.com/mathiasbynens/emoji-regex/blob/master/index.js\nmodule.exports = /(?:0\\u20E3\\n1\\u20E3|2\\u20E3|3\\u20E3|4\\u20E3|5\\u20E3|6\\u20E3|7\\u20E3|8\\u20E3|9\\u20E3|#\\u20E3|\\*\\u20E3|\\uD83C(?:\\uDDE6\\uD83C(?:\\uDDE8|\\uDDE9|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDEE|\\uDDF1|\\uDDF2|\\uDDF4|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA|\\uDDFC|\\uDDFD|\\uDDFF)|\\uDDE7\\uD83C(?:\\uDDE6|\\uDDE7|\\uDDE9|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDED|\\uDDEE|\\uDDEF|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFB|\\uDDFC|\\uDDFE|\\uDDFF)|\\uDDE8\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDE9|\\uDDEB|\\uDDEC|\\uDDED|\\uDDEE|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF5|\\uDDF7|\\uDDFA|\\uDDFB|\\uDDFC|\\uDDFD|\\uDDFE|\\uDDFF)|\\uDDE9\\uD83C(?:\\uDDEA|\\uDDEC|\\uDDEF|\\uDDF0|\\uDDF2|\\uDDF4|\\uDDFF)|\\uDDEA\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDEA|\\uDDEC|\\uDDED|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA)|\\uDDEB\\uD83C(?:\\uDDEE|\\uDDEF|\\uDDF0|\\uDDF2|\\uDDF4|\\uDDF7)|\\uDDEC\\uD83C(?:\\uDDE6|\\uDDE7|\\uDDE9|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDED|\\uDDEE|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF5|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA|\\uDDFC|\\uDDFE)|\\uDDED\\uD83C(?:\\uDDF0|\\uDDF2|\\uDDF3|\\uDDF7|\\uDDF9|\\uDDFA)|\\uDDEE\\uD83C(?:\\uDDE8|\\uDDE9|\\uDDEA|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9)|\\uDDEF\\uD83C(?:\\uDDEA|\\uDDF2|\\uDDF4|\\uDDF5)|\\uDDF0\\uD83C(?:\\uDDEA|\\uDDEC|\\uDDED|\\uDDEE|\\uDDF2|\\uDDF3|\\uDDF5|\\uDDF7|\\uDDFC|\\uDDFE|\\uDDFF)|\\uDDF1\\uD83C(?:\\uDDE6|\\uDDE7|\\uDDE8|\\uDDEE|\\uDDF0|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA|\\uDDFB|\\uDDFE)|\\uDDF2\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDE9|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDED|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF5|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA|\\uDDFB|\\uDDFC|\\uDDFD|\\uDDFE|\\uDDFF)|\\uDDF3\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDEE|\\uDDF1|\\uDDF4|\\uDDF5|\\uDDF7|\\uDDFA|\\uDDFF)|\\uDDF4\\uD83C\\uDDF2|\\uDDF5\\uD83C(?:\\uDDE6|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDED|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFC|\\uDDFE)|\\uDDF6\\uD83C\\uDDE6|\\uDDF7\\uD83C(?:\\uDDEA|\\uDDF4|\\uDDF8|\\uDDFA|\\uDDFC)|\\uDDF8\\uD83C(?:\\uDDE6|\\uDDE7|\\uDDE8|\\uDDE9|\\uDDEA|\\uDDEC|\\uDDED|\\uDDEE|\\uDDEF|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFB|\\uDDFD|\\uDDFE|\\uDDFF)|\\uDDF9\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDE9|\\uDDEB|\\uDDEC|\\uDDED|\\uDDEF|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF7|\\uDDF9|\\uDDFB|\\uDDFC|\\uDDFF)|\\uDDFA\\uD83C(?:\\uDDE6|\\uDDEC|\\uDDF2|\\uDDF8|\\uDDFE|\\uDDFF)|\\uDDFB\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDEA|\\uDDEC|\\uDDEE|\\uDDF3|\\uDDFA)|\\uDDFC\\uD83C(?:\\uDDEB|\\uDDF8)|\\uDDFD\\uD83C\\uDDF0|\\uDDFE\\uD83C(?:\\uDDEA|\\uDDF9)|\\uDDFF\\uD83C(?:\\uDDE6|\\uDDF2|\\uDDFC)))|[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267F\\u2692-\\u2694\\u2696\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED0\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3]|\\uD83E[\\uDD10-\\uDD18\\uDD80-\\uDD84\\uDDC0]/g\n","//just some of the most common emoticons\n//faster than\n//http://stackoverflow.com/questions/28077049/regex-matching-emoticons\nmodule.exports = {\n  ':(': true,\n  ':)': true,\n  ':P': true,\n  ':p': true,\n  ':O': true,\n  ':3': true,\n  ':|': true,\n  ':/': true,\n  ':\\\\': true,\n  ':$': true,\n  ':*': true,\n  ':@': true,\n  ':-(': true,\n  ':-)': true,\n  ':-P': true,\n  ':-p': true,\n  ':-O': true,\n  ':-3': true,\n  ':-|': true,\n  ':-/': true,\n  ':-\\\\': true,\n  ':-$': true,\n  ':-*': true,\n  ':-@': true,\n  ':^(': true,\n  ':^)': true,\n  ':^P': true,\n  ':^p': true,\n  ':^O': true,\n  ':^3': true,\n  ':^|': true,\n  ':^/': true,\n  ':^\\\\': true,\n  ':^$': true,\n  ':^*': true,\n  ':^@': true,\n  '):': true,\n  '(:': true,\n  '$:': true,\n  '*:': true,\n  ')-:': true,\n  '(-:': true,\n  '$-:': true,\n  '*-:': true,\n  ')^:': true,\n  '(^:': true,\n  '$^:': true,\n  '*^:': true,\n  '<3': true,\n  '</3': true,\n  '<\\\\3': true,\n}\n","const emojiReg = require('./emoji/regex')\nconst emoticon = require('./emoji/list')\n//for us, there's three types -\n// * ;) - emoticons\n// * 🌵 - unicode emoji\n// * :smiling_face: - asci-represented emoji\n\n//test for forms like ':woman_tone2:‍:ear_of_rice:'\n//https://github.com/Kikobeats/emojis-keywords/blob/master/index.js\nconst isCommaEmoji = t => {\n  if (t.raw.charAt(0) === ':') {\n    //end comma can be last or second-last ':haircut_tone3:‍♀️'\n    if (t.raw.match(/:.?$/) === null) {\n      return false\n    }\n    //ensure no spaces\n    if (t.raw.match(' ')) {\n      return false\n    }\n    //reasonably sized\n    if (t.raw.length > 35) {\n      return false\n    }\n    return true\n  }\n  return false\n}\n\n//check against emoticon whitelist\nconst isEmoticon = t => {\n  let str = t.raw.replace(/^[:;]/, ':') //normalize the 'eyes'\n  return emoticon.hasOwnProperty(str)\n}\n\n//these are somewhat popular.\nconst tagEmoji = (term, world) => {\n  //test for :keyword: emojis\n  if (isCommaEmoji(term) === true) {\n    term.tag('Emoji', 'comma-emoji', world)\n    term.text = term.raw\n    term.normalizeWhitespace()\n  }\n  //test for unicode emojis\n  if (term.text.match(emojiReg)) {\n    term.tag('Emoji', 'unicode-emoji', world)\n    term.text = term.raw\n    term.normalizeWhitespace()\n  }\n  //test for emoticon ':)' emojis\n  if (isEmoticon(term) === true) {\n    term.tag('Emoji', 'emoticon-emoji', world)\n    term.text = term.raw\n    term.normalizeWhitespace()\n  }\n}\nmodule.exports = tagEmoji\n","const steps = {\n  lexicon: require('./01-lexicon'),\n  punctuation: require('./02-punctuation'),\n  regex: require('./03-regex'),\n  suffix: require('./04-suffixes'),\n  emoji: require('./05-emoji'),\n  // web: require('./05-webText'),\n}\n\n//'lookups' look at a term by itself\nconst lookups = function(doc) {\n  let terms = doc.termList()\n  let world = doc.world\n  //our list of known-words\n  steps.lexicon(terms, world)\n\n  //try these other methods\n  for (let i = 0; i < terms.length; i += 1) {\n    let term = terms[i]\n    //or maybe some helpful punctuation\n    steps.punctuation(terms, i, world)\n    //mostly prefix checks\n    steps.regex(term, world)\n    //maybe we can guess\n    steps.suffix(term, world)\n    // :c\n    steps.emoji(term, world)\n  }\n  return doc\n}\nmodule.exports = lookups\n","//markov-like stats about co-occurance, for hints about unknown terms\n//basically, a little-bit better than the noun-fallback\n//just top n-grams from nlp tags, generated from nlp-corpus\n\n//after this word, here's what happens usually\nlet afterThisWord = {\n  i: 'Verb', //44% //i walk..\n  first: 'Noun', //50% //first principles..\n  it: 'Verb', //33%\n  there: 'Verb', //35%\n  not: 'Verb', //33%\n  because: 'Noun', //31%\n  if: 'Noun', //32%\n  but: 'Noun', //26%\n  who: 'Verb', //40%\n  this: 'Noun', //37%\n  his: 'Noun', //48%\n  when: 'Noun', //33%\n  you: 'Verb', //35%\n  very: 'Adjective', // 39%\n  old: 'Noun', //51%\n  never: 'Verb', //42%\n  before: 'Noun', //28%\n}\n\n//in advance of this word, this is what happens usually\nlet beforeThisWord = {\n  there: 'Verb', //23% // be there\n  me: 'Verb', //31% //see me\n  man: 'Adjective', // 80% //quiet man\n  only: 'Verb', //27% //sees only\n  him: 'Verb', //32% //show him\n  were: 'Noun', //48% //we were\n  took: 'Noun', //38% //he took\n  himself: 'Verb', //31% //see himself\n  went: 'Noun', //43% //he went\n  who: 'Noun', //47% //person who\n  jr: 'Person',\n}\n\n//following this POS, this is likely\nlet afterThisPOS = {\n  Adjective: 'Noun', //36% //blue dress\n  Possessive: 'Noun', //41% //his song\n  Determiner: 'Noun', //47%\n  Adverb: 'Verb', //20%\n  Pronoun: 'Verb', //40%\n  Value: 'Noun', //47%\n  Ordinal: 'Noun', //53%\n  Modal: 'Verb', //35%\n  Superlative: 'Noun', //43%\n  Demonym: 'Noun', //38%\n  Honorific: 'Person', //\n}\n\n//in advance of this POS, this is likely\nlet beforeThisPOS = {\n  Copula: 'Noun', //44% //spencer is\n  PastTense: 'Noun', //33% //spencer walked\n  Conjunction: 'Noun', //36%\n  Modal: 'Noun', //38%\n  PluperfectTense: 'Noun', //40%\n  PerfectTense: 'Verb', //32%\n}\nmodule.exports = {\n  beforeThisWord: beforeThisWord,\n  afterThisWord: afterThisWord,\n\n  beforeThisPos: beforeThisPOS,\n  afterThisPos: afterThisPOS,\n}\n","const markov = require('./data/markov')\nconst afterKeys = Object.keys(markov.afterThisPos)\nconst beforeKeys = Object.keys(markov.beforeThisPos)\n\nconst checkNeighbours = function(terms, world) {\n  for (let i = 0; i < terms.length; i += 1) {\n    let term = terms[i]\n    //do we still need a tag?\n    if (term.isKnown() === true) {\n      continue\n    }\n    //ok, this term needs a tag.\n    //look at previous word for clues..\n    let lastTerm = terms[i - 1]\n    if (lastTerm) {\n      // 'foobar term'\n      if (markov.afterThisWord.hasOwnProperty(lastTerm.normal) === true) {\n        let tag = markov.afterThisWord[lastTerm.normal]\n        term.tag(tag, 'after-' + lastTerm.normal, world)\n        continue\n      }\n      // 'Tag term'\n      // (look at previous POS tags for clues..)\n      let foundTag = afterKeys.find(tag => lastTerm.tags[tag])\n      if (foundTag !== undefined) {\n        let tag = markov.afterThisPos[foundTag]\n        term.tag(tag, 'after-' + foundTag, world)\n        continue\n      }\n    }\n\n    //look at next word for clues..\n    let nextTerm = terms[i + 1]\n    if (nextTerm) {\n      // 'term foobar'\n      if (markov.beforeThisWord.hasOwnProperty(nextTerm.normal) === true) {\n        let tag = markov.beforeThisWord[nextTerm.normal]\n        term.tag(tag, 'before-' + nextTerm.normal, world)\n        continue\n      }\n      // 'term Tag'\n      // (look at next POS tags for clues..)\n      let foundTag = beforeKeys.find(tag => nextTerm.tags[tag])\n      if (foundTag !== undefined) {\n        let tag = markov.beforeThisPos[foundTag]\n        term.tag(tag, 'before-' + foundTag, world)\n        continue\n      }\n    }\n  }\n}\nmodule.exports = checkNeighbours\n","const titleCase = /^[A-Z][a-z'\\u00C0-\\u00FF]/\nconst hasNumber = /[0-9]/\n\n/** look for any grammar signals based on capital/lowercase */\nconst checkCase = function(terms, world) {\n  terms.forEach((term, i) => {\n    //is it a titlecased word?\n    if (titleCase.test(term.text) === true && hasNumber.test(term.text) === false) {\n      // tag it as titlecase, if possible\n      if (i !== 0) {\n        term.tag('TitleCase', 'case', world)\n      } else if (term.tags.Person || term.tags.Organization || term.tags.Place) {\n        term.tag('TitleCase', 'case-person', world)\n      }\n      // can we call it a noun?\n      if (i !== 0 && term.isKnown() === false) {\n        term.tag('ProperNoun', 'case-noun', world)\n      }\n    }\n  })\n}\nmodule.exports = checkCase\n","//these tags don't have plurals\nconst noPlurals = ['Uncountable', 'Pronoun', 'Place', 'Value', 'Person', 'Month', 'WeekDay', 'RelativeDay', 'Holiday']\n\nconst notPlural = [/ss$/, /sis$/, /[uo]s$/]\nconst notSingular = [/i$/, /ae$/, /men$/, /tia$/]\n\n/** turn nouns into singular/plural */\nconst checkPlural = function(t, world) {\n  if (t.tags.Noun) {\n    let str = t.normal\n    //skip existing tags, fast\n    if (t.tags.Singular || t.tags.Plural) {\n      return\n    }\n    //too short\n    if (str.length <= 2) {\n      return\n    }\n    //is it impossible to be plural?\n    if (noPlurals.find(tag => t.tags[tag])) {\n      return\n    }\n    // finally, fallback 'looks check plural' rules..\n    if (/s$/.test(str) === true) {\n      //avoid anything too sketchy to be plural\n      if (notPlural.find(reg => reg.test(str))) {\n        return\n      }\n      t.tag('Plural', 'plural-fallback', world)\n      return\n    }\n    //avoid anything too sketchy to be singular\n    if (notSingular.find(reg => reg.test(str))) {\n      return\n    }\n    t.tag('Singular', 'singular-fallback', world)\n  }\n}\nmodule.exports = checkPlural\n","const hasPrefix = /^(re|un)-?[a-z\\u00C0-\\u00FF]/\nconst prefix = /^(re|un)-?/\n\n/** check 'rewatch' in lexicon as 'watch' */\nconst checkPrefix = function(terms, world) {\n  let lex = world.lexicon\n  terms.forEach(term => {\n    // skip if we have a good tag already\n    if (term.isKnown() === true) {\n      return\n    }\n    //does it start with 'un|re'\n    if (hasPrefix.test(term.normal) === true) {\n      // look for the root word in the lexicon:\n      let stem = term.normal.replace(prefix, '')\n      if (lex[stem] !== undefined && lex.hasOwnProperty(stem) === true) {\n        term.tag(lex[stem], 'stem-' + stem, world)\n      }\n    }\n  })\n}\nmodule.exports = checkPrefix\n","const step = {\n  neighbours: require('./01-neighbours'),\n  case: require('./02-case'),\n  plural: require('./04-plurals'),\n  stem: require('./03-stem'),\n}\n//\nconst fallbacks = function(doc) {\n  let terms = doc.termList()\n  let world = doc.world\n\n  // if it's empty, consult it's neighbours, first\n  step.neighbours(terms, world)\n\n  // is there a case-sensitive clue?\n  step.case(terms, world)\n\n  // check 'rewatch' as 'watch'\n  step.stem(terms, world)\n\n  // ... fallback to a noun!\n  terms.forEach(t => {\n    if (t.isKnown() === false) {\n      t.tag('Noun', 'noun-fallback', doc.world)\n    }\n  })\n\n  //are the nouns singular or plural?\n  terms.forEach(t => {\n    step.plural(t, doc.world)\n  })\n\n  return doc\n}\nmodule.exports = fallbacks\n","const hasNegative = /n't$/\n\nconst irregulars = {\n  \"won't\": ['will', 'not'],\n  wont: ['will', 'not'],\n  \"can't\": ['can', 'not'],\n  cant: ['can', 'not'],\n  cannot: ['can', 'not'],\n  \"shan't\": ['should', 'not'],\n  dont: ['do', 'not'],\n  dun: ['do', 'not'],\n  // \"ain't\" is ambiguous for is/was\n}\n\nconst checkNegative = function(term) {\n  //check named-ones\n  if (irregulars.hasOwnProperty(term.normal) === true) {\n    return irregulars[term.normal]\n  }\n  //try it normally\n  if (hasNegative.test(term.normal) === true) {\n    let main = term.normal.replace(hasNegative, '')\n    return [main, 'not']\n  }\n  return null\n}\nmodule.exports = checkNegative\n","const contraction = /([a-z\\u00C0-\\u00FF]+)'([a-z]{1,2})$/i\n\n//these ones don't seem to be ambiguous\nconst easy = {\n  ll: 'will',\n  ve: 'have',\n  re: 'are',\n  m: 'am',\n  \"n't\": 'not',\n}\n//\nconst checkApostrophe = function(term) {\n  let parts = term.text.match(contraction)\n  if (parts === null) {\n    return null\n  }\n  if (easy.hasOwnProperty(parts[2])) {\n    return [parts[1], easy[parts[2]]]\n  }\n  return null\n}\nmodule.exports = checkApostrophe\n","const irregulars = {\n  wanna: ['want', 'to'],\n  gonna: ['going', 'to'],\n  im: ['i', 'am'],\n  alot: ['a', 'lot'],\n  ive: ['i', 'have'],\n  imma: ['I', 'will'],\n\n  \"where'd\": ['where', 'did'],\n  whered: ['where', 'did'],\n  \"when'd\": ['when', 'did'],\n  whend: ['when', 'did'],\n  \"how'd\": ['how', 'did'],\n  howd: ['how', 'did'],\n  \"what'd\": ['what', 'did'],\n  whatd: ['what', 'did'],\n  \"let's\": ['let', 'us'],\n\n  //multiple word contractions\n  dunno: ['do', 'not', 'know'],\n  brb: ['be', 'right', 'back'],\n  gtg: ['got', 'to', 'go'],\n  irl: ['in', 'real', 'life'],\n  tbh: ['to', 'be', 'honest'],\n  imo: ['in', 'my', 'opinion'],\n  til: ['today', 'i', 'learned'],\n  rn: ['right', 'now'],\n  twas: ['it', 'was'],\n  '@': ['at'],\n}\n\n// either 'is not' or 'are not'\nconst doAint = function(term, phrase) {\n  let terms = phrase.terms()\n  let index = terms.indexOf(term)\n  let before = terms.slice(0, index)\n  //look for the preceding noun\n  let noun = before.find(t => {\n    return t.tags.Noun\n  })\n  if (noun && noun.tags.Plural) {\n    return ['are', 'not']\n  }\n  return ['is', 'not']\n}\n\n//\nconst checkIrregulars = function(term, phrase) {\n  //this word needs it's own logic:\n  if (term.normal === `ain't` || term.normal === 'aint') {\n    return doAint(term, phrase)\n  }\n  //check white-list\n  if (irregulars.hasOwnProperty(term.normal)) {\n    return irregulars[term.normal]\n  }\n  return null\n}\nmodule.exports = checkIrregulars\n","const hasApostropheS = /([a-z\\u00C0-\\u00FF]+)'s$/i\n\nconst blacklist = {\n  \"that's\": true,\n  \"there's\": true,\n}\nconst isPossessive = (term, nextTerm) => {\n  //a pronoun can't be possessive - \"he's house\"\n  if (term.tags.Pronoun || term.tags.QuestionWord) {\n    return false\n  }\n  if (blacklist.hasOwnProperty(term.normal)) {\n    return false\n  }\n  //if end of sentence, it is possessive - \"was spencer's\"\n  if (!nextTerm) {\n    return true\n  }\n  //a gerund suggests 'is walking'\n  if (nextTerm.tags.Verb) {\n    return false\n  }\n  //spencer's house\n  if (nextTerm.tags.Noun) {\n    return true\n  }\n  //an adjective suggests 'is good'\n  if (nextTerm.tags.Adjective || nextTerm.tags.Adverb || nextTerm.tags.Verb) {\n    return false\n  }\n  return false\n}\n\nconst isHas = (term, phrase) => {\n  let terms = phrase.terms()\n  let index = terms.indexOf(term)\n  let after = terms.slice(index + 1, index + 3)\n  //look for a past-tense verb\n  return after.find(t => {\n    return t.tags.PastTense\n  })\n}\n\nconst checkPossessive = function(term, phrase, world) {\n  //the rest of 's\n  if (hasApostropheS.test(term.normal) === true) {\n    let nextTerm = phrase.pool.get(term.next)\n\n    //spencer's thing vs spencer-is\n    if (term.tags.Possessive || isPossessive(term, nextTerm) === true) {\n      term.tag('#Possessive', 'isPossessive', world)\n      return null\n    }\n    //'spencer is'\n    let found = term.normal.match(hasApostropheS)\n    if (found !== null) {\n      if (isHas(term, phrase)) {\n        return [found[1], 'has']\n      }\n      return [found[1], 'is']\n    }\n  }\n  return null\n}\nmodule.exports = checkPossessive\n","const hasPerfect = /[a-z\\u00C0-\\u00FF]'d$/\n\n/** split `i'd` into 'i had', or 'i would' */\nconst checkPerfect = function(term, phrase) {\n  if (hasPerfect.test(term.normal)) {\n    let root = term.normal.replace(/'d$/, '')\n    //look at the next few words\n    let terms = phrase.terms()\n    let index = terms.indexOf(term)\n    let after = terms.slice(index + 1, index + 4)\n    //is it before a past-tense verb? - 'i'd walked'\n    for (let i = 0; i < after.length; i++) {\n      let t = after[i]\n      if (t.tags.Verb) {\n        if (t.tags.PastTense) {\n          return [root, 'had']\n        }\n        return [root, 'would']\n      }\n    }\n    //otherwise, 'i'd walk'\n    return [root, 'would']\n  }\n  return null\n}\nmodule.exports = checkPerfect\n","const checkNegative = require('./01-negative')\nconst checkApostrophe = require('./02-simple')\nconst checkIrregulars = require('./03-irregulars')\nconst checkPossessive = require('./04-possessive')\nconst checkPerfect = require('./05-perfectTense')\nconst build = require('../../01-tokenizer')\n\nconst createPhrase = function(found, doc) {\n  //create phrase from ['would', 'not']\n  let phrase = build.fromText(found.join(' '), doc.pool())[0]\n  //tag it\n  // let tmpDoc = doc.buildFrom([phrase])\n  // tmpDoc.tagger()\n  //make these terms implicit\n  phrase.terms().forEach((t, i) => {\n    t.implicit = t.text\n    t.text = ''\n    // remove whitespace for implicit terms\n    if (i > 0) {\n      t.preText = ''\n    }\n  })\n  return phrase\n}\n\nconst contractions = function(doc) {\n  //disambiguate complex apostrophe-s situations\n  let m = doc.if(`/'s$/`)\n  if (m.found) {\n    //fix for 'jamie's bite' mis-tagging\n    let fix = m.match(`/'s$/ #Adverb? #Adjective? #Infinitive`)\n    fix.firstTerm().tagSafe('#Possessive', 'poss-inf')\n    fix.lastTerm().tagSafe('#Noun', 'poss-inf')\n    //rocket's red glare\n    m.match(`[/'s$/] #Adverb? #Adjective? #Noun`).tagSafe('Possessive')\n  }\n  let world = doc.world\n  doc.list.forEach(p => {\n    let terms = p.terms()\n    for (let i = 0; i < terms.length; i += 1) {\n      let term = terms[i]\n      let found = checkNegative(term)\n      found = found || checkApostrophe(term)\n      found = found || checkIrregulars(term, p)\n      found = found || checkPossessive(term, p, world)\n      found = found || checkPerfect(term, p)\n      //add them in\n      if (found !== null) {\n        let newPhrase = createPhrase(found, doc)\n        //set text as contraction\n        newPhrase.terms(0).text = term.text\n        //grab sub-phrase to remove\n        let match = p.buildFrom(term.id, 1, doc.pool())\n        match.replace(newPhrase, doc)\n      }\n    }\n  })\n  return doc\n}\nmodule.exports = contractions\n","let orgWords = require('./data/orgWords')\n\n//could this word be an organization\nconst maybeOrg = function(t) {\n  //must be a noun\n  if (!t.tags.Noun) {\n    return false\n  }\n  //can't be these things\n  if (t.tags.Pronoun || t.tags.Comma || t.tags.Possessive) {\n    return false\n  }\n  //must be one of these\n  if (t.tags.TitleCase || t.tags.Organization || t.tags.Acronym || t.tags.Place) {\n    return true\n  }\n  return false\n}\n\nconst tagOrgs = function(doc, termArr) {\n  termArr.forEach(terms => {\n    for (let i = 0; i < terms.length; i += 1) {\n      let t = terms[i]\n      if (orgWords[t.normal] !== undefined && orgWords.hasOwnProperty(t.normal) === true) {\n        // look-backward - eg. 'Toronto University'\n        let lastTerm = terms[i - 1]\n        if (lastTerm !== undefined && maybeOrg(lastTerm) === true) {\n          lastTerm.tag('Organization', 'org-word-1', doc.world)\n          t.tag('Organization', 'org-word-2', doc.world)\n          continue\n        }\n        //look-forward - eg. University of Toronto\n        let nextTerm = terms[i + 1]\n        if (nextTerm !== undefined && nextTerm.normal === 'of') {\n          if (terms[i + 2] && maybeOrg(terms[i + 2])) {\n            t.tag('Organization', 'org-of-word-1', doc.world)\n            nextTerm.tag('Organization', 'org-of-word-2', doc.world)\n            terms[i + 2].tag('Organization', 'org-of-word-3', doc.world)\n            continue\n          }\n        }\n      }\n    }\n  })\n  if (doc.has('#Acronym')) {\n    doc\n      .match('the [#Acronym]')\n      .notIf('(iou|fomo|yolo|diy|dui|nimby)')\n      .tag('Organization', 'the-acronym')\n    doc\n      .match('#Acronym')\n      .match('#Possessive')\n      .tag('Organization', 'possessive-acronym')\n  }\n  // let matches = doc.match(orgWords);\n  // console.log(matches);\n  return doc\n}\nmodule.exports = tagOrgs\n","/** if each letter represents a whole word */\nconst tagAcronyms = function(doc, termArr) {\n  termArr.forEach(terms => {\n    terms.forEach(t => {\n      if (t.isAcronym()) {\n        t.tagSafe('Acronym', 'acronym-step', doc.world)\n        t.tagSafe('Noun', 'acronym-infer', doc.world)\n      }\n    })\n  })\n  return doc\n}\nmodule.exports = tagAcronyms\n","const organizations = require('./02-organizations')\nconst acronyms = require('./01-acronyms')\n\n//some 'deeper' tagging, based on some basic word-knowledge\nconst inference = function(doc) {\n  let termArr = doc.list.map(p => p.terms())\n  acronyms(doc, termArr)\n  organizations(doc, termArr)\n  return doc\n}\nmodule.exports = inference\n","//mostly pos-corections here\nconst miscCorrection = function(doc) {\n  //ambig prepositions/conjunctions\n  if (doc.has('so')) {\n    //so funny\n    doc\n      .match('so #Adjective')\n      .match('so')\n      .tag('Adverb', 'so-adv')\n    //so the\n    doc\n      .match('so #Noun')\n      .match('so')\n      .tag('Conjunction', 'so-conj')\n    //do so\n    doc\n      .match('do so')\n      .match('so')\n      .tag('Noun', 'so-noun')\n  }\n  if (doc.has('all')) {\n    //all students\n    doc.match('[all] #Determiner? #Noun').tag('Adjective', 'all-noun')\n    //it all fell apart\n    doc.match('[all] #Verb').tag('Adverb', 'all-verb')\n  }\n  //the ambiguous word 'that' and 'which'\n  if (doc.has('(that|which)')) {\n    //remind john that\n    doc\n      .match('#Verb #Adverb? #Noun (that|which)')\n      .lastTerm()\n      .tag('Preposition', 'that-prep')\n    //that car goes\n    doc\n      .match('that #Noun #Verb')\n      .firstTerm()\n      .tag('Determiner', 'that-determiner')\n    //work, which has been done.\n    doc.match('#Comma [which] (#Pronoun|#Verb)').tag('Preposition', 'which-copula')\n    //things that provide\n    // doc.match('#Plural (that|which) #Adverb? #Verb').term(1).tag('Preposition', 'noun-that');\n  }\n  //like\n  if (doc.has('like')) {\n    doc.match('just [like]').tag('Preposition', 'like-preposition')\n    //folks like her\n    doc.match('#Noun [like] #Noun').tag('Preposition', 'noun-like')\n    //look like\n    doc.match('#Verb [like]').tag('Adverb', 'verb-like')\n    //exactly like\n    doc\n      .match('#Adverb like')\n      .notIf('(really|generally|typically|usually|sometimes|often) like')\n      .lastTerm()\n      .tag('Adverb', 'adverb-like')\n  }\n\n  if (doc.has('#TitleCase')) {\n    //FitBit Inc\n    doc.match('#TitleCase (ltd|co|inc|dept|assn|bros)').tag('Organization', 'org-abbrv')\n    //Foo District\n    doc\n      .match('#TitleCase+ (district|region|province|county|prefecture|municipality|territory|burough|reservation)')\n      .tag('Region', 'foo-district')\n    //District of Foo\n    doc\n      .match('(district|region|province|municipality|territory|burough|state) of #TitleCase')\n      .tag('Region', 'district-of-Foo')\n  }\n\n  if (doc.has('#Hyphenated')) {\n    //air-flow\n    doc\n      .match('#Hyphenated #Hyphenated')\n      .match('#Noun #Verb')\n      .tag('Noun', 'hyphen-verb')\n    let hyphen = doc.match('#Hyphenated+')\n    if (hyphen.has('#Expression')) {\n      //ooh-wee\n      hyphen.tag('Expression', 'ooh-wee')\n    }\n  }\n\n  if (doc.has('#Place')) {\n    //West Norforlk\n    doc.match('(west|north|south|east|western|northern|southern|eastern)+ #Place').tag('Region', 'west-norfolk')\n    //some us-state acronyms (exlude: al, in, la, mo, hi, me, md, ok..)\n    doc\n      .match('#City [#Acronym]')\n      .match('(al|ak|az|ar|ca|ct|dc|fl|ga|id|il|nv|nh|nj|ny|oh|or|pa|sc|tn|tx|ut|vt|pr)')\n      .tag('Region', 'us-state')\n  }\n  //misc:\n  //foot/feet\n  doc.match('(foot|feet)').tag('Noun', 'foot-noun')\n  doc\n    .match('#Value (foot|feet)')\n    .term(1)\n    .tag('Unit', 'foot-unit')\n  //'u' as pronoun\n  doc.match('#Conjunction [u]').tag('Pronoun', 'u-pronoun-2')\n  //'a/an' can mean 1 - \"a hour\"\n  doc\n    .match('(a|an) (#Duration|hundred|thousand|million|billion|trillion|quadrillion|quintillion|sextillion|septillion)')\n    .ifNo('#Plural')\n    .term(0)\n    .tag('Value', 'a-is-one')\n  //swear-words as non-expression POS\n  //nsfw\n  doc.match('holy (shit|fuck|hell)').tag('Expression', 'swears-expression')\n  doc\n    .match('#Determiner (shit|damn|hell)')\n    .term(1)\n    .tag('Noun', 'swears-noun')\n  doc\n    .match('(shit|damn|fuck) (#Determiner|#Possessive|them)')\n    .term(0)\n    .tag('Verb', 'swears-verb')\n  doc\n    .match('#Copula fucked up?')\n    .not('#Copula')\n    .tag('Adjective', 'swears-adjective')\n  //6 am\n  doc.match('#Holiday (day|eve)').tag('Holiday', 'holiday-day')\n  //timezones\n  doc.match('(standard|daylight|summer|eastern|pacific|central|mountain) standard? time').tag('Time', 'timezone')\n  //canadian dollar, Brazilian pesos\n  doc.match('#Demonym #Currency').tag('Currency', 'demonym-currency')\n  //about to go\n  doc\n    .match('about to #Adverb? #Verb')\n    .match('about to')\n    .tag(['Auxiliary', 'Verb'], 'about-to')\n\n  //right of way\n  doc.match('(right|rights) of .').tag('Noun', 'right-of')\n  return doc\n}\n\nmodule.exports = miscCorrection\n","//Determiner-signals\nconst fixThe = function(doc) {\n  if (doc.has('#Determiner')) {\n    //the wait to vote\n    doc.match('(the|this) [#Verb] #Preposition .').tag('Noun', 'correction-determiner1')\n    //the swim\n    doc\n      .match('(the|those|these) (#Infinitive|#PresentTense|#PastTense)')\n      .term(1)\n      .tag('Noun', 'correction-determiner2')\n    //a staggering cost\n    doc.match('(a|an) [#Gerund]').tag('Adjective', 'correction-a|an')\n    doc\n      .match('(a|an) #Adjective (#Infinitive|#PresentTense)')\n      .term(2)\n      .tag('Noun', 'correction-a|an2')\n    //some pressing issues\n    doc.match('some [#Verb] #Plural').tag('Noun', 'correction-determiner6')\n    //the test string\n    doc.match('#Determiner [#Infinitive] #Noun').tag('Noun', 'correction-determiner7')\n    //the orange.\n    doc\n      .match('#Determiner #Adjective$')\n      .notIf('(#Comparative|#Superlative)')\n      .term(1)\n      .tag('Noun', 'the-adj-1')\n    //the orange is\n    doc.match('#Determiner [#Adjective] (#Copula|#PastTense|#Auxiliary)').tag('Noun', 'the-adj-2')\n    //the nice swim\n    doc.match('(the|this|those|these) #Adjective [#Verb]').tag('Noun', 'the-adj-verb')\n    //the truly nice swim\n    doc.match('(the|this|those|these) #Adverb #Adjective [#Verb]').tag('Noun', 'correction-determiner4')\n    //a stream runs\n    doc.match('(the|this|a|an) [#Infinitive] #Adverb? #Verb').tag('Noun', 'correction-determiner5')\n    //a sense of\n    doc.match('#Determiner [#Verb] of').tag('Noun', 'the-verb-of')\n    //the threat of force\n    doc.match('#Determiner #Noun of [#Verb]').tag('Noun', 'noun-of-noun')\n    //a close\n    doc.match('#Determiner #Adverb? [close]').tag('Adjective', 'a-close')\n    //did a 900, paid a 20\n    doc.match('#Verb (a|an) [#Value]').tag('Singular', 'a-value')\n    //a tv show\n    doc.match('(a|an) #Noun [#Infinitive]').tag('Noun', 'a-noun-inf')\n  }\n  return doc\n}\nmodule.exports = fixThe\n","//\nconst fixNouns = function(doc) {\n  //'more' is not always an adverb\n  doc.match('more #Noun').tag('Noun', 'more-noun')\n  //the word 'second'\n  doc\n    .match('[second] #Noun')\n    .notIf('#Honorific')\n    .unTag('Unit')\n    .tag('Ordinal', 'second-noun')\n  //he quickly foo\n  doc.match('#Noun #Adverb [#Noun]').tag('Verb', 'correction')\n  //fix for busted-up phrasalVerbs\n  doc.match('#Noun [#Particle]').tag('Preposition', 'repair-noPhrasal')\n  //John & Joe's\n  doc.match('#Noun (&|n) #Noun').tag('Organization', 'Noun-&-Noun')\n  //Aircraft designer\n  doc.match('#Noun #Actor').tag('Actor', 'thing-doer')\n  //this rocks\n  doc.match('(this|that) [#Plural]').tag('PresentTense', 'this-verbs')\n  //by a bear.\n  doc\n    .match('#Determiner #Infinitive$')\n    .lastTerm()\n    .tag('Noun', 'a-inf')\n  //the western line\n  doc.match('#Determiner [(western|eastern|northern|southern|central)] #Noun').tag('Noun', 'western-line')\n  doc\n    .match('(#Determiner|#Value) [(linear|binary|mobile|lexical|technical|computer|scientific|formal)] #Noun')\n    .tag('Noun', 'technical-noun')\n  //organization\n  if (doc.has('#Organization')) {\n    doc.match('#Organization of the? #TitleCase').tag('Organization', 'org-of-place')\n    doc.match('#Organization #Country').tag('Organization', 'org-country')\n    doc.match('(world|global|international|national|#Demonym) #Organization').tag('Organization', 'global-org')\n  }\n  if (doc.has('#Possessive')) {\n    //my buddy\n    doc.match('#Possessive [#FirstName]').unTag('Person', 'possessive-name')\n    //spencer kelly's\n    doc\n      .match('#FirstName #Acronym? #Possessive')\n      .ifNo('#Comma')\n      .match('#FirstName #Acronym? #LastName')\n      .tag('Possessive')\n    //Super Corp's fundraiser\n    doc\n      .match('#Organization+ #Possessive')\n      .ifNo('#Comma')\n      .tag('Possessive')\n    //Los Angeles's fundraiser\n    doc\n      .match('#Place+ #Possessive')\n      .ifNo('#Comma')\n      .tag('Possessive')\n  }\n  return doc\n}\nmodule.exports = fixNouns\n","const fixPerson = function(doc) {\n  // 'john E rockefeller'\n  doc.match('#FirstName /^[^aiurck]$/').tag(['Acronym', 'Person'], 'john-e')\n\n  //Doctor john smith jr\n  doc.match('#Honorific #Person').tag('Person', 'honorific-person')\n  doc.match('#Person (jr|sr|md)').tag('Person', 'person-honorific')\n\n  //mr Putin\n  doc.match('(mr|mrs|ms|dr) (#TitleCase|#Possessive)+').tag('#Person', 'mr-putin')\n\n  //a bunch of ambiguous first names\n  let maybeNoun =\n    '(rose|robin|dawn|ray|holly|bill|joy|viola|penny|sky|violet|daisy|melody|kelvin|hope|mercedes|olive|jewel|faith|van|charity|miles|lily|summer|dolly|rod|dick|cliff|lane|reed|kitty|art|jean|trinity)'\n  if (doc.has(maybeNoun)) {\n    doc.match('(#Determiner|#Adverb|#Pronoun|#Possessive) [' + maybeNoun + ']').tag('Noun', 'the-ray')\n    doc\n      .match(maybeNoun + ' (#Person|#Acronym|#TitleCase)')\n      .canBe('#Person')\n      .tag('Person', 'ray-smith')\n  }\n  //verbs or people-names\n  let maybeVerb = '(pat|wade|ollie|will|rob|buck|bob|mark|jack)'\n  if (doc.has(maybeVerb)) {\n    doc.match('(#Modal|#Adverb) [' + maybeVerb + ']').tag('Verb', 'would-mark')\n    doc.match(maybeVerb + ' (#Person|#TitleCase)').tag('Person', 'rob-smith')\n  }\n  //adjectives or people-names\n  let maybeAdj = '(misty|rusty|dusty|rich|randy)'\n  if (doc.has(maybeAdj)) {\n    doc.match('#Adverb [' + maybeAdj + ']').tag('Adjective', 'really-rich')\n    doc.match(maybeAdj + ' (#Person|#TitleCase)').tag('Person', 'randy-smith')\n  }\n  //dates as people names\n  let maybeDate = '(april|june|may|jan|august|eve)'\n  if (doc.has(maybeDate)) {\n    doc\n      .match(String(maybeDate) + ' (#Person|#TitleCase)')\n      .canBe('#Person')\n      .tag('Person', 'june-smith')\n    doc\n      .match('(in|during|on|by|before|#Date) [' + maybeDate + ']')\n      .canBe('#Date')\n      .tag('Date', 'in-june')\n    doc\n      .match(maybeDate + ' (#Date|#Value)')\n      .canBe('#Date')\n      .tag('Date', 'june-5th')\n  }\n  //place-names as people-names\n  let maybePlace = '(paris|alexandria|houston|kobe|salvador|sydney)'\n  if (doc.has(maybePlace)) {\n    doc\n      .match('(in|near|at|from|to|#Place) [' + maybePlace + ']')\n      .canBe('#Place')\n      .tag('Place', 'in-paris')\n    doc\n      .match('[' + maybePlace + '] #Place')\n      .canBe('#Place')\n      .tag('Place', 'paris-france')\n    doc\n      .match('[' + maybePlace + '] #Person')\n      .canBe('#Person')\n      .tag('Person', 'paris-hilton')\n  }\n  //this one is tricky\n  if (doc.match('al')) {\n    doc\n      .match('al (#Person|#TitleCase)')\n      .canBe('#Person')\n      .tag('#Person', 'al-borlen')\n    doc\n      .match('#TitleCase al #TitleCase')\n      .canBe('#Person')\n      .tag('#Person', 'arabic-al-arabic')\n  }\n  //ambiguous honorifics\n  doc\n    .match('(private|general|major|corporal|lord|lady|secretary|premier) #Honorific? #Person')\n    .terms(0)\n    .tag('Honorific', 'ambg-honorifics')\n  //first general..\n  doc\n    .match('(1st|2nd|first|second) #Honorific')\n    .terms(0)\n    .tag('Honorific', 'ordinal-honorific')\n\n  //methods requiring a firstname match\n  if (doc.has('#FirstName')) {\n    // Firstname x (dangerous)\n    let tmp = doc\n      .match('#FirstName #Noun')\n      .ifNo('^#Possessive')\n      .ifNo('#ClauseEnd .')\n    tmp\n      .lastTerm()\n      .canBe('#LastName')\n      .tag('#LastName', 'firstname-noun')\n    //ferdinand de almar\n    doc\n      .match('#FirstName de #Noun')\n      .canBe('#Person')\n      .tag('#Person', 'firstname-de-noun')\n    //Osama bin Laden\n    doc\n      .match('#FirstName (bin|al) #Noun')\n      .canBe('#Person')\n      .tag('#Person', 'firstname-al-noun')\n    //John L. Foo\n    doc.match('#FirstName #Acronym #TitleCase').tag('Person', 'firstname-acronym-titlecase')\n    //Andrew Lloyd Webber\n    doc.match('#FirstName #FirstName #TitleCase').tag('Person', 'firstname-firstname-titlecase')\n    //Mr Foo\n    doc.match('#Honorific #FirstName? #TitleCase').tag('Person', 'Honorific-TitleCase')\n    //John Foo\n    doc\n      .match('#FirstName #TitleCase #TitleCase?')\n      .match('#Noun+')\n      .tag('Person', 'firstname-titlecase')\n    //peter the great\n    doc.match('#FirstName the #Adjective').tag('Person', 'correction-determiner5')\n    //very common-but-ambiguous lastnames\n    doc.match('#FirstName (green|white|brown|hall|young|king|hill|cook|gray|price)').tag('#Person', 'firstname-maybe')\n    //Joe K. Sombrero\n    doc\n      .match('#FirstName #Acronym #Noun')\n      .ifNo('#Date')\n      .tag('#Person', 'n-acro-noun')\n      .lastTerm()\n      .tag('#LastName', 'n-acro-noun')\n    // Dwayne 'the rock' Johnson\n    doc\n      .match('#FirstName [#Determiner? #Noun] #LastName')\n      .tag('#NickName', 'first-noun-last')\n      .tag('#Person', 'first-noun-last')\n\n    //john bodego's\n    doc\n      .match('#FirstName (#Singular|#Possessive)')\n      .ifNo('#Date')\n      .ifNo('#NickName')\n      .tag('#Person', 'first-possessive')\n      .lastTerm()\n      .tag('#LastName', 'first-possessive')\n  }\n\n  //methods requiring a lastname match\n  if (doc.has('#LastName')) {\n    // x Lastname\n    doc\n      .match('#Noun #LastName')\n      .firstTerm()\n      .canBe('#FirstName')\n      .tag('#FirstName', 'noun-lastname')\n    //ambiguous-but-common firstnames\n    doc\n      .match('(will|may|april|june|said|rob|wade|ray|rusty|drew|miles|jack|chuck|randy|jan|pat|cliff|bill) #LastName')\n      .firstTerm()\n      .tag('#FirstName', 'maybe-lastname')\n    //Jani K. Smith\n    doc\n      .match('#TitleCase #Acronym? #LastName')\n      .ifNo('#Date')\n      .tag('#Person', 'title-acro-noun')\n      .lastTerm()\n      .tag('#LastName', 'title-acro-noun')\n    //is foo Smith\n    doc\n      .match('#Copula (#Noun|#PresentTense) #LastName')\n      .term(1)\n      .tag('#FirstName', 'copula-noun-lastname')\n  }\n\n  //methods requiring a titlecase\n  if (doc.has('#TitleCase')) {\n    doc\n      .match('#Acronym #TitleCase')\n      .canBe('#Person')\n      .tag('#Person', 'acronym-titlecase')\n    //ludwig van beethovan\n    doc\n      .match('#TitleCase (van|al|bin) #TitleCase')\n      .canBe('#Person')\n      .tag('Person', 'correction-titlecase-van-titlecase')\n    doc\n      .match('#TitleCase (de|du) la? #TitleCase')\n      .canBe('#Person')\n      .tag('Person', 'correction-titlecase-van-titlecase')\n    //Morgan Shlkjsfne\n    doc\n      .match('#Person #TitleCase')\n      .match('#TitleCase #Noun')\n      .canBe('#Person')\n      .tag('Person', 'correction-person-titlecase')\n    //pope francis\n    doc\n      .match('(lady|queen|sister) #TitleCase')\n      .ifNo('#Date')\n      .ifNo('#Honorific')\n      .tag('#FemaleName', 'lady-titlecase')\n    doc\n      .match('(king|pope|father) #TitleCase')\n      .ifNo('#Date')\n      .tag('#MaleName', 'correction-poe')\n  }\n\n  //j.k Rowling\n  doc\n    .match('#Noun van der? #Noun')\n    .canBe('#Person')\n    .tag('#Person', 'von der noun')\n  //king of spain\n  doc\n    .match('(king|queen|prince|saint|lady) of? #Noun')\n    .canBe('#Person')\n    .tag('#Person', 'king-of-noun')\n  //mr X\n  doc.match('#Honorific #Acronym').tag('Person', 'Honorific-TitleCase')\n  //peter II\n  doc.match('#Person #Person the? #RomanNumeral').tag('Person', 'correction-roman-numeral')\n\n  //'Professor Fink', 'General McCarthy'\n  doc.match('#Honorific #Person').tag('Person', 'Honorific-Person')\n\n  //remove single 'mr'\n  doc.match('^#Honorific$').unTag('Person', 'single-honorific')\n  return doc\n}\nmodule.exports = fixPerson\n","//\nconst fixVerb = function(doc) {\n  //still make\n  doc.match('[still] #Verb').tag('Adverb', 'still-verb')\n  //'u' as pronoun\n  doc.match('[u] #Verb').tag('Pronoun', 'u-pronoun-1')\n  //is no walk\n  doc.match('is no [#Verb]').tag('Noun', 'is-no-verb')\n  //different views than\n  doc.match('[#Verb] than').tag('Noun', 'correction')\n  //her polling\n  doc.match('#Possessive [#Verb]').tag('Noun', 'correction-possessive')\n  //there are reasons\n  doc.match('there (are|were) #Adjective? [#PresentTense]').tag('Plural', 'there-are')\n  //jack seems guarded\n  doc.match('#Singular (seems|appears) #Adverb? [#PastTense$]').tag('Adjective', 'seems-filled')\n\n  if (doc.has('(who|what|where|why|how|when)')) {\n    //the word 'how'\n    doc\n      .match('^how')\n      .tag('QuestionWord', 'how-question')\n      .tag('QuestionWord', 'how-question')\n    doc\n      .match('how (#Determiner|#Copula|#Modal|#PastTense)')\n      .term(0)\n      .tag('QuestionWord', 'how-is')\n    // //the word 'which'\n    doc\n      .match('^which')\n      .tag('QuestionWord', 'which-question')\n      .tag('QuestionWord', 'which-question')\n    doc\n      .match('which . (#Noun)+ #Pronoun')\n      .term(0)\n      .tag('QuestionWord', 'which-question2')\n    doc.match('which').tag('QuestionWord', 'which-question3')\n    //where\n\n    //how he is driving\n    let word = doc.match('#QuestionWord #Noun #Copula #Adverb? (#Verb|#Adjective)').firstTerm()\n    word.unTag('QuestionWord').tag('Conjunction', 'how-he-is-x')\n    //when i go fishing\n    word = doc.match('#QuestionWord #Noun #Adverb? #Infinitive not? #Gerund').firstTerm()\n    word.unTag('QuestionWord').tag('Conjunction', 'when i go fishing')\n  }\n\n  if (doc.has('#Copula')) {\n    //is eager to go\n    doc\n      .match('#Copula #Adjective to #Verb')\n      .match('#Adjective to')\n      .tag('Verb', 'correction')\n    //is mark hughes\n    doc.match('#Copula [#Infinitive] #Noun').tag('Noun', 'is-pres-noun')\n\n    doc.match('[#Infinitive] #Copula').tag('Noun', 'infinitive-copula')\n    //sometimes adverbs - 'pretty good','well above'\n    doc\n      .match('#Copula (pretty|dead|full|well) (#Adjective|#Noun)')\n      .ifNo('#Comma')\n      .tag('#Copula #Adverb #Adjective', 'sometimes-adverb')\n    //sometimes not-adverbs\n    doc.match('#Copula [(just|alone)$]').tag('Adjective', 'not-adverb')\n    //jack is guarded\n    doc.match('#Singular is #Adverb? [#PastTense$]').tag('Adjective', 'is-filled')\n  }\n  //went to sleep\n  // doc.match('#Verb to #Verb').lastTerm().tag('Noun', 'verb-to-verb');\n  //support a splattering of auxillaries before a verb\n  let advb = '(#Adverb|not)+?'\n  if (doc.has(advb)) {\n    //had walked\n    doc\n      .match(`(has|had) ${advb} #PastTense`)\n      .not('#Verb$')\n      .tag('Auxiliary', 'had-walked')\n    //was walking\n    doc\n      .match(`#Copula ${advb} #Gerund`)\n      .not('#Verb$')\n      .tag('Auxiliary', 'copula-walking')\n    //been walking\n    doc\n      .match(`(be|been) ${advb} #Gerund`)\n      .not('#Verb$')\n      .tag('Auxiliary', 'be-walking')\n    //would walk\n    doc\n      .match(`(#Modal|did) ${advb} #Verb`)\n      .not('#Verb$')\n      .tag('Auxiliary', 'modal-verb')\n    //would have had\n    doc\n      .match(`#Modal ${advb} have ${advb} had ${advb} #Verb`)\n      .not('#Verb$')\n      .tag('Auxiliary', 'would-have')\n    //would be walking\n    doc\n      .match(`(#Modal) ${advb} be ${advb} #Verb`)\n      .not('#Verb$')\n      .tag('Auxiliary', 'would-be')\n    //would been walking\n    doc\n      .match(`(#Modal|had|has) ${advb} been ${advb} #Verb`)\n      .not('#Verb$')\n      .tag('Auxiliary', 'would-be')\n    //infinitive verbs suggest plural nouns - 'XYZ walk to the store'\n    // r.match(`#Singular+ #Infinitive`).match('#Singular+').tag('Plural', 'infinitive-make-plural');\n  }\n  //fall over\n  doc\n    .match('#PhrasalVerb #PhrasalVerb')\n    .lastTerm()\n    .tag('Particle', 'phrasal-particle')\n  if (doc.has('#Gerund')) {\n    //walking is cool\n    doc\n      .match('#Gerund #Adverb? not? #Copula')\n      .firstTerm()\n      .tag('Activity', 'gerund-copula')\n    //walking should be fun\n    doc\n      .match('#Gerund #Modal')\n      .firstTerm()\n      .tag('Activity', 'gerund-modal')\n    //running-a-show\n    doc.match('#Gerund #Determiner [#Infinitive]').tag('Noun', 'running-a-show')\n    //setting records\n    // doc.match('#Gerund [#PresentTense]').tag('Plural', 'setting-records');\n  }\n  //will be cool -> Copula\n  if (doc.has('will #Adverb? not? #Adverb? be')) {\n    //will be running (not copula\n    if (doc.has('will #Adverb? not? #Adverb? be #Gerund') === false) {\n      //tag it all\n      doc.match('will not? be').tag('Copula', 'will-be-copula')\n      //for more complex forms, just tag 'be'\n      doc\n        .match('will #Adverb? not? #Adverb? be #Adjective')\n        .match('be')\n        .tag('Copula', 'be-copula')\n    }\n  }\n  return doc\n}\nmodule.exports = fixVerb\n","//\nconst fixAdjective = function(doc) {\n  //still good\n  doc\n    .match('still #Adjective')\n    .match('still')\n    .tag('Adverb', 'still-advb')\n  //barely even walk\n  doc.match('(barely|hardly) even').tag('#Adverb', 'barely-even')\n  //big dreams, critical thinking\n  doc.match('#Adjective [#PresentTense]').tag('Noun', 'adj-presentTense')\n  //will secure our\n  doc.match('will [#Adjective]').tag('Verb', 'will-adj')\n  //cheering hard - dropped -ly's\n  doc\n    .match('#PresentTense (hard|quick|long|bright|slow)')\n    .lastTerm()\n    .tag('Adverb', 'lazy-ly')\n  //his fine\n  doc.match('(his|her|its) [#Adjective]').tag('Noun', 'his-fine')\n  //\n  doc.match('#Noun #Adverb? [left]').tag('PastTense', 'left-verb')\n  return doc\n}\nmodule.exports = fixAdjective\n","//\nconst fixValue = function(doc) {\n  //half a million\n  doc.match('half a? #Value').tag('Value', 'half-a-value') //(quarter not ready)\n  //five and a half\n  doc.match('#Value and a (half|quarter)').tag('Value', 'value-and-a-half')\n\n  //all values are either ordinal or cardinal\n  // doc.match('#Value').match('!#Ordinal').tag('#Cardinal', 'not-ordinal');\n\n  //money\n  doc\n    .match('#Value+ #Currency')\n    .tag('Money', 'value-currency')\n    .lastTerm()\n    .tag('Unit', 'money-unit')\n  doc.match('#Money and #Money #Currency?').tag('Money', 'money-and-money')\n\n  //1 800 PhoneNumber\n  doc.match('1 #Value #PhoneNumber').tag('PhoneNumber', '1-800-Value')\n  //(454) 232-9873\n  doc.match('#NumericValue #PhoneNumber').tag('PhoneNumber', '(800) PhoneNumber')\n\n  //two hundredth\n  doc\n    .match('#TextValue+')\n    .match('#Cardinal+ #Ordinal')\n    .tag('Ordinal', 'two-hundredth')\n  return doc\n}\nmodule.exports = fixValue\n","const fixMisc = require('./fixMisc')\nconst fixDeterminer = require('./fixThe')\nconst fixNouns = require('./fixNouns')\nconst fixPerson = require('./fixPerson')\nconst fixVerb = require('./fixVerb')\nconst fixAdjective = require('./fixAdjective')\nconst fixValue = require('./fixValue')\nconst fixDates = require('./fixDates')\n\n//sequence of match-tag statements to correct mis-tags\nconst corrections = function(doc) {\n  if (doc.has('#Determiner')) {\n    fixDeterminer(doc)\n  }\n  if (doc.has('#Noun')) {\n    fixNouns(doc)\n    fixPerson(doc)\n  }\n  if (doc.has('#Verb')) {\n    fixVerb(doc)\n  }\n  if (doc.has('#Adjective')) {\n    fixAdjective(doc)\n  }\n  if (doc.has('#Value')) {\n    fixValue(doc)\n  }\n  // fixDates(doc)\n  fixMisc(doc)\n  return doc\n}\nmodule.exports = corrections\n","const init = require('./01-init')\nconst fallbacks = require('./02-fallbacks')\nconst contractions = require('./03-contractions')\nconst inference = require('./04-inference')\nconst corrections = require('./05-correction')\n\n/** POS-tag all terms in this document */\nconst tagger = function(doc) {\n  // check against any known-words\n  doc = init(doc)\n\n  // everything has gotta be something. ¯\\_(:/)_/¯\n  doc = fallbacks(doc)\n\n  // support \"didn't\" & \"spencer's\"\n  doc = contractions(doc)\n\n  // deduce more specific tags - singular/plurals/quotations...\n  doc = inference(doc)\n\n  // wiggle-around the results, so they make more sense\n  doc = corrections(doc)\n  return doc\n}\nmodule.exports = tagger\n","const addMethod = function(Doc) {\n  /**  */\n  class Acronyms extends Doc {\n    // stripPeriods() {//TODO:finish\n    //   return this\n    // }\n    // addPeriods() {\n    //   return this\n    // }\n  }\n\n  Doc.prototype.acronyms = function(n) {\n    let match = this.match('#Acronym')\n    if (typeof n === 'number') {\n      match = match.get(n)\n    }\n    return new Acronyms(match.list, this, this.world)\n  }\n  return Doc\n}\nmodule.exports = addMethod\n","const addMethod = function(Doc) {\n  /**  */\n  class Contractions extends Doc {\n    constructor(list, from, world) {\n      super(list, from, world)\n      this.contracted = null\n    }\n    // expand() {}\n    // contract() {}\n    // expanded() {}\n    // contracted() {}\n  }\n\n  //find contractable, expanded-contractions\n  const findExpanded = r => {\n    let remain = r.not('#Contraction')\n    let m = remain.match('(#Noun|#QuestionWord) (#Copula|did|do|have|had|could|would|will)')\n    m.concat(remain.match('(they|we|you|i) have'))\n    m.concat(remain.match('i am'))\n    m.concat(remain.match('(#Copula|#Modal|do|does|have|has|can|will) not'))\n    return m\n  }\n\n  Doc.prototype.acronyms = function(n) {\n    //find currently-contracted\n    let found = this.match('#Contraction #Contraction #Contraction?')\n    found.list = found.list.map(ts => {\n      let c = new Contractions(ts.terms, ts.world, ts.refText, ts.refTerms)\n      c.contracted = true\n      return c\n    })\n    //find currently-expanded\n    let expanded = findExpanded(this)\n    expanded.list.forEach(ts => {\n      let c = new Contractions(ts.terms, ts.world, ts.refText, ts.refTerms)\n      c.contracted = false\n      found.list.push(c)\n    })\n    found.sort('chronological')\n    //get nth element\n    if (typeof n === 'number') {\n      found = found.get(n)\n    }\n    return new Contractions(found.list, this, this.world)\n  }\n  return Doc\n}\nmodule.exports = addMethod\n","const selections = [require('./acronyms'), require('./contractions')]\n\nconst extend = function(Doc) {\n  selections.forEach(addFn => addFn(Doc))\n  return Doc\n}\nmodule.exports = extend\n","const methods = {\n  misc: require('./methods'),\n  match: require('./match'),\n  selections: require('./selections'),\n}\nconst tagger = require('../02-tagger')\nconst extend = require('../Subset')\n\n/** a parsed text object */\nclass Doc {\n  constructor(list, from, world) {\n    this.list = list\n    //quiet these properties in console.logs\n    Object.defineProperty(this, 'from', {\n      enumerable: false,\n      value: from,\n    })\n    //borrow some missing data from parent\n    if (world === undefined && from !== undefined) {\n      world = from.world\n    }\n    //'world' getter\n    Object.defineProperty(this, 'world', {\n      enumerable: false,\n      value: world,\n    })\n    //'found' getter\n    Object.defineProperty(this, 'found', {\n      get: () => this.list.length > 0,\n    })\n    //'length' getter\n    Object.defineProperty(this, 'length', {\n      get: () => this.list.length,\n    })\n    // this is way easier than .constructor.name...\n    Object.defineProperty(this, 'isA', {\n      get: () => 'Doc',\n    })\n  }\n\n  /** run part-of-speech tagger on all results*/\n  tagger() {\n    return tagger(this)\n  }\n\n  /** pool is stored on phrase objects */\n  pool() {\n    if (this.list.length > 0) {\n      return this.list[0].pool\n    }\n    return this.all().list[0].pool\n  }\n\n  /** return the previous result */\n  parent() {\n    if (this.from) {\n      return this.from\n    }\n    return this\n  }\n\n  /**  return a list of all previous results */\n  parents() {\n    let arr = []\n    const addParent = function(doc) {\n      if (doc.from) {\n        arr.push(doc.from)\n        addParent(doc.from)\n      }\n    }\n    addParent(this)\n    return arr.reverse()\n  }\n\n  /** return the root, first document */\n  all() {\n    return this.parents()[0] || this\n  }\n}\n\n/** create a new Document object */\nDoc.prototype.buildFrom = function(list) {\n  return new Doc(list, this, this.world)\n}\n/** add new subclass methods */\nDoc.prototype.extend = function(fn) {\n  fn(this)\n  return this\n}\n\nObject.assign(Doc.prototype, methods.match)\nObject.assign(Doc.prototype, methods.selections)\nObject.assign(Doc.prototype, methods.misc)\n\n//add sub-classes\nextend(Doc)\n\n//aliases\nconst aliases = {\n  unTag: 'untag',\n  and: 'match',\n  notIf: 'ifNo',\n  only: 'if',\n  onlyIf: 'if',\n}\nObject.keys(aliases).forEach(k => (Doc.prototype[k] = Doc.prototype[aliases[k]]))\nmodule.exports = Doc\n","/* global define */\nconst build = require('./01-tokenizer')\nconst pkg = require('../package.json')\nconst World = require('./World')\nconst Doc = require('./Doc/Doc')\n\n//blast-out our word-lists, just once\nlet world = new World()\n\n/** parse and tag text into a compromise object  */\nconst nlp = function(text = '') {\n  let list = build.fromText(text)\n  let doc = new Doc(list, null, world)\n  doc.tagger()\n  return doc\n}\n\n/** uncompress and apply a user-submitted lexicon */\nnlp.plugin = function(plugin) {\n  world.plugin(plugin)\n}\nnlp.extend = function(fn) {\n  fn(Doc)\n}\n\n/** make a deep-copy of the library state */\nnlp.clone = function() {\n  world = world.clone()\n  return this\n}\n\n/** re-generate a Doc object from .json() results */\nnlp.fromJSON = function(json) {\n  let list = build.fromJSON(json)\n  return new Doc(list, null, world)\n}\n\n/** log our decision-making for debugging */\nnlp.verbose = function(bool = true) {\n  world.verbose(bool)\n}\n\n/** current version of the library */\nnlp.version = pkg.version\n\n//and then all the exports..\nif (typeof self !== 'undefined') {\n  self.nlp = nlp // Web Worker\n} else if (typeof window !== 'undefined') {\n  window.nlp = nlp // Browser\n} else if (typeof global !== 'undefined') {\n  global.nlp = nlp // NodeJS\n}\n//don't forget amd!\nif (typeof define === 'function' && define.amd) {\n  define(nlp)\n}\nif (typeof module !== 'undefined') {\n  module.exports = nlp\n}\n"],"names":["killUnicode","isAcronym","normalize","doesMatch","out","require$$0","require$$1","require$$2","require$$3","canBe","unTag","parseTerm","makeId","tagMethods","hasSpace","addWhitespace","stitchIn","stretchAll","joinPhrase","deletePhrase","isArray","syntax","failFast","tryMatch","matchAll","notMatch","matchMethods","methods","compact","abbreviations","splitSentences","splitTerms","Pool","Term","Phrase","suffixes","checkSuffix","genericFill","addWords","addTags","addDownword","misc","orgWords","startLexicon","defaultTags","defaultData","efrt","addPlurals","addConjugations","clone","setTag","build","colors","addIn","addConflicts","conflicts","addColors","nouns","verbs","values","dates","addDownward","tagset","debug","require$$4","require$$5","parseSyntax","findMethods","regex","Adj","Inf","Pres","Sing","Past","Actor","Noun","Last","regexes","checkRegex","emoticon","emojiReg","titleCase","irregulars","checkNegative","checkApostrophe","checkIrregulars","checkPossessive","checkPerfect","acronyms","organizations","fixDeterminer","fixNouns","fixPerson","fixVerb","fixAdjective","fixValue","init","fallbacks","contractions","inference","corrections","addMethod","selections","tagger","extend","aliases","World","Doc","global"],"mappings":"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"}