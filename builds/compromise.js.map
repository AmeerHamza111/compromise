{"version":3,"file":"compromise.js","sources":["../src/Term/_id.js","../src/Term/clean/unicode.js","../src/Term/clean/isAcronym.js","../src/Term/clean/index.js","../src/Term/parse.js","../src/Term/methods/01-case.js","../src/Term/methods/02-punctuation.js","../src/Term/methods/_doesMatch.js","../src/Term/methods/03-misc.js","../src/Term/methods/04-out.js","../src/Term/methods/index.js","../src/Term/tag/fns.js","../src/Term/tag/add.js","../src/Term/tag/unTag.js","../src/Term/tag/canBe.js","../src/Term/tag/index.js","../src/Term/Term.js","../src/Phrase/methods/01-utils.js","../src/Phrase/methods/02-out.js","../src/Phrase/methods/03-change.js","../src/Phrase/methods/_join/append.js","../src/Phrase/methods/_join/prepend.js","../src/Phrase/methods/_join/delete.js","../src/Phrase/methods/04-split.js","../src/Phrase/methods/index.js","../src/Phrase/match/02-failFast.js","../src/Phrase/match/03-tryMatch.js","../src/Doc/match/parseToken.js","../src/Doc/match/syntax.js","../src/Phrase/match/01-matchAll.js","../src/Phrase/match/not.js","../src/Phrase/match/index.js","../src/Phrase/Phrase.js","../src/01-tokenizer/Pool.js","../src/01-tokenizer/01-sentences.js","../src/01-tokenizer/02-words.js","../src/01-tokenizer/index.js","../src/_version.js","../src/World/_data.js","../src/World/tags/conflicts.js","../src/World/tags/tags/nouns.js","../src/World/tags/tags/verbs.js","../src/World/tags/tags/values.js","../src/World/tags/tags/dates.js","../src/World/tags/tags/misc.js","../src/World/tags/addDownward.js","../src/World/tags/index.js","../node_modules/efrt-unpack/efrt-unpack.min.js","../src/World/addWords.js","../src/World/addIrregulars.js","../src/World/data/misc.js","../src/World/data/plurals.js","../src/World/data/conjugations.js","../src/transforms/verbs/suffixes.js","../src/transforms/verbs/01-suffixes.js","../src/transforms/verbs/02-generic.js","../src/transforms/verbs/index.js","../src/transforms/adjectives/toNoun.js","../src/transforms/adjectives/toSuperlative.js","../src/transforms/adjectives/toComparative.js","../src/transforms/adjectives/toAdverb.js","../src/transforms/adjectives/toVerb.js","../src/transforms/adjectives/index.js","../src/transforms/nouns/01-suffixes.js","../src/transforms/nouns/index.js","../src/World/World.js","../src/Doc/methods/_tag.js","../src/Doc/methods/04-tag.js","../src/Doc/methods/01-utils.js","../src/Doc/methods/03-whitespace.js","../src/Doc/methods/02-case.js","../src/Doc/methods/05-loops.js","../src/Doc/methods/06-replace.js","../src/Doc/methods/07-sort.js","../src/Doc/methods/08-clone.js","../src/world/tags/conflicts.js","../src/world/tags/tags/nouns.js","../src/world/tags/tags/verbs.js","../src/world/tags/tags/values.js","../src/world/tags/tags/dates.js","../src/world/tags/tags/misc.js","../src/world/tags/addDownward.js","../src/world/tags/index.js","../src/Doc/methods/_debug.js","../src/Doc/methods/09-out.js","../src/Doc/methods/10-split.js","../src/Doc/methods/11-normalize.js","../src/Doc/methods/index.js","../src/Doc/match/index.js","../src/Doc/selections/find.js","../src/Doc/selections/index.js","../src/02-tagger/01-init/01-lexicon.js","../src/02-tagger/01-init/02-punctuation.js","../src/02-tagger/01-init/regexes/index.js","../src/02-tagger/01-init/03-regex.js","../src/02-tagger/01-init/suffixes/regex.js","../src/02-tagger/01-init/suffixes/suffixList.js","../src/02-tagger/01-init/04-suffixes.js","../src/02-tagger/01-init/emoji/regex.js","../src/02-tagger/01-init/emoji/list.js","../src/02-tagger/01-init/05-emoji.js","../src/02-tagger/01-init/index.js","../src/02-tagger/02-fallbacks/data/markov.js","../src/02-tagger/02-fallbacks/01-neighbours.js","../src/02-tagger/02-fallbacks/02-case.js","../src/02-tagger/02-fallbacks/04-plurals.js","../src/02-tagger/02-fallbacks/03-stem.js","../src/02-tagger/02-fallbacks/index.js","../src/02-tagger/03-contractions/01-negative.js","../src/02-tagger/03-contractions/02-simple.js","../src/02-tagger/03-contractions/03-irregulars.js","../src/02-tagger/03-contractions/04-possessive.js","../src/02-tagger/03-contractions/05-perfectTense.js","../src/02-tagger/03-contractions/index.js","../src/02-tagger/04-inference/data/orgWords.js","../src/02-tagger/04-inference/01-organizations.js","../src/02-tagger/04-inference/index.js","../src/02-tagger/05-correction/fixMisc.js","../src/02-tagger/05-correction/fixThe.js","../src/02-tagger/05-correction/fixNouns.js","../src/02-tagger/05-correction/fixPerson.js","../src/02-tagger/05-correction/fixVerb.js","../src/02-tagger/05-correction/fixAdjective.js","../src/02-tagger/05-correction/fixValue.js","../src/02-tagger/05-correction/fixDates.js","../src/02-tagger/05-correction/index.js","../src/02-tagger/index.js","../src/Subset/acronyms.js","../src/Subset/contractions.js","../src/Subset/parentheses.js","../src/Subset/possessives.js","../src/Subset/lists.js","../src/Subset/index.js","../src/Doc/Doc.js","../src/index.js"],"sourcesContent":["//this is a not-well-thought-out way to reduce our dependence on `object===object` stuff\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'.split('')\n\n//generates a unique id for this term\nfunction makeId(str) {\n  str = str || '_'\n  var text = str + '-'\n  for (var i = 0; i < 7; i++) {\n    text += chars[Math.floor(Math.random() * chars.length)]\n  }\n  return text\n}\n\nmodule.exports = makeId\n","//a hugely-ignorant, and widely subjective transliteration of latin, cryllic, greek unicode characters to english ascii.\n//approximate visual (not semantic or phonetic) relationship between unicode and ascii characters\n//http://en.wikipedia.org/wiki/List_of_Unicode_characters\n//https://docs.google.com/spreadsheet/ccc?key=0Ah46z755j7cVdFRDM1A2YVpwa1ZYWlpJM2pQZ003M0E\nlet compact = {\n  '!': '¡',\n  '?': '¿Ɂ',\n  '\"': '“”\"❝❞',\n  \"'\": '‘‛❛❜',\n  '-': '—–',\n  a: 'ªÀÁÂÃÄÅàáâãäåĀāĂăĄąǍǎǞǟǠǡǺǻȀȁȂȃȦȧȺΆΑΔΛάαλАадѦѧӐӑӒӓƛɅæ',\n  b: 'ßþƀƁƂƃƄƅɃΒβϐϦБВЪЬвъьѢѣҌҍ',\n  c: '¢©ÇçĆćĈĉĊċČčƆƇƈȻȼͻͼͽϲϹϽϾСсєҀҁҪҫ',\n  d: 'ÐĎďĐđƉƊȡƋƌǷ',\n  e: 'ÈÉÊËèéêëĒēĔĕĖėĘęĚěƎƏƐǝȄȅȆȇȨȩɆɇΈΕΞΣέεξϱϵ϶ЀЁЕЭеѐёҼҽҾҿӖӗӘәӚӛӬӭ',\n  f: 'ƑƒϜϝӺӻҒғſ',\n  g: 'ĜĝĞğĠġĢģƓǤǥǦǧǴǵ',\n  h: 'ĤĥĦħƕǶȞȟΉΗЂЊЋНнђћҢңҤҥҺһӉӊ',\n  I: 'ÌÍÎÏ',\n  i: 'ìíîïĨĩĪīĬĭĮįİıƖƗȈȉȊȋΊΐΪίιϊІЇії',\n  j: 'ĴĵǰȷɈɉϳЈј',\n  k: 'ĶķĸƘƙǨǩΚκЌЖКжкќҚқҜҝҞҟҠҡ',\n  l: 'ĹĺĻļĽľĿŀŁłƚƪǀǏǐȴȽΙӀӏ',\n  m: 'ΜϺϻМмӍӎ',\n  n: 'ÑñŃńŅņŇňŉŊŋƝƞǸǹȠȵΝΠήηϞЍИЙЛПийлпѝҊҋӅӆӢӣӤӥπ',\n  o: 'ÒÓÔÕÖØðòóôõöøŌōŎŏŐőƟƠơǑǒǪǫǬǭǾǿȌȍȎȏȪȫȬȭȮȯȰȱΌΘΟθοσόϕϘϙϬϭϴОФоѲѳӦӧӨөӪӫ',\n  p: 'ƤƿΡρϷϸϼРрҎҏÞ',\n  q: 'Ɋɋ',\n  r: 'ŔŕŖŗŘřƦȐȑȒȓɌɍЃГЯгяѓҐґ',\n  s: 'ŚśŜŝŞşŠšƧƨȘșȿЅѕ',\n  t: 'ŢţŤťŦŧƫƬƭƮȚțȶȾΓΤτϮТт',\n  u: 'µÙÚÛÜùúûüŨũŪūŬŭŮůŰűŲųƯưƱƲǓǔǕǖǗǘǙǚǛǜȔȕȖȗɄΰμυϋύ',\n  v: 'νѴѵѶѷ',\n  w: 'ŴŵƜωώϖϢϣШЩшщѡѿ',\n  x: '×ΧχϗϰХхҲҳӼӽӾӿ',\n  y: 'ÝýÿŶŷŸƳƴȲȳɎɏΎΥΫγψϒϓϔЎУучўѰѱҮүҰұӮӯӰӱӲӳ',\n  z: 'ŹźŻżŽžƩƵƶȤȥɀΖζ',\n}\n//decompress data into two hashes\nlet unicode = {}\nObject.keys(compact).forEach(function(k) {\n  compact[k].split('').forEach(function(s) {\n    unicode[s] = k\n  })\n})\n\nconst killUnicode = str => {\n  let chars = str.split('')\n  chars.forEach((s, i) => {\n    if (unicode[s]) {\n      chars[i] = unicode[s]\n    }\n  })\n  return chars.join('')\n}\nmodule.exports = killUnicode\n// console.log(killUnicode('bjŏȒk—Ɏó'));\n","const periodAcronym = /([A-Z]\\.)+[A-Z]?,?$/\nconst oneLetterAcronym = /^[A-Z]\\.,?$/\nconst noPeriodAcronym = /[A-Z]{2}('s|,)?$/\nconst lowerCaseAcronym = /([a-z]\\.){2,}[a-z]\\.?$/\n//(we intentionally do not support unicode acronyms)\n\n/** does it appear to be an acronym, like FBI or M.L.B. */\nconst isAcronym = function(str) {\n  //like N.D.A\n  if (periodAcronym.test(str) === true) {\n    return true\n  }\n  //like c.e.o\n  if (lowerCaseAcronym.test(str) === true) {\n    return true\n  }\n  //like 'F.'\n  if (oneLetterAcronym.test(str) === true) {\n    return true\n  }\n  //like NDA\n  if (noPeriodAcronym.test(str) === true) {\n    return true\n  }\n  return false\n}\nmodule.exports = isAcronym\n","const killUnicode = require('./unicode')\nconst isAcronym = require('./isAcronym')\nconst hasSlash = /[a-z\\u00C0-\\u00FF] ?\\/ ?[a-z\\u00C0-\\u00FF]/\n\n/** some basic operations on a string to reduce noise */\nconst clean = function(str) {\n  str = str || ''\n  str = str.toLowerCase()\n  str = str.trim()\n  let original = str\n  //(very) rough ASCII transliteration -  bjŏrk -> bjork\n  str = killUnicode(str)\n  //rough handling of slashes - 'see/saw'\n  if (hasSlash.test(str) === true) {\n    str = str.replace(/\\/.*/, '')\n  }\n  //#tags, @mentions\n  str = str.replace(/^[#@]/, '')\n  //punctuation\n  str = str.replace(/[,;.!?]+$/, '')\n  // coerce single curly quotes\n  str = str.replace(/[\\u0027\\u0060\\u00B4\\u2018\\u2019\\u201A\\u201B\\u2032\\u2035\\u2039\\u203A]+/g, \"'\")\n  // coerce double curly quotes\n  str = str.replace(\n    /[\\u0022\\u00AB\\u00BB\\u201C\\u201D\\u201E\\u201F\\u2033\\u2034\\u2036\\u2037\\u2E42\\u301D\\u301E\\u301F\\uFF02]+/g,\n    '\"'\n  )\n  //coerce Unicode ellipses\n  str = str.replace(/\\u2026/g, '...')\n  //en-dash\n  str = str.replace(/\\u2013/g, '-')\n  //lookin'->looking (make it easier for conjugation)\n  if (/[a-z][^aeiou]in['’]$/.test(str) === true) {\n    str = str.replace(/in['’]$/, 'ing')\n  }\n  //turn re-enactment to reenactment\n  if (/^(re|un)-?[^aeiou]./.test(str) === true) {\n    str = str.replace('-', '')\n  }\n  //strip leading & trailing grammatical punctuation\n  if (/^[:;]/.test(str) === false) {\n    str = str.replace(/\\.{3,}$/g, '')\n    str = str.replace(/['\",\\.!:;\\?\\)]+$/g, '')\n    str = str.replace(/^['\"\\(]+/g, '')\n  }\n  //remove possessives\n  str = str.replace(/['’]s$/, '')\n\n  //do this again..\n  str = str.trim()\n  //oh shucks,\n  if (str === '') {\n    str = original\n  }\n  //compact acronyms\n  if (isAcronym(str)) {\n    str = str.replace(/\\./g, '')\n  }\n  //nice-numbers\n  str = str.replace(/([0-9]),([0-9])/g, '$1$2')\n  return str\n}\n\nmodule.exports = clean\n// console.log(normalize('Dr. V Cooper'));\n","const clean = require('./clean')\n// basically, tokenize for terms.\n\n//all punctuation marks, from https://en.wikipedia.org/wiki/Punctuation\n//we have slightly different rules for start/end - like #hashtags.\nlet startings = /^[ \\.’'\\[\\](){}⟨⟩:,،、‒–—―…!.‹›«»‐\\-?‘’“”'\";\\/⁄·\\&*\\•^†‡°”¡¿※№÷×ºª%‰+−=‱¶′″‴§~|‖¦©℗®℠™¤₳฿]+/\nlet endings = /[ \\.’'\\[\\](){}⟨⟩:,،、‒–—―…!.‹›«»‐\\-?‘’“”'\";\\/⁄·\\&*@\\•^†‡°”¡¿※#№÷×ºª%‰+−=‱¶′″‴§~|‖¦©℗®℠™¤₳฿]+$/\n//money = ₵¢₡₢$₫₯֏₠€ƒ₣₲₴₭₺₾ℳ₥₦₧₱₰£៛₽₹₨₪৳₸₮₩¥\n\n/** turn given text into a parsed-up object\n * seperate the 'meat' of the word from the whitespace+punctuation\n */\nconst parseTerm = str => {\n  let pre = ''\n  let post = ''\n  str = str.replace(startings, found => {\n    pre = found\n    return ''\n  })\n  str = str.replace(endings, found => {\n    post = found\n    return ''\n  })\n  //we went too far..\n  if (str === '') {\n    str = pre.replace(/[.?!]/, '').trim()\n    pre = ''\n    post = ' '\n  }\n  const parsed = {\n    text: str,\n    clean: clean(str),\n    pre: pre,\n    post: post,\n  }\n  return parsed\n}\nmodule.exports = parseTerm\n","const titleCase = /^[A-Z][a-z'\\u00C0-\\u00FF]/\n\n/** convert all text to uppercase */\nexports.toUpperCase = function(world) {\n  this.text = this.text.toUpperCase()\n  this.tag('#UpperCase', 'toUpperCase', world)\n  return this\n}\n\n/** convert all text to lowercase */\nexports.toLowerCase = function(world) {\n  this.text = this.text.toLowerCase()\n  this.unTag('#TitleCase', world)\n  this.unTag('#UpperCase', world)\n  return this\n}\n\n/** only set the first letter to uppercase\n * leave any existing uppercase alone\n */\nexports.toTitleCase = function(world) {\n  this.text = this.text.replace(/^ *[a-z\\u00C0-\\u00FF]/, x => x.toUpperCase()) //support unicode?\n  this.tag('#TitleCase', 'toTitleCase', world)\n  return this\n}\n\n/** if the first letter is uppercase, and the rest are lowercase */\nexports.isTitleCase = function() {\n  return titleCase.test(this.text)\n}\n","// these methods are called with '@hasComma' in the match syntax\n\n/** search the term's 'post' punctuation  */\nexports.hasPost = function(punct) {\n  return this.post.includes(punct)\n}\n\n/** does it have a comma?  */\nexports.hasComma = function() {\n  return this.hasPost(',')\n}\n\n/** does it end in a period? */\nexports.hasPeriod = function() {\n  return this.hasPost('.') === true && this.hasPost('...') === false\n}\n\n/** does it end in an exclamation */\nexports.hasExclamation = function() {\n  return this.hasPost('!')\n}\n\n/** does it end with a question mark? */\nexports.hasQuestionMark = function() {\n  return this.hasPost('?') || this.hasPost('¿')\n}\n\n/** is there a ... at the end? */\nexports.hasEllipses = function() {\n  return this.hasPost('..') || this.hasPost('…')\n}\n\n/** is there a semicolon after this word? */\nexports.hasSemicolon = function() {\n  return this.hasPost(';')\n}\n\n/** is there a slash after this word? */\nexports.hasSlash = function() {\n  return this.hasPost('/')\n}\n\n/** is it multiple words combinded */\nexports.hasContraction = function() {\n  return Boolean(this.implicit)\n}\n\n/** try to sensibly put this punctuation mark into the term */\nexports.addPunctuation = function(punct) {\n  // dont add doubles\n  if (punct === ',' || punct === ';') {\n    this.post = this.post.replace(punct, '')\n  }\n  this.post = punct + this.post\n  return this\n}\n","//declare it up here\nlet wrapMatch = function() {}\n\n/** ignore optional/greedy logic, straight-up term match*/\nconst doesMatch = function(t, reg) {\n  // support id matches\n  if (reg.id === t.id) {\n    return true\n  }\n  // support '.'\n  if (reg.anything === true) {\n    return true\n  }\n  //support a text match\n  if (reg.word !== undefined) {\n    //match contractions\n    if (t.implicit !== null && t.implicit === reg.word) {\n      return true\n    }\n    //match either .clean or .text\n    return reg.word === t.clean || reg.word === t.text\n  }\n  //support #Tag\n  if (reg.tag !== undefined) {\n    return t.tags[reg.tag] === true\n  }\n  //support @method\n  if (reg.method !== undefined) {\n    if (typeof t[reg.method] === 'function' && t[reg.method]() === true) {\n      return true\n    }\n    return false\n  }\n  //support /reg/\n  if (reg.regex !== undefined) {\n    return reg.regex.test(t.clean)\n  }\n  //support (one|two)\n  if (reg.choices !== undefined) {\n    //recursion alert\n    let foundOne = reg.choices.find(r => wrapMatch(t, r))\n    return foundOne !== undefined\n  }\n  return false\n}\n\n// wrap result for !negative match logic\nwrapMatch = function(t, reg) {\n  let result = doesMatch(t, reg)\n  if (reg.negative === true) {\n    return !result\n  }\n  return result\n}\n\nmodule.exports = wrapMatch\n","const doesMatch = require('./_doesMatch')\nconst isAcronym = require('../clean/isAcronym')\n\n// these tags aren't juicy-enough\nconst boring = {\n  TitleCase: true,\n  UpperCase: true,\n  CamelCase: true,\n  Hyphenated: true,\n  StartBracket: true,\n  EndBracket: true,\n  Comma: true,\n  ClauseEnd: true,\n}\n\n/** check a match object against this term */\nexports.doesMatch = function(reg) {\n  return doesMatch(this, reg)\n}\n\n/** does this term look like an acryonym? */\nexports.isAcronym = function() {\n  return isAcronym(this.text)\n}\n\n/** does the term have at least one good tag? */\nexports.isKnown = function() {\n  return Object.keys(this.tags).some(t => boring[t] !== true)\n}\n","const hasSpace = /[ -]/\n/** return various text formats of this term */\nexports.textOut = function(options, showPre, showPost) {\n  let word = this.text\n  let before = this.pre\n  let after = this.post\n\n  if (options.unicode === true) {\n    word = this.clean\n  }\n  if (options.whitespace === true) {\n    before = ''\n    after = ' '\n    if (hasSpace.test(this.post) === false || options.last) {\n      after = ''\n    }\n  }\n  if (options.lowercase === true) {\n    word = word.toLowerCase()\n  }\n  if (options.punctuation === true) {\n    //normalized end punctuation\n    if (this.hasPost('.') === true) {\n      after = '.' + after\n    } else if (this.hasPost('?') === true) {\n      after = '?' + after\n    } else if (this.hasPost('!') === true) {\n      after = '!' + after\n    } else if (this.hasPost(',') === true) {\n      after = ',' + after\n    } else if (this.hasEllipses() === true) {\n      after = '...' + after\n    }\n  }\n  if (showPre !== true) {\n    before = ''\n  }\n  if (showPost !== true) {\n    after = ''\n  }\n  return before + word + after\n}\n\n/** return various metadata for this term */\nexports.json = function(options) {\n  let result = {}\n  if (options.text) {\n    result.text = this.text\n  }\n  if (options.clean) {\n    result.clean = this.clean\n  }\n  if (options.implicit && this.implicit !== null) {\n    result.implicit = this.implicit\n  }\n  if (options.tags) {\n    result.tags = Object.keys(this.tags)\n  }\n  if (options.whitespace) {\n    result.pre = this.pre\n    result.post = this.post\n  }\n  return result\n}\n","module.exports = Object.assign(\n  {},\n  require('./01-case'),\n  require('./02-punctuation'),\n  require('./03-misc'),\n  require('./04-out')\n)\n","/** add spaces at the end */\nconst padEnd = function(str, width) {\n  str = str.toString()\n  while (str.length < width) {\n    str += ' '\n  }\n  return str\n}\n\n/** output for verbose-mode */\nexports.logTag = function(t, tag, reason) {\n  let log = '\\x1b[33m' + padEnd(t.clean, 15) + '\\x1b[0m + \\x1b[32m' + tag + '\\x1b[0m '\n  if (reason) {\n    log = padEnd(log, 35) + ' ' + reason + ''\n  }\n  console.log(log)\n}\n\n/** output for verbose mode  */\nexports.logUntag = function(t, tag, reason) {\n  let log = '\\x1b[33m' + padEnd(t.clean, 3) + ' \\x1b[31m - #' + tag + '\\x1b[0m '\n  if (reason) {\n    log = padEnd(log, 35) + ' ' + reason\n  }\n  console.log(log)\n}\n\nexports.isArray = function(arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]'\n}\n\nexports.titleCase = str => {\n  return str.charAt(0).toUpperCase() + str.substr(1)\n}\n","const fns = require('./fns')\n\n/** add a tag, and its descendents, to a term */\nconst addTag = function(t, tag, reason, world) {\n  if (!world) {\n    console.warn('World not found - ' + reason)\n  }\n  //support '.' or '-' notation for skipping the tag\n  if (tag === '' || tag === '.' || tag === '-') {\n    return\n  }\n  if (tag[0] === '#') {\n    tag = tag.replace(/^#/, '')\n  }\n  tag = fns.titleCase(tag)\n  //if we already got this one\n  if (t.tags[tag] === true) {\n    return\n  }\n  if (world !== undefined && world.isVerbose() === true) {\n    fns.logTag(t, tag, reason)\n  }\n  //add tag\n  t.tags[tag] = true //whee!\n\n  //check tagset for any additional things to do...\n  if (world !== undefined && world.tags !== undefined) {\n    let tagset = world.tags\n    if (tagset.hasOwnProperty(tag) === true) {\n      //add parent Tags\n      if (tagset[tag].isA !== undefined) {\n        let parentTag = tagset[tag].isA\n        addTag(t, parentTag, '→', world) //recursive\n      }\n      //add these extra ones, too\n      if (tagset[tag].also !== undefined) {\n        let alsoTag = tagset[tag].also\n        addTag(t, alsoTag, '→', world) //recursive\n      }\n      //remove any contrary tags\n      if (typeof tagset[tag].notA !== 'undefined') {\n        t.unTag(tagset[tag].notA, '←', world)\n      }\n    }\n  }\n}\n\n/** support an array of tags */\nconst addTags = function(term, tags, reason, world) {\n  if (fns.isArray(tags) === true) {\n    tags.forEach(tag => addTag(term, tag, reason, world))\n  } else {\n    addTag(term, tags, reason, world)\n  }\n}\nmodule.exports = addTags\n","const fns = require('./fns')\n\n/** remove this tag, and its descentents from the term */\nconst unTag = function(t, tag, reason, world) {\n  //support '*' for removing all tags\n  if (tag === '*') {\n    t.tags = {}\n    return t\n  }\n  // remove the tag\n  if (t.tags[tag] === true && t.tags.hasOwnProperty(tag) === true) {\n    delete t.tags[tag]\n    //log in verbose-mode\n    if (world !== undefined && world.isVerbose() === true) {\n      fns.logUntag(t, tag, reason)\n    }\n  }\n  //delete downstream tags too\n  if (world) {\n    //TODO: properly support Term calling itself directly\n    const tagset = world.tags\n    if (tagset[tag]) {\n      let also = tagset[tag].downward\n      for (let i = 0; i < also.length; i++) {\n        unTag(t, also[i], ' - -   - ', world) //recursive\n      }\n    }\n  }\n  return t\n}\n\n//handle an array of tags\nconst untagAll = function(term, tags, reason, world) {\n  if (fns.isArray(tags) === true) {\n    tags.forEach(tag => unTag(term, tag, reason, world))\n  } else {\n    unTag(term, tags, reason, world)\n  }\n}\nmodule.exports = untagAll\n","'use strict'\n\n//recursively-check compatibility of this tag and term\nconst canBe = function(term, tag, world) {\n  const tagset = world.tags\n  // cleanup tag\n  if (tag[0] === '#') {\n    tag = tag.replace(/^#/, '')\n  }\n  //fail-fast\n  if (tagset[tag] === undefined) {\n    return true\n  }\n  //loop through tag's contradictory tags\n  let enemies = tagset[tag].notA || []\n  for (let i = 0; i < enemies.length; i++) {\n    if (term.tags[enemies[i]] === true) {\n      return false\n    }\n  }\n  if (tagset[tag].isA !== undefined) {\n    return canBe(term, tagset[tag].isA, world) //recursive\n  }\n  return true\n}\n\nmodule.exports = canBe\n","const add = require('./add')\nconst unTag = require('./unTag')\nconst canBe = require('./canBe')\n\n/** add a tag or tags, and their descendents to this term\n * @param  {string | string[]} tags - a tag or tags\n * @param {string?} [reason] a clue for debugging\n */\nexports.tag = function(tags, reason, world) {\n  add(this, tags, reason, world)\n  return this\n}\n\n/** only tag this term if it's consistent with it's current tags */\nexports.tagSafe = function(tags, reason, world) {\n  if (canBe(this, tags, world)) {\n    add(this, tags, reason, world)\n  }\n  return this\n}\n\n/** remove a tag or tags, and their descendents from this term\n * @param {string | string[]} tags  - a tag or tags\n * @param {string?} [reason] a clue for debugging\n */\nexports.unTag = function(tags, reason, world) {\n  unTag(this, tags, reason, world)\n  return this\n}\n\n/** is this tag consistent with the word's current tags?\n * @param {string | string[]} tags - a tag or tags\n * @returns {boolean}\n */\nexports.canBe = function(tags, world) {\n  return canBe(this, tags, world)\n}\n","const makeId = require('./_id')\nconst parseTerm = require('./parse')\nconst methods = require('./methods')\nconst tagMethods = require('./tag')\n\nclass Term {\n  constructor(text = '') {\n    text = String(text)\n    let obj = parseTerm(text)\n    this.text = obj.text || ''\n    this.clean = obj.clean || ''\n    this.implicit = obj.implicit || null\n    this.pre = obj.pre || ''\n    this.post = obj.post || ''\n    this.raw = text.trim()\n    this.tags = {}\n    this.prev = null\n    this.next = null\n    this.id = makeId(this.clean)\n    this.isA = 'Term' // easier than .constructor...\n  }\n  /** set the text of the Term to something else*/\n  set(str) {\n    let obj = parseTerm(str)\n    this.text = obj.text\n    this.clean = obj.clean\n    return this\n  }\n}\n\n/** create a deep-copy of this term */\nTerm.prototype.clone = function() {\n  let term = new Term(this.text)\n  term.pre = this.pre\n  term.post = this.post\n  term.tags = Object.assign({}, term.tags)\n  return term\n}\n\nObject.assign(Term.prototype, methods)\nObject.assign(Term.prototype, tagMethods)\n\nmodule.exports = Term\n","/** return a flat array of Term objects */\nexports.terms = function(n) {\n  let terms = [this.pool.get(this.start)]\n  if (this.length === 0) {\n    return []\n  }\n  for (let i = 0; i < this.length - 1; i += 1) {\n    let id = terms[terms.length - 1].next\n    if (id === null) {\n      console.warn('linked-list broken')\n      break\n    }\n    let term = this.pool.get(id)\n    terms.push(term)\n    //return this one?\n    if (n !== undefined && n === i) {\n      return terms[n]\n    }\n  }\n  if (n !== undefined) {\n    return terms[n]\n  }\n  return terms\n}\n\n/** return a deep-copy of this phrse  */\nexports.clone = function() {\n  //how do we clone part of the pool?\n  let terms = this.terms()\n  let newTerms = terms.map(t => t.clone())\n  //connect these new ids up\n  newTerms.forEach((t, i) => {\n    //add it to the pool..\n    this.pool.add(t)\n    if (newTerms[i + 1]) {\n      t.next = newTerms[i + 1].id\n    }\n    if (newTerms[i - 1]) {\n      t.prev = newTerms[i - 1].id\n    }\n  })\n  return this.buildFrom(newTerms[0].id, newTerms.length)\n}\n\n/** return last term object */\nexports.lastTerm = function() {\n  let terms = this.terms()\n  return terms[terms.length - 1]\n}\n\n/** quick lookup for a term id */\nexports.hasId = function(wantId) {\n  if (this.length === 0 || !wantId) {\n    return false\n  }\n  if (this.start === wantId) {\n    return true\n  }\n  let lastId = this.start\n  for (let i = 0; i < this.length - 1; i += 1) {\n    let term = this.pool.get(lastId)\n    if (term.next === wantId) {\n      return true\n    }\n    lastId = term.next\n  }\n  return false\n}\n\n/** how many seperate, non-empty words is it? */\nexports.wordCount = function() {\n  return this.terms().filter(t => t.text !== '').length\n}\n","const trimEnd = function(str) {\n  return str.replace(/ +$/, '')\n}\n\n/** produce output in the given format */\nexports.text = function(options = {}, isFirst, isLast) {\n  if (typeof options === 'string') {\n    if (options === 'normal') {\n      options = {\n        punctuation: true,\n        whitespace: true,\n        unicode: true,\n      }\n    } else if (options === 'clean') {\n      options = {\n        lowercase: true,\n        punctuation: true,\n        whitespace: true,\n        unicode: true,\n      }\n    } else {\n      options = {}\n    }\n  }\n  let terms = this.terms()\n  //this this phrase a complete sentence?\n  let isFull = false\n  if (terms[0] && terms[0].prev === null && terms[terms.length - 1].next === null) {\n    isFull = true\n  }\n  let text = terms.reduce((str, t, i) => {\n    options.last = isLast && i === terms.length - 1\n    let showPre = true\n    let showPost = true\n    if (isFull === false) {\n      // dont show beginning whitespace\n      if (i === 0 && isFirst) {\n        showPre = false\n      }\n      // dont show end-whitespace\n      if (i === terms.length - 1 && isLast) {\n        showPost = false\n      }\n    }\n    return str + t.textOut(options, showPre, showPost)\n  }, '')\n  //full-phrases show punctuation, but not whitespace\n  if (isFull === true && isLast) {\n    text = trimEnd(text)\n  }\n  return text\n}\n\n/** return json metadata for this phrase */\nexports.json = function(options = {}) {\n  let res = {}\n  // text data\n  if (options.text) {\n    res.text = this.text(options)\n    if (options.trim) {\n      res.text = res.text.trim()\n    }\n  }\n  if (options.normal) {\n    res.normal = this.text({\n      punctuation: true,\n      whitespace: true,\n      unicode: true,\n    })\n  }\n  // terms data\n  if (options.terms) {\n    res.terms = this.terms().map(t => t.json(options.terms))\n  }\n  return res\n}\n","/** remove start and end whitespace */\nexports.trim = function() {\n  let terms = this.terms()\n  if (terms.length > 0) {\n    //trim starting\n    terms[0].pre = terms[0].pre.replace(/^\\s+/, '')\n    //trim ending\n    let lastTerm = terms[terms.length - 1]\n    lastTerm.post = lastTerm.post.replace(/\\s+$/, '')\n  }\n  return this\n}\n","//add whitespace to the start of the second bit\nconst addWhitespace = function(beforeTerms, newTerms) {\n  // add any existing pre-whitespace to beginning\n  newTerms[0].pre = beforeTerms[0].pre\n  let lastTerm = beforeTerms[beforeTerms.length - 1]\n\n  //add any existing punctuation to end of our new terms\n  let newTerm = newTerms[newTerms.length - 1]\n  newTerm.post = lastTerm.post\n  // remove existing punctuation\n  lastTerm.post = ''\n\n  //before ←[space]  - after\n  if (lastTerm.post === '') {\n    lastTerm.post += ' '\n  }\n}\n\n//insert this segment into the linked-list\nconst stitchIn = function(main, newPhrase) {\n  let afterId = main.lastTerm().next\n  //connect ours in (main → newPhrase)\n  main.lastTerm().next = newPhrase.start\n  //stich the end in  (newPhrase → after)\n  newPhrase.lastTerm().next = afterId\n  //do it backwards, too\n  if (afterId) {\n    // newPhrase ← after\n    let afterTerm = main.pool.get(afterId)\n    afterTerm.prev = newPhrase.lastTerm().id\n  }\n  // before ← newPhrase\n  let beforeId = main.terms(0).id\n  if (beforeId) {\n    let newTerm = newPhrase.terms(0)\n    newTerm.prev = beforeId\n  }\n}\n\n//recursively increase the length of all parent phrases\nconst stretchAll = function(doc, id, len) {\n  let phrase = doc.list.find(p => p.hasId(id))\n  phrase.length += len\n\n  //FIXME: inside .map() it stretches parent too far\n  let parents = doc.parents()\n  parents.forEach(parent => {\n    phrase = parent.list.find(p => p.hasId(id))\n    phrase.length += len\n  })\n}\n\n//append one phrase onto another\nconst joinPhrase = function(main, newPhrase, doc) {\n  let beforeTerms = main.terms()\n  //spruce-up the whitespace issues\n  addWhitespace(beforeTerms, newPhrase.terms())\n  //insert this segment into the linked-list\n  stitchIn(main, newPhrase)\n  //increase the length of our phrases\n  stretchAll(doc, beforeTerms[0].id, newPhrase.length)\n  return main\n}\nmodule.exports = joinPhrase\n","const hasSpace = / /\n\n//a new space needs to be added, either on the new phrase, or the old one\n// '[new] [◻old]'   -or-   '[old] [◻new] [old]'\nconst addWhitespace = function(newTerms, original) {\n  //add a space before our new text?\n\n  // add a space after our text\n  let lastTerm = newTerms[newTerms.length - 1]\n  if (hasSpace.test(lastTerm.post) === false) {\n    lastTerm.post += ' '\n  }\n\n  // let term = original.pool.get(original.start)\n  // if (term.prev) {\n  //   //add our space ahead of our new terms\n  //   let firstWord = newTerms[0]\n  //   if (hasSpace.test(firstWord.post) === false) {\n  //     firstWord.post += ' '\n  //   }\n  //   return\n  // }\n\n  //otherwise, add our space to the start of original\n  // if (hasSpace.test(term.pre) === false) {\n  //   term.pre = ' ' + term.pre\n  // }\n  return\n}\n\n//insert this segment into the linked-list\nconst stitchIn = function(main, newPhrase, newTerms) {\n  // [newPhrase] → [main]\n  let lastTerm = newTerms[newTerms.length - 1]\n  lastTerm.next = main.start\n  // [before] → [main]\n  let pool = main.pool\n  let start = pool.get(main.start)\n  if (start.prev) {\n    let before = pool.get(start.prev)\n    before.next = newPhrase.start\n  }\n  //do it backwards, too\n  // before ← newPhrase\n  newTerms[0].prev = main.terms(0).prev\n  // newPhrase ← main\n  main.terms(0).prev = lastTerm.id\n}\n\n//recursively increase the length of all parent phrases\nconst stretchAll = function(doc, oldStart, newPhrase) {\n  //find our phrase to stretch\n  let phrase = doc.list.find(p => p.hasId(oldStart) || p.hasId(newPhrase.start))\n  if (phrase === undefined) {\n    console.error('compromise error: Prepend missing start - ' + oldStart)\n    return\n  }\n  //should we update the phrase's starting?\n  if (phrase.start === oldStart) {\n    phrase.start = newPhrase.start\n  }\n  // console.log(newPhrase)\n  phrase.length += newPhrase.length\n  if (doc.from) {\n    stretchAll(doc.from, oldStart, newPhrase)\n  }\n}\n\n//append one phrase onto another\nconst joinPhrase = function(original, newPhrase, doc) {\n  let newTerms = newPhrase.terms()\n  let oldStart = original.start\n  //spruce-up the whitespace issues\n  addWhitespace(newTerms, original)\n  //insert this segment into the linked-list\n  stitchIn(original, newPhrase, newTerms)\n  //increase the length of our phrases\n  stretchAll(doc, oldStart, newPhrase)\n  return original\n}\nmodule.exports = joinPhrase\n","//recursively decrease the length of all the parent phrases\nconst shrinkAll = function(doc, id, deleteLength, after) {\n  //find our phrase to shrink\n  let phrase = doc.list.find(p => p.hasId(id))\n  if (phrase !== undefined) {\n    phrase.length -= deleteLength\n\n    //does it start with this soon-removed word?\n    if (phrase.start === id) {\n      phrase.start = after.id\n    }\n  }\n  if (doc.from) {\n    shrinkAll(doc.from, id, deleteLength, after)\n  }\n}\n\n/** wrap the linked-list around these terms\n * so they don't appear any more\n */\nconst deletePhrase = function(phrase, doc) {\n  let pool = doc.pool()\n  let terms = phrase.terms()\n\n  //grab both sides of the chain,\n  let prev = pool.get(terms[0].prev) || {}\n  let after = pool.get(terms[terms.length - 1].next) || {}\n\n  //first, change phrase lengths\n  shrinkAll(doc, phrase.start, phrase.length, after)\n\n  // connect [prev]->[after]\n  if (prev) {\n    prev.next = after.id\n  }\n  // connect [prev]<-[after]\n  if (after) {\n    after.prev = prev.id\n  }\n  // lastly, actually delete the terms from the pool\n  for (let i = 0; i < terms.length; i++) {\n    // pool.remove(terms[i].id)\n  }\n}\nmodule.exports = deletePhrase\n","const append = require('./_join/append')\nconst prepend = require('./_join/prepend')\nconst deletePhrase = require('./_join/delete')\n// const build = require('../../tokenizer')\n\n/** put this text at the end */\nexports.append = function(newPhrase, doc) {\n  append(this, newPhrase, doc)\n  return this\n}\n\n/** add this text to the beginning */\nexports.prepend = function(newPhrase, doc) {\n  prepend(this, newPhrase, doc)\n  return this\n}\n\nexports.delete = function(doc) {\n  deletePhrase(this, doc)\n  return this\n}\n\nexports.replace = function(newPhrase, doc) {\n  //add it do the end\n  let firstLength = this.length\n  append(this, newPhrase, doc)\n  //delete original terms\n  let tmp = this.buildFrom(this.start, this.length)\n  tmp.length = firstLength\n\n  deletePhrase(tmp, doc)\n  return this\n}\n\n/**\n * Turn this phrase object into 3 phrase objects\n */\nexports.splitOn = function(p) {\n  let terms = this.terms()\n  let result = {\n    before: null,\n    match: null,\n    after: null,\n  }\n  let index = terms.findIndex(t => t.id === p.start)\n  if (index === -1) {\n    return result\n  }\n  //make all three sections into phrase-objects\n  let start = terms.slice(0, index)\n  if (start.length > 0) {\n    result.before = this.buildFrom(start[0].id, start.length)\n  }\n  let match = terms.slice(index, index + p.length)\n  if (match.length > 0) {\n    result.match = this.buildFrom(match[0].id, match.length)\n  }\n  let end = terms.slice(index + p.length, terms.length)\n  if (end.length > 0) {\n    result.after = this.buildFrom(end[0].id, end.length, this.pool)\n  }\n  return result\n}\n","module.exports = Object.assign(\n  {},\n  require('./01-utils'),\n  require('./02-out'),\n  require('./03-change'),\n  require('./04-split')\n)\n","// try to avoid doing the match\nconst failFast = function(terms, regs) {\n  if (regs.length === 0) {\n    return true\n  }\n  for (let i = 0; i < regs.length; i += 1) {\n    let reg = regs[i]\n    //logical quick-ones\n    if (reg.optional !== true) {\n      //this is not possible\n      if (reg.anything === true && reg.negative === true) {\n        return true\n      }\n      //start/end impossibilites\n      if (reg.start === true && i > 0) {\n        return true\n      }\n      if (reg.end === true && i < regs.length - 1) {\n        return true\n      }\n      if (reg.start === true && reg.end === true && terms.length > 1) {\n        return true\n      }\n      //empty choices\n      if (reg.choices && reg.choices.length === 0) {\n        return true\n      }\n    }\n  }\n  return false\n}\nmodule.exports = failFast\n","//found a match? it's greedy? keep going!\nconst getGreedy = function(terms, t, reg, until) {\n  for (; t < terms.length; t += 1) {\n    //stop for next-reg match\n    if (until && terms[t].doesMatch(until)) {\n      return t\n    }\n    //stop here\n    if (terms[t].doesMatch(reg) === false) {\n      return t\n    }\n  }\n  return t\n}\n\n//'unspecific greedy' is a weird situation.\nconst greedyTo = function(terms, t, nextReg) {\n  //if there's no next one, just go off the end!\n  if (!nextReg) {\n    return terms.length\n  }\n  //otherwise, we're looking for the next one\n  for (; t < terms.length; t += 1) {\n    if (terms[t].doesMatch(nextReg) === true) {\n      return t\n    }\n  }\n  //guess it doesn't exist, then.\n  return null\n}\n\n/** tries to match a sequence of terms, starting from here */\nconst tryHere = function(terms, regs) {\n  let captures = []\n  let t = 0\n  // we must satisfy each rule in 'regs'\n  for (let r = 0; r < regs.length; r += 1) {\n    let reg = regs[r]\n\n    //should we fail here?\n    if (!terms[t]) {\n      //are all remaining regs optional?\n      const hasNeeds = regs.slice(r).some(remain => !remain.optional)\n      if (hasNeeds === false) {\n        break\n      }\n      // have unmet needs\n      return false\n    }\n\n    //support 'unspecific greedy' properly\n    if (reg.anything === true && reg.greedy === true) {\n      let skipto = greedyTo(terms, t, regs[r + 1])\n      //TODO: support [*] properly\n      if (skipto === null) {\n        return false //couldn't find it\n      }\n      t = skipto\n      continue\n    }\n\n    //if it looks like a match, continue\n    if (reg.anything === true || terms[t].doesMatch(reg) === true) {\n      let startAt = t\n      //advance to the next term!\n      t += 1\n      //check any ending '$' flags\n      if (reg.end === true) {\n        //if this isn't the last term, refuse the match\n        if (t !== terms.length && reg.greedy !== true) {\n          return false\n        }\n      }\n      //try keep it going!\n      if (reg.greedy === true) {\n        t = getGreedy(terms, t, reg, regs[r + 1])\n      }\n      if (reg.capture) {\n        captures.push(startAt)\n        //add greedy-end to capture\n        if (t > 1 && reg.greedy) {\n          captures.push(t - 1)\n        }\n      }\n      continue\n    }\n\n    //bah, who cares, keep going\n    if (reg.optional === true) {\n      continue\n    }\n    // console.log('   ❌\\n\\n')\n    return false\n  }\n  //we got to the end of the regs, and haven't failed!\n  //try to only return our [captured] segment\n  if (captures.length > 0) {\n    //make sure the array is the full-length we'd return anyways\n    let arr = terms.slice(captures[0], captures[captures.length - 1] + 1)\n    //make sure the array is t-length (so we skip ahead full-length)\n    for (let tmp = 0; tmp < t; tmp++) {\n      arr[tmp] = arr[tmp] || null\n    }\n    return arr\n  }\n  //return our result\n  return terms.slice(0, t)\n}\nmodule.exports = tryHere\n","/* break-down a match expression into this:\n{\n  clean:'',\n  tag:'',\n  regex:'',\n\n  start:false,\n  end:false,\n  negative:false,\n  anything:false,\n  greedy:false,\n  optional:false,\n\n  capture:false,\n  choices:[],\n}\n*/\nconst end = function(str) {\n  return str[str.length - 1]\n}\nconst start = function(str) {\n  return str[0]\n}\nconst stripStart = function(str) {\n  return str.substr(1)\n}\nconst stripEnd = function(str) {\n  return str.substr(0, str.length - 1)\n}\nconst stripBoth = function(str) {\n  str = stripStart(str)\n  str = stripEnd(str)\n  return str\n}\n\n//\nconst token = function(w) {\n  let obj = {}\n  //collect any flags (do it twice)\n  for (let i = 0; i < 2; i += 1) {\n    //back-flags\n    if (end(w) === '+') {\n      obj.greedy = true\n      w = stripEnd(w)\n    }\n    if (w !== '*' && end(w) === '*') {\n      obj.greedy = true\n      w = stripEnd(w)\n    }\n    if (end(w) === '?') {\n      obj.optional = true\n      w = stripEnd(w)\n    }\n    if (end(w) === '$') {\n      obj.end = true\n      w = stripEnd(w)\n    }\n    //front-flags\n    if (start(w) === '^') {\n      obj.start = true\n      w = stripStart(w)\n    }\n    if (start(w) === '!') {\n      obj.negative = true\n      w = stripStart(w)\n    }\n    //wrapped-flags\n    if (start(w) === '(' && end(w) === ')') {\n      obj.choices = w.split('|')\n      //remove '(' and ')'\n      obj.choices[0] = stripStart(obj.choices[0])\n      let last = obj.choices.length - 1\n      obj.choices[last] = stripEnd(obj.choices[last])\n      obj.choices = obj.choices.filter(s => s)\n      //recursion alert!\n      obj.choices = obj.choices.map(token)\n      w = ''\n    }\n    //capture group (this one can span multiple-terms)\n    if (start(w) === '[' || end(w) === ']') {\n      obj.capture = true\n      w = w.replace(/^\\[/, '')\n      w = w.replace(/\\]$/, '')\n    }\n    //regex\n    if (start(w) === '/' && end(w) === '/') {\n      w = stripBoth(w)\n      obj.regex = new RegExp(w)\n      return obj\n    }\n  }\n\n  //do the actual token content\n  if (start(w) === '#') {\n    obj.tag = stripStart(w)\n    return obj\n  }\n  //dynamic function on a term object\n  if (start(w) === '@') {\n    obj.method = stripStart(w)\n    return obj\n  }\n  if (w === '.') {\n    obj.anything = true\n    return obj\n  }\n  //support alone-astrix\n  if (w === '*') {\n    obj.anything = true\n    obj.greedy = true\n    obj.optional = true\n    return obj\n  }\n  if (w) {\n    //somehow handle encoded-chars?\n    obj.word = w.toLowerCase()\n  }\n  return obj\n}\nmodule.exports = token\n","const parseToken = require('./parseToken')\n\nconst isArray = function(arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]'\n}\n\n//split-up by (these things)\nconst byParentheses = function(str) {\n  let arr = str.split(/(\\[?\\(.*?\\)[?+*]*\\]?\\$?)/)\n  arr = arr.map(s => s.trim())\n  return arr\n}\n\nconst byWords = function(arr) {\n  let words = []\n  arr.forEach(a => {\n    //keep brackets lumped together\n    if (/^[[^_/]?\\(/.test(a[0])) {\n      words.push(a)\n      return\n    }\n    let list = a.split(' ')\n    list = list.filter(w => w)\n    words = words.concat(list)\n  })\n  return words\n}\n\n//turn an array into a 'choices' list\nconst byArray = function(arr) {\n  return [\n    {\n      choices: arr.map(s => {\n        return {\n          word: s,\n        }\n      }),\n    },\n  ]\n}\n\nconst postProcess = function(tokens) {\n  //ensure there's only one consecutive capture group.\n  let count = tokens.filter(t => t.capture === true).length\n  if (count > 1) {\n    let captureArr = tokens.map(t => t.capture)\n    let first = captureArr.indexOf(true)\n    let last = captureArr.length - 1 - captureArr.reverse().indexOf(true)\n    //'fill in' capture groups between start-end\n    for (let i = first; i < last; i++) {\n      tokens[i].capture = true\n    }\n  }\n  return tokens\n}\n\nconst fromDoc = function(doc) {\n  if (!doc || !doc.list || !doc.list[0]) {\n    return []\n  }\n  return doc.list[0].terms().map(t => {\n    return {\n      id: t.id,\n    }\n  })\n}\n\n/** parse a match-syntax string into json */\nconst syntax = function(input) {\n  // fail-fast\n  if (input === null || input === undefined || input === '') {\n    return []\n  }\n  //try to support a ton of different formats:\n  if (typeof input === 'object') {\n    if (isArray(input)) {\n      if (input.length === 0 || !input[0]) {\n        return []\n      }\n\n      //is it a pre-parsed reg-list?\n      if (typeof input[0] === 'object') {\n        return input\n      }\n      //support a flat array of normalized words\n      if (typeof input[0] === 'string') {\n        return byArray(input)\n      }\n    }\n    //support passing-in a compromise object as a match\n    if (input && input.isA === 'Doc') {\n      return fromDoc(input)\n    }\n    return []\n  }\n  if (typeof input === 'number') {\n    input = String(input) //go for it?\n  }\n  let tokens = byParentheses(input)\n  tokens = byWords(tokens)\n  tokens = tokens.map(parseToken)\n  //clean up anything weird\n  tokens = postProcess(tokens)\n  return tokens\n}\nmodule.exports = syntax\n","const failFast = require('./02-failFast')\nconst tryMatch = require('./03-tryMatch')\nconst syntax = require('../../Doc/match/syntax')\n\n/**  returns a simple array of arrays */\nconst matchAll = function(p, regs, matchOne = false) {\n  //if we forgot to parse it..\n  if (typeof regs === 'string') {\n    regs = syntax(regs)\n  }\n\n  let terms = p.terms()\n  //try to dismiss it, at-once\n  if (failFast(terms, regs) === true) {\n    return []\n  }\n  //any match needs to be this long, at least\n  const minLength = regs.filter(r => r.optional !== true).length\n  let matches = []\n\n  //optimisation for '^' start logic\n  if (regs[0].start === true) {\n    let match = tryMatch(terms, regs)\n    if (match !== false && match.length > 0) {\n      matches.push(match)\n    }\n    return matches\n  }\n  //try starting, from every term\n  for (let i = 0; i < terms.length; i += 1) {\n    // slice may be too short\n    if (i + minLength > terms.length) {\n      break\n    }\n    //try it!\n    // console.log('- #' + i);\n    let match = tryMatch(terms.slice(i), regs)\n    if (match !== false && match.length > 0) {\n      //zoom forward!\n      i += match.length - 1\n      //[capture-groups] return some null responses\n      match = match.filter(m => m)\n      matches.push(match)\n      //ok, maybe that's enough?\n      if (matchOne === true) {\n        return matches\n      }\n    }\n  }\n  return matches\n}\nmodule.exports = matchAll\n","const matchAll = require('./01-matchAll')\n\n/** return anything that doesn't match.\n * returns a simple array of arrays\n */\nconst notMatch = function(p, regs) {\n  let found = {}\n  let arr = matchAll(p, regs)\n  arr.forEach(ts => {\n    ts.forEach(t => {\n      found[t.id] = true\n    })\n  })\n  //return anything not found\n  let terms = p.terms()\n  let result = []\n  let current = []\n  terms.forEach(t => {\n    if (found[t.id] === true) {\n      if (current.length > 0) {\n        result.push(current)\n        current = []\n      }\n      return\n    }\n    current.push(t)\n  })\n  if (current.length > 0) {\n    result.push(current)\n  }\n  return result\n}\nmodule.exports = notMatch\n","const matchAll = require('./01-matchAll')\nconst notMatch = require('./not')\n\n/** return an array of matching phrases */\nexports.match = function(str) {\n  let matches = matchAll(this, str)\n  //make them phrase objects\n  matches = matches.map(list => {\n    return this.buildFrom(list[0].id, list.length)\n  })\n  return matches\n}\n\n/** return boolean if one match is found */\nexports.has = function(str) {\n  let matches = matchAll(this, str, true)\n  return matches.length > 0\n}\n\n/** remove all matches from the result */\nexports.not = function(str) {\n  let matches = notMatch(this, str)\n  //make them phrase objects\n  matches = matches.map(list => {\n    return this.buildFrom(list[0].id, list.length)\n  })\n  return matches\n}\n\n/** return a list of phrases that can have this tag */\nexports.canBe = function(tag, world) {\n  let results = []\n  let terms = this.terms()\n  let previous = false\n  for (let i = 0; i < terms.length; i += 1) {\n    let can = terms[i].canBe(tag, world)\n    if (can === true) {\n      if (previous === true) {\n        //add it to the end\n        results[results.length - 1].push(terms[i])\n      } else {\n        results.push([terms[i]]) //make a new one\n      }\n      previous = can\n    }\n  }\n  //turn them into Phrase objects\n  results = results\n    .filter(a => a.length > 0)\n    .map(arr => {\n      return this.buildFrom(arr[0].id, arr.length)\n    })\n  return results\n}\n","const methods = require('./methods')\nconst matchMethods = require('./match')\n\nclass Phrase {\n  constructor(id, length, pool) {\n    this.start = id\n    this.length = length\n    this.isA = 'Phrase' // easier than .constructor...\n    Object.defineProperty(this, 'pool', {\n      enumerable: false,\n      writable: true,\n      value: pool,\n    })\n  }\n}\n\n/** create a new Phrase object from an id and length */\nPhrase.prototype.buildFrom = function(id, length) {\n  return new Phrase(id, length, this.pool)\n}\n\n//apply methods\nObject.assign(Phrase.prototype, matchMethods)\nObject.assign(Phrase.prototype, methods)\n\n//apply aliases\nconst aliases = {\n  term: 'terms',\n}\nObject.keys(aliases).forEach(k => (Phrase.prototype[k] = Phrase.prototype[aliases[k]]))\n\nmodule.exports = Phrase\n","/** a key-value store of all terms in our Document */\nclass Pool {\n  constructor(words = {}) {\n    //quiet this property in console.logs\n    Object.defineProperty(this, 'words', {\n      enumerable: false,\n      value: words,\n    })\n  }\n  /** throw a new term object in */\n  add(term) {\n    this.words[term.id] = term\n    return this\n  }\n  /** find a term by it's id */\n  get(id) {\n    return this.words[id]\n  }\n  /** find a term by it's id */\n  remove(id) {\n    delete this.words[id]\n  }\n  /** helper method */\n  stats() {\n    return {\n      words: Object.keys(this.words).length,\n    }\n  }\n}\n\n/** make a deep-copy of all terms */\nPool.prototype.clone = function() {\n  let keys = Object.keys(this.words)\n  let words = keys.reduce((h, k) => {\n    let t = this.words[k].clone()\n    h[t.id] = t\n    return h\n  }, {})\n  return new Pool(words)\n}\n\nmodule.exports = Pool\n","//(Rule-based sentence boundary segmentation) - chop given text into its proper sentences.\n// Ignore periods/questions/exclamations used in acronyms/abbreviations/numbers, etc.\n// @spencermountain 2017 MIT\n\n//proper nouns with exclamation marks\n// const blacklist = {\n//   yahoo: true,\n//   joomla: true,\n//   jeopardy: true,\n// }\n\n//regs-\nconst initSplit = /(\\S.+?[.!?\\u203D\\u2E18\\u203C\\u2047-\\u2049])(?=\\s+|$)/g\nconst hasSomething = /\\S/\n\nconst isAcronym = /[ .][A-Z]\\.? *$/i\nconst hasEllipse = /(?:\\u2026|\\.{2,}) *$/\nconst newLine = /((?:\\r?\\n|\\r)+)/ // Match different new-line formats\nconst hasLetter = /[a-z\\u00C0-\\u00FF]/i\n\nconst startWhitespace = /^\\s+/\n\n// Start with a regex:\nconst naiive_split = function(text) {\n  let all = []\n  //first, split by newline\n  let lines = text.split(newLine)\n  for (let i = 0; i < lines.length; i++) {\n    //split by period, question-mark, and exclamation-mark\n    let arr = lines[i].split(initSplit)\n    for (let o = 0; o < arr.length; o++) {\n      all.push(arr[o])\n    }\n  }\n  return all\n}\n\n/** does this look like a sentence? */\nconst isSentence = function(str, abbrevs) {\n  // check for 'F.B.I.'\n  if (isAcronym.test(str) === true) {\n    return false\n  }\n  //check for '...'\n  if (hasEllipse.test(str) === true) {\n    return false\n  }\n  // must have a letter\n  if (hasLetter.test(str) === false) {\n    return false\n  }\n\n  let txt = str.replace(/[.!?\\u203D\\u2E18\\u203C\\u2047-\\u2049] *$/, '')\n  let words = txt.split(' ')\n  let lastWord = words[words.length - 1].toLowerCase()\n  // check for 'Mr.'\n  if (abbrevs.hasOwnProperty(lastWord)) {\n    return false\n  }\n  // //check for jeopardy!\n  // if (blacklist.hasOwnProperty(lastWord)) {\n  //   return false\n  // }\n  return true\n}\n\nconst splitSentences = function(text, world) {\n  let abbrevs = world.cache.abbreviations\n\n  text = text || ''\n  text = String(text)\n  let sentences = []\n  // First do a greedy-split..\n  let chunks = []\n  // Ensure it 'smells like' a sentence\n  if (!text || typeof text !== 'string' || hasSomething.test(text) === false) {\n    return sentences\n  }\n  // Start somewhere:\n  let splits = naiive_split(text)\n  // Filter-out the crap ones\n  for (let i = 0; i < splits.length; i++) {\n    let s = splits[i]\n    if (s === undefined || s === '') {\n      continue\n    }\n    //this is meaningful whitespace\n    if (hasSomething.test(s) === false) {\n      //add it to the last one\n      if (chunks[chunks.length - 1]) {\n        chunks[chunks.length - 1] += s\n        continue\n      } else if (splits[i + 1]) {\n        //add it to the next one\n        splits[i + 1] = s + splits[i + 1]\n        continue\n      }\n    }\n    //else, only whitespace, no terms, no sentence\n    chunks.push(s)\n  }\n\n  //detection of non-sentence chunks:\n  //loop through these chunks, and join the non-sentence chunks back together..\n  for (let i = 0; i < chunks.length; i++) {\n    let c = chunks[i]\n    //should this chunk be combined with the next one?\n    if (chunks[i + 1] && isSentence(c, abbrevs) === false) {\n      chunks[i + 1] = c + (chunks[i + 1] || '')\n    } else if (c && c.length > 0 && hasLetter.test(c)) {\n      //this chunk is a proper sentence..\n      sentences.push(c)\n      chunks[i] = ''\n    }\n  }\n  //if we never got a sentence, return the given text\n  if (sentences.length === 0) {\n    return [text]\n  }\n\n  //move whitespace to the ends of sentences, when possible\n  //['hello',' world'] -> ['hello ','world']\n  for (let i = 1; i < sentences.length; i += 1) {\n    let ws = sentences[i].match(startWhitespace)\n    if (ws !== null) {\n      sentences[i - 1] += ws[0]\n      sentences[i] = sentences[i].replace(startWhitespace, '')\n    }\n  }\n  return sentences\n}\n\nmodule.exports = splitSentences\n// console.log(sentence_parser('john f. kennedy'));\n","const wordlike = /\\S/\nconst isBoundary = /^[!?.]+$/\nconst naiiveSplit = /(\\S+)/\n\nconst notWord = {\n  '.': true,\n  '-': true, //dash\n  '–': true, //en-dash\n  '—': true, //em-dash\n  '--': true,\n  '...': true,\n  '/': true, // 'one / two'\n}\n\nconst hasHyphen = function(str) {\n  //dont split 're-do'\n  if (/^(re|un)-?[^aeiou]./.test(str) === true) {\n    return false\n  }\n  //letter-number\n  let reg = /^([a-z\\u00C0-\\u00FF`\"'/]+)(-|–|—)([a-z0-9\\u00C0-\\u00FF].*)/i\n  if (reg.test(str) === true) {\n    return true\n  }\n  //support weird number-emdash combo '2010–2011'\n  let reg2 = /^([0-9]+)(–|—)([0-9].*)/i\n  if (reg2.test(str)) {\n    return true\n  }\n  return false\n}\n\nconst splitHyphens = function(word) {\n  let arr = []\n  //support multiple-hyphenated-terms\n  const hyphens = word.split(/[-–—]/)\n  for (let o = 0; o < hyphens.length; o++) {\n    if (o === hyphens.length - 1) {\n      arr.push(hyphens[o])\n    } else {\n      arr.push(hyphens[o] + '-')\n    }\n  }\n  return arr\n}\n\n//turn a string into an array of terms (naiive for now, lumped later)\nconst splitWords = function(str) {\n  let result = []\n  let arr = []\n  //start with a naiive split\n  str = str || ''\n  if (typeof str === 'number') {\n    str = String(str)\n  }\n\n  const words = str.split(naiiveSplit)\n  for (let i = 0; i < words.length; i++) {\n    //split 'one-two'\n    if (hasHyphen(words[i]) === true) {\n      arr = arr.concat(splitHyphens(words[i]))\n      continue\n    }\n    arr.push(words[i])\n  }\n\n  //greedy merge whitespace+arr to the right\n  let carry = ''\n  for (let i = 0; i < arr.length; i++) {\n    let word = arr[i]\n    //if it's more than a whitespace\n    if (wordlike.test(word) === true && notWord.hasOwnProperty(word) === false && isBoundary.test(word) === false) {\n      //put whitespace on end of previous term, if possible\n      if (result.length > 0) {\n        result[result.length - 1] += carry\n        result.push(word)\n      } else {\n        //otherwise, but whitespace before\n        result.push(carry + word)\n      }\n      carry = ''\n    } else {\n      carry += word\n    }\n  }\n  //handle last one\n  if (carry && result.length > 0) {\n    result[result.length - 1] += carry //put it on the end\n  }\n  return result\n}\nmodule.exports = splitWords\n","const Term = require('../Term/Term')\nconst Phrase = require('../Phrase/Phrase')\nconst Pool = require('./Pool')\n\nconst splitSentences = require('./01-sentences')\nconst splitTerms = require('./02-words')\n\n//add forward/backward 'linked-list' prev/next ids\nconst addLinks = terms => {\n  terms.forEach((term, i) => {\n    if (i > 0) {\n      term.prev = terms[i - 1].id\n    }\n    if (terms[i + 1]) {\n      term.next = terms[i + 1].id\n    }\n  })\n}\n\n/** turn a string into an array of Phrase objects */\nconst fromText = function(text = '', world, pool) {\n  //a bit of validation, first\n  if (typeof text !== 'string') {\n    if (typeof text === 'number') {\n      text = String(text)\n    }\n  }\n  //tokenize into words\n  let sentences = splitSentences(text, world)\n  sentences = sentences.map(str => splitTerms(str))\n\n  //turn them into proper objects\n  pool = pool || new Pool()\n\n  let phrases = sentences.map(terms => {\n    terms = terms.map(str => {\n      let term = new Term(str)\n      pool.add(term)\n      return term\n    })\n    //add next/previous ids\n    addLinks(terms)\n\n    //return phrase objects\n    return new Phrase(terms[0].id, terms.length, pool)\n  })\n  //return them ready for a Document object\n  return phrases\n}\n\n/** create a word-pool and Phrase objects from .json() results*/\nconst fromJSON = function(data) {\n  let pool = new Pool()\n  //create Phrase objects\n  let phrases = data.map(terms => {\n    //create Term objects\n    terms = terms.map(obj => {\n      let term = new Term(obj.text)\n      term.pre = obj.pre\n      term.post = obj.post\n      term.tags = obj.tags.reduce((h, tag) => {\n        h[tag] = true\n        return h\n      }, {})\n      pool.add(term)\n      return term\n    })\n    //add prev/next links\n    addLinks(terms)\n    return new Phrase(terms[0].id, terms.length, pool)\n  })\n  return phrases\n}\n\nmodule.exports = {\n  fromText,\n  fromJSON,\n}\n","module.exports = '0.0.0'","module.exports={\n  \"Comparative\": \"true¦better\",\n  \"Superlative\": \"true¦earlier\",\n  \"PresentTense\": \"true¦is,sounds\",\n  \"Value\": \"true¦a few\",\n  \"Noun\": \"true¦aIbHcFdaylightEeCfBhere,ie,lit,mAno doubt,one d9p8s5t2vs,w0yesterd9;eek0int5;d7end;ce,mr1o0;d5morrow;!w;ome 1tandard8umm0;er;d1point;d,l;ay;a,d;t,y;g,om,sp,tc,x0;!p; time;a,ca,o0;l,rp;a,c,l;d,l,rc,utumn\",\n  \"Copula\": \"true¦a1is,w0;as,ere;m,re\",\n  \"PastTense\": \"true¦be3came,d2had,meant,sa2taken,w0;as,e0;nt,re;id;en,gan\",\n  \"Condition\": \"true¦if,unless\",\n  \"Gerund\": \"true¦accord0be0develop0go0result0stain0;ing\",\n  \"Negative\": \"true¦n0;ever,o0;!n,t\",\n  \"Verb\": \"true¦awakAborn,cann9fr8g7h5k3le2m1n9s0worsA;e9h3;ake sure,sg;ngth7ss7;eep tabs,n0;own;as0e2;!t3;iv2onna;ight1;ot;en\",\n  \"QuestionWord\": \"true¦how3wh0;at,e1ich,o0y;!m,se;n,re; come,'s\",\n  \"Plural\": \"true¦records\",\n  \"Conjunction\": \"true¦&,aEbAcuz,how8in caDno7o6p4supposing,t1vers5wh0yet;eth8ile;h0o;eref9o0;!uC;l0rovided that;us;r,therwi6; matt1r;!ev0;er;e0ut;cau1f0;ore;se;lthou1nd,s 0;far as,if;gh\",\n  \"Pronoun\": \"true¦'em,elle,h4i3me,ourselves,she5th1us,we,you0;!rself;e0ou;m,y;!l,t;e0im;!'s\",\n  \"Singular\": \"true¦a0Hb07cZdTeQfMgLhHici0Ljel0Ikitty,lGmEnDoCp8question mark,r7s4t1us 0;doll01st03; rex,a1h0ic,ragedy,v show;ere,i0I;l0Ex return;ky,t0uper bowl,yst0H;ri0Fu0;dLff;al0Ai0Doom;a2i07r1u0;dDrpo9;erogaNobl0B;rt,tG;bjKcean,thers;othi07umb02;ayf03eeUo0;del,nopo02;i01unch;ead start,o0;lZme1u0;se;! run;adfWirlPlaciUod,rand slam,ulW;amiVly,olVr1un0;diX;iNo0;ntiQsJ;conomy,gg,ner4v1x0;ampLecu6;ent;e2innMo0ragonfO;cumentBg0iNlNor;gy;ath,t0;ec0;tive;a5eiliLh3i1o0redit card;ttage,uE;ty,vil w0;ar;andeliCocol0;ate;n0r9;ary;a6elAlesCo2reakfast,u0;n0tterf9;tiB;dy,tt2y0;fri0;end;le;nki6r0;ri0;er;d1l0noma0;ly; homin2verti0;si0;ng;em\",\n  \"Actor\": \"true¦aJbGcFdCengineIfAgardenIh9instructPjournalLlawyIm8nurse,opeOp5r3s1t0;echnCherapK;ailNcientJoldiGu0;pervKrgeon;e0oofE;ceptionGsearC;hotographClumbColi1r0sychologF;actitionBogrammB;cem6t5;echanic,inist9us4;airdress8ousekeep8;arm7ire0;fight6m2;eputy,iet0;ici0;an;arpent2lerk;ricklay1ut0;ch0;er;ccoun6d2ge7r0ssis6ttenda7;chitect,t0;ist;minist1v0;is1;rat0;or;ta0;nt\",\n  \"Honorific\": \"true¦a03b00cSdReQfiLgKhon,jr,king,lJmEoDp8queen,r4s0taoiseach,vice7;e1fc,gt,ir,r,u0;ltTpt,rg;c0nDrgeaL;ond liJretary;abbi,e0;ar1pAs,v0;!erend; admirY;astPhd,r0vt;esideEi1of0;!essN;me mini5nce0;!ss;fficOp,rd;a3essrs,i2lle,me,r1s0;!tr;!s;stK;gistrate,j,r6yF;i3lb,t;en,ov;eld mar3rst l0;ady,i0;eutena0;nt;shG;sq,xcellency;et,oct6r,utchess;apt6hance4mdr,o0pl;lonel,m2ngress0unci3;m0wom0;an;dr,mand5;ll0;or;!ain;ldg,rig0;!adi0;er;d0sst,tty,yatullah;j,m0v;!ir0;al\",\n  \"SportsTeam\": \"true¦0:1A;1:1H;2:1G;a1Eb16c0Td0Kfc dallas,g0Ihouston 0Hindiana0Gjacksonville jagua0k0El0Bm01newToQpJqueens parkIreal salt lake,sAt5utah jazz,vancouver whitecaps,w3yW;ashington 3est ham0Rh10;natio1Oredski2wizar0W;ampa bay 6e5o3;ronto 3ttenham hotspur;blue ja0Mrapto0;nnessee tita2xasC;buccanee0ra0K;a7eattle 5heffield0Kporting kansas0Wt3;. louis 3oke0V;c1Frams;marine0s3;eah15ounG;cramento Rn 3;antonio spu0diego 3francisco gJjose earthquak1;char08paA; ran07;a8h5ittsburgh 4ortland t3;imbe0rail blaze0;pirat1steele0;il3oenix su2;adelphia 3li1;eagl1philNunE;dr1;akland 3klahoma city thunder,rlando magic;athle0Mrai3;de0; 3castle01;england 7orleans 6york 3;city fc,g4je0FknXme0Fred bul0Yy3;anke1;ian0D;pelica2sain0C;patrio0Brevolut3;ion;anchester Be9i3ontreal impact;ami 7lwaukee b6nnesota 3;t4u0Fvi3;kings;imberwolv1wi2;rewe0uc0K;dolphi2heat,marli2;mphis grizz3ts;li1;cXu08;a4eicesterVos angeles 3;clippe0dodDla9; galaxy,ke0;ansas city 3nE;chiefs,roya0E; pace0polis colU;astr06dynamo,rockeTtexa2;olden state warrio0reen bay pac3;ke0;.c.Aallas 7e3i05od5;nver 5troit 3;lio2pisto2ti3;ge0;broncZnuggeM;cowbo4maver3;ic00;ys; uQ;arCelKh8incinnati 6leveland 5ol3;orado r3umbus crew sc;api5ocki1;brow2cavalie0india2;bengaWre3;ds;arlotte horAicago 3;b4cubs,fire,wh3;iteB;ea0ulR;diff3olina panthe0; c3;ity;altimore 9lackburn rove0oston 5rooklyn 3uffalo bilN;ne3;ts;cel4red3; sox;tics;rs;oriol1rave2;rizona Ast8tlanta 3;brav1falco2h4u3;nited;aw9;ns;es;on villa,r3;os;c5di3;amondbac3;ks;ardi3;na3;ls\",\n  \"Uncountable\": \"true¦0:1C;a1Jb1Bc13d10e0Tf0Ng0Jh0Ei0Aj09knowled1Il04mWnews,oVpSrNsBt6vi5w1;a3ea07i2oo1;d,l;ldlife,ne;rmth,t0;neg8ol08tae;e4h3oothpaste,r1una;affRou1;ble,sers,t;ermod1Fund0;a,nnis;aAcene06eri0Qh9il8kittl0Qnow,o7p5t3u1;g1nshi0J;ar;ati1De1;am,el;ace16e1;ci0Ked;ap,cc0;k,v0;eep,ingl0H;d05fe10l1nd;m0St;a4e2ic1;e,ke0E;c1laxa0Asearch;ogni09rea09;bi0Ain;aKe2hys10last6o1ressW;lit0Zrk,w0;a0Vtrol;bstetr0Xil,xygen;a6e4ilk,o3u1;mps,s1;ic;nHo0A;a1chan0S;sl00t;chine1il,themat0Q; learn05ry;aught0e3i2ogi0Nu1;ck,g0C;ce,ghtn02ngui0LteratI;a1isH;th0;ewel8usti0G;ce,mp1nformaPtself;a1ortan0E;ti1;en0C;a4isto3o1;ck1mework,n1spitali06;ey;ry;ir,libut,ppi8;en01o2r1um,ymna08;a7ound;l1ssip;d,f;i5lour,o2urnit1;ure;od,rgive1uri0wl;ne1;ss;c7sh;conomZduca6lectr5n3quip4thZvery1;body,o1thE;ne;joy1tertain1;ment;iciNonU;tiF;ar2iabet1raugh2;es;ts;a7elcius,h3ivPl2o1urrency;al,nfusiAttA;assNoth3;aos,e1;e2w1;ing;se;r5sh;a5eef,i2lood,owls,read,utt0;er;lliar2s1;on;ds;g1ss;ga1;ge;c7dvi6ero4ir3mnes2rt,thl1;et8;ty;craft;b5d1naut5;ynam4;ce;id,ou1;st1;ics\",\n  \"Infinitive\": \"true¦0:6I;1:6W;2:56;3:6T;4:6U;5:5X;6:65;7:6S;8:6O;9:6G;A:6Q;B:6N;C:6B;D:6X;a68b5Xc4Zd47e3Rf3Eg37h30i2Nj2Lk2Jl2Am20n1Xo1Tp1Eques3Fr0Ms01tTuPvMwFyE;awn,ield;aHe1Thist6iGoEre61;nd0rE;k,ry;pe,sh,th0;lk,nFrEsh,tCve;n,raD;d0t;aFiEo7;ew,sB;l69ry;nFpEr3se;gra4Kli3X;dEi7lo5P;er48o;aKeJhIoHrFuEwi8;ne,rn;aEe0Ki5Lu8y;de,in,nsf0p,v5D;r2WuC;ank,reat2L;nd,st;lk,rg1Ms7;aXcUeThRi49kip,lQmPnee3Io4XpOtHuEwitC;bmBck,ff0gge8ppFrEspe5;ge,pri1rou4Uvi4;ly,o33;aJeIoHrFuE;dy,mb6;a4OeEi4;ngth2Bss,tC;p,re;m,p;in,ke,r0Oy;la51oil,rink6;e1Vi6o3G;am,ip;a2iv0oE;ck,ut;arCem,le5n1r4tt6;aFo2rE;atCew;le,re;il,ve;a03eGisk,oFuE;in,le,sh;am,ll;aZcXdu9fWgVje5lSmRnt,pOquNsItHvEwa5M;eEiew,o33;al,l,rE;se,t;a42i2u3Z;eHi8oGtE;!o2rE;i5uc1X;l4rt;mb6nt,r4;e8i2;air,eFlEo3YreseD;a9y;at;a3Semb0i3Uo4;aFeEi4y;a1nt;te,x;a54r0F;act1Ver,le5u1;a0Zei4k5GoEyc6;gni29nci6rd;ch,li28s5E;i1nE;ge,k;aRerQiPlMoKrGuE;b1Yll,mp,rEsh;cha1s4H;ai1eGiDoE;cEdu9greAhibBmi1te8vi2S;eAlaim;di5pa2ss,veD;iDp,rtr3XsEur;e,t;aFuE;g,n3;n,y;ck,le;fo2ZmBsi8;ck,iDrt4Dss,u1;bGccur,ff0pera7utweFverEwe;co3Ylap,ta1Zu1whelm;igh;ser4ta2Z;eFotE;e,i9;ed,gle5;aJeIiGoFuE;ltip3Brd0;nit11ve;nErr10;d,g6us;asu2lt,n0Nr3ssa3;inta2Pna3rFtE;ch,t0;ch,kEry;et;aKeJiGoEu1B;aEck,ok,ve;d,n;ft,ke,mBnFstEve;!en;e,k;a2Cc0Dt;b0Mck,uE;gh,nC;iEno2X;ck,ll,ss;am,o2AuE;d3mp;gno2mOnEss3A;cMdica7flu0LhLsItGvE;eEol4;nt,st;erErodu9;a5fe2;i8tE;aEru5;ll;abBibB;lu1Dr1B;agi21pE;lemeDo1Zro4;aIeGi2oFuE;nt,rry;n01pe,st;aElp;d,t;nd6ppErm,te;en;aJloAoIrGuE;arEeAi12;ant31d;aEip,umb6;b,sp;es,ve1G;in,th0ze;aOeaNiLlJoGracFuncE;ti3A;tu2;cus,lFrE;ce,eca8m,s2S;d,l1W;a1ToE;at,od,w;gu2lEni1Rx;e,l;r,tu2;il,vE;or;a11cho,le5mQnNstLvalua7xE;a08cJerIi8pEte15;a14eFla12oEreA;rt,se;ct,riE;en9;ci1t;el,han3;abEima7;li1D;ab6couVdFfor9ga3han9j01riCsu2t0vE;isi2Ny;!u2;body,er3pE;hasiEow0;ze;a04eSiJoIrFuE;mp;aFeAiE;ft;g,in;d3ubt;ff0p,re5sFvE;iWor9;aIcFliEmiApl13tingui0Y;ke;oEuA;uEv0;ra3;gr1QppE;ear,ro4;cLem,fJliv0ma0Bny,pIsFterE;mi0C;cribe,er4iFtrE;oy;gn,re;a07e06i5osB;eEi07y;at,ct;iGlFrE;ea1;a2i03;de;ma3n9re,te;a08e07h04i7l02oHrE;aFeEoAu0Dy;a7dB;ck,ve;llXmQnFok,py,uEv0;gh,nt;ceNdu5fKsItGvE;eEin9;rt,y;aNin0PrE;a8ibu7ol;iEtitu7;d0st;iFoEroD;rm;gu2rm;rn;biJfoImaHpE;a2laE;in;re;nd;rt;ne;ap1e5;aEip,o1;im,w;aFeE;at,ck,w;llen3n3r3se;a1nt0;ll,ncFrEt0u1;e,ry;el;aNeKloJoHruGuE;lEry;ly;sh;a8mb,o8rrEth0un9;ow;ck;ar,lFnefBtrE;ay;ie4ong;ng,se;band0Hc09d04ffo03gr02id,lZmu1nWppRrOsIttEvoid,waB;acGeFra5;ct;m0Dnd;h,k;k,sE;eGiFocia7uE;me;gn,st;mb6rt;le;chFgEri4;ue;!i4;eaHlGroE;aCve;ch;aud,y;l,r;noun9sw0tE;icipa7;ce;lFt0;er;e3ow;ee;rd;aPdGju8mBoP;it;st;!reA;ss;cHhie4knowled3tiva7;te;ge;ve;eGouDu1;se;nt;pt;on\",\n  \"Unit\": \"true¦0:16;a11b0Zc0Ld0Ke0If0Dg09h06in0Ejoule0k00lYmNnMoLpIqHsqCt7volts,w6y4z3°2µ1;g,s;c,f,n;b,e2;a0Kb,d0Qears old,o1;tt0E;att0b;able4b3e2on1sp;!ne0;a2r0A;!l,sp;spo01; ft,uare 1;c0Fd0Ef3i0Ckilo0Gm1ya0B;e0Jil1;e0li0E;eet0o0A;t,uart0;ascals,e2i1ou0Mt;c0Jnt0;rcent,tZ;hms,uVz;an0GewtQ;/s,b,e7g,i3l,m2p1²,³;h,s;!²;!/h,cro3l1;e1li05;! DsC²;g05s0A;gPter1;! 2s1;! 1;per second;b,iZm,u1x;men0x0;b,elvin0g,ilo2m1nQ;!/h,ph,²;byYgWmeter1;! 2s1;! 1;per hour;e1g,z;ct1rtz0;aXogQ;al2b,igAra1;in0m0;!l1;on0;a4emtPl2t1;²,³; oz,uid ou1;nce0;hrenheit0rad0;b,x1;abyH;eciCg,l,mA;arat0eAg,m9oulomb0u1;bic 1p0;c5d4fo3i2meAya1;rd0;nch0;ot0;eci2;enti1;me4;!²,³;lsius0nti1;g2li1me1;ter0;ram0;bl,y1;te0;c4tt1;os1;eco1;nd0;re0;!s\",\n  \"Organization\": \"true¦0:46;a3Ab2Qc2Ad21e1Xf1Tg1Lh1Gi1Dj19k17l13m0Sn0Go0Dp07qu06rZsStFuBv8w3y1;amaha,m0Xou1w0X;gov,tu2S;a3e1orld trade organizati41;lls fargo,st1;fie22inghou16;l1rner br3D;-m11gree31l street journ25m11;an halNeriz3Wisa,o1;dafo2Gl1;kswagLvo;bs,kip,n2ps,s1;a tod2Rps;es35i1;lev2Xted natio2Uv; mobi2Kaco bePd bMeAgi frida9h3im horto2Tmz,o1witt2W;shiba,y1;ota,s r Y;e 1in lizzy;b3carpen33daily ma2Xguess w2holli0rolling st1Ms1w2;mashing pumpki2Ouprem0;ho;ea1lack eyed pe3Fyrds;ch bo1tl0;ys;l2s1;co,la m12;efoni07us;a6e4ieme2Gnp,o2pice gir5ta1ubaru;rbucks,to2N;ny,undgard1;en;a2Rx pisto1;ls;few25insbu26msu1X;.e.m.,adiohead,b6e3oyal 1yan2X;b1dutch she4;ank;/max,aders dige1Ed 1vl32;bu1c1Uhot chili peppe2Klobst28;ll;c,s;ant2Vizno2F;an5bs,e3fiz24hilip morrBi2r1;emier27octer & gamb1Rudenti14;nk floyd,zza hut;psi28tro1uge08;br2Qchina,n2Q; 2ason1Xda2G;ld navy,pec,range juli2xf1;am;us;a9b8e5fl,h4i3o1sa,wa;kia,tre dame,vart1;is;ke,ntendo,ss0K;l,s;c,st1Etflix,w1; 1sweek;kids on the block,york08;a,c;nd1Us2t1;ional aca2Fo,we0Q;a,cYd0O;aAcdonald9e5i3lb,o1tv,yspace;b1Nnsanto,ody blu0t1;ley crue,or0O;crosoft,t1;as,subisO;dica3rcedes2talli1;ca;!-benz;id,re;'s,s;c's milk,tt13z1Y;'ore09a3e1g,ittle caesa1Ktd;novo,x1;is,mark; pres5-z-boy,bour party;atv,fc,kk,m1od1K;art;iffy lu0Lo3pmorgan1sa;! cha1;se;hnson & johns1Sy d1R;bm,hop,n1tv;c,g,te1;l,rpol; & m,asbro,ewlett-packaTi3o1sbc,yundai;me dep1n1J;ot;tac1zbollah;hi;eneral 6hq,l5mb,o2reen d0Iu1;cci,ns n ros0;ldman sachs,o1;dye1g0B;ar;axo smith kliZencore;electr0Im1;oto0V;a3bi,da,edex,i1leetwood mac,oGrito-l0A;at,nancial1restoV; tim0;cebook,nnie mae;b06sa,u3xxon1; m1m1;ob0H;!rosceptics;aiml0Ae5isney,o3u1;nkin donuts,po0Wran dur1;an;j,w j1;on0;a,f leppa3ll,p2r spiegZstiny's chi1;ld;eche mode,t;rd;aEbc,hBi9nn,o3r1;aigsli5eedence clearwater reviv1ossra05;al;!ca c5l4m1o0Ast05;ca2p1;aq;st;dplMgate;ola;a,sco1tigroup;! systems;ev2i1;ck fil-a,na daily;r0Hy;dbury,pital o1rl's jr;ne;aGbc,eCfAl6mw,ni,o2p,r1;exiteeWos;ei3mbardiJston 1;glo1pizza;be;ng;ack & deckFo2ue c1;roX;ckbuster video,omingda1;le; g1g1;oodriN;cht3e ge0n & jer2rkshire hathaw1;ay;ryH;el;nana republ3s1xt5y5;f,kin robbi1;ns;ic;bXcSdidRerosmith,ig,lLmFnheuser-busEol,ppleAr7s3t&t,v2y1;er;is,on;hland2s1;n,ociated F; o1;il;by4g2m1;co;os; compu2bee1;'s;te1;rs;ch;c,d,erican3t1;!r1;ak; ex1;pre1;ss; 4catel2t1;air;!-luce1;nt;jazeera,qae1;da;as;/dc,a3er,t1;ivisi1;on;demy of scienc0;es;ba,c\",\n  \"Demonym\": \"true¦0:16;1:13;a0Wb0Nc0Cd0Ae09f07g04h02iYjVkTlPmLnIomHpDqatari,rBs7t5u4v3wel0Rz2;am0Fimbabwe0;enezuel0ietnam0H;g9krai1;aiwThai,rinida0Iu2;ni0Qrkmen;a4cot0Ke3ingapoOlovak,oma0Tpa05udRw2y0X;edi0Kiss;negal0Br08;mo0uU;o6us0Lw2;and0;a3eru0Hhilipp0Po2;li0Ertugu06;kist3lesti1na2raguay0;ma1;ani;amiZi2orweP;caragu0geri2;an,en;a3ex0Mo2;ngo0Erocc0;cedo1la2;gasy,y08;a4eb9i2;b2thua1;e0Dy0;o,t02;azakh,eny0o2uwaiti;re0;a2orda1;ma0Bp2;anN;celandic,nd4r2sraeli,ta02vo06;a2iT;ni0qi;i0oneV;aiDin2ondur0unN;di;amDe2hanai0reek,uatemal0;or2rm0;gi0;i2ren7;lipino,n4;cuadoVgyp6ngliJsto1thiopi0urope0;a2ominXut4;niH;a9h6o4roa3ub0ze2;ch;ti0;lom2ngol5;bi0;a6i2;le0n2;ese;lifor1m2na3;bo2eroo1;di0;angladeshi,el8o6r3ul2;gaG;aziBi2;ti2;sh;li2s1;vi0;aru2gi0;si0;fAl7merBngol0r5si0us2;sie,tr2;a2i0;li0;gent2me1;ine;ba1ge2;ri0;ni0;gh0r2;ic0;an\",\n  \"Possessive\": \"true¦anyAh5its,m3noCo1sometBthe0yo1;ir1mselves;ur0;!s;i8y0;!se4;er1i0;mse2s;!s0;!e0;lf;o1t0;hing;ne\",\n  \"Currency\": \"true¦$,aud,bRcPdKeurJfIgbp,hkd,inr,jpy,kGlEp8r7s3usd,x2y1z0¢,£,¥,ден,лв,руб,฿,₡,₨,€,₭,﷼;lotyRł;en,uanQ;af,of;h0t5;e0il5;k0q0;elL;iel,oubleKp,upeeK;e2ound st0;er0;lingH;n0soG;ceFn0;ies,y;e0i7;i,mpi6;n,r0wanzaByatB;!onaAw;ori7ranc9;!o8;en3i2kk,o0;b0ll2;ra5;me4n0rham4;ar3;ad,e0ny;nt1;aht,itcoin0;!s\",\n  \"Abbreviation\": \"true¦a08b05cZdXeUfSgRhQiPjNkanMlKmGnEoDpCque,rAs6t4u3v2w0;is0y00;!c;a,s,t;niv,safa,t;ce,e0;nn,x;ask,e1fc,gt,ir,r,t,u0;pt,rg;nDp0;!t;d,e0;pAs,v;a,d,ennGhd,l,rof,vt;ct,kla,nt,p,rd;eb0ov;!r;a2d,essrs,i1lle,me,r5s0t;!tr;nn,ster;!j,r;it,lb,t0;!d;!s;an,r,u0;l,n;a,da,e,nc;on,wy;a,en,ov;eb,l0t,y;!a;g,s1tc,x0;!p;p,q;ak,e0ist,r;c,pt,t;a3ca,l,m2o0pl,res,t;!l0m1nn,rp;!o;dr;!l0pt;!if;a,c,l1r0;ig,os;!dg,vd;d3l2pr,r1ss0tty,ug,ve;n,t;c,iz;!ta;!j,m,v\",\n  \"Place\": \"true¦a07b05cZdYeXfVgRhQiOjfk,kMlKmHneEoDp9que,rd,s8t5u4v3w0yyz;is1y0;!o;!c;a,t;pYsafa,t;e1he 0;bronx,hamptons;nn,x;ask,fo,oho,t,under6yd;a2e1h0;l,x;k,nnK;!cifX;kla,nt;b1w eng0;land;!r;a1co,i0t,uc;dKnn;libu,nhattS;a0gw,hr;s,x;an0ul;!s;a0cn,da,ndianMst;!x;arlem,kg,nd,wy;a2re0;at 0enwich;britain,lak6;!y village;co,l0ra;!a;urope,verglad2;ak,en,fw,ist,own4xb;al4dg,gk,hina3l2o1r0t;es;lo,nn;!t;town;!if;cn,e0kk,lvd,rooklyn;l air,verly hills;frica,lta,m5ntarct2r1sia,tl0ve;!ant1;ct0iz;ic0; oce0;an;ericas,s\",\n  \"Country\": \"true¦0:38;1:2L;a2Wb2Dc21d1Xe1Rf1Lg1Bh19i13j11k0Zl0Um0Gn05om3CpZqat1JrXsKtCu6v4wal3yemTz2;a24imbabwe;es,lis and futu2X;a2enezue31ietnam;nuatu,tican city;.5gTkraiZnited 3ruXs2zbeE;a,sr;arab emirat0Kkingdom,states2;! of am2X;k.,s.2; 27a.;a7haBimor-les0Bo6rinidad4u2;nis0rk2valu;ey,me2Xs and caic1T; and 2-2;toba1J;go,kel0Ynga;iw2Vji2nz2R;ki2T;aCcotl1eBi8lov7o5pa2Bri lanka,u4w2yr0;az2ed9itzerl1;il1;d2Qriname;lomon1Vmal0uth 2;afr2IkLsud2O;ak0en0;erra leoEn2;gapo1Wt maart2;en;negKrb0ychellY;int 2moa,n marino,udi arab0;hele24luc0mart1Z;epublic of ir0Com2Cuss0w2;an25;a3eHhilippinTitcairn1Ko2uerto riM;l1rtugE;ki2Bl3nama,pua new0Tra2;gu6;au,esti2;ne;aAe8i6or2;folk1Gth3w2;ay; k2ern mariana1B;or0M;caragua,ger2ue;!ia;p2ther18w zeal1;al;mib0u2;ru;a6exi5icro09o2yanm04;ldova,n2roc4zamb9;a3gol0t2;enegro,serrat;co;c9dagascZl6r4urit3yot2;te;an0i14;shall0Vtin2;ique;a3div2i,ta;es;wi,ys0;ao,ed00;a5e4i2uxembourg;b2echtenste10thu1E;er0ya;ban0Gsotho;os,tv0;azakh1De2iriba02osovo,uwait,yrgyz1D;eling0Jnya;a2erF;ma15p1B;c6nd5r3s2taly,vory coast;le of m19rael;a2el1;n,q;ia,oI;el1;aiSon2ungary;dur0Mg kong;aAermany,ha0Pibralt9re7u2;a5ern4inea2ya0O;!-biss2;au;sey;deloupe,m,tema0P;e2na0M;ce,nl1;ar;bTmb0;a6i5r2;ance,ench 2;guia0Dpoly2;nes0;ji,nl1;lklandTroeT;ast tim6cu5gypt,l salv5ngl1quatorial3ritr4st2thiop0;on0; guin2;ea;ad2;or;enmark,jibou4ominica3r con2;go;!n B;ti;aAentral african 9h7o4roat0u3yprQzech2; 8ia;ba,racao;c3lo2morPngo-brazzaville,okFsta r03te d'ivoiK;mb0;osD;i2ristmasF;le,na;republic;m2naTpe verde,yman9;bod0ero2;on;aFeChut00o8r4u2;lgar0r2;kina faso,ma,undi;azil,itish 2unei;virgin2; is2;lands;liv0nai4snia and herzegoviGtswaGuvet2; isl1;and;re;l2n7rmuF;ar2gium,ize;us;h3ngladesh,rbad2;os;am3ra2;in;as;fghaFlCmAn5r3ustr2zerbaijH;al0ia;genti2men0uba;na;dorra,g4t2;arct6igua and barbu2;da;o2uil2;la;er2;ica;b2ger0;an0;ia;ni2;st2;an\",\n  \"Region\": \"true¦0:1U;a20b1Sc1Id1Des1Cf19g13h10i0Xj0Vk0Tl0Qm0FnZoXpSqPrMsDtAut9v6w3y1zacatec22;o05u1;cat18kZ;a1est vi4isconsin,yomi14;rwick0shington1;! dc;er2i1;rgin1S;acruz,mont;ah,tar pradesh;a2e1laxca1DuscaA;nnessee,x1R;bas0Kmaulip1QsmJ;a6i4o2taf0Ou1ylh13;ffVrr00s0Y;me10no1Auth 1;cSdR;ber1Ic1naloa;hu0Sily;n2skatchew0Rxo1;ny; luis potosi,ta catari1I;a1hode7;j1ngp02;asth0Mshahi;inghai,u1;e1intana roo;bec,ensWreta0E;ara4e2rince edward1; isU;i,nnsylv1rnambu02;an14;!na;axa0Ndisha,h1klaho1Bntar1reg4x04;io;ayarit,eBo3u1;evo le1nav0L;on;r1tt0Rva scot0X;f6mandy,th1; 1ampton0;c3d2yo1;rk0;ako0Y;aroli0V;olk;bras0Xva01w1; 2foundland1;! and labrador;brunswick,hamp0jers1mexiJyork state;ey;a6i2o1;nta0Nrelos;ch3dlanBn2ss1;issippi,ouri;as geraGneso0M;igQoacQ;dhya,harasht04ine,ni3r1ssachusetts;anhao,y1;land;p1toba;ur;anca0e1incoln0ouis8;e1iH;ds;a1entucky,hul0A;ns08rnata0Dshmir;alis1iangxi;co;daho,llino2nd1owa;ia05;is;a2ert1idalEunA;ford0;mp0waii;ansu,eorgWlou5u1;an2erre1izhou,jarat;ro;ajuato,gdo1;ng;cester0;lori2uji1;an;da;sex;e4o2uran1;go;rs1;et;lawaErby0;a8ea7hi6o1umbrH;ahui4l3nnectic2rsi1ventry;ca;ut;iMorado;la;apEhuahua;ra;l8m1;bridge0peche;a5r4uck1;ingham0;shi1;re;emen,itish columb3;h2ja cal1sque,var2;iforn1;ia;guascalientes,l4r1;izo2kans1;as;na;a2ber1;ta;ba2s1;ka;ma\",\n  \"City\": \"true¦a2Wb26c1Wd1Re1Qf1Og1Ih1Ai18jakar2Hk0Zl0Tm0Gn0Co0ApZquiYrVsLtCuBv8w3y1z0;agreb,uri1Z;ang1Te0okohama;katerin1Hrev34;ars3e2i0rocl3;ckl0Vn0;nipeg,terth0W;llingt1Oxford;aw;a1i0;en2Hlni2Z;lenc2Uncouv0Gr2G;lan bat0Dtrecht;a6bilisi,e5he4i3o2rondheim,u0;nVr0;in,ku;kyo,ronIulouC;anj23l13miso2Jra2A; haJssaloni0X;gucigalpa,hr2Ol av0L;i0llinn,mpe2Bngi07rtu;chu22n2MpT;a3e2h1kopje,t0ydney;ockholm,uttga12;angh1Fenzh1X;o0KvZ;int peters0Ul3n0ppo1F; 0ti1B;jo0salv2;se;v0z0Q;adU;eykjavik,i1o0;me,sario,t25;ga,o de janei17;to;a8e6h5i4o2r0ueb1Qyongya1N;a0etor24;gue;rt0zn24; elizabe3o;ls1Grae24;iladelph1Znom pe07oenix;r0tah tik19;th;lerJr0tr10;is;dessa,s0ttawa;a1Hlo;a2ew 0is;delTtaip0york;ei;goya,nt0Upl0Uv1R;a5e4i3o1u0;mb0Lni0I;nt0scH;evideo,real;l1Mn01skolc;dellín,lbour0S;drid,l5n3r0;ib1se0;ille;or;chest0dalWi0Z;er;mo;a4i1o0vAy01;nd00s angel0F;ege,ma0nz,sbZverpo1;!ss0;ol; pla0Iusan0F;a5hark4i3laipeda,o1rak0uala lump2;ow;be,pavog0sice;ur;ev,ng8;iv;b3mpa0Kndy,ohsiu0Hra0un03;c0j;hi;ncheMstanb0̇zmir;ul;a5e3o0; chi mi1ms,u0;stI;nh;lsin0rakliG;ki;ifa,m0noi,va0A;bu0SiltD;alw4dan3en2hent,iza,othen1raz,ua0;dalaj0Gngzhou;bu0P;eUoa;sk;ay;es,rankfu0;rt;dmont4indhovU;a1ha01oha,u0;blRrb0Eshanbe;e0kar,masc0FugavpiJ;gu,je0;on;a7ebu,h2o0raioJuriti01;lo0nstanJpenhagNrk;gFmbo;enn3i1ristchur0;ch;ang m1c0ttagoL;ago;ai;i0lgary,pe town,rac4;ro;aHeBirminghWogoAr5u0;char3dap3enos air2r0sZ;g0sa;as;es;est;a2isba1usse0;ls;ne;silPtisla0;va;ta;i3lgrade,r0;g1l0n;in;en;ji0rut;ng;ku,n3r0sel;celo1ranquil0;la;na;g1ja lu0;ka;alo0kok;re;aBb9hmedabad,l7m4n2qa1sh0thens,uckland;dod,gabat;ba;k0twerp;ara;m5s0;terd0;am;exandr0maty;ia;idj0u dhabi;an;lbo1rh0;us;rg\",\n  \"FemaleName\": \"true¦0:FY;1:G2;2:FR;3:FD;4:FC;5:FS;6:EP;7:ER;8:EZ;9:GF;A:GB;B:E5;C:FO;D:G8;E:FL;F:EG;aE2bD4cB7dAHe9Ff90g8Gh82i7Rj6Tk5Zl4Nm38n2To2Qp2Fqu2Er1Os0Qt04ursu7vUwOyLzG;aJeHoG;e,la,ra;lGna;da,ma;da,ra;as7DeHol1TvG;et6onB8;le0sen3;an8endBNhiB3iG;lInG;if39niGo0;e,f38;a,helmi0lGma;a,ow;aMeJiG;cHviG;an9WenG1;kCZtor3;da,l8Unus,rG;a,nGoniD2;a,iDC;leGnesEC;nDLrG;i1y;aSePhNiMoJrGu7y4;acG3iGu0E;c3na,sG;h9Lta;nHrG;a,i;i9Iya;a5HffaCGna,s5;al3eGomasi0;a,l8Fo6Wres1;g7To6VrHssG;!a,ie;eFi,ri9;bNliMmKnIrHs5tGwa0;ia0um;a,yn;iGya;a,ka,s5;a4e4iGmCAra;!ka;a,t5;at5it5;a05carlet2Xe04hUiSkye,oQtMuHyG;bFJlvi1;e,sHzG;an2Set6ie,y;anGi9;!a,e,nG;aEe;aIeG;fGl3CphG;an2;cF8r71;f3nGphi1;d4ia,ja,ya;er4lv3mon1nGobh74;dy;aKeGirlBLo0y7;ba,e0i7lIrG;iGrBPyl;!d6Z;ia,lBV;ki4nIrHu0w0yG;la,na;i,leAon,ron;a,da,ia,nGon;a,on;l5Xre0;bMdLi8lKmIndHrGs5vannaE;aEi0;ra,y;aGi4;nt5ra;lBNome;e,ie;in1ri0;a02eXhViToHuG;by,thBK;bQcPlOnNsHwe0xG;an93ie,y;aHeGie,lD;ann9ll1marBFtB;!lGnn1;iGyn;e,nG;a,d7V;da,i,na;an8;hel52io;bin,erByn;a,cGkki,na,ta;helBZki;ea,iannDXoG;da,n11;an0bIgi0i0nGta,y0;aGee;!e,ta;a,eG;cARkaE;chGe,i0mo0n5DquCDvCy0;aCCelGi8;!e,le;een2ia0;aMeLhJoIrG;iGudenAW;scil1Tyamva8;lly,rt3;ilome0oebe,ylG;is,lis;arl,ggy,nelope,r7t4;ige,m0En4No7rvaBBtHulG;a,et6in1;ricGsy,tA8;a,e,ia;ctav3deHf85lGph85;a,ga,iv3;l3t6;aQePiJoGy7;eHrG;aEeCma;ll1mi;aKcIkGla,na,s5ta;iGki;!ta;hoB2k8BolG;a,eBH;!mh;l7Tna,risF;dIi5OnHo22taG;li1s5;cy,et6;eAiCO;a00ckenz2eUiKoHrignayani,uriBGyrG;a,na,tAT;i4ll9YnG;a,iG;ca,ka,qB5;a,chOkaNlJmi,nIrGtzi;aGiam;!n8;a,dy,erva,h,n2;a,dIi9KlG;iGy;cent,e;red;!e7;ae7el3G;ag4KgKi,lHrG;edi61isFyl;an2iGliF;nGsAN;a,da;!an,han;b08c9Fd06e,g04i03l01nZrKtJuHv6Sx88yGz2;a,bell,ra;de,rG;a,eC;h76il8t2;a,cSgOiJjor2l6In2s5tIyG;!aGbe5QjaAlou;m,n9T;a,ha,i0;!aIbAMeHja,lDna,sGt53;!a,ol,sa;!l06;!h,m,nG;!a,e,n1;arIeHie,oGr3Kueri6;!t;!ry;et3IiB;elGi61y;a,l1;dGon,ue7;akranBy;iGlo36;a,ka,n8;a,re,s2;daGg2;!l2W;alDd2elGge,isBHon0;eiAin1yn;el,le;a0Ie08iWoQuKyG;d3la,nG;!a,dHe9TnGsAR;!a,e9S;a,sAP;aB2cJelIiFlHna,pGz;e,iB;a,u;a,la;iGy;a2Ae,l25n8;is,l1GrHtt2uG;el7is1;aIeHi9na,rG;a70i9;lei,n1tB;!in1;aQbPd3lLnIsHv3zG;!a,be4Ket6z2;a,et6;a,dG;a,sGy;ay,ey,i,y;a,iaIlG;iGy;a8He;!n4F;b7Uerty;!n5S;aNda,e0iLla,nKoIslAStGx2;iGt2;c3t3;la,nGra;a,ie,o4;a,or1;a,gh,laG;!ni;!h,nG;a,d4e,n4N;cNdon7Ti7kes5na,rMtKurIvHxGy7;mi;ern1in3;a,eGie,yn;l,n;as5is5oG;nya,ya;a,isF;ey,ie,y;aZeUhadija,iMoLrIyG;lGra;a,ee,ie;istGy5C;a,en,iGy;!e,n48;ri,urtn9B;aMerLl9AmIrGzzy;a,stG;en,in;!berlG;eGi,y;e,y;a,stC;!na,ra;el6QiJlInHrG;a,i,ri;d4na;ey,i,l9Rs2y;ra,s5;c8Xi5YlOma7nyakumari,rMss5MtJviByG;!e,lG;a,eG;e,i79;a5FeHhGi3PlDri0y;ar5Der5Die,leCr9Gy;!lyn74;a,en,iGl4Vyn;!ma,n31sF;ei73i,l2;a04eVilToMuG;anKdJliGst57;aHeGsF;!nAt0W;!n8Y;i2Ry;a,iB;!anLcelDd5Wel72han6JlJni,sHva0yG;a,ce;eGie;fi0lDph4Y;eGie;en,n1;!a,e,n36;!i10lG;!i0Z;anLle0nIrHsG;i5Rsi5R;i,ri;!a,el6Qif1RnG;a,et6iGy;!e,f1P;a,e73iHnG;a,e72iG;e,n1;cLd1mi,nHqueliAsmin2Uvie4yAzG;min9;a9eHiG;ce,e,n1s;!lGsFt06;e,le;inHk2lDquelG;in1yn;da,ta;lPmNnMo0rLsHvaG;!na;aHiGob6V;do4;!belGdo4;!a,e,l2G;en1i0ma;a,di4es,gr5S;el8ogG;en1;a,eAia0o0se;aNeKilHoGyacin1N;ll2rten1H;aHdGlaH;a,egard;ry;ath0WiHlGnrietBrmiAst0W;en24ga;di;il76lKnJrGtt2yl76z6E;iGmo4Gri4H;etG;!te;aEnaE;ey,l2;aYeTiOlMold12rIwG;enGyne18;!dolD;acHetGisel8;a,chC;e,ieG;!la;adys,enGor3yn1Y;a,da,na;aJgi,lHna,ov72selG;a,e,le;da,liG;an;!n0;mYnIorgHrG;ald36i,m2Ttru74;et6i5U;a,eGna;s1Nvieve;briel3Gil,le,rnet,yle;aReOio0loMrG;anHe8iG;da,e8;!cG;esHiGoi0G;n1s3W;!ca;!rG;a,en44;lHrnG;!an8;ec3ic3;rHtiGy9;ma;ah,rah;d0FileCkBl00mUn4BrRsMtLuKvG;aIelHiG;e,ta;in0Ayn;!ngel2I;geni1la,ni3S;h53ta;meral8peranJtG;eHhGrel7;er;l2Qr;za;iGma,nest2Ayn;cGka,n;a,ka;eJilImG;aGie,y;!liA;ee,i1y;lGrald;da,y;aTeRiMlLma,no4oJsIvG;a,iG;na,ra;a,ie;iGuiG;se;a,en,ie,y;a0c3da,nJsGzaH;aGe;!beG;th;!a,or;anor,nG;!a;in1na;en,iGna,wi0;e,th;aWeKiJoGul2V;lor52miniq3Zn31rGtt2;a,eCis,la,othGthy;ea,y;an09naEonAx2;anPbOde,eNiLja,lImetr3nGsir4V;a,iG;ce,se;a,iHla,orGphiA;es,is;a,l5K;dGrdG;re;!d4Nna;!b2DoraEra;a,d4nG;!a,e;hl3i0mMnKphn1rHvi1XyG;le,na;a,by,cHia,lG;a,en1;ey,ie;a,et6iG;!ca,el1Bka;arGia;is;a0Re0Nh05i03lVoJrHynG;di,th3;istGy05;al,i0;lPnMrHurG;tn1E;aJdIiGnIriA;!nG;a,e,n1;el3;!l1S;n2sG;tanGuelo;ce,za;eGleC;en,t6;aIeoHotG;il4B;!pat4;ir9rIudG;et6iG;a,ne;a,e,iG;ce,sX;a4er4ndG;i,y;aPeMloe,rG;isHyG;stal;sy,tG;aHen,iGy;!an1e,n1;!l;lseHrG;!i9yl;a,y;nLrG;isJlHmG;aiA;a,eGot6;n1t6;!sa;d4el1PtG;al,el1O;cHlG;es6i3F;el3ilG;e,ia,y;iYlXmilWndVrNsLtGy7;aJeIhGri0;erGleCrDy;in1;ri0;li0ri0;a2GsG;a2Fie;a,iMlKmeIolHrG;ie,ol;!e,in1yn;lGn;!a,la;a,eGie,y;ne,y;na,sF;a0Di0D;a,e,l1;isBl2;tlG;in,yn;arb0CeYianXlVoTrG;andRePiIoHyG;an0nn;nwDok9;an2NdgKg0ItG;n27tG;!aHnG;ey,i,y;ny;etG;!t9;an0e,nG;da,na;i9y;bbi9nG;iBn2;ancGossom,ythe;a,he;ca;aRcky,lin8niBrNssMtIulaEvG;!erlG;ey,y;hHsy,tG;e,i0Zy9;!anG;ie,y;!ie;nGt5yl;adHiG;ce;et6iA;!triG;ce,z;a4ie,ra;aliy29b24d1Lg1Hi19l0Sm0Nn01rWsNthe0uJvIyG;anGes5;a,na;a,r25;drIgusHrG;el3o4;ti0;a,ey,i,y;hHtrG;id;aKlGt1P;eHi9yG;!n;e,iGy;gh;!nG;ti;iIleHpiB;ta;en,n1t6;an19elG;le;aYdWeUgQiOja,nHtoGya;inet6n3;!aJeHiGmI;e,ka;!mGt6;ar2;!belHliFmT;sa;!le;ka,sGta;a,sa;elGie;a,iG;a,ca,n1qG;ue;!t6;te;je7rea;la;!bHmGstas3;ar3;el;aIberHel3iGy;e,na;!ly;l3n8;da;aTba,eNiKlIma,yG;a,c3sG;a,on,sa;iGys0J;e,s0I;a,cHna,sGza;a,ha,on,sa;e,ia;c3is5jaIna,ssaIxG;aGia;!nd4;nd4;ra;ia;i0nHyG;ah,na;a,is,naE;c5da,leCmLnslKsG;haElG;inGyW;g,n;!h;ey;ee;en;at5g2nG;es;ie;ha;aVdiSelLrG;eIiG;anLenG;a,e,ne;an0;na;aKeJiHyG;nn;a,n1;a,e;!ne;!iG;de;e,lDsG;on;yn;!lG;iAyn;ne;agaJbHiG;!gaI;ey,i9y;!e;il;ah\",\n  \"WeekDay\": \"true¦fri4mon4s2t1wed0;!nesd4;hurs2ues2;at0un1;!urd1;!d0;ay0;!s\",\n  \"Date\": \"true¦autumn,daylight9eom,one d8s5t2w0yesterd8;eek0int5;d6end;mr1o0;d4morrow;!w;ome 1tandard3umm0;er;d0point;ay; time\",\n  \"Time\": \"true¦a6breakfast 5dinner5e3lunch5m2n0oclock,some5to7;i7o0;on,w;id4or1;od,ve0;ning;time;fternoon,go,ll day,t 0;ni0;ght\",\n  \"Holiday\": \"true¦0:1Q;1:1P;a1Fb1Bc12d0Ye0Of0Kg0Hh0Di09june07kwanzaa,l04m00nYoVpRrPsFt9v6w4xm03y2;om 2ule;hasho16kippur;hit2int0Xomens equalit8; 0Ss0T;alentines3e2ictor1E;r1Bteran1;! 0;-0ax 0h6isha bav,rinityMu2; b3rke2;y 0;ish2she2;vat;a0Xe prophets birth0;a6eptember14h4imchat tor0Ut 3u2;kk4mmer T;a8p7s6valentines day ;avu2mini atzeret;ot;int 2mhain;a4p3s2valentine1;tephen1;atrick1;ndrew1;amadan,ememberanc0Yos2;a park1h hashana;a3entecost,reside0Zur2;im,ple heart 0;lm2ssovE; s04;rthodox 2stara;christma1easter2goOhoJn0C;! m07;ational 2ew years09;freedom 0nurse1;a2emorial 0lHoOuharram;bMr2undy thurs0;ch0Hdi gr2tin luther k0B;as;a2itRughnassadh;bour 0g baom2ilat al-qadr;er; 2teenth;soliU;d aJmbolc,n2sra and miraj;augurGd2;ependen2igenous people1;c0Bt1;a3o2;ly satur0;lloween,nukkUrvey mil2;k 0;o3r2;ito de dolores,oundhoW;odW;a4east of 2;our lady of guadalupe,the immaculate concepti2;on;ther1;aster8id 3lectYmancip2piphany;atX;al-3u2;l-f3;ad3f2;itr;ha;! 2;m8s2;un0;ay of the dead,ecemb3i2;a de muertos,eciseis de septiembre,wali;er sol2;stice;anad8h4inco de mayo,o3yber m2;on0;lumbu1mmonwealth 0rpus christi;anuk4inese n3ristmas2;! N;ew year;ah;a 0ian tha2;nksgiving;astillCeltaine,lack4ox2;in2;g 0; fri0;dvent,ll 9pril fools,rmistic8s6u2;stral4tum2;nal2; equinox;ia 0;cens2h wednes0sumption of mary;ion 0;e 0;hallows 6s2;ai2oul1t1;nt1;s 0;day;eve\",\n  \"Month\": \"true¦aBdec9feb7j2mar,nov9oct1sep0;!t8;!o8;an3u0;l1n0;!e;!y;!u1;!ru0;ary;!em0;ber;pr1ug0;!ust;!il\",\n  \"Duration\": \"true¦centur4d2hour3m0seconds,week3year3;i0onth2;llisecond1nute1;ay0ecade0;!s;ies,y\",\n  \"FirstName\": \"true¦aEblair,cCdevBj8k6lashawn,m3nelly,quinn,re2sh0;ay,e0iloh;a,lby;g1ne;ar1el,org0;an;ion,lo;as8e0r9;ls7nyatta,rry;am0ess1ude;ie,m0;ie;an,on;as0heyenne;ey,sidy;lex1ndra,ubr0;ey;is\",\n  \"LastName\": \"true¦0:34;1:39;2:3B;3:2Y;4:2E;5:30;a3Bb31c2Od2Ee2Bf25g1Zh1Pi1Kj1Ek17l0Zm0Nn0Jo0Gp05rYsMtHvFwCxBy8zh6;a6ou,u;ng,o;a6eun2Uoshi1Kun;ma6ng;da,guc1Zmo27sh21zaR;iao,u;a7eb0il6o3right,u;li3Bs1;gn0lk0ng,tanabe;a6ivaldi;ssilj37zqu2;a9h8i2Go7r6sui,urn0;an,ynisJ;lst0Prr1Uth;at1Uomps1;kah0Vnaka,ylor;aEchDeChimizu,iBmiAo9t7u6zabo;ar2lliv2AzuE;a6ein0;l23rm0;sa,u3;rn4th;lva,mmo24ngh;mjon4rrano;midt,neid0ulz;ito,n7sa6to;ki;ch2dLtos,z;amBeag1Zi9o7u6;bio,iz,sD;b6dri1MgIj0Tme24osevelt,ssi,ux;erts,ins1;c6ve0F;ci,hards1;ir2os;aEeAh8ic6ow20;as6hl0;so;a6illips;m,n1T;ders5et8r7t6;e0Nr4;ez,ry;ers;h21rk0t6vl4;el,te0J;baBg0Blivei01r6;t6w1O;ega,iz;a6eils1guy5ix1owak,ym1E;gy,ka6var1K;ji6muW;ma;aEeCiBo8u6;ll0n6rr0Bssolini,ñ6;oz;lina,oKr6zart;al0Me6r0U;au,no;hhail4ll0;rci0ssi6y0;!er;eWmmad4r6tsu07;in6tin2;!o;aCe8i6op2uo;!n6u;coln,dholm;fe7n0Qr6w0J;oy;bv6v6;re;mmy,rs5u;aBennedy,imuAle0Lo8u7wo6;k,n;mar,znets4;bay6vacs;asY;ra;hn,rl9to,ur,zl4;aAen9ha3imen2o6u3;h6nYu3;an6ns1;ss1;ki0Es5;cks1nsse0D;glesi9ke8noue,shik7to,vano6;u,v;awa;da;as;aBe8itchcock,o7u6;!a3b0ghNynh;a3ffmann,rvat;mingw7nde6rN;rs1;ay;ns5rrQs7y6;asDes;an4hi6;moJ;a9il,o8r7u6;o,tierr2;ayli3ub0;m2nzal2;nd6o,rcia;hi;erAis9lor8o7uj6;ita;st0urni0;es;ch0;nand2;d7insteHsposi6vaL;to;is1wards;aCeBi9omin8u6;bo6rand;is;gu2;az,mitr4;ov;lgado,vi;nkula,rw7vi6;es,s;in;aFhBlarkAo6;h5l6op0rbyn,x;em7li6;ns;an;!e;an8e7iu,o6ristens5u3we;i,ng,u3w,y;!n,on6u3;!g;mpb7rt0st6;ro;ell;aBe8ha3lanco,oyko,r6yrne;ooks,yant;ng;ck7ethov5nnett;en;er,ham;ch,h8iley,rn6;es,i0;er;k,ng;dDl9nd6;ers6rA;en,on,s1;on;eks7iy8var2;ez;ej6;ev;ams\",\n  \"MaleName\": \"true¦0:CF;1:BL;2:C3;3:BT;4:B5;5:C0;6:AT;7:9V;8:BD;9:AX;A:AO;aB4bA8c97d87e7Gf6Yg6Gh5Wi5Ij4Lk4Bl3Rm2Pn2Eo28p22qu20r1As0Qt06u05v00wNxavi3yGzB;aBor0;cBh8Ine;hCkB;!aB1;ar51eB0;ass2i,oCuB;sDu25;nEsDusB;oBsC;uf;ef;at0g;aJeHiCoByaAP;lfgang,odrow;lBn1O;bDey,frBJlB;aA5iB;am,e,s;e89ur;i,nde7sB;!l6t1;de,lCrr5yB;l1ne;lBt3;a93y;aEern1iB;cCha0nceBrg9Bva0;!nt;ente,t5A;lentin49n8Yughn;lyss4Msm0;aTeOhKiIoErCyB;!l3ro8s1;av9QeBist0oy,um0;nt9Iv54y;bDd7XmBny;!as,mBoharu;aAYie,y;i83y;mBt9;!my,othy;adDeoCia7DomB;!as;!do7M;!de9;dErB;en8HrB;an8GeBy;ll,n8F;!dy;dgh,ic9Tnn3req,ts45;aRcotPeNhJiHoFpenc3tBur1Oylve8Hzym1;anDeBua7B;f0phAFvBwa7A;e57ie;!islaw,l6;lom1nA3uB;leyma8ta;dBl7Jm1;!n6;aDeB;lBrm0;d1t1;h6Sne,qu0Uun,wn,y8;aBbasti0k1Xl41rg40th,ymo9I;m9n;!tB;!ie,y;lCmBnti21q4Iul;!mAu4;ik,vato6V;aWeShe92iOoFuCyB;an,ou;b6LdCf9pe6QssB;!elAJ;ol2Uy;an,bIcHdGel,geFh0landA3mEnDry,sCyB;!ce;coe,s;!a95nA;an,eo;l3Jr;e4Qg3n6oA4ri68;co,ky;bAe9U;cBl6;ar5Oc5NhCkBo;!ey,ie,y;a85ie;gCid,ub5x,yBza;ansh,nS;g8WiB;na8Ss;ch5Yfa4lDmCndBpha4sh6Uul,ymo70;al9Zol2By;i9Ion;f,ph;ent2inB;cy,t1;aFeDhilCier62ol,reB;st1;!ip,lip;d9Brcy,tB;ar,e2V;b3Sdra6Ft44ul;ctav2Vliv3m96rFsCtBum8Uw5;is,to;aCc8SvB;al52;ma;i,l49vJ;athJeHiDoB;aBel,l0ma0r2X;h,m;cCg4i3IkB;h6Uola;hol5XkBol5X;!ol5W;al,d,il,ls1vB;il50;anBy;!a4i4;aWeTiKoFuCyB;l21r1;hamCr5ZstaB;fa,p4G;ed,mF;dibo,e,hamDis1XntCsBussa;es,he;e,y;ad,ed,mB;ad,ed;cGgu4kElDnCtchB;!e7;a78ik;o03t1;e,olB;aj;ah,hBk6;a4eB;al,l;hClv2rB;le,ri7v2;di,met;ck,hNlLmOnu4rHs1tDuricCxB;!imilian86we7;e,io;eo,hCi52tB;!eo,hew,ia;eBis;us,w;cDio,k80lCqu6Gsha7tBv2;i2Hy;in,on;!el,oKus;achBcolm,ik;ai,y;amBdi,moud;adB;ou;aReNiMlo2RoIuCyB;le,nd1;cEiDkBth3;aBe;!s;gi,s;as,iaB;no;g0nn6RrenDuBwe7;!iB;e,s;!zo;am,on4;a7Bevi,la4SnDoBst3vi;!nB;!a60el;!ny;mCnBr67ur4Twr4T;ce,d1;ar,o4N;aIeDhaled,iBrist4Vu48y3B;er0p,rB;by,k,ollos;en0iEnBrmit,v2;!dCnBt5C;e0Yy;a7ri4N;r,th;na68rBthem;im,l;aYeQiOoDuB;an,liBst2;an,o,us;aqu2eJhnInGrEsB;eChBi7Cue;!ua;!ph;dBge;an,i,on;!aBny;h,s,th4X;!ath4Wie,nA;!l,sBy;ph;an,e,mB;!mA;d,ffGrDsB;sBus;!e;a5JemCmai8oBry;me,ni0O;i6Vy;!e58rB;ey,y;cHd5kGmFrDsCvi3yB;!d5s1;on,p3;ed,od,rBv4M;e4Zod;al,es,is1;e,ob,ub;k,ob,quB;es;aNbrahMchika,gKkeJlija,nuIrGsDtBv0;ai,sB;uki;aBha0i6Gma4sac;ac,iaB;h,s;a,vinBw2;!g;k,nngu52;!r;nacBor;io;im;in,n;aJeFina4VoDuByd56;be25gBmber4CsD;h,o;m3ra33sBwa3X;se2;aDctCitCn4ErB;be20m0;or;th;bKlJmza,nIo,rDsCyB;a43d5;an,s0;lEo4FrDuBv6;hi40ki,tB;a,o;is1y;an,ey;k,s;!im;ib;aQeMiLlenKoIrEuB;illerCsB;!tavo;mo;aDegBov3;!g,orB;io,y;dy,h58nt;nzaBrd1;lo;!n;lbe4Qno,ovan4S;ne,oDrB;aBry;ld,rd4O;ffr6rge;bri4l5rBv2;la1Zr3Eth,y;aReNiLlJorr0IrB;anDedBitz;!dAeBri24;ri23;cDkB;!ie,lB;in,yn;esJisB;!co,zek;etch3oB;yd;d4lBonn;ip;deriDliCng,rnB;an01;pe,x;co;bi0di;arZdUfrTit0lNmGnFo2rCsteb0th0uge8vBym5zra;an,ere2V;gi,iCnBrol,v2w2;est3Zie;c07k;och,rique,zo;aGerFiCmB;aFe2P;lCrB;!h0;!io;s1y;nu4;be09d1iEliDmCt1viBwood;n,s;er,o;ot1Ts;!as,j44sB;ha;a2en;!dAg32mEuCwB;a25in;arB;do;o0Su0S;l,nB;est;aYeOiLoErDuCwByl0;ay8ight;a8dl6nc0st2;ag0ew;minFnDri0ugCyB;le;!l03;!a29nBov0;e7ie,y;go,icB;!k;armuCeBll1on,rk;go;id;anIj0lbeHmetri9nFon,rEsDvCwBxt3;ay8ey;en,in;hawn,mo08;ek,ri0F;is,nBv3;is,y;rt;!dB;re;lKmInHrDvB;e,iB;!d;en,iDne7rByl;eBin,yl;l2Wn;n,o,us;!e,i4ny;iBon;an,en,on;e,lB;as;a06e04hWiar0lLoGrEuCyrB;il,us;rtB;!is;aBistobal;ig;dy,lEnCrB;ey,neli9y;or,rB;ad;by,e,in,l2t1;aGeDiByI;fBnt;fo0Ct1;meCt9velaB;nd;nt;rDuCyB;!t1;de;enB;ce;aFeErisCuB;ck;!tB;i0oph3;st3;d,rlBs;eBie;s,y;cBdric,s11;il;lEmer1rB;ey,lCro7y;ll;!os,t1;eb,v2;ar02eUilTlaSoPrCuByr1;ddy,rtI;aJeEiDuCyB;an,ce,on;ce,no;an,ce;nCtB;!t;dCtB;!on;an,on;dCndB;en,on;!foBl6y;rd;bCrByd;is;!by;i8ke;al,lA;nFrBshoi;at,nCtB;!r11;aBie;rd0M;!edict,iCjam2nA;ie,y;to;n6rBt;eBy;tt;ey;ar0Yb0Od0Kgust2hm0Hid5ja0FlZmXnPputsiOrFsaEuCveBya0ziz;ry;gust9st2;us;hi;aIchHi4jun,maFnDon,tBy0;hBu06;ur;av,oB;ld;an,nd04;el;ie;ta;aq;dGgelZtB;hoEoB;i8nB;!iWy;ne;ny;reBy;!as,s,w;ir,mBos;ar;an,beOd5eIfFi,lEonDphonHt1vB;aMin;on;so,zo;an,en;onCrB;edJ;so;c,jaEksandDssaExB;!and3;er;ar,er;ndB;ro;rtB;!o;ni;en;ad,eB;d,t;in;aCoBri0vik;lfo;mBn;!a;dFeEraCuB;!bakr,lfazl;hBm;am;!l;allEel,oulaye,ulB;!lCrahm0;an;ah,o;ah;av,on\",\n  \"Person\": \"true¦a01bZcTdQeOfMgJhHinez,jFkEleDmAnettPo9p7r4s3t2uncle,v0womL;a0irgin maH;lentino rossi,n go3;heresa may,iger woods,yra banks;addam hussaQcarlett johanssRistZlobodan milosevic,omeone,tepGuC;ay romano,eese witherspoQo1ush limbau0;gh;d stewart,naldinho;a0ipV;lmUris hiltM;prah winfrOra;an,essiaen,itt romnNo0ubarek;m0thR;!my;bron james,e;anye west,iefer sutherland,obe bryaN;aime,effersFk rowli0;ng;alle ber0itlLulk hog3;ry;astBentlem1irl,rand0uy;fa2mo2;an;a0ella;thF;ff0meril lagasse,zekiel;ie;a0enzel washingt4ick wolf,ude;d0lt3nte;!dy;ar2lint1ous0ruz;in;on;dinal wols1son0;! palm5;ey;arack obama,oy,ro0;!ck,th2;shton kutch1u0;nt;er\",\n  \"PhrasalVerb\": \"true¦0:71;1:6P;2:7D;3:73;4:6I;5:7G;6:75;7:6O;8:6B;9:6C;A:5H;B:70;C:6Z;a7Gb62c5Cd59e57f45g3Nh37iron0j33k2Yl2Km2Bn29o27p1Pr1Es09tQuOvacuum 1wGyammerCzD;eroAip EonD;e0k0;by,up;aJeGhFiEorDrit52;d 1k2Q;mp0n49pe0r8s8;eel Bip 7K;aEiD;gh 06rd0;n Br 3C;it 5Jk8lk6rm 0Qsh 73t66v4O;rgeCsD;e 9herA;aRePhNiJoHrFuDype 0N;ckArn D;d2in,o3Fup;ade YiDot0y 32;ckle67p 79;ne66p Ds4C;d2o6Kup;ck FdEe Dgh5Sme0p o0Dre0;aw3ba4d2in,up;e5Jy 1;by,o6U;ink Drow 5U;ba4ov7up;aDe 4Hll4N;m 1r W;ckCke Elk D;ov7u4N;aDba4d2in,o30up;ba4ft7p4Sw3;a0Gc0Fe09h05i02lYmXnWoVpSquare RtJuHwD;earFiD;ngEtch D;aw3ba4o6O; by;ck Dit 1m 1ss0;in,up;aIe0RiHoFrD;aigh1LiD;ke 5Xn2X;p Drm1O;by,in,o6A;n2Yr 1tc3H;c2Xmp0nd Dr6Gve6y 1;ba4d2up;d2o66up;ar2Uell0ill4TlErDurC;ingCuc8;a32it 3T;be4Brt0;ap 4Dow B;ash 4Yoke0;eep EiDow 9;c3Mp 1;in,oD;ff,v7;gn Eng2Yt Dz8;d2o5up;in,o5up;aFoDu4E;ot Dut0w 5W;aw3ba4f36o5Q;c2EdeAk4Rve6;e Hll0nd GtD; Dtl42;d2in,o5upD;!on;aw3ba4d2in,o1Xup;o5to;al4Kout0rap4K;il6v8;at0eKiJoGuD;b 4Dle0n Dstl8;aDba4d2in52o3Ft2Zu3D;c1Ww3;ot EuD;g2Jnd6;a1Wf2Qo5;ng 4Np6;aDel6inAnt0;c4Xd D;o2Su0C;aQePiOlMoKrHsyc29uD;ll Ft D;aDba4d2in,o1Gt33up;p38w3;ap37d2in,o5t31up;attleCess EiGoD;p 1;ah1Gon;iDp 52re3Lur44wer 52;nt0;ay3YuD;gAmp 9;ck 52g0leCn 9p3V;el 46ncilA;c3Oir 2Hn0ss FtEy D;ba4o4Q; d2c1X;aw3ba4o11;pDw3J;e3It B;arrow3Serd0oD;d6te3R;aJeHiGoEuD;ddl8ll36;c16p 1uth6ve D;al3Ad2in,o5up;ss0x 1;asur8lt 9ss D;a19up;ke Dn 9r2Zs1Kx0;do,o3Xup;aOeMiHoDuck0;a16c36g 0AoDse0;k Dse34;aft7ba4d2forw2Ain3Vov7uD;nd7p;e GghtFnEsDv1T;ten 4D;e 1k 1; 1e2Y;ar43d2;av1Ht 2YvelD; o3L;p 1sh DtchCugh6y1U;in3Lo5;eEick6nock D;d2o3H;eDyA;l2Hp D;aw3ba4d2fSin,o05to,up;aFoEuD;ic8mpA;ke2St2W;c31zz 1;aPeKiHoEuD;nker2Ts0U;lDneArse2O;d De 1;ba4d2fast,oZup;de Et D;ba4on,up;aw3o5;aDlp0;d Fr Dt 1;fDof;rom;in,oO;cZm 1nDve it;d Dg 27kerF;d2in,o5;aReLive Jloss1VoFrEunD; f0M;in39ow 23; Dof 0U;aEb17it,oDr35t0Ou12;ff,n,v7;bo5ft7hJw3;aw3ba4d2in,oDup,w3;ff,n,ut;a17ek0t D;aEb11d2oDr2Zup;ff,n,ut,v7;cEhDl1Pr2Xt,w3;ead;ross;d aEnD;g 1;bo5;a08e01iRlNoJrFuD;cDel 1;k 1;eEighten DownCy 1;aw3o2L;eDshe1G; 1z8;lFol D;aDwi19;bo5r2I;d 9;aEeDip0;sh0;g 9ke0mDrD;e 2K;gLlJnHrFsEzzD;le0;h 2H;e Dm 1;aw3ba4up;d0isD;h 1;e Dl 11;aw3fI;ht ba4ure0;eInEsD;s 1;cFd D;fDo1X;or;e B;dQl 1;cHll Drm0t0O;apYbFd2in,oEtD;hrough;ff,ut,v7;a4ehi1S;e E;at0dge0nd Dy8;o1Mup;o09rD;ess 9op D;aw3bNin,o15;aShPlean 9oDross But 0T;me FoEuntD; o1M;k 1l6;aJbIforGin,oFtEuD;nd7;ogeth7;ut,v7;th,wD;ard;a4y;pDr19w3;art;eDipA;ck BeD;r 1;lJncel0rGsFtch EveA; in;o16up;h Bt6;ry EvD;e V;aw3o12;l Dm02;aDba4d2o10up;r0Vw3;a0He08l01oSrHuD;bbleFcklTilZlEndlTrn 05tDy 10zz6;t B;k 9; ov7;anMeaKiDush6;ghHng D;aEba4d2forDin,o5up;th;bo5lDr0Lw3;ong;teD;n 1;k D;d2in,o5up;ch0;arKgJil 9n8oGssFttlEunce Dx B;aw3ba4;e 9; ar0B;k Bt 1;e 1;d2up; d2;d 1;aIeed0oDurt0;cFw D;aw3ba4d2o5up;ck;k D;in,oK;ck0nk0st6; oJaGef 1nd D;d2ov7up;er;up;r0t D;d2in,oDup;ff,ut;ff,nD;to;ck Jil0nFrgEsD;h B;ainCe B;g BkC; on;in,o5; o5;aw3d2o5up;ay;cMdIsk Fuction6; oD;ff;arDo5;ouD;nd;d D;d2oDup;ff,n;own;t D;o5up;ut\",\n  \"Modal\": \"true¦c5lets,m4ought3sh1w0;ill,o5;a0o4;ll,nt;! to;ay,ight,ust;an,o0;uld\",\n  \"Adjective\": \"true¦0:75;1:7K;2:7Q;3:7J;4:7C;5:5C;6:48;7:49;8:4S;9:61;A:7H;B:70;C:6Z;D:73;E:5X;a6Jb65c5Rd57e4Tf49g41h3Qi35j33k32l2Rm2Gn27o1Rp1Aquack,r10s0Gt09uQvNwFyear5;arp0eJholeIiHoF;man5oFu6C;d6Ezy;despr75s5G;!sa7;eGlFste26;co1Il o4L;!k5;aGiFola4B;b7Tce versa,ol55;ca2gabo63nilla;ltWnJpGrb5Asu4tterF;!moC; f34b1OpGsFti1H;ca7et,ide dMtairs;er,i3N;aPbeco6Rconvin27deMeLfair,ivers4knKprecedYrIsGwF;iel20ritt5Z;i1VuF;pervis0specti3;eFu5;cognLgul6Hl6H;own;ndi3v5Txpect0;cid0rF;!grou5OsF;iz0tood;b7ppeaLssu6GuthorF;iz0;i24ra;aJeHhough4PoGrF;i1oubl0;geth8p,rpB;en5QlFm50rr2Ust0;li3;boo,lFn;ent0;aXcWeUhTiRmug,nobbi3EoPpOqueami3EtJuFymb64;bHi gener55pFrprisi3;erFre0L;! dup8b,i29;du0seq4U;anda6UeIi0PrFy38;aightFip0; fFfF;or5B;adfaCreotyp0;aEec2Gir1JlendBot on; call0le,mb8phist1XrFu0Xvi42;dBry;gnifica2nF;ceEg7;am2Pe8ocki3ut;cFda1em5lfi2Yni1Wpa69re6;o1Gr3W;at58ient28reec58;cr0me,ns serif;aMeIiGoF;buCtt4UuSy4;ghtFv4;!-29f9;ar,bel,condi1du63fres52lHpublic3WsFtard0;is48oF;lu1na2;e1Euc46;bBciF;al,st;aQeOicayu6lacBopuliCrGuF;bl5Amp0;eJiGoF;!b0AfuDmi32p8;mGor,sFva1;ti6;a4We;ciDmF;a0IiF;er,um;ac20rFti1;feAma2Uplexi3v34;rFst;allelHtF;-tiFi4;me;!ed;bQffOkNld fashion0nMpLrg1Hth8utKvF;al,erF;!aHniGt,wF;eiFrouF;ght;ll;do0Ver,g2Msi46;en,posi1; boa5Gg2Kli6;!ay; gua5EbFli6;eat;eHsF;cFer0Hole1;e6uE;d2Tse;ak0eMiLoFua4P;nJrGtF;ab7;thF;!eF;rn;chala2descri50stop;ght5;arby,cessa3Xighbor5xt;aNeLiIoFultip7;bi7derGlFnth5ot,st;dy;a1n;nFx0;iaFor;tuE;di4FnaFre;ci3;cFgenta,in,j03keshift,le,mmoth,ny,sculi6;abEho;aOeJiGoFu13;uti12vi3;mGteraF;l,te;it0;ftIgFth4;al,eGitiF;ma1;nda3D;!-0C;nguBst,tt8;ap1Tind5no0A;agg0uF;niOstifi0veni7;de4gno4Clleg4mSnHpso 1WrF;a1releF;va2; NaMbr0corLdJfluenTiTnIsHtF;aAenDoxF;ic37;a6i2S;a1er,oce2;iGoF;or;reA;deq3Kppr2Z;fFsitu,vitro;ro2;mJpF;arHerfeAoFrop8;li1rtF;a2ed;ti4;eFi0R;d2RnD;aKelJiHoFumdr3C;neCok0rrFs07ur5;if2T;ghfalut1PspF;an2R;liZpf9;lInHrF;d05roF;wi3;dy,gi3;f,low0;ainf9ener2Kiga23lLoKraHuF;ilFng ho;ty;cGtF;ef9is;ef9;ne,od;ea2Eob4;aUeOinNlMoHrF;a1UeFoz1L;e2Eq13tf9;oHrF; keeps,eFm8tuna1;g05ign;liF;sh;ag30ue2;al,i1;dJmGrF;ti7;a7ini6;ne;le; up;bl0i2lDr Gux,voF;ri1uri1;oFreac1F;ff;aOfficie2lNmiMnKreAthere4veJxF;aAcess,peHtraGuF;be2Ml0I;!va1E;ct0rt;n,ryday; Fcouragi3tiE;rou1sui1;ne2;abo23dQe18i1;g8sF;t,ygF;oi3;er;aVeNiHoFrea15ue;mina2ne,ubF;le,tf9;dact1Bfficu1OsGvF;erD;creHeas0gruntl0honeCordGtF;a2ress0;er5;et; LadpKfJgene1PliHrang0spe1PtGvoF;ut;ail0ermin0;be1Mca1ghF;tf9;ia2;an;facto;i5magFngeroZs0I;ed,i3;ly;ertaRhief,ivil,oHrF;aFowd0u0H;mp0v02z0;loNmLnGoi3rrFve0P;eAu1I;cre1grIsHtF;emFra0F;po0D;ta2;ue2;mer08pleF;te,x;ni4ss4;in;aPeLizarElJoGrF;and new,isk,okP;gGna fiWttom,urgeoF;is;us;ank,iI;re;autif9hiGlov0nFst,yoG;eVt;nd;ul;ckGnkru0XrrF;en;!wards; priori,b0Nc0Kd0AfraBg05h04lZma06ntiquYpUrOsMttracti07utheLvIwF;aGkF;wa0U;ke,re;ant garGerF;age;de;ntV;leep,tonisF;hi3;ab,bitIroHtiF;fiF;ci4;ga2;raF;ry;pFt;are2etiPrF;oprF;ia1;at0;arIcohGeFiMl,oof;rt;olF;ic;mi3;ead;ainCgressiGoniF;zi3;ve;st;id; MeKuJvF;aGerD;se;nc0;ed;lt;pt,qF;ua1;hoc,infinitF;um;cuGtu4u1;al;ra1;erPlOoMruLsGuF;nda2;e2oGtraA;ct;lu1rbi3;ng;te;pt;aFve;rd;aze,e;ra2;nt\",\n  \"Comparable\": \"true¦0:40;1:4H;2:44;3:4A;4:2X;5:3W;a4Nb43c3Nd3Ce34f2Qg2Eh23i1Uj1Tk1Ql1Hm1Bn15o13p0Tqu0Rr0IsRtKuIvFw7y6za11;ell26ou3;aBe9hi1Xi7r6;o3y;ck0Mde,l6n1ry,se;d,y;a6i4Lt;k,ry;n1Sr6sI;m,y;a7e6ulgar;nge5rda2xi3;gue,in,st;g0n6pco3Lse5;like0ti1;aAen9hi8i7ough,r6;anqu2Pen1ue;dy,g3Tme0ny,r09;ck,n,rs2Q;d41se;ll,me,rt,s6wd46;te5;aVcarUeThRiQkin0FlMmKoHpGqua1GtAu7w6;eet,ift;b7dd14per0Gr6;e,re2I;sta2Gt4;aAe9iff,r7u6;pXr1;a6ict,o3;ig3Gn0V;a1ep,rn;le,rk;e23i3Gright0;ci29ft,l7o6re,ur;n,thi3;emn,id;a6el0ooth;ll,rt;e8i6ow,y;ck,g36m6;!y;ek,nd3E;ck,l0mp4;a6iTort,rill,y;dy,ll0Yrp;cu0Sve0Sxy;ce,ed,y;d,fe,int0l1Wv15;aBe9i8o6ude;mantic,o1Jsy,u6;gh,nd;ch,pe,tzy;a6d,mo0I;dy,l;gg7ndom,p6re,w;id;ed;ai2i6;ck,et;aEhoDi1RlCoBr8u6;ny,r6;e,p4;egna2ic7o6;fouZud;ey,k0;li05or,te1C;ain,easa2;ny;in5le;dd,f6i0ld,ranR;fi11;aAe8i7o6;b4isy,rm16sy;ce,mb4;a6w;r,t;ive,rr02;aAe8ild,o7u6;nda1Ate;ist,o1;a6ek,llY;n,s0ty;d,tuR;aCeBi9o6ucky;f0Vn7o1Eu6ve0w18y0U;d,sy;e0g;g1Uke0tt4v6;e0i3;an,wd;me,r6te;ge;e7i6;nd;en;ol0ui1P;cy,ll,n6;sBt6;e6ima8;llege2r6;es7media6;te;ti3;ecu6ta2;re;aEeBiAo8u6;ge,m6ng1R;b4id;ll6me0t;ow;gh,l0;a6f04sita2;dy,v6;en0y;nd1Hppy,r6te5;d,sh;aGenFhDiClBoofy,r6;a9e8is0o6ue1E;o6ss;vy;at,en,y;nd,y;ad,ib,ooI;a2d1;a6o6;st0;t4uiY;u1y;aIeeb4iDlat,oAr8u6;ll,n6r14;!ny;aHe6iend0;e,sh;a7r6ul;get5mG;my;erce8n6rm,t;an6e;ciC;! ;le;ir,ke,n0Fr,st,t,ulA;aAerie,mp9sse7v6xtre0Q;il;nti6;al;ty;r7s6;tern,y;ly,th0;aFeCi9r7u6;ll,mb;u6y;nk;r7vi6;ne;e,ty;a6ep,nD;d6f,r;!ly;mp,pp03rk;aHhDlAo8r7u6;dd0r0te;isp,uel;ar6ld,mmon,ol,st0ward0zy;se;e6ou1;a6vW;n,r;ar8e6il0;ap,e6;sy;mi3;gey,lm8r6;e5i3;ful;!i3;aNiLlIoEr8u6;r0sy;ly;aAi7o6;ad,wn;ef,g7llia2;nt;ht;sh,ve;ld,r7un6;cy;ed,i3;ng;a7o6ue;nd,o1;ck,nd;g,tt6;er;d,ld,w1;dy;bsu9ng8we6;so6;me;ry;rd\",\n  \"TextNumber\": \"true¦bMeIfChundredNmMnin9one,qu8s6t0zeroN;enMh3rLw0;e0o;l0ntC;fGve;ir0ousandIree;d,t5;e0ix7;cond,ptEven6xtE;adrDintD;e0th;!t0;e9ie8y;i3o0;rt1ur0;!t2;ie4y;ft0rst,ve;e3h,ie2y;ight0lev2;!e1h,ie0y;th;en1;illion0;!th\",\n  \"Ordinal\": \"true¦bGeDf9hundredHmGnin7qu6s4t0zeroH;enGh1rFwe0;lfFn9;ir0ousandE;d,t4;e0ixt9;cond,ptAvent8xtA;adr9int9;et0th;e6ie8;i2o0;r0urt3;tie5;ft1rst;ight0lev1;e0h,ie2;en1;illion0;th\",\n  \"Cardinal\": \"true¦bGeDf7hundred,mGnine9one,qu6s4t0zero;en,h2rFw0;e0o;lve,n7;irt8ousand,ree;e0ix4;ptAven3xtA;adr9int9;i3o0;r1ur0;!t2;ty;ft0ve;e2y;ight0lev1;!e0y;en;illion\",\n  \"Expression\": \"true¦a02b01dXeVfuck,gShLlImHnGoDpBshAu7voi04w3y0;a1eLu0;ck,p;!a,hoo,y;h1ow,t0;af,f;e0oa;e,w;gh,h0;! 0h,m;huh,oh;eesh,hh,it;ff,hew,l0sst;ease,z;h1o0w,y;h,o,ps;!h;ah,ope;eh,mm;m1ol0;!s;ao,fao;a4e2i,mm,oly1urr0;ah;! mo6;e,ll0y;!o;ha0i;!ha;ah,ee,o0rr;l0odbye;ly;e0h,t cetera,ww;k,p;'oh,a0uh;m0ng;mit,n0;!it;ah,oo,ye; 1h0rgh;!em;la\",\n  \"Adverb\": \"true¦a07by 05d01eYfShQinPjustOkinda,mMnJoEpCquite,r9s5t2up1very,w0Bye0;p,s; to,wards5;h1o0wiO;o,t6ward;en,us;everal,o0uch;!me1rt0; of;hXtimes,w07;a1e0;alS;ndomRthN;ar excellDer0oint blank; Mhaps;f3n0;ce0ly;! 0;ag00moU; courHten;ewJo0; longEt 0;onHwithstanding;aybe,eanwhiAore0;!ovB;! aboS;deed,steT;en0;ce;or2u0;l9rther0;!moH; 0ev3;examp0good,suF;le;n mas1v0;er;se;e0irect1; 1finite0;ly;ju7trop;far,n0;ow; CbroBd nauseam,gAl5ny2part,side,t 0w3;be5l0mo5wor5;arge,ea4;mo1w0;ay;re;l 1mo0one,ready,so,ways;st;b1t0;hat;ut;ain;ad;lot,posteriori\",\n  \"Preposition\": \"true¦'o,-,aKbHcGdFexcept,fEinDmidPnotwithstandiQoBpRqua,sAt6u3vi2w0;/o,hereMith0;!in,oQ;a,s-a-vis;n1p0;!on;like,til;h0ill,owards;an,r0;ough0u;!oI;ans,ince,o that;',f0n1ut;!f;!to;or,rom;espite,own,u3;hez,irca;ar1e0oAy;low,sides,tween;ri6;',bo7cross,ft6lo5m3propos,round,s1t0;!op;! long 0;as;id0ong0;!st;ng;er;ut\",\n  \"Determiner\": \"true¦aAboth,d8e5few,l3mu7neiCown,plenty,some,th2various,wh0;at0ich0;evB;at,e3is,ose;a,e0;!ast,s;a1i6l0nough,very;!se;ch;e0u;!s;!n0;!o0y;th0;er\"\n}","//list of inconsistent parts-of-speech\nmodule.exports = [\n  //top-level pos are all inconsistent\n  [\n    'Noun',\n    'Verb',\n    'Adjective',\n    'Adverb',\n    'Determiner',\n    'Conjunction',\n    'Preposition',\n    'QuestionWord',\n    'Expression',\n    'Url',\n    'PhoneNumber',\n    'Email',\n    'Emoji',\n  ],\n  //exlusive-nouns\n  ['Person', 'Organization', 'Value', 'Place', 'Actor', 'Demonym', 'Pronoun'],\n  //acronyms\n  ['Acronym', 'Pronoun', 'Actor', 'Unit', 'Address'],\n  ['Acronym', 'Plural'],\n  //things that can't be plural\n  ['Plural', 'Singular'],\n  //exlusive-people\n  ['MaleName', 'FemaleName'],\n  ['FirstName', 'LastName', 'Honorific'],\n  //adjectives\n  ['Comparative', 'Superlative'],\n  //values\n  ['Value', 'Verb', 'Adjective'],\n  ['Ordinal', 'Cardinal'],\n  ['TextValue', 'NumericValue'],\n  ['NiceNumber', 'TextValue'],\n  ['Ordinal', 'Currency'], //$5.50th\n  //verbs\n  ['PastTense', 'PresentTense', 'FutureTense'],\n  ['Pluperfect', 'Copula', 'Modal', 'Participle', 'Infinitive', 'Gerund', 'FuturePerfect', 'PerfectTense'],\n  ['Auxiliary', 'Noun', 'Value'],\n  //date\n  ['Month', 'WeekDay', 'Year', 'Duration', 'Holiday'],\n  ['Particle', 'Conjunction', 'Adverb', 'Preposition', 'Date'],\n  ['Date', 'Verb', 'Adjective', 'Person'],\n  ['Date', 'Money', 'RomanNumeral', 'Fraction'],\n  //a/an -> 1\n  ['Value', 'Determiner'],\n  ['Url', 'Value', 'HashTag', 'PhoneNumber', 'Emoji'],\n  //roman numerals\n  ['RomanNumeral', 'Fraction', 'NiceNumber'],\n  ['RomanNumeral', 'Money', 'Acronym'],\n  //cases\n  ['UpperCase', 'TitleCase', 'CamelCase'],\n  //phrases\n  ['Verb', 'Noun', 'Adjective', 'Value'], //VerbPhrase',\n  //QuestionWord\n  ['QuestionWord', 'Verb'],\n  //acronyms\n  ['Acronym', 'Verb'],\n]\n","module.exports = {\n  Noun: {},\n  // - singular\n  Singular: {\n    isA: 'Noun',\n  },\n  //a specific thing that's capitalized\n  ProperNoun: {\n    isA: 'Noun',\n  },\n\n  // -- people\n  Person: {\n    isA: 'ProperNoun',\n    also: 'Singular',\n  },\n  FirstName: {\n    isA: 'Person',\n  },\n  MaleName: {\n    isA: 'FirstName',\n  },\n  FemaleName: {\n    isA: 'FirstName',\n  },\n  LastName: {\n    isA: 'Person',\n  },\n  Honorific: {\n    isA: 'Noun',\n  },\n  Place: {\n    isA: 'Singular',\n  },\n\n  // -- places\n  Country: {\n    isA: 'Place',\n    also: 'ProperNoun',\n  },\n  City: {\n    isA: 'Place',\n    also: 'ProperNoun',\n  },\n  Region: {\n    isA: 'Place',\n    also: 'ProperNoun',\n  },\n  Address: {\n    isA: 'Place',\n  },\n  Organization: {\n    isA: 'Singular',\n    also: 'ProperNoun',\n  },\n  SportsTeam: {\n    isA: 'Organization',\n  },\n  Company: {\n    isA: 'Organization',\n  },\n  School: {\n    isA: 'Organization',\n  },\n\n  // - plural\n  Plural: {\n    isA: 'Noun',\n  },\n  Uncountable: {\n    //(not plural or singular)\n    isA: 'Noun',\n  },\n  Pronoun: {\n    isA: 'Noun',\n  },\n  //a word for someone doing something -'plumber'\n  Actor: {\n    isA: 'Noun',\n  },\n  //a gerund-as-noun - 'swimming'\n  Activity: {\n    isA: 'Noun',\n  },\n  //'kilograms'\n  Unit: {\n    isA: 'Noun',\n  },\n  //'Canadians'\n  Demonym: {\n    isA: 'Noun',\n    also: 'ProperNoun',\n  },\n  //`john's`\n  Possessive: {\n    isA: 'Noun',\n  },\n}\n","module.exports = {\n  Verb: {\n    // isA: 'VerbPhrase',\n  },\n  PresentTense: {\n    isA: 'Verb',\n  },\n  Infinitive: {\n    isA: 'PresentTense',\n  },\n  Gerund: {\n    isA: 'PresentTense',\n  },\n  PastTense: {\n    isA: 'Verb',\n  },\n  PerfectTense: {\n    isA: 'Verb',\n  },\n  FuturePerfect: {\n    isA: 'Verb',\n  },\n  Pluperfect: {\n    isA: 'Verb',\n  },\n  Copula: {\n    isA: 'Verb',\n  },\n  Modal: {\n    isA: 'Verb',\n  },\n  Participle: {\n    isA: 'Verb',\n  },\n  Particle: {\n    isA: 'Verb',\n  },\n  PhrasalVerb: {\n    isA: 'Verb',\n  },\n}\n","module.exports = {\n  Value: {},\n  Ordinal: {\n    isA: 'Value',\n  },\n  Cardinal: {\n    isA: 'Value',\n  },\n  // Multiple: {\n  //   isA: 'Value',\n  // },\n  RomanNumeral: {\n    isA: 'Cardinal',\n  },\n  Fraction: {\n    isA: 'Value',\n  },\n  TextValue: {\n    isA: 'Value',\n  },\n  NumericValue: {\n    isA: 'Value',\n  },\n  Money: {\n    //isA: 'Cardinal'\n  },\n  Percent: {\n    isA: 'Value',\n  },\n}\n","module.exports = {\n  Date: {}, //not a noun, but usually is\n  Month: {\n    isA: 'Date',\n    also: 'Singular',\n  },\n  WeekDay: {\n    isA: 'Date',\n    also: 'Noun',\n  },\n  RelativeDay: {\n    isA: 'Date',\n  },\n  Year: {\n    isA: 'Date',\n  },\n  Duration: {\n    isA: 'Date',\n    also: 'Noun',\n  },\n  Time: {\n    isA: 'Date',\n    also: 'Noun',\n  },\n  Holiday: {\n    isA: 'Date',\n    also: 'Noun',\n  },\n}\n","module.exports = {\n  Adjective: {},\n  Comparable: {\n    isA: 'Adjective',\n  },\n  Comparative: {\n    isA: 'Adjective',\n  },\n  Superlative: {\n    isA: 'Adjective',\n  },\n\n  NumberRange: {\n    isA: 'Contraction',\n  },\n  Adverb: {},\n\n  Currency: {},\n  //glue\n  Determiner: {},\n  Conjunction: {},\n  Preposition: {},\n  QuestionWord: {},\n  RelativeProunoun: {\n    isA: 'Pronoun',\n  },\n  Expression: {},\n  Abbreviation: {},\n  Url: {},\n  PhoneNumber: {},\n  HashTag: {},\n  AtMention: {\n    isA: 'Noun',\n  },\n  Emoji: {},\n  Email: {},\n\n  //non-exclusive\n  Auxiliary: {},\n  Negative: {},\n  Contraction: {},\n\n  TitleCase: {},\n  CamelCase: {},\n  UpperCase: {},\n  Hyphenated: {},\n  Acronym: {},\n  ClauseEnd: {},\n\n  // Quotes\n  Quotation: {},\n  StartQuotation: {\n    isA: 'Quotation',\n  },\n  EndQuotation: {\n    isA: 'Quotation',\n  },\n  //parentheses\n  Parentheses: {},\n  EndBracket: {\n    isA: 'Parentheses',\n  },\n  StartBracket: {\n    isA: 'Parentheses',\n  },\n}\n","//add 'downward' tags (that immediately depend on this one)\nconst addDownword = function(tags) {\n  const keys = Object.keys(tags)\n  keys.forEach(k => {\n    tags[k].downward = []\n    //look for tags with this as parent\n    for (let i = 0; i < keys.length; i++) {\n      if (tags[keys[i]].isA && tags[keys[i]].isA === k) {\n        tags[k].downward.push(keys[i])\n      }\n    }\n  })\n}\nmodule.exports = addDownword\n","const conflicts = require('./conflicts')\nconst nouns = require('./tags/nouns')\nconst verbs = require('./tags/verbs')\nconst values = require('./tags/values')\nconst dates = require('./tags/dates')\nconst misc = require('./tags/misc')\nconst addDownward = require('./addDownward')\n\n//used for pretty-printing on the server-side\nconst colors = {\n  Noun: 'blue',\n  // NounPhrase: 'blue',\n\n  Verb: 'green',\n  Auxiliary: 'green',\n  Negative: 'green',\n  // VerbPhrase: 'green',\n\n  Date: 'red',\n  Value: 'red',\n\n  Adjective: 'magenta',\n\n  Preposition: 'cyan',\n  Conjunction: 'cyan',\n  Determiner: 'cyan',\n  Adverb: 'cyan',\n  // Condition: 'cyan',\n}\n\n//extend tagset with new tags\nconst addIn = function(obj, tags) {\n  Object.keys(obj).forEach(k => {\n    tags[k] = obj[k]\n  })\n}\n\n//add tags to remove when tagging this one\nconst addConflicts = function(tags) {\n  Object.keys(tags).forEach(k => {\n    tags[k].notA = {}\n    for (let i = 0; i < conflicts.length; i++) {\n      let arr = conflicts[i]\n      if (arr.indexOf(k) !== -1) {\n        arr = arr.filter(a => a !== k)\n        arr.forEach(e => {\n          tags[k].notA[e] = true\n        })\n      }\n    }\n    tags[k].notA = Object.keys(tags[k].notA)\n  })\n}\n\nconst addColors = function(tags) {\n  Object.keys(tags).forEach(k => {\n    if (colors[k]) {\n      tags[k].color = colors[k]\n      return\n    }\n    if (tags[k].isA && colors[tags[k].isA]) {\n      tags[k].color = colors[tags[k].isA]\n      return\n    }\n    if (tags[k].isA && tags[tags[k].isA].color) {\n      tags[k].color = tags[tags[k].isA].color\n    }\n  })\n}\n\nconst build = () => {\n  let tags = {}\n  addIn(nouns, tags)\n  addIn(verbs, tags)\n  addIn(values, tags)\n  addIn(dates, tags)\n  addIn(misc, tags)\n  //downstream\n  addDownward(tags)\n  //add enemies\n  addConflicts(tags)\n  //for nice-logging\n  addColors(tags)\n  return tags\n}\nmodule.exports = build()\n","\"use strict\";const BASE=36,seq=\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\",cache=seq.split(\"\").reduce(function(n,o,e){return n[o]=e,n},{}),toAlphaCode=function(n){if(void 0!==seq[n])return seq[n];let o=1,e=36,t=\"\";for(;n>=e;n-=e,o++,e*=36);for(;o--;){const o=n%36;t=String.fromCharCode((o<10?48:55)+o)+t,n=(n-o)/36}return t},fromAlphaCode=function(n){if(void 0!==cache[n])return cache[n];let o=0,e=1,t=36,r=1;for(;e<n.length;o+=t,e++,t*=36);for(let e=n.length-1;e>=0;e--,r*=36){let t=n.charCodeAt(e)-48;t>10&&(t-=7),o+=t*r}return o};var encoding={toAlphaCode:toAlphaCode,fromAlphaCode:fromAlphaCode},symbols=function(n){const o=new RegExp(\"([0-9A-Z]+):([0-9A-Z]+)\");for(let e=0;e<n.nodes.length;e++){const t=o.exec(n.nodes[e]);if(!t){n.symCount=e;break}n.syms[encoding.fromAlphaCode(t[1])]=encoding.fromAlphaCode(t[2])}n.nodes=n.nodes.slice(n.symCount,n.nodes.length)};const indexFromRef=function(n,o,e){const t=encoding.fromAlphaCode(o);return t<n.symCount?n.syms[t]:e+t+1-n.symCount},toArray=function(n){const o=[],e=(t,r)=>{let s=n.nodes[t];\"!\"===s[0]&&(o.push(r),s=s.slice(1));const c=s.split(/([A-Z0-9,]+)/g);for(let s=0;s<c.length;s+=2){const u=c[s],i=c[s+1];if(!u)continue;const l=r+u;if(\",\"===i||void 0===i){o.push(l);continue}const f=indexFromRef(n,i,t);e(f,l)}};return e(0,\"\"),o},unpack=function(n){const o={nodes:n.split(\";\"),syms:[],symCount:0};return n.match(\":\")&&symbols(o),toArray(o)};var unpack_1=unpack,unpack_1$1=function(n){const o=n.split(\"|\").reduce((n,o)=>{const e=o.split(\"¦\");return n[e[0]]=e[1],n},{}),e={};return Object.keys(o).forEach(function(n){const t=unpack_1(o[n]);\"true\"===n&&(n=!0);for(let o=0;o<t.length;o++){const r=t[o];!0===e.hasOwnProperty(r)?!1===Array.isArray(e[r])?e[r]=[e[r],n]:e[r].push(n):e[r]=n}}),e};module.exports=unpack_1$1;\n","//safely add it to the lexicon\nconst addWord = function(word, tag, lex) {\n  if (lex[word] !== undefined) {\n    if (typeof lex[word] === 'string') {\n      lex[word] = [lex[word]]\n    }\n    lex[word].push(tag)\n  } else {\n    lex[word] = tag\n  }\n}\n\n// blast-out more forms for some given words\nconst addMore = function(word, tag, world) {\n  let lexicon = world.lexicon\n  let transform = world.transforms\n\n  // cache multi-words\n  let words = word.split(' ')\n  if (words.length > 1) {\n    //cache the beginning word\n    world.hasCompound[words[0]] = true\n  }\n  // inflect our nouns\n  if (tag === 'Singular') {\n    let plural = transform.nouns(word)\n    lexicon[plural] = lexicon[plural] || 'Plural' // only if it's safe\n  }\n  //conjugate our verbs\n  if (tag === 'Infinitive') {\n    let conj = transform.verbs(word)\n    let tags = Object.keys(conj)\n    for (let i = 0; i < tags.length; i++) {\n      let w = conj[tags[i]]\n      lexicon[w] = lexicon[w] || tags[i] // only if it's safe\n    }\n  }\n  //derive more adjective forms\n  if (tag === 'Comparable') {\n    let conj = transform.adjectives(word)\n    let tags = Object.keys(conj)\n    for (let i = 0; i < tags.length; i++) {\n      let w = conj[tags[i]]\n      lexicon[w] = lexicon[w] || tags[i] // only if it's safe\n    }\n  }\n  //conjugate phrasal-verbs\n  if (tag === 'PhrasalVerb') {\n    //add original form\n    addWord(word, 'Infinitive', lexicon)\n    //conjugate first word\n    let conj = transform.verbs(words[0])\n    let tags = Object.keys(conj)\n    for (let i = 0; i < tags.length; i++) {\n      //add it to our cache\n      world.hasCompound[conj[tags[i]]] = true\n      //first + last words\n      let w = conj[tags[i]] + ' ' + words[1]\n      addWord(w, tags[i], lexicon)\n      addWord(w, 'PhrasalVerb', lexicon)\n    }\n  }\n  // inflect our demonyms - 'germans'\n  if (tag === 'Demonym') {\n    let plural = transform.nouns(word)\n    lexicon[plural] = lexicon[plural] || ['Demonym', 'Plural'] // only if it's safe\n  }\n}\n\n// throw a bunch of words in our lexicon\nconst addWords = function(words, tag, world) {\n  let lexicon = world.lexicon\n  for (let i = 0; i < words.length; i++) {\n    addWord(words[i], tag, lexicon)\n    // do some fancier stuff\n    addMore(words[i], tag, world)\n  }\n}\nmodule.exports = addWords\n","// add words from plurals and conjugations data\nconst addIrregulars = function(world) {\n  //add irregular plural nouns\n  let nouns = world.irregulars.nouns\n  let words = Object.keys(nouns)\n  for (let i = 0; i < words.length; i++) {\n    const w = words[i]\n    world.lexicon[w] = 'Singular'\n    world.lexicon[nouns[w]] = 'Plural'\n  }\n\n  // add irregular verb conjugations\n  let verbs = world.irregulars.verbs\n  let keys = Object.keys(verbs)\n  for (let i = 0; i < keys.length; i++) {\n    const inf = keys[i]\n    //add only if it it's safe...\n    world.lexicon[inf] = world.lexicon[inf] || 'Infinitive'\n    let forms = world.transforms.verbs(inf)\n    forms = Object.assign(forms, verbs[inf])\n    //add the others\n    Object.keys(forms).forEach(tag => {\n      world.lexicon[forms[tag]] = world.lexicon[forms[tag]] || tag\n    })\n  }\n}\nmodule.exports = addIrregulars\n","//words that can't be compressed, for whatever reason\nmodule.exports = {\n  // numbers\n  '20th century fox': 'Organization',\n  '3m': 'Organization',\n  '7 eleven': 'Organization',\n  '7-eleven': 'Organization',\n  g8: 'Organization',\n  'motel 6': 'Organization',\n  vh1: 'Organization',\n  q1: 'Date',\n  q2: 'Date',\n  q3: 'Date',\n  q4: 'Date',\n}\n","//nouns with irregular plural/singular forms\n//used in noun.inflect, and also in the lexicon.\n\nmodule.exports = {\n  addendum: 'addenda',\n  alga: 'algae',\n  alumna: 'alumnae',\n  alumnus: 'alumni',\n  analysis: 'analyses',\n  antenna: 'antennae',\n  appendix: 'appendices',\n  avocado: 'avocados',\n  axis: 'axes',\n  bacillus: 'bacilli',\n  barracks: 'barracks',\n  beau: 'beaux',\n  bus: 'buses',\n  cactus: 'cacti',\n  chateau: 'chateaux',\n  child: 'children',\n  circus: 'circuses',\n  clothes: 'clothes',\n  corpus: 'corpora',\n  criterion: 'criteria',\n  curriculum: 'curricula',\n  database: 'databases',\n  deer: 'deer',\n  diagnosis: 'diagnoses',\n  echo: 'echoes',\n  embargo: 'embargoes',\n  epoch: 'epochs',\n  foot: 'feet',\n  formula: 'formulae',\n  fungus: 'fungi',\n  genus: 'genera',\n  goose: 'geese',\n  halo: 'halos',\n  hippopotamus: 'hippopotami',\n  index: 'indices',\n  larva: 'larvae',\n  leaf: 'leaves',\n  libretto: 'libretti',\n  loaf: 'loaves',\n  man: 'men',\n  matrix: 'matrices',\n  memorandum: 'memoranda',\n  modulus: 'moduli',\n  mosquito: 'mosquitoes',\n  mouse: 'mice',\n  move: 'moves',\n  nebula: 'nebulae',\n  nucleus: 'nuclei',\n  octopus: 'octopi',\n  opus: 'opera',\n  ovum: 'ova',\n  ox: 'oxen',\n  parenthesis: 'parentheses',\n  person: 'people',\n  phenomenon: 'phenomena',\n  prognosis: 'prognoses',\n  quiz: 'quizzes',\n  radius: 'radii',\n  referendum: 'referenda',\n  rodeo: 'rodeos',\n  sex: 'sexes',\n  shoe: 'shoes',\n  sombrero: 'sombreros',\n  stimulus: 'stimuli',\n  stomach: 'stomachs',\n  syllabus: 'syllabi',\n  synopsis: 'synopses',\n  tableau: 'tableaux',\n  thesis: 'theses',\n  thief: 'thieves',\n  tooth: 'teeth',\n  tornado: 'tornados',\n  tuxedo: 'tuxedos',\n  vertebra: 'vertebrae',\n  // virus: 'viri',\n  zero: 'zeros',\n}\n","// a list of irregular verb conjugations\n// used in verbs().conjugate()\n// but also added to our lexicon\n\n//use shorter key-names\nconst mapping = {\n  g: 'Gerund',\n  prt: 'Participle',\n  perf: 'PerfectTense',\n  pst: 'PastTense',\n  fut: 'FuturePerfect',\n  pres: 'PresentTense',\n  pluperf: 'Pluperfect',\n  act: 'Actor',\n}\n\n// '_' in conjugations is the infinitive form\nlet conjugations = {\n  act: {\n    act: '_or',\n  },\n  age: {\n    g: 'ageing',\n    pst: 'aged',\n    pres: 'ages',\n  },\n  aim: {\n    act: '_er',\n    g: '_ing',\n    pst: '_ed',\n  },\n  arise: {\n    prt: '_n',\n    pst: 'arose',\n  },\n  babysit: {\n    act: '_ter',\n    pst: 'babysat',\n  },\n  ban: {\n    act: '',\n    g: '_ning',\n    pst: '_ned',\n  },\n  be: {\n    act: '',\n    g: 'am',\n    prt: 'been',\n    pst: 'was',\n    pres: 'is',\n  },\n  beat: {\n    act: '_er',\n    g: '_ing',\n    prt: '_en',\n  },\n  become: {\n    prt: '_',\n  },\n  begin: {\n    g: '_ning',\n    prt: 'begun',\n    pst: 'began',\n  },\n  being: {\n    g: 'are',\n    pst: 'were',\n    pres: 'are',\n  },\n  bend: {\n    prt: 'bent',\n  },\n  bet: {\n    act: '_ter',\n    prt: '_',\n  },\n  bind: {\n    pst: 'bound',\n  },\n  bite: {\n    g: 'biting',\n    prt: 'bitten',\n    pst: 'bit',\n  },\n  bleed: {\n    prt: 'bled',\n    pst: 'bled',\n  },\n  blow: {\n    prt: '_n',\n    pst: 'blew',\n  },\n  boil: {\n    act: '_er',\n  },\n  brake: {\n    prt: 'broken',\n  },\n  break: {\n    pst: 'broke',\n  },\n  breed: {\n    pst: 'bred',\n  },\n  bring: {\n    prt: 'brought',\n    pst: 'brought',\n  },\n  broadcast: {\n    pst: '_',\n  },\n  budget: {\n    pst: '_ed',\n  },\n  build: {\n    prt: 'built',\n    pst: 'built',\n  },\n  burn: {\n    prt: '_ed',\n  },\n  burst: {\n    prt: '_',\n  },\n  buy: {\n    prt: 'bought',\n    pst: 'bought',\n  },\n  can: {\n    act: '',\n    fut: '_',\n    g: '',\n    pst: 'could',\n    perf: 'could',\n    pluperf: 'could',\n    pres: '_',\n  },\n  catch: {\n    pst: 'caught',\n  },\n  choose: {\n    g: 'choosing',\n    prt: 'chosen',\n    pst: 'chose',\n  },\n  cling: {\n    prt: 'clung',\n  },\n  come: {\n    prt: '_',\n    pst: 'came',\n  },\n  compete: {\n    act: 'competitor',\n    g: 'competing',\n    pst: '_d',\n  },\n  cost: {\n    pst: '_',\n  },\n  creep: {\n    prt: 'crept',\n  },\n  cut: {\n    prt: '_',\n  },\n  deal: {\n    prt: '_t',\n    pst: '_t',\n  },\n  develop: {\n    act: '_er',\n    g: '_ing',\n    pst: '_ed',\n  },\n  die: {\n    g: 'dying',\n    pst: '_d',\n  },\n  dig: {\n    g: '_ging',\n    prt: 'dug',\n    pst: 'dug',\n  },\n  dive: {\n    prt: '_d',\n  },\n  do: {\n    pst: 'did',\n    pres: '_es',\n  },\n  draw: {\n    prt: '_n',\n    pst: 'drew',\n  },\n  dream: {\n    prt: '_t',\n  },\n  drink: {\n    prt: 'drunk',\n    pst: 'drank',\n  },\n  drive: {\n    g: 'driving',\n    prt: '_n',\n    pst: 'drove',\n  },\n  drop: {\n    g: '_ping',\n    pst: '_ped',\n  },\n  eat: {\n    act: '_er',\n    g: '_ing',\n    prt: '_en',\n    pst: 'ate',\n  },\n  edit: {\n    g: '_ing',\n  },\n  egg: {\n    pst: '_ed',\n  },\n  fall: {\n    prt: '_en',\n    pst: 'fell',\n  },\n  feed: {\n    prt: 'fed',\n    pst: 'fed',\n  },\n  feel: {\n    act: '_er',\n    pst: 'felt',\n  },\n  fight: {\n    prt: 'fought',\n    pst: 'fought',\n  },\n  find: {\n    pst: 'found',\n  },\n  flee: {\n    g: '_ing',\n    prt: 'fled',\n  },\n  fling: {\n    prt: 'flung',\n  },\n  fly: {\n    prt: 'flown',\n    pst: 'flew',\n  },\n  forbid: {\n    pst: 'forbade',\n  },\n  forget: {\n    g: '_ing',\n    prt: 'forgotten',\n    pst: 'forgot',\n  },\n  forgive: {\n    g: 'forgiving',\n    prt: '_n',\n    pst: 'forgave',\n  },\n  free: {\n    act: '',\n    g: '_ing',\n  },\n  freeze: {\n    g: 'freezing',\n    prt: 'frozen',\n    pst: 'froze',\n  },\n  get: {\n    pst: 'got',\n    prt: 'gotten',\n  },\n  give: {\n    g: 'giving',\n    prt: '_n',\n    pst: 'gave',\n  },\n  go: {\n    prt: '_ne',\n    pst: 'went',\n    pres: 'goes',\n  },\n  grow: {\n    prt: '_n',\n  },\n  hang: {\n    prt: 'hung',\n    pst: 'hung',\n  },\n  have: {\n    g: 'having',\n    prt: 'had',\n    pst: 'had',\n    pres: 'has',\n  },\n  hear: {\n    prt: '_d',\n    pst: '_d',\n  },\n  hide: {\n    prt: 'hidden',\n    pst: 'hid',\n  },\n  hit: {\n    prt: '_',\n  },\n  hold: {\n    prt: 'held',\n    pst: 'held',\n  },\n  hurt: {\n    prt: '_',\n    pst: '_',\n  },\n  ice: {\n    g: 'icing',\n    pst: '_d',\n  },\n  imply: {\n    pst: 'implied',\n    pres: 'implies',\n  },\n  is: {\n    act: '',\n    g: 'being',\n    pst: 'was',\n    pres: '_',\n  },\n  keep: {\n    prt: 'kept',\n  },\n  kneel: {\n    prt: 'knelt',\n  },\n  know: {\n    prt: '_n',\n  },\n  lay: {\n    prt: 'laid',\n    pst: 'laid',\n  },\n  lead: {\n    prt: 'led',\n    pst: 'led',\n  },\n  leap: {\n    prt: '_t',\n  },\n  leave: {\n    prt: 'left',\n    pst: 'left',\n  },\n  lend: {\n    prt: 'lent',\n  },\n  lie: {\n    g: 'lying',\n    pst: 'lay',\n  },\n  light: {\n    prt: 'lit',\n    pst: 'lit',\n  },\n  log: {\n    g: '_ging',\n    pst: '_ged',\n  },\n  loose: {\n    prt: 'lost',\n  },\n  lose: {\n    g: 'losing',\n    pst: 'lost',\n  },\n  make: {\n    prt: 'made',\n    pst: 'made',\n  },\n  mean: {\n    prt: '_t',\n    pst: '_t',\n  },\n  meet: {\n    act: '_er',\n    g: '_ing',\n    prt: 'met',\n    pst: 'met',\n  },\n  miss: {\n    pres: '_',\n  },\n  pay: {\n    prt: 'paid',\n    pst: 'paid',\n  },\n  prove: {\n    prt: '_n',\n  },\n  puke: {\n    g: 'puking',\n  },\n  put: {\n    prt: '_',\n  },\n  quit: {\n    prt: '_',\n  },\n  read: {\n    prt: '_',\n    pst: '_',\n  },\n  ride: {\n    prt: 'ridden',\n  },\n  ring: {\n    prt: 'rung',\n    pst: 'rang',\n  },\n  rise: {\n    fut: 'will have _n',\n    g: 'rising',\n    prt: '_n',\n    pst: 'rose',\n    pluperf: 'had _n',\n  },\n  rub: {\n    g: '_bing',\n    pst: '_bed',\n  },\n  run: {\n    g: '_ning',\n    prt: '_',\n    pst: 'ran',\n  },\n  say: {\n    prt: 'said',\n    pst: 'said',\n    pres: '_s',\n  },\n  seat: {\n    prt: 'sat',\n  },\n  see: {\n    g: '_ing',\n    prt: '_n',\n    pst: 'saw',\n  },\n  seek: {\n    prt: 'sought',\n  },\n  sell: {\n    prt: 'sold',\n    pst: 'sold',\n  },\n  send: {\n    prt: 'sent',\n  },\n  set: {\n    prt: '_',\n  },\n  sew: {\n    prt: '_n',\n  },\n  shake: {\n    prt: '_n',\n  },\n  shave: {\n    prt: '_d',\n  },\n  shed: {\n    g: '_ding',\n    pst: '_',\n    pres: '_s',\n  },\n  shine: {\n    prt: 'shone',\n    pst: 'shone',\n  },\n  shoot: {\n    prt: 'shot',\n    pst: 'shot',\n  },\n  show: {\n    pst: '_ed',\n  },\n  shut: {\n    prt: '_',\n  },\n  sing: {\n    prt: 'sung',\n    pst: 'sang',\n  },\n  sink: {\n    pst: 'sank',\n    pluperf: 'had sunk',\n  },\n  sit: {\n    pst: 'sat',\n  },\n  ski: {\n    pst: '_ied',\n  },\n  slay: {\n    prt: 'slain',\n  },\n  sleep: {\n    prt: 'slept',\n  },\n  slide: {\n    prt: 'slid',\n    pst: 'slid',\n  },\n  smash: {\n    pres: '_es',\n  },\n  sneak: {\n    prt: 'snuck',\n  },\n  speak: {\n    fut: 'will have spoken',\n    prt: 'spoken',\n    pst: 'spoke',\n    perf: 'have spoken',\n    pluperf: 'had spoken',\n  },\n  speed: {\n    prt: 'sped',\n  },\n  spend: {\n    prt: 'spent',\n  },\n  spill: {\n    prt: '_ed',\n    pst: 'spilt',\n  },\n  spin: {\n    g: '_ning',\n    prt: 'spun',\n    pst: 'spun',\n  },\n  spit: {\n    prt: 'spat',\n  },\n  split: {\n    prt: '_',\n  },\n  spread: {\n    pst: '_',\n  },\n  spring: {\n    prt: 'sprung',\n  },\n  stand: {\n    pst: 'stood',\n  },\n  steal: {\n    act: '_er',\n    pst: 'stole',\n  },\n  stick: {\n    pst: 'stuck',\n  },\n  sting: {\n    pst: 'stung',\n  },\n  stink: {\n    prt: 'stunk',\n    pst: 'stunk',\n  },\n  stream: {\n    act: '_er',\n  },\n  strew: {\n    prt: '_n',\n  },\n  strike: {\n    g: 'striking',\n    pst: 'struck',\n  },\n  suit: {\n    act: '_er',\n    g: '_ing',\n    pst: '_ed',\n  },\n  sware: {\n    prt: 'sworn',\n  },\n  swear: {\n    pst: 'swore',\n  },\n  sweep: {\n    prt: 'swept',\n  },\n  swim: {\n    g: '_ming',\n    pst: 'swam',\n  },\n  swing: {\n    pst: 'swung',\n  },\n  take: {\n    fut: 'will have _n',\n    pst: 'took',\n    perf: 'have _n',\n    pluperf: 'had _n',\n  },\n  teach: {\n    pst: 'taught',\n    pres: '_es',\n  },\n  tear: {\n    pst: 'tore',\n  },\n  tell: {\n    pst: 'told',\n  },\n  think: {\n    pst: 'thought',\n  },\n  thrive: {\n    prt: '_d',\n  },\n  tie: {\n    g: 'tying',\n    pst: '_d',\n  },\n  undergo: {\n    prt: '_ne',\n  },\n  understand: {\n    pst: 'understood',\n  },\n  upset: {\n    prt: '_',\n  },\n  wait: {\n    act: '_er',\n    g: '_ing',\n    pst: '_ed',\n  },\n  wake: {\n    pst: 'woke',\n  },\n  wear: {\n    pst: 'wore',\n  },\n  weave: {\n    prt: 'woven',\n  },\n  weep: {\n    prt: 'wept',\n  },\n  win: {\n    g: '_ning',\n    pst: 'won',\n  },\n  wind: {\n    prt: 'wound',\n  },\n  withdraw: {\n    pst: 'withdrew',\n  },\n  wring: {\n    prt: 'wrung',\n  },\n  write: {\n    g: 'writing',\n    prt: 'written',\n    pst: 'wrote',\n  },\n}\n\n//uncompress our ad-hoc compression scheme\nlet keys = Object.keys(conjugations)\nfor (let i = 0; i < keys.length; i++) {\n  const inf = keys[i]\n  let final = {}\n  Object.keys(conjugations[inf]).forEach(key => {\n    let str = conjugations[inf][key]\n    //swap-in infinitives for '_'\n    str = str.replace('_', inf)\n\n    let full = mapping[key]\n    final[full] = str\n  })\n  //over-write original\n  conjugations[inf] = final\n}\n\nmodule.exports = conjugations\n","const endsWith = {\n  b: [\n    {\n      reg: /([^aeiou][aeiou])b$/i,\n      repl: {\n        pr: '$1bs',\n        pa: '$1bbed',\n        gr: '$1bbing',\n      },\n    },\n  ],\n  d: [\n    {\n      reg: /(end)$/i,\n      repl: {\n        pr: '$1s',\n        pa: 'ent',\n        gr: '$1ing',\n        ar: '$1er',\n      },\n    },\n    {\n      reg: /(eed)$/i,\n      repl: {\n        pr: '$1s',\n        pa: '$1ed',\n        gr: '$1ing',\n        ar: '$1er',\n      },\n    },\n    {\n      reg: /(ed)$/i,\n      repl: {\n        pr: '$1s',\n        pa: '$1ded',\n        ar: '$1der',\n        gr: '$1ding',\n      },\n    },\n    {\n      reg: /([^aeiou][ou])d$/i,\n      repl: {\n        pr: '$1ds',\n        pa: '$1dded',\n        gr: '$1dding',\n      },\n    },\n  ],\n  e: [\n    {\n      reg: /(eave)$/i,\n      repl: {\n        pr: '$1s',\n        pa: '$1d',\n        gr: 'eaving',\n        ar: '$1r',\n      },\n    },\n    {\n      reg: /(ide)$/i,\n      repl: {\n        pr: '$1s',\n        pa: 'ode',\n        gr: 'iding',\n        ar: 'ider',\n      },\n    },\n    {\n      reg: /(ake)$/i,\n      repl: {\n        pr: '$1s',\n        pa: 'ook',\n        gr: 'aking',\n        ar: '$1r',\n      },\n    },\n    {\n      reg: /(a[tg]|i[zn]|ur|nc|gl|is)e$/i,\n      repl: {\n        pr: '$1es',\n        pa: '$1ed',\n        gr: '$1ing',\n        prt: '$1en',\n      },\n    },\n    {\n      reg: /([bd]l)e$/i,\n      repl: {\n        pr: '$1es',\n        pa: '$1ed',\n        gr: '$1ing',\n      },\n    },\n    {\n      reg: /(om)e$/i,\n      repl: {\n        pr: '$1es',\n        pa: 'ame',\n        gr: '$1ing',\n      },\n    },\n  ],\n\n  g: [\n    {\n      reg: /([^aeiou][ou])g$/i,\n      repl: {\n        pr: '$1gs',\n        pa: '$1gged',\n        gr: '$1gging',\n      },\n    },\n  ],\n  h: [\n    {\n      reg: /(..)([cs]h)$/i,\n      repl: {\n        pr: '$1$2es',\n        pa: '$1$2ed',\n        gr: '$1$2ing',\n      },\n    },\n  ],\n  k: [\n    {\n      reg: /(ink)$/i,\n      repl: {\n        pr: '$1s',\n        pa: 'unk',\n        gr: '$1ing',\n        ar: '$1er',\n      },\n    },\n  ],\n\n  m: [\n    {\n      reg: /([^aeiou][aeiou])m$/i,\n      repl: {\n        pr: '$1ms',\n        pa: '$1mmed',\n        gr: '$1mming',\n      },\n    },\n  ],\n\n  n: [\n    {\n      reg: /(en)$/i,\n      repl: {\n        pr: '$1s',\n        pa: '$1ed',\n        gr: '$1ing',\n      },\n    },\n  ],\n  p: [\n    {\n      reg: /(e)(ep)$/i,\n      repl: {\n        pr: '$1$2s',\n        pa: '$1pt',\n        gr: '$1$2ing',\n        ar: '$1$2er',\n      },\n    },\n    {\n      reg: /([^aeiou][aeiou])p$/i,\n      repl: {\n        pr: '$1ps',\n        pa: '$1pped',\n        gr: '$1pping',\n      },\n    },\n    {\n      reg: /([aeiu])p$/i,\n      repl: {\n        pr: '$1ps',\n        pa: '$1p',\n        gr: '$1pping',\n      },\n    },\n  ],\n\n  r: [\n    {\n      reg: /([td]er)$/i,\n      repl: {\n        pr: '$1s',\n        pa: '$1ed',\n        gr: '$1ing',\n      },\n    },\n    {\n      reg: /(er)$/i,\n      repl: {\n        pr: '$1s',\n        pa: '$1ed',\n        gr: '$1ing',\n      },\n    },\n  ],\n  s: [\n    {\n      reg: /(ish|tch|ess)$/i,\n      repl: {\n        pr: '$1es',\n        pa: '$1ed',\n        gr: '$1ing',\n      },\n    },\n  ],\n\n  t: [\n    {\n      reg: /(ion|end|e[nc]t)$/i,\n      repl: {\n        pr: '$1s',\n        pa: '$1ed',\n        gr: '$1ing',\n      },\n    },\n    {\n      reg: /(.eat)$/i,\n      repl: {\n        pr: '$1s',\n        pa: '$1ed',\n        gr: '$1ing',\n      },\n    },\n    {\n      reg: /([aeiu])t$/i,\n      repl: {\n        pr: '$1ts',\n        pa: '$1t',\n        gr: '$1tting',\n      },\n    },\n    {\n      reg: /([^aeiou][aeiou])t$/i,\n      repl: {\n        pr: '$1ts',\n        pa: '$1tted',\n        gr: '$1tting',\n      },\n    },\n  ],\n\n  w: [\n    {\n      reg: /(..)(ow)$/i,\n      repl: {\n        pr: '$1$2s',\n        pa: '$1ew',\n        gr: '$1$2ing',\n        prt: '$1$2n',\n      },\n    },\n  ],\n  y: [\n    {\n      reg: /([i|f|rr])y$/i,\n      repl: {\n        pr: '$1ies',\n        pa: '$1ied',\n        gr: '$1ying',\n      },\n    },\n  ],\n\n  z: [\n    {\n      reg: /([aeiou]zz)$/i,\n      repl: {\n        pr: '$1es',\n        pa: '$1ed',\n        gr: '$1ing',\n      },\n    },\n  ],\n}\n\nmodule.exports = endsWith\n","const suffixes = require('./suffixes')\nconst posMap = {\n  pr: 'PresentTense',\n  pa: 'PastTense',\n  gr: 'Gerund',\n  prt: 'Participle',\n  ar: 'Actor',\n}\n\nconst doTransform = function(str, obj) {\n  let found = {}\n  let keys = Object.keys(obj.repl)\n  for (let i = 0; i < keys.length; i += 1) {\n    let pos = keys[i]\n    found[posMap[pos]] = str.replace(obj.reg, obj.repl[pos])\n  }\n  return found\n}\n\n//look at the end of the word for clues\nconst checkSuffix = function(str = '') {\n  let c = str[str.length - 1]\n  if (suffixes.hasOwnProperty(c) === true) {\n    for (let r = 0; r < suffixes[c].length; r += 1) {\n      const reg = suffixes[c][r].reg\n      if (reg.test(str) === true) {\n        return doTransform(str, suffixes[c][r])\n      }\n    }\n  }\n  return {}\n}\nmodule.exports = checkSuffix\n","//non-specifc, 'hail-mary' transforms from infinitive, into other forms\nconst hasY = /[bcdfghjklmnpqrstvwxz]y$/\n\nconst generic = {\n  Gerund: inf => {\n    if (inf.charAt(inf.length - 1) === 'e') {\n      return inf.replace(/e$/, 'ing')\n    }\n    return inf + 'ing'\n  },\n\n  PresentTense: inf => {\n    if (inf.charAt(inf.length - 1) === 's') {\n      return inf + 'es'\n    }\n    if (hasY.test(inf) === true) {\n      return inf.slice(0, -1) + 'ies'\n    }\n    return inf + 's'\n  },\n\n  PastTense: inf => {\n    if (inf.charAt(inf.length - 1) === 'e') {\n      return inf + 'd'\n    }\n    if (inf.substr(-2) === 'ed') {\n      return inf\n    }\n    if (hasY.test(inf) === true) {\n      return inf.slice(0, -1) + 'ied'\n    }\n    return inf + 'ed'\n  },\n}\n\nmodule.exports = generic\n","const checkSuffix = require('./01-suffixes')\nconst genericFill = require('./02-generic')\n\n//we run this on every verb in the lexicon, so please keep it fast\n//we assume the input word is a proper infinitive\nconst fastConjugate = function(str = '', world) {\n  let found = {}\n  // 1. look at irregulars\n  //the lexicon doesn't pass this in\n  if (world && world.irregulars) {\n    if (world.irregulars.verbs.hasOwnProperty(str) === true) {\n      found = Object.assign({}, world.irregulars.verbs[str])\n    }\n  }\n  //2. rule-based regex\n  found = Object.assign({}, found, checkSuffix(str))\n\n  //3. generic transformations\n  //'buzzing'\n  if (found.Gerund === undefined) {\n    found.Gerund = genericFill.Gerund(str)\n  }\n  //'buzzed'\n  if (found.PastTense === undefined) {\n    found.PastTense = genericFill.PastTense(str)\n  }\n  //'buzzes'\n  if (found.PresentTense === undefined) {\n    found.PresentTense = genericFill.PresentTense(str)\n  }\n  return found\n}\nmodule.exports = fastConjugate\n","//convert 'cute' to 'cuteness'\nconst irregulars = {\n  clean: 'cleanliness',\n  naivety: 'naivety',\n  hurt: 'hurt',\n}\n\nconst transforms = [\n  {\n    reg: /y$/,\n    repl: 'iness',\n  },\n  {\n    reg: /le$/,\n    repl: 'ility',\n  },\n  {\n    reg: /ial$/,\n    repl: 'y',\n  },\n  {\n    reg: /al$/,\n    repl: 'ality',\n  },\n  {\n    reg: /ting$/,\n    repl: 'ting',\n  },\n  {\n    reg: /ring$/,\n    repl: 'ring',\n  },\n  {\n    reg: /bing$/,\n    repl: 'bingness',\n  },\n  {\n    reg: /sing$/,\n    repl: 'se',\n  },\n  {\n    reg: /ing$/,\n    repl: 'ment',\n  },\n  {\n    reg: /ess$/,\n    repl: 'essness',\n  },\n  {\n    reg: /ous$/,\n    repl: 'ousness',\n  },\n]\n\nconst to_noun = function(w) {\n  if (irregulars.hasOwnProperty(w)) {\n    return irregulars[w]\n  }\n  const lastChar = w.charAt(w.length - 1)\n  if (lastChar === 'w' || lastChar === 's') {\n    return null\n  }\n  for (let i = 0; i < transforms.length; i++) {\n    if (transforms[i].reg.test(w) === true) {\n      return w.replace(transforms[i].reg, transforms[i].repl)\n    }\n  }\n  return w + 'ness'\n}\n\nmodule.exports = to_noun\n","//turn 'quick' into 'quickest'\n'use strict'\nconst do_rules = [/ght$/, /nge$/, /ough$/, /ain$/, /uel$/, /[au]ll$/, /ow$/, /oud$/, /...p$/]\nconst dont_rules = [/ary$/]\n\nconst irregulars = {\n  nice: 'nicest',\n  late: 'latest',\n  hard: 'hardest',\n  inner: 'innermost',\n  outer: 'outermost',\n  far: 'furthest',\n  worse: 'worst',\n  bad: 'worst',\n  good: 'best',\n  big: 'biggest',\n  large: 'largest',\n}\n\nconst transforms = [\n  {\n    reg: /y$/i,\n    repl: 'iest',\n  },\n  {\n    reg: /([aeiou])t$/i,\n    repl: '$1ttest',\n  },\n  {\n    reg: /([aeou])de$/i,\n    repl: '$1dest',\n  },\n  {\n    reg: /nge$/i,\n    repl: 'ngest',\n  },\n  {\n    reg: /([aeiou])te$/i,\n    repl: '$1test',\n  },\n]\n\nconst to_superlative = function(str) {\n  //irregulars\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str]\n  }\n  //known transforms\n  for (let i = 0; i < transforms.length; i++) {\n    if (transforms[i].reg.test(str)) {\n      return str.replace(transforms[i].reg, transforms[i].repl)\n    }\n  }\n  //dont-rules\n  for (let i = 0; i < dont_rules.length; i++) {\n    if (dont_rules[i].test(str) === true) {\n      return null\n    }\n  }\n  //do-rules\n  for (let i = 0; i < do_rules.length; i++) {\n    if (do_rules[i].test(str) === true) {\n      if (str.charAt(str.length - 1) === 'e') {\n        return str + 'st'\n      }\n      return str + 'est'\n    }\n  }\n  return str + 'est'\n}\n\nmodule.exports = to_superlative\n","//turn 'quick' into 'quickly'\nconst do_rules = [/ght$/, /nge$/, /ough$/, /ain$/, /uel$/, /[au]ll$/, /ow$/, /old$/, /oud$/, /e[ae]p$/]\nconst dont_rules = [/ary$/, /ous$/]\n\nconst irregulars = {\n  grey: 'greyer',\n  gray: 'grayer',\n  green: 'greener',\n  yellow: 'yellower',\n  red: 'redder',\n  good: 'better',\n  well: 'better',\n  bad: 'worse',\n  sad: 'sadder',\n  big: 'bigger',\n}\n\nconst transforms = [\n  {\n    reg: /y$/i,\n    repl: 'ier',\n  },\n  {\n    reg: /([aeiou])t$/i,\n    repl: '$1tter',\n  },\n  {\n    reg: /([aeou])de$/i,\n    repl: '$1der',\n  },\n  {\n    reg: /nge$/i,\n    repl: 'nger',\n  },\n]\n\nconst to_comparative = function(str) {\n  //known-irregulars\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str]\n  }\n  //known-transforms\n  for (let i = 0; i < transforms.length; i++) {\n    if (transforms[i].reg.test(str) === true) {\n      return str.replace(transforms[i].reg, transforms[i].repl)\n    }\n  }\n  //dont-patterns\n  for (let i = 0; i < dont_rules.length; i++) {\n    if (dont_rules[i].test(str) === true) {\n      return null\n    }\n  }\n  //do-patterns\n  for (let i = 0; i < do_rules.length; i++) {\n    if (do_rules[i].test(str) === true) {\n      return str + 'er'\n    }\n  }\n  //easy-one\n  if (/e$/.test(str) === true) {\n    return str + 'r'\n  }\n  return str + 'er'\n}\n\nmodule.exports = to_comparative\n","//turn 'quick' into 'quickly'\nconst not_matches = [/airs$/, /ll$/, /ee.$/, /ile$/, /y$/]\n\nconst irregulars = {\n  bad: 'badly',\n  good: 'well',\n  icy: 'icily',\n  idle: 'idly',\n  male: 'manly',\n  public: 'publicly',\n  simple: 'simply',\n  single: 'singly',\n  special: 'especially',\n  straight: 'straight',\n  vague: 'vaguely',\n  whole: 'wholly',\n}\nconst dontChange = ['best', 'early', 'hard', 'fast', 'wrong', 'well', 'late', 'latter', 'little', 'long', 'low'].reduce(\n  (h, c) => {\n    h[c] = true\n    return h\n  },\n  {}\n)\n\nconst transforms = [\n  {\n    reg: /al$/i,\n    repl: 'ally',\n  },\n  {\n    reg: /ly$/i,\n    repl: 'ly',\n  },\n  {\n    reg: /(.{3})y$/i,\n    repl: '$1ily',\n  },\n  {\n    reg: /que$/i,\n    repl: 'quely',\n  },\n  {\n    reg: /ue$/i,\n    repl: 'uly',\n  },\n  {\n    reg: /ic$/i,\n    repl: 'ically',\n  },\n  {\n    reg: /ble$/i,\n    repl: 'bly',\n  },\n  {\n    reg: /l$/i,\n    repl: 'ly',\n  },\n]\n\nconst adj_to_adv = function(str) {\n  if (irregulars.hasOwnProperty(str) === true) {\n    return irregulars[str]\n  }\n  if (dontChange.hasOwnProperty(str) === true) {\n    return str\n  }\n  for (let i = 0; i < not_matches.length; i++) {\n    if (not_matches[i].test(str) === true) {\n      return null\n    }\n  }\n  for (let i = 0; i < transforms.length; i++) {\n    if (transforms[i].reg.test(str) === true) {\n      return str.replace(transforms[i].reg, transforms[i].repl)\n    }\n  }\n  return str + 'ly'\n}\n\nmodule.exports = adj_to_adv\n","//turn an adjective like 'soft' into a verb like 'soften'\n//(don't do words like 'green' -> 'greenen')\n\n//these are suffices that are usually too weird\nlet dontDo = ['c', 'e', 'g', 'l', 'n', 'r', 'w', 'y'].reduce((h, c) => {\n  h[c] = true\n  return h\n}, {})\n\nconst dontDoTwo = { ed: true, nt: true }\n\nconst blacklist = {\n  random: true,\n  wild: true,\n}\n\nconst irregulars = {\n  bored: 'bore',\n  red: 'redden',\n  sad: 'sadden',\n  fat: 'fatten',\n  small: 'shrink',\n  full: 'fill',\n  tired: 'tire',\n}\n\nconst toVerb = str => {\n  if (irregulars.hasOwnProperty(str) === true) {\n    return irregulars[str]\n  }\n  //don't bother with these:\n  if (str.length <= 3) {\n    return null\n  }\n  if (blacklist.hasOwnProperty(str) === true) {\n    return null\n  }\n  //suffixes to avoid\n  if (dontDo.hasOwnProperty(str[str.length - 1])) {\n    return null\n  }\n  let suffix = str.substr(str.length - 2)\n  if (dontDoTwo.hasOwnProperty(suffix) === true) {\n    return null\n  }\n\n  if (/e$/.test(str) === true) {\n    return str + 'n'\n  }\n  return str + 'en'\n}\nmodule.exports = toVerb\n","'use strict'\nconst fns = {\n  toNoun: require('./toNoun'),\n  toSuperlative: require('./toSuperlative'),\n  toComparative: require('./toComparative'),\n  toAdverb: require('./toAdverb'),\n  toVerb: require('./toVerb'),\n}\n\n/** conjugate an adjective into other forms */\nconst conjugate = function(w) {\n  let res = {}\n  // 'greatness'\n  let noun = fns.toNoun(w)\n  if (noun) {\n    res.Noun = noun\n  }\n  // 'greatest'\n  let sup = fns.toSuperlative(w)\n  if (sup) {\n    res.Superlative = sup\n  }\n  // 'greater'\n  let comp = fns.toComparative(w)\n  if (comp) {\n    res.Comparative = comp\n  }\n  // 'greatly'\n  let adv = fns.toAdverb(w)\n  if (adv) {\n    res.Adverb = adv\n  }\n  // 'greaten' :/\n  let vb = fns.toVerb(w)\n  if (vb) {\n    res.Verb = vb\n  }\n  // res.Adjective = w\n  return res\n}\nmodule.exports = conjugate\n","/** patterns for turning 'bus' to 'buses'*/\nconst suffixes = {\n  a: [[/(antenn|formul|nebul|vertebr|vit)a$/i, '$1ae'], [/([ti])a$/i, '$1a']],\n\n  e: [\n    [/(kn|l|w)ife$/i, '$1ives'],\n    [/(hive)$/i, '$1s'],\n    [/([m|l])ouse$/i, '$1ice'],\n    [/([m|l])ice$/i, '$1ice'],\n  ],\n\n  f: [\n    [/^(dwar|handkerchie|hoo|scar|whar)f$/i, '$1ves'],\n    [/^((?:ca|e|ha|(?:our|them|your)?se|she|wo)l|lea|loa|shea|thie)f$/i, '$1ves'],\n  ],\n\n  i: [[/(octop|vir)i$/i, '$1i']],\n\n  m: [[/([ti])um$/i, '$1a']],\n\n  n: [[/^(oxen)$/i, '$1']],\n\n  o: [[/(al|ad|at|er|et|ed|ad)o$/i, '$1oes']],\n\n  s: [\n    [/(ax|test)is$/i, '$1es'],\n    [/(alias|status)$/i, '$1es'],\n    [/sis$/i, 'ses'],\n    [/(bu)s$/i, '$1ses'],\n    [/(sis)$/i, 'ses'],\n    [/^(?!talis|.*hu)(.*)man$/i, '$1men'],\n    [/(octop|vir|radi|nucle|fung|cact|stimul)us$/i, '$1i'],\n  ],\n\n  x: [[/(matr|vert|ind|cort)(ix|ex)$/i, '$1ices'], [/^(ox)$/i, '$1en']],\n\n  y: [[/([^aeiouy]|qu)y$/i, '$1ies']],\n\n  z: [[/(quiz)$/i, '$1zes']],\n}\n\nmodule.exports = suffixes\n","const suffixes = require('./01-suffixes')\nconst addE = /(x|ch|sh|s|z)$/\n\nconst trySuffix = function(str) {\n  let c = str[str.length - 1]\n  if (suffixes.hasOwnProperty(c) === true) {\n    for (let i = 0; i < suffixes[c].length; i += 1) {\n      let reg = suffixes[c][i][0]\n      if (reg.test(str) === true) {\n        return str.replace(reg, suffixes[c][i][1])\n      }\n    }\n  }\n  return null\n}\n\n/** Turn a singular noun into a plural\n * assume the given string is singular\n */\nconst pluralize = function(str = '') {\n  //we have some rules to try-out\n  let plural = trySuffix(str)\n  if (plural !== null) {\n    return plural\n  }\n  //like 'church'\n  if (addE.test(str)) {\n    return str + 'es'\n  }\n  // ¯\\_(ツ)_/¯\n  return str + 's'\n}\nmodule.exports = pluralize\n","const lexData = require('./_data')\nconst defaultTags = require('./tags')\nconst unpack = require('efrt-unpack')\nconst addWords = require('./addWords')\nconst addIrregulars = require('./addIrregulars')\n\nlet misc = require('./data/misc')\n\n//these let users change inflection / verb conjugation\nconst irregulars = {\n  nouns: require('./data/plurals'),\n  verbs: require('./data/conjugations'),\n}\n\n//these behaviours are configurable & shared across some plugins\nconst transforms = {\n  verbs: require('../transforms/verbs'),\n  adjectives: require('../transforms/adjectives'),\n  nouns: require('../transforms/nouns'),\n}\n\nlet isVerbose = false\n\n/** all configurable linguistic data */\nclass World {\n  constructor() {\n    // quiet these properties from a console.log\n    Object.defineProperty(this, 'lexicon', {\n      enumerable: false,\n      value: misc,\n      writable: true,\n    })\n    Object.defineProperty(this, 'hasCompound', {\n      enumerable: false,\n      value: {},\n      writable: true,\n    })\n    Object.defineProperty(this, 'irregulars', {\n      enumerable: false,\n      value: irregulars,\n      writable: true,\n    })\n    Object.defineProperty(this, 'tags', {\n      enumerable: false,\n      value: Object.assign({}, defaultTags),\n      writable: true,\n    })\n    Object.defineProperty(this, 'transforms', {\n      enumerable: false,\n      value: transforms,\n    })\n    // add our compressed data to lexicon\n    this.unpackWords(lexData)\n    // add our irregulars to lexicon\n    this.addIrregulars()\n\n    // cache our abbreviations for our sentence-parser\n    Object.defineProperty(this, 'cache', {\n      enumerable: false,\n      value: {\n        abbreviations: this.getByTag('Abbreviation'),\n      },\n    })\n  }\n\n  /** more logs for debugging */\n  verbose(bool) {\n    isVerbose = bool\n    return this\n  }\n  isVerbose() {\n    return isVerbose\n  }\n\n  /** get all terms in our lexicon with this tag */\n  getByTag(tag) {\n    let lex = this.lexicon\n    let res = {}\n    let words = Object.keys(lex)\n    for (let i = 0; i < words.length; i++) {\n      if (typeof lex[words[i]] === 'string') {\n        if (lex[words[i]] === tag) {\n          res[words[i]] = true\n        }\n      } else if (lex[words[i]].some(t => t === tag)) {\n        res[words[i]] = true\n      }\n    }\n    return res\n  }\n\n  /** augment our lingustic data with new data */\n  unpackWords(lex) {\n    let tags = Object.keys(lex)\n    for (let i = 0; i < tags.length; i++) {\n      let words = Object.keys(unpack(lex[tags[i]]))\n      addWords(words, tags[i], this)\n    }\n  }\n  addIrregulars() {\n    addIrregulars(this)\n    return this\n  }\n\n  /** helper method for logging + debugging */\n  stats() {\n    return {\n      words: Object.keys(this.lexicon).length,\n      plurals: Object.keys(this.irregular.plurals).length,\n      conjugations: Object.keys(this.irregular.conjugations).length,\n      compounds: Object.keys(this.hasCompound).length,\n    }\n  }\n}\n\n//  ¯\\_(:/)_/¯\nconst clone = function(obj) {\n  return JSON.parse(JSON.stringify(obj))\n}\n\n/** produce a deep-copy of all lingustic data */\nWorld.prototype.clone = function() {\n  let w2 = new World()\n  //who really knows about this one:\n  w2.lexicon = clone(this.lexicon)\n  w2.plurals = clone(this.plurals)\n  w2.conjugations = clone(this.conjugations)\n  w2.tags = clone(this.tags)\n  return w2\n}\nmodule.exports = World\n","/** apply a tag, or tags to all terms */\nconst tagTerms = function(tag, doc, safe, reason) {\n  let tagList = []\n  if (typeof tag === 'string') {\n    tagList = tag.split(' ')\n  }\n  //do indepenent tags for each term:\n  doc.list.forEach(p => {\n    let terms = p.terms()\n    // tagSafe - apply only to fitting terms\n    if (safe === true) {\n      terms = terms.filter(t => t.canBe(tag, doc.world))\n    }\n    terms.forEach((t, i) => {\n      //fancy version:\n      if (tagList.length > 1) {\n        if (tagList[i] && tagList[i] !== '.') {\n          t.tag(tagList[i], reason, doc.world)\n        }\n      } else {\n        //non-fancy version (same tag for all terms)\n        t.tag(tag, reason, doc.world)\n      }\n    })\n  })\n  return\n}\nmodule.exports = tagTerms\n","const setTag = require('./_tag')\n\n/** Give all terms the given tag */\nexports.tag = function(tags, why) {\n  if (!tags) {\n    return this\n  }\n  setTag(tags, this, false, why)\n  return this\n}\n\n/** Only apply tag to terms if it is consistent with current tags */\nexports.tagSafe = function(tags, why) {\n  if (!tags) {\n    return this\n  }\n  setTag(tags, this, true, why)\n  return this\n}\n\n/** Remove this term from the given terms */\nexports.unTag = function(tags, why) {\n  this.list.forEach(p => {\n    p.terms().forEach(t => t.unTag(tags, why, this.world))\n  })\n  return this\n}\n\n/** turn on logging for decision-debugging */\nexports.verbose = function(bool) {\n  if (bool === undefined) {\n    bool = true\n  }\n  this.world.verbose = bool\n}\n","/**  */\nexports.firstTerm = function() {\n  return this.match('^.')\n}\n/**  */\nexports.lastTerm = function() {\n  return this.match('.$')\n}\n/** use only the first result(s) */\nexports.first = function(n) {\n  if (n === undefined) {\n    return this.get(n)\n  }\n  return this.slice(0, n)\n}\n/** use only the last result(s) */\nexports.last = function(n) {\n  if (n === undefined) {\n    return this.get(this.list.length - 1)\n  }\n  let end = this.list.length\n  return this.slice(end - n, end)\n}\n\n/** grab a subset of the results*/\nexports.slice = function(start, end) {\n  let list = this.list.slice(start, end)\n  return this.buildFrom(list)\n}\n/** use only the nth result*/\nexports.get = function(n) {\n  //return an empty result\n  if ((!n && n !== 0) || !this.list[n]) {\n    return this.buildFrom([])\n  }\n  let list = [this.list[n]]\n  return this.buildFrom(list)\n}\n\n/** sample a subset of the results */\nexports.random = function(n) {\n  if (!this.found) {\n    return this\n  }\n  let r = Math.floor(Math.random() * this.list.length)\n  if (n === undefined) {\n    let list = [this.list[r]]\n    return this.buildFrom(list)\n  }\n  //prevent it from going over the end\n  if (r + n > this.length) {\n    r = this.length - n\n    r = r < 0 ? 0 : r\n  }\n  return this.slice(r, r + n)\n}\n\n/** return a flat array of term objects */\nexports.termList = function(num) {\n  let arr = []\n  //'reduce' but faster\n  for (let i = 0; i < this.list.length; i++) {\n    let terms = this.list[i].terms()\n    for (let o = 0; o < terms.length; o++) {\n      arr.push(terms[o])\n      //support .termList(4)\n      if (num !== undefined && arr[num] !== undefined) {\n        return arr[num]\n      }\n    }\n  }\n  return arr\n}\n\n/** how many seperate terms does the document have? */\nexports.wordCount = function() {\n  return this.list.reduce((count, p) => {\n    count += p.wordCount\n    return count\n  }, 0)\n}\nexports.wordcount = exports.wordCount\n","/** remove start and end whitespace */\nexports.trim = function() {\n  this.list = this.list.map(p => p.trim())\n  return this\n}\n\n/** connect words with hyphen, and remove whitespace */\nexports.hyphenate = function() {\n  this.list.forEach(p => {\n    let terms = p.terms()\n    //remove whitespace\n    terms.forEach((t, i) => {\n      if (i !== 0) {\n        t.pre = ''\n      }\n      if (terms[i + 1]) {\n        t.post = '-'\n      }\n    })\n  })\n  this.tag('#Hyphenated', 'hyphenate')\n  return this\n}\n\n/** remove hyphens between words, and set whitespace */\nexports.dehyphenate = function() {\n  const hasHyphen = /(-|–|—)/\n  this.list.forEach(p => {\n    let terms = p.terms()\n    //remove whitespace\n    terms.forEach(t => {\n      if (hasHyphen.test(t.post)) {\n        t.post = ' '\n      }\n    })\n  })\n  this.untag('#Hyphenated', 'hyphenate')\n  return this\n}\n","const eachTerm = function(doc, fn) {\n  let world = doc.world\n  doc.list.forEach(p => {\n    p.terms().forEach(t => t[fn](world))\n  })\n  return doc\n}\n\n/** turn every letter of every term to lower-cse */\nexports.toLowerCase = function() {\n  return eachTerm(this, 'toLowerCase')\n}\n\n/** turn every letter of every term to upper case */\nexports.toUpperCase = function() {\n  return eachTerm(this, 'toUpperCase')\n}\n\n/** upper-case the first letter of each term */\nexports.toTitleCase = function() {\n  return eachTerm(this, 'toTitleCase')\n}\n/** remove whitespace and title-case each term */\nexports.toCamelCase = function() {\n  this.toTitleCase()\n  this.list.forEach(p => {\n    //remove whitespace\n    let terms = p.terms()\n    terms.forEach((t, i) => {\n      if (i !== terms.length - 1) {\n        t.post = ''\n      }\n    })\n  })\n  this.tag('#CamelCase', 'toCamelCase')\n  return this\n}\n","/* grab nth result */\nexports.eq = function(n) {\n  let p = this.list[n]\n  if (p === undefined) {\n    return this.buildFrom([])\n  }\n  return this.buildFrom([p])\n}\n\n/* run each phrase through a function, and create a new document */\nexports.map = function(fn) {\n  if (!fn) {\n    return this\n  }\n  let list = this.list.map((p, i) => {\n    let doc = this.buildFrom([p])\n    doc.from = null //it's not a child/parent\n    return fn(doc, i).list[0]\n  })\n  return this.buildFrom(list)\n}\n\n/** run a function on each phrase */\nexports.forEach = function(fn) {\n  if (!fn) {\n    return this\n  }\n  this.list.forEach((p, i) => {\n    let doc = this.buildFrom([p])\n    doc.from = null //it's not a child/parent\n    fn(doc, i)\n  })\n  return this\n}\n\n/** return only the phrases that return true */\nexports.filter = function(fn) {\n  if (!fn) {\n    return this\n  }\n  let list = this.list.filter((p, i) => {\n    let doc = this.buildFrom([p])\n    doc.from = null //it's not a child/parent\n    return fn(doc, i)\n  })\n  return this.buildFrom(list)\n}\n\n/** return a document with only the first phrase that matches */\nexports.find = function(fn) {\n  if (!fn) {\n    return this\n  }\n  let list = this.list.find((p, i) => {\n    let doc = this.buildFrom([p])\n    doc.from = null //it's not a child/parent\n    return fn(doc, i)\n  })\n  if (list) {\n    return this.buildFrom([list])\n  }\n  return undefined\n}\n\n/** return true or false if there is one matching phrase */\nexports.some = function(fn) {\n  if (!fn) {\n    return this\n  }\n  return this.list.some((p, i) => {\n    let doc = this.buildFrom([p])\n    doc.from = null //it's not a child/parent\n    return fn(doc, i)\n  })\n}\n\n/** combine each phrase into a new data-structure */\n// exports.reduce = function(fn, h) {\n//   let list = this.list.reduce((_h, ts) => {\n//     let doc = this.buildFrom([ts])\n//     doc.from = null //it's not a child/parent\n//     return fn(_h, doc)\n//   }, h)\n//   return this.buildFrom(list)\n// }\n","const tokenize = require('../../01-tokenizer')\n\n/** substitute-in new content */\nexports.replaceWith = function(replace) {\n  if (!replace) {\n    return this.delete()\n  }\n  this.list.forEach(p => {\n    let newPhrases = tokenize.fromText(replace, this.world, this.pool())\n    //tag the new phrases\n    let tmpDoc = this.buildFrom(newPhrases)\n    tmpDoc.tagger()\n    p.replace(newPhrases[0], this) //TODO: support multi-sentence replacements\n  })\n  return this\n}\n\n/** search and replace match with new content */\nexports.replace = function(match, replace) {\n  this.match(match).replaceWith(replace)\n  return this\n}\n\n/** fully remove these terms from the document */\nexports.delete = function(match) {\n  let toRemove = this\n  if (match) {\n    toRemove = this.match(match)\n  }\n  toRemove.list.forEach(phrase => phrase.delete(this))\n  return this\n}\n// aliases\nexports.remove = exports.delete\n","const methods = {\n  /** alphabetical order */\n  alpha: (a, b) => {\n    let left = a.text('clean')\n    let right = b.text('clean')\n    if (left < right) {\n      return -1\n    }\n    if (left > right) {\n      return 1\n    }\n    return 0\n  },\n\n  /** the 'chronological', or original document sort order */\n  chron: (a, b) => {\n    let left = a.text()\n    let right = b.text()\n    if (left < right) {\n      return 1\n    }\n    if (left > right) {\n      return -1\n    }\n    return 0\n  },\n\n  /** count the # of characters of each match */\n  length: (a, b) => {\n    let left = a.text().trim().length\n    let right = b.text().trim().length\n    if (left < right) {\n      return 1\n    }\n    if (left > right) {\n      return -1\n    }\n    return 0\n  },\n\n  /** count the # of terms in each match */\n  wordCount: (a, b) => {\n    let left = a.wordCount()\n    let right = b.wordCount()\n    if (left < right) {\n      return 1\n    }\n    if (left > right) {\n      return -1\n    }\n    return 0\n  },\n}\n\n/** sort by # of duplicates in the document*/\nconst byFreq = function(doc) {\n  let counts = {}\n  const options = {\n    case: true,\n    punctuation: false,\n    whitespace: true,\n    unicode: true,\n  }\n  doc.list.forEach(p => {\n    let str = p.text(options)\n    counts[str] = counts[str] || 0\n    counts[str] += 1\n  })\n  console.log(counts)\n  // sort by freq\n  doc.list.sort((a, b) => {\n    let left = counts[a.text(options)]\n    let right = counts[b.text(options)]\n    if (left < right) {\n      return 1\n    }\n    if (left > right) {\n      return -1\n    }\n    return 0\n  })\n  return doc\n}\n\n//aliases\nmethods.alphabetical = methods.alpha\nmethods.wordcount = methods.wordCount\nmethods.chronological = methods.chron\nmethods.index = methods.chron\n\n/** re-arrange the order of the matches (in place) */\nexports.sort = function(input) {\n  input = input || 'alpha'\n  input = methods[input] || input\n  //do this one up-front\n  if (input === 'freq' || input === 'frequency' || input === 'topk') {\n    return byFreq(this)\n  }\n  // apply sort method on each phrase\n  if (typeof input === 'function') {\n    this.list = this.list.sort(input)\n    return this\n  }\n  return this\n}\n","/** deep-copy the document, so that no references remain */\nexports.clone = function() {\n  let list = this.list.map(ts => ts.clone())\n  let tmp = this.buildFrom(list)\n  return tmp\n}\n","//list of inconsistent parts-of-speech\nmodule.exports = [\n  //top-level pos are all inconsistent\n  [\n    'Noun',\n    'Verb',\n    'Adjective',\n    'Adverb',\n    'Determiner',\n    'Conjunction',\n    'Preposition',\n    'QuestionWord',\n    'Expression',\n    'Url',\n    'PhoneNumber',\n    'Email',\n    'Emoji',\n  ],\n  //exlusive-nouns\n  ['Person', 'Organization', 'Value', 'Place', 'Actor', 'Demonym', 'Pronoun'],\n  //acronyms\n  ['Acronym', 'Pronoun', 'Actor', 'Unit', 'Address'],\n  ['Acronym', 'Plural'],\n  //things that can't be plural\n  ['Plural', 'Singular'],\n  //exlusive-people\n  ['MaleName', 'FemaleName'],\n  ['FirstName', 'LastName', 'Honorific'],\n  //adjectives\n  ['Comparative', 'Superlative'],\n  //values\n  ['Value', 'Verb', 'Adjective'],\n  ['Ordinal', 'Cardinal'],\n  ['TextValue', 'NumericValue'],\n  ['NiceNumber', 'TextValue'],\n  ['Ordinal', 'Currency'], //$5.50th\n  //verbs\n  ['PastTense', 'PresentTense', 'FutureTense'],\n  ['Pluperfect', 'Copula', 'Modal', 'Participle', 'Infinitive', 'Gerund', 'FuturePerfect', 'PerfectTense'],\n  ['Auxiliary', 'Noun', 'Value'],\n  //date\n  ['Month', 'WeekDay', 'Year', 'Duration', 'Holiday'],\n  ['Particle', 'Conjunction', 'Adverb', 'Preposition', 'Date'],\n  ['Date', 'Verb', 'Adjective', 'Person'],\n  ['Date', 'Money', 'RomanNumeral', 'Fraction'],\n  //a/an -> 1\n  ['Value', 'Determiner'],\n  ['Url', 'Value', 'HashTag', 'PhoneNumber', 'Emoji'],\n  //roman numerals\n  ['RomanNumeral', 'Fraction', 'NiceNumber'],\n  ['RomanNumeral', 'Money', 'Acronym'],\n  //cases\n  ['UpperCase', 'TitleCase', 'CamelCase'],\n  //phrases\n  ['Verb', 'Noun', 'Adjective', 'Value'], //VerbPhrase',\n  //QuestionWord\n  ['QuestionWord', 'Verb'],\n  //acronyms\n  ['Acronym', 'Verb'],\n]\n","module.exports = {\n  Noun: {},\n  // - singular\n  Singular: {\n    isA: 'Noun',\n  },\n  //a specific thing that's capitalized\n  ProperNoun: {\n    isA: 'Noun',\n  },\n\n  // -- people\n  Person: {\n    isA: 'ProperNoun',\n    also: 'Singular',\n  },\n  FirstName: {\n    isA: 'Person',\n  },\n  MaleName: {\n    isA: 'FirstName',\n  },\n  FemaleName: {\n    isA: 'FirstName',\n  },\n  LastName: {\n    isA: 'Person',\n  },\n  Honorific: {\n    isA: 'Noun',\n  },\n  Place: {\n    isA: 'Singular',\n  },\n\n  // -- places\n  Country: {\n    isA: 'Place',\n    also: 'ProperNoun',\n  },\n  City: {\n    isA: 'Place',\n    also: 'ProperNoun',\n  },\n  Region: {\n    isA: 'Place',\n    also: 'ProperNoun',\n  },\n  Address: {\n    isA: 'Place',\n  },\n  Organization: {\n    isA: 'Singular',\n    also: 'ProperNoun',\n  },\n  SportsTeam: {\n    isA: 'Organization',\n  },\n  Company: {\n    isA: 'Organization',\n  },\n  School: {\n    isA: 'Organization',\n  },\n\n  // - plural\n  Plural: {\n    isA: 'Noun',\n  },\n  Uncountable: {\n    //(not plural or singular)\n    isA: 'Noun',\n  },\n  Pronoun: {\n    isA: 'Noun',\n  },\n  //a word for someone doing something -'plumber'\n  Actor: {\n    isA: 'Noun',\n  },\n  //a gerund-as-noun - 'swimming'\n  Activity: {\n    isA: 'Noun',\n  },\n  //'kilograms'\n  Unit: {\n    isA: 'Noun',\n  },\n  //'Canadians'\n  Demonym: {\n    isA: 'Noun',\n    also: 'ProperNoun',\n  },\n  //`john's`\n  Possessive: {\n    isA: 'Noun',\n  },\n}\n","module.exports = {\n  Verb: {\n    // isA: 'VerbPhrase',\n  },\n  PresentTense: {\n    isA: 'Verb',\n  },\n  Infinitive: {\n    isA: 'PresentTense',\n  },\n  Gerund: {\n    isA: 'PresentTense',\n  },\n  PastTense: {\n    isA: 'Verb',\n  },\n  PerfectTense: {\n    isA: 'Verb',\n  },\n  FuturePerfect: {\n    isA: 'Verb',\n  },\n  Pluperfect: {\n    isA: 'Verb',\n  },\n  Copula: {\n    isA: 'Verb',\n  },\n  Modal: {\n    isA: 'Verb',\n  },\n  Participle: {\n    isA: 'Verb',\n  },\n  Particle: {\n    isA: 'Verb',\n  },\n  PhrasalVerb: {\n    isA: 'Verb',\n  },\n}\n","module.exports = {\n  Value: {},\n  Ordinal: {\n    isA: 'Value',\n  },\n  Cardinal: {\n    isA: 'Value',\n  },\n  // Multiple: {\n  //   isA: 'Value',\n  // },\n  RomanNumeral: {\n    isA: 'Cardinal',\n  },\n  Fraction: {\n    isA: 'Value',\n  },\n  TextValue: {\n    isA: 'Value',\n  },\n  NumericValue: {\n    isA: 'Value',\n  },\n  Money: {\n    //isA: 'Cardinal'\n  },\n  Percent: {\n    isA: 'Value',\n  },\n}\n","module.exports = {\n  Date: {}, //not a noun, but usually is\n  Month: {\n    isA: 'Date',\n    also: 'Singular',\n  },\n  WeekDay: {\n    isA: 'Date',\n    also: 'Noun',\n  },\n  RelativeDay: {\n    isA: 'Date',\n  },\n  Year: {\n    isA: 'Date',\n  },\n  Duration: {\n    isA: 'Date',\n    also: 'Noun',\n  },\n  Time: {\n    isA: 'Date',\n    also: 'Noun',\n  },\n  Holiday: {\n    isA: 'Date',\n    also: 'Noun',\n  },\n}\n","module.exports = {\n  Adjective: {},\n  Comparable: {\n    isA: 'Adjective',\n  },\n  Comparative: {\n    isA: 'Adjective',\n  },\n  Superlative: {\n    isA: 'Adjective',\n  },\n\n  NumberRange: {\n    isA: 'Contraction',\n  },\n  Adverb: {},\n\n  Currency: {},\n  //glue\n  Determiner: {},\n  Conjunction: {},\n  Preposition: {},\n  QuestionWord: {},\n  RelativeProunoun: {\n    isA: 'Pronoun',\n  },\n  Expression: {},\n  Abbreviation: {},\n  Url: {},\n  PhoneNumber: {},\n  HashTag: {},\n  AtMention: {\n    isA: 'Noun',\n  },\n  Emoji: {},\n  Email: {},\n\n  //non-exclusive\n  Auxiliary: {},\n  Negative: {},\n  Contraction: {},\n\n  TitleCase: {},\n  CamelCase: {},\n  UpperCase: {},\n  Hyphenated: {},\n  Acronym: {},\n  ClauseEnd: {},\n\n  // Quotes\n  Quotation: {},\n  StartQuotation: {\n    isA: 'Quotation',\n  },\n  EndQuotation: {\n    isA: 'Quotation',\n  },\n  //parentheses\n  Parentheses: {},\n  EndBracket: {\n    isA: 'Parentheses',\n  },\n  StartBracket: {\n    isA: 'Parentheses',\n  },\n}\n","//add 'downward' tags (that immediately depend on this one)\nconst addDownword = function(tags) {\n  const keys = Object.keys(tags)\n  keys.forEach(k => {\n    tags[k].downward = []\n    //look for tags with this as parent\n    for (let i = 0; i < keys.length; i++) {\n      if (tags[keys[i]].isA && tags[keys[i]].isA === k) {\n        tags[k].downward.push(keys[i])\n      }\n    }\n  })\n}\nmodule.exports = addDownword\n","const conflicts = require('./conflicts')\nconst nouns = require('./tags/nouns')\nconst verbs = require('./tags/verbs')\nconst values = require('./tags/values')\nconst dates = require('./tags/dates')\nconst misc = require('./tags/misc')\nconst addDownward = require('./addDownward')\n\n//used for pretty-printing on the server-side\nconst colors = {\n  Noun: 'blue',\n  // NounPhrase: 'blue',\n\n  Verb: 'green',\n  Auxiliary: 'green',\n  Negative: 'green',\n  // VerbPhrase: 'green',\n\n  Date: 'red',\n  Value: 'red',\n\n  Adjective: 'magenta',\n\n  Preposition: 'cyan',\n  Conjunction: 'cyan',\n  Determiner: 'cyan',\n  Adverb: 'cyan',\n  // Condition: 'cyan',\n}\n\n//extend tagset with new tags\nconst addIn = function(obj, tags) {\n  Object.keys(obj).forEach(k => {\n    tags[k] = obj[k]\n  })\n}\n\n//add tags to remove when tagging this one\nconst addConflicts = function(tags) {\n  Object.keys(tags).forEach(k => {\n    tags[k].notA = {}\n    for (let i = 0; i < conflicts.length; i++) {\n      let arr = conflicts[i]\n      if (arr.indexOf(k) !== -1) {\n        arr = arr.filter(a => a !== k)\n        arr.forEach(e => {\n          tags[k].notA[e] = true\n        })\n      }\n    }\n    tags[k].notA = Object.keys(tags[k].notA)\n  })\n}\n\nconst addColors = function(tags) {\n  Object.keys(tags).forEach(k => {\n    if (colors[k]) {\n      tags[k].color = colors[k]\n      return\n    }\n    if (tags[k].isA && colors[tags[k].isA]) {\n      tags[k].color = colors[tags[k].isA]\n      return\n    }\n    if (tags[k].isA && tags[tags[k].isA].color) {\n      tags[k].color = tags[tags[k].isA].color\n    }\n  })\n}\n\nconst build = () => {\n  let tags = {}\n  addIn(nouns, tags)\n  addIn(verbs, tags)\n  addIn(values, tags)\n  addIn(dates, tags)\n  addIn(misc, tags)\n  //downstream\n  addDownward(tags)\n  //add enemies\n  addConflicts(tags)\n  //for nice-logging\n  addColors(tags)\n  return tags\n}\nmodule.exports = build()\n","const tagset = require('../../world/tags')\n\n// https://stackoverflow.com/questions/9781218/how-to-change-node-jss-console-font-color\nconst reset = '\\x1b[0m'\n\nconst padEnd = function(str, width) {\n  str = str.toString()\n  while (str.length < width) {\n    str += ' '\n  }\n  return str\n}\n\n//cheaper than requiring chalk\nconst colors = {\n  green: function(str) {\n    return '\\x1b[32m' + str + reset\n  },\n  red: function(str) {\n    return '\\x1b[31m' + str + reset\n  },\n  blue: function(str) {\n    return '\\x1b[34m' + str + reset\n  },\n  magenta: function(str) {\n    return '\\x1b[35m' + str + reset\n  },\n  cyan: function(str) {\n    return '\\x1b[36m' + str + reset\n  },\n  yellow: function(str) {\n    return '\\x1b[33m' + str + reset\n  },\n  black: function(str) {\n    return '\\x1b[30m' + str + reset\n  },\n}\n\nconst tagString = function(tags) {\n  tags = tags.map(tag => {\n    if (!tagset.hasOwnProperty(tag)) {\n      return tag\n    }\n    const c = tagset[tag].color || 'blue'\n    return colors[c](tag)\n  })\n  return tags.join(', ')\n}\n\n//output some helpful stuff to the console\nconst debug = function(doc) {\n  console.log(colors.blue('====='))\n  doc.list.forEach(p => {\n    console.log(colors.blue('  -----'))\n    p.terms().forEach(t => {\n      let tags = Object.keys(t.tags)\n      let text = t.text || '-'\n      if (t.implicit) {\n        text = '[' + t.implicit + ']'\n      }\n      if (typeof module !== undefined) {\n        text = colors.yellow(text)\n      }\n      let word = \"'\" + text + \"'\"\n      word = padEnd(word, 18)\n      let str = colors.blue('  ｜ ') + word + '  - ' + tagString(tags)\n      console.log(str)\n    })\n  })\n  console.log('')\n  return doc\n}\nmodule.exports = debug\n","const debug = require('./_debug')\nconst jsonDefaults = { text: true, trim: true, terms: { text: true, tags: true, whitespace: true, implicit: true } }\n\n/** return the document as text */\nexports.text = function(options = {}) {\n  //are we showing every phrase?\n  let showFull = false\n  if (this.parents().length === 0) {\n    showFull = true\n  }\n  return this.list.reduce((str, p, i) => {\n    const trimPre = !showFull && i === 0\n    const trimPost = !showFull && i === this.list.length - 1\n    return str + p.text(options, trimPre, trimPost)\n  }, '')\n}\n\n/** pull out desired metadata from the document */\nexports.json = function(options = {}) {\n  //support json(3) format\n  if (typeof options === 'number') {\n    return this.list[options].json(jsonDefaults)\n  }\n  options = Object.assign({}, jsonDefaults, options)\n  return this.list.map(p => {\n    return p.json(options)\n  })\n}\n\n/** pretty-print the current document and its tags */\nexports.debug = function() {\n  debug(this)\n  return this\n}\n\n/** some named output formats */\nexports.out = function(method) {\n  if (method === 'text') {\n    return this.text()\n  }\n  if (method === 'normal') {\n    return this.text('normal')\n  }\n  if (method === 'json') {\n    return this.json()\n  }\n  if (method === 'array') {\n    return this.json({ text: true, terms: false }).map(obj => obj.text)\n  }\n  if (method === 'terms') {\n    let list = []\n    this.json({ text: false, terms: { text: true } }).forEach(obj => {\n      let terms = obj.terms.map(t => t.text)\n      terms = terms.filter(t => t)\n      list = list.concat(terms)\n    })\n    return list\n  }\n  if (method === 'debug') {\n    debug(this)\n    return this\n  }\n  return this.text()\n}\n\n//aliases\nexports.data = exports.json\n","const tokenize = require('../../01-tokenizer')\n\n/** add these new terms to the front*/\nexports.prepend = function(str) {\n  if (!str) {\n    return this\n  }\n  //add it to start of every phrase\n  this.list.forEach(p => {\n    //build it\n    let phrase = tokenize.fromText(str, this.world, this.pool())[0] //assume it's one sentence, for now\n    //tag it\n    let tmpDoc = this.buildFrom([phrase])\n    tmpDoc.tagger()\n    // add it to the start\n    p.prepend(phrase, this)\n  })\n  return this\n}\nexports.insertBefore = exports.prepend\n\n/** add these new terms to the end*/\nexports.append = function(str) {\n  if (!str) {\n    return this\n  }\n  //add it to end of every phrase\n  this.list.forEach(p => {\n    //build it\n    let phrase = tokenize.fromText(str, this.world, this.pool())[0] //assume it's one sentence, for now\n    //tag it\n    let tmpDoc = this.buildFrom([phrase])\n    tmpDoc.tagger()\n    // push it onto the end\n    p.append(phrase, this)\n  })\n  return this\n}\nexports.insertAfter = exports.append\nexports.insertAt = exports.append\n\n/** add these new things to the end*/\nexports.concat = function() {\n  let list = this.list.slice(0)\n  //repeat for any number of params\n  for (let i = 0; i < arguments.length; i++) {\n    let arg = arguments[i]\n    //support a fresh string\n    if (typeof arg === 'string') {\n      let arr = tokenize.fromText(arg, this.world)\n      //TODO: phrase.tagger()?\n      list = list.concat(arr)\n    } else if (arg.isA === 'Doc') {\n      list = list.concat(arg.list)\n    } else if (arg.isA === 'Phrase') {\n      list.push(arg)\n    }\n  }\n  return this.buildFrom(list)\n}\n\n// /** turn these matches into one match */\n// exports.flatten = function() {\n//   this.list.forEach( p => {\n\n//   })\n//   return this\n// }\n","const isPunct = /[\\[\\]{}⟨⟩:,،、‒–—―…‹›«»‐\\-;\\/⁄·*\\•^†‡°¡¿※№÷×ºª%‰=‱¶§~|‖¦©℗®℠™¤₳฿]/g\nconst quotes = /['‘’“”\"′″‴]+/g\nconst killUnicode = require('../../Term/clean/unicode')\n/*\n  case: true,\n  whitespace: true,\n  unicode: true,\n  punctuation: true,\n\n  contractions: false,\n\n  adverbs: false,\n  emoji: false,\n  parentheses: false,\n  quotations: false,\n  possessives: false,\n\n  verbs: false,\n  nouns: false,\n*/\n\nconst defaults = {}\n/** common ways to clean-up the document, and reduce noise */\nexports.normalize = function(options = {}) {\n  options = Object.assign({}, defaults, options)\n  let termArr = this.list.map(ts => ts.terms())\n  //whitespace\n  if (options.whitespace) {\n    termArr.forEach((terms, o) => {\n      terms.forEach((t, i) => {\n        t.pre = t.pre.replace(/\\s/g, '')\n        t.post = t.post.replace(/\\s/g, '')\n        //last word? ensure there's a next sentence.\n        if (terms.length - 1 === i && !termArr[o + 1]) {\n          return\n        }\n        t.post += ' '\n      })\n    })\n  }\n\n  let termList = this.termList()\n  //punctuation - keep sentence punctation, quotes, parenths\n  if (options.punctuation) {\n    termList.forEach(t => {\n      t.post = t.post.replace(isPunct, '')\n      t.pre = t.pre.replace(isPunct, '')\n    })\n  }\n  // é -> e\n  if (options.unicode) {\n    termList.forEach(t => {\n      t.text = killUnicode(t.text)\n    })\n  }\n  // '(word)' -> 'word'\n  if (options.parentheses) {\n    this.parentheses().unwrap()\n  }\n  // `isn't` -> 'is not'\n  if (options.contraction || options.contractions) {\n    this.contractions().expand()\n  }\n  // `cory hart's -> cory hart'\n  if (options.possessive || options.possessives) {\n    this.possessives().strip()\n  }\n  // remove \"\" punctuation\n  if (options.quotations || options.quotes) {\n    termList.forEach(t => {\n      t.post = t.post.replace(quotes, '')\n      t.pre = t.pre.replace(quotes, '')\n    })\n  }\n  return this\n}\n","module.exports = Object.assign(\n  {},\n  require('./04-tag'),\n  require('./01-utils'),\n  require('./03-whitespace'),\n  require('./02-case'),\n  require('./05-loops'),\n  require('./06-replace'),\n  require('./07-sort'),\n  require('./08-clone'),\n  require('./09-out'),\n  require('./10-split'),\n  require('./11-normalize')\n)\n","const parseSyntax = require('./syntax')\n\n/** return a new Doc, with this one as a parent */\nexports.match = function(reg) {\n  //parse-up the input expression\n  let regs = parseSyntax(reg)\n  if (regs.length === 0) {\n    return this.buildFrom([])\n  }\n  //try expression on each phrase\n  let matches = this.list.reduce((arr, p) => {\n    return arr.concat(p.match(regs))\n  }, [])\n  return this.buildFrom(matches)\n}\n\n/** return all results except for this */\nexports.not = function(reg) {\n  //parse-up the input expression\n  let regs = parseSyntax(reg)\n  //if it's empty, return them all!\n  if (regs.length === 0) {\n    return this\n  }\n  //try expression on each phrase\n  let matches = this.list.reduce((arr, p) => {\n    return arr.concat(p.not(regs))\n  }, [])\n  return this.buildFrom(matches)\n}\n\n/** return only the first match */\nexports.matchOne = function(reg) {\n  let regs = parseSyntax(reg)\n  for (let i = 0; i < this.list.length; i++) {\n    let match = this.list[i].match(regs)\n    return this.buildFrom(match)\n  }\n  return this.buildFrom([])\n}\n\n/** return a Document with three parts for every match\n * seperate everything before the word, as a new phrase\n */\nexports.split = function(reg) {\n  let regs = parseSyntax(reg)\n  let matches = []\n  this.list.forEach(p => {\n    let allFound = p.match(regs)\n    //no match, keep it going\n    if (allFound.length === 0) {\n      matches.push(p)\n    }\n    allFound.forEach(found => {\n      // do it again, at the end\n      let last = matches.pop() || p\n      let results = last.splitOn(found) //splits into three parts\n      if (results.before) {\n        matches.push(results.before)\n      }\n      if (results.match) {\n        matches.push(results.match)\n      }\n      if (results.after) {\n        matches.push(results.after)\n      }\n    })\n  })\n  return this.buildFrom(matches)\n}\n\n/** return a Document with two parts for every match\n * seperate everything after the word, as a new phrase\n */\nexports.splitAfter = function(reg) {\n  let regs = parseSyntax(reg)\n  let matches = []\n  this.list.forEach(p => {\n    let allFound = p.match(regs)\n    //no match, return whole phrase\n    if (allFound.length === 0) {\n      matches.push(p)\n    }\n    allFound.forEach(found => {\n      // apply it to the end, recursively\n      let last = matches.pop() || p\n      let results = last.splitOn(found) //splits into three parts\n      //merge first and second parts\n      if (results.before && results.match) {\n        results.before.length += results.match.length\n        matches.push(results.before)\n      } else if (results.match) {\n        matches.push(results.match)\n      }\n      // add third part, if it exists\n      if (results.after) {\n        matches.push(results.after)\n      }\n    })\n  })\n  return this.buildFrom(matches)\n}\n\n/** return a Document with two parts for every match */\nexports.splitBefore = function(reg) {\n  let regs = parseSyntax(reg)\n  let matches = []\n  this.list.forEach(p => {\n    let allFound = p.match(regs)\n    //no match, keep it going\n    if (allFound.length === 0) {\n      matches.push(p)\n    }\n    allFound.forEach(found => {\n      // do it again, at the end\n      let last = matches.pop() || p\n      let results = last.splitOn(found) //splits into three parts\n      //support multiple-matches per phrase\n      if (results.before) {\n        matches.push(results.before)\n      }\n      //merge 'match' and 'after'\n      if (results.match && results.after) {\n        results.match.length += results.after.length\n        matches.push(results.match)\n      } else if (results.match) {\n        matches.push(results.match)\n      }\n    })\n  })\n  return this.buildFrom(matches)\n}\n\n/**Return a boolean if this match exists */\nexports.has = function(reg) {\n  let regs = parseSyntax(reg)\n  return this.list.some(p => p.has(regs) === true)\n}\n\n/** return each current phrase, only if it contains this match */\nexports.if = function(reg) {\n  let regs = parseSyntax(reg)\n  let found = this.list.filter(p => p.match(regs).length > 0)\n  return this.buildFrom(found)\n}\n\n/** Filter-out any current phrases that have this match*/\nexports.ifNo = function(reg) {\n  let regs = parseSyntax(reg)\n  let found = this.list.filter(p => p.match(regs).length === 0)\n  return this.buildFrom(found)\n}\n\n/** return only the terms that can be this tag*/\nexports.canBe = function(tag) {\n  if (!tag) {\n    return this\n  }\n  let world = this.world\n  let matches = this.list.reduce((arr, p) => {\n    return arr.concat(p.canBe(tag, world))\n  }, [])\n  return this.buildFrom(matches)\n}\n\n/** return all terms before a match, in each phrase */\nexports.before = function(reg) {\n  let regs = parseSyntax(reg)\n  //only the phrases we care about\n  let phrases = this.if(regs).list\n  let befores = phrases.map(p => {\n    let ids = p.terms().map(t => t.id)\n    //run the search again\n    let m = p.match(regs)[0]\n    let index = ids.indexOf(m.start)\n    //nothing is before a first-term match\n    if (index === 0 || index === -1) {\n      return null\n    }\n    return p.buildFrom(p.start, index)\n  })\n  befores = befores.filter(p => p !== null)\n  return this.buildFrom(befores)\n}\n\n/** return all terms after a match, in each phrase */\nexports.after = function(reg) {\n  let regs = parseSyntax(reg)\n  //only the phrases we care about\n  let phrases = this.if(regs).list\n  let befores = phrases.map(p => {\n    let terms = p.terms()\n    let ids = terms.map(t => t.id)\n    //run the search again\n    let m = p.match(regs)[0]\n    let index = ids.indexOf(m.start)\n    //skip if nothing is after it\n    if (index === -1 || !terms[index + m.length]) {\n      return null\n    }\n    //create the new phrase, after our match.\n    let id = terms[index + m.length].id\n    let len = p.length - index - m.length\n    return p.buildFrom(id, len)\n  })\n  befores = befores.filter(p => p !== null)\n  return this.buildFrom(befores)\n}\n\n//aliases\nexports.splitOn = exports.split\n","//these are selections that don't require their own subclasses/methods\n\n/** split-up results by each term */\nexports.terms = function(n) {\n  let r = this.match('.')\n  if (typeof n === 'number') {\n    r = r.get(n)\n  }\n  return r\n}\nexports.words = exports.terms\n\n/** split-up results into multi-term phrases */\nexports.clauses = function(n) {\n  let r = this.splitAfter('#ClauseEnd')\n  if (typeof n === 'number') {\n    r = r.get(n)\n  }\n  return r\n}\n/** return anything tagged as a hashtag*/\nexports.hashTags = function(n) {\n  let r = this.match('#HashTag').terms()\n  if (typeof n === 'number') {\n    r = r.get(n)\n  }\n  return r\n}\n/** return anything tagged as an organization*/\nexports.organizations = function(n) {\n  let r = this.splitAfter('#Comma')\n  r = r.match('#Organization+')\n  if (typeof n === 'number') {\n    r = r.get(n)\n  }\n  return r\n}\n/** return anything tagged as a phone number */\nexports.phoneNumbers = function(n) {\n  let r = this.splitAfter('#Comma')\n  r = r.match('#PhoneNumber+')\n  if (typeof n === 'number') {\n    r = r.get(n)\n  }\n  return r\n}\n/** return anything tagged as a Place*/\nexports.places = function(n) {\n  let r = this.splitAfter('#Comma')\n  r = r.match('#Place+')\n  if (typeof n === 'number') {\n    r = r.get(n)\n  }\n  return r\n}\n\n/** return anything tagged as a URL*/\nexports.urls = function(n) {\n  let r = this.match('#Url')\n  if (typeof n === 'number') {\n    r = r.get(n)\n  }\n  return r\n}\n/** return anything inside parentheses */\nexports.parentheses = function(n) {\n  let r = this.match('#Parentheses+')\n  //split-up consecutive ones\n  r = r.splitAfter('#EndBracket')\n  if (typeof n === 'number') {\n    r = r.get(n)\n  }\n  return r\n}\n\n/** return any sentences that ask a question */\nexports.questions = function(doc) {\n  return doc.sentences().isQuestion()\n}\n\n/** return any sentences that are not a question or exclamation*/\nexports.statements = function(doc) {\n  return doc.sentences().isStatement()\n}\n/** return any sentences that are not a question */\nexports.exclamations = function(doc) {\n  return doc.sentences().isExclamation()\n}\n","const findMethods = require('./find')\n\nmodule.exports = Object.assign({}, findMethods)\n","/** match a word-sequence, like 'super bowl' in the lexicon */\nconst tryMultiple = function(terms, t, world) {\n  let lex = world.lexicon\n  //try a two-word version\n  let txt = terms[t].clean + ' ' + terms[t + 1].clean\n  if (lex[txt] !== undefined && lex.hasOwnProperty(txt) === true) {\n    terms[t].tag(lex[txt], 'lexicon-two', world)\n    terms[t + 1].tag(lex[txt], 'lexicon-two', world)\n    return 1\n  }\n  //try a three-word version?\n  if (t + 2 < terms.length) {\n    txt += ' ' + terms[t + 2].clean\n    if (lex[txt] !== undefined && lex.hasOwnProperty(txt) === true) {\n      terms[t].tag(lex[txt], 'lexicon-three', world)\n      terms[t + 1].tag(lex[txt], 'lexicon-three', world)\n      terms[t + 2].tag(lex[txt], 'lexicon-three', world)\n      return 2\n    }\n  }\n  return 0\n}\n\n/** look at each word in our list of known-words */\nconst checkLexicon = function(terms, world) {\n  let lex = world.lexicon\n  let hasCompound = world.hasCompound\n  //go through each term, and check the lexicon\n  for (let t = 0; t < terms.length; t += 1) {\n    let str = terms[t].clean\n    //is it the start of a compound word, like 'super bowl'?\n    if (hasCompound[str] === true && t + 1 < terms.length) {\n      let foundWords = tryMultiple(terms, t, world)\n      if (foundWords > 0) {\n        t += foundWords //skip any already-found words\n        continue\n      }\n    }\n    //try one-word lexicon\n    if (lex[str] !== undefined && lex.hasOwnProperty(str) === true) {\n      terms[t].tag(lex[str], 'lexicon', world)\n    }\n  }\n  return terms\n}\nmodule.exports = checkLexicon\n","const apostrophes = /[\\'‘’‛‵′`´]/\n\n//\nconst checkPunctuation = function(terms, i, world) {\n  let term = terms[i]\n\n  //check hyphenation\n  if (term.post.indexOf('-') !== -1 && terms[i + 1] && terms[i + 1].pre === '') {\n    term.tag('Hyphenated', 'has-hyphen', world)\n  }\n\n  //an end-tick (trailing apostrophe) - flanders', or Carlos'\n  if (apostrophes.test(term.post) && !apostrophes.test(term.pre)) {\n    let endChar = term.clean[term.clean.length - 1]\n    //flanders'\n    if (endChar === 's') {\n      term.tag(['Possessive', 'Noun'], 'end-tick', world)\n      return\n    }\n    //chillin'\n    if (endChar === 'n') {\n      term.tag(['Gerund'], 'chillin', world)\n    }\n  }\n  // NASA\n  if (term.isAcronym()) {\n    term.tag('Acronym', 'acronym-step', world)\n    term.tag('Noun', 'acronym-infer', world)\n  }\n}\nmodule.exports = checkPunctuation\n","//these are regexes applied to t.text, instead of t.clean\n// order matters.\nmodule.exports = [\n  //phone numbers\n  [/^[0-9]{3}-[0-9]{4}$/, 'PhoneNumber'], //589-3809\n  [/^[0-9]{3}[ -]?[0-9]{3}-[0-9]{4}$/, 'PhoneNumber'], //632-589-3809\n\n  //money\n  [/^[-+]?[$€¥£][0-9]+(.[0-9]{1,2})?$/, ['Money', 'Value']], //like $5.30\n  [/^[-+]?[$€¥£][0-9]{1,3}(,[0-9]{3})+(.[0-9]{1,2})?$/, ['Money', 'Value']], //like $5,231.30\n\n  //web tags\n  [/^\\w+@\\w+\\.[a-z]{2,3}$/, 'Email'], //not fancy\n  [/^#[a-z0-9_\\u00C0-\\u00FF]{2,}$/, 'HashTag'],\n  [/^@\\w{2,}$/, 'AtMention'],\n  [/^(https?:\\/\\/|www\\.)\\w+\\.[a-z]{2,3}/, 'Url'], //with http/www\n  [/^[\\w\\.\\/]+\\.(com|net|gov|org|ly|edu|info|biz|ru|jp|de|in|uk|br)/, 'Url'], //http://mostpopularwebsites.net/top-level-domain\n\n  //dates/times\n  [/^[012]?[0-9](:[0-5][0-9])(:[0-5][0-9])$/, 'Time'], //4:32:32\n  [/^[012]?[0-9](:[0-5][0-9])?(:[0-5][0-9])? ?(am|pm)$/, 'Time'], //4pm\n  [/^[012]?[0-9](:[0-5][0-9])(:[0-5][0-9])? ?(am|pm)?$/, 'Time'], //4:00pm\n  [/^[PMCE]ST$/, 'Time'], //PST, time zone abbrevs\n  [/^utc ?[+-]?[0-9]+?$/, 'Time'], //UTC 8+\n  [/^[a-z0-9]*? o\\'?clock$/, 'Time'], //3 oclock\n  [/^[0-9]{1,4}-[0-9]{1,2}-[0-9]{1,4}$/, 'Date'], // 03-02-89\n  [/^[0-9]{1,4}\\/[0-9]{1,2}\\/[0-9]{1,4}$/, 'Date'], // 03/02/89\n\n  //names\n  [/^ma?c\\'.*/, 'LastName'], //mc'adams\n  [/^o\\'[drlkn].*/, 'LastName'], //o'douggan\n  [/^ma?cd[aeiou]/, 'LastName'], //macdonell - Last patterns https://en.wikipedia.org/wiki/List_of_family_name_affixes\n\n  //slang things\n  [/^(lol)+[sz]$/, 'Expression'], //lol\n  [/^(un|de|re)\\\\-[a-z\\u00C0-\\u00FF]{2}/, 'Verb'],\n  [/^[\\-\\+]?[0-9]+(\\.[0-9])*$/, ['Cardinal', 'NumericValue']],\n  [/^(over|under)[a-z]{2,}/, 'Adjective'],\n  [/^[0-9]{1,4}\\.[0-9]{1,2}\\.[0-9]{1,4}$/, 'Date'], // 03-02-89\n\n  //numbers\n  [/^[\\-\\+]?[0-9][0-9,]*(\\.[0-9])*$/, ['Cardinal', 'NumericValue']], //like 5\n  [/^[-+]?[0-9]+(.[0-9]+)?$/, ['Cardinal', 'NumericValue']], //like +5.0\n  [/^[0-9\\.]{1,4}(st|nd|rd|th)?[-–][0-9\\.]{1,4}(st|nd|rd|th)?$/, 'NumberRange'], //5-7\n  [/^[-+]?[0-9.,]{1,3}(,[0-9.,]{3})+(.[0-9]+)?$/, 'NiceNumber'], //like 5,999.0\n  [/^.?[0-9]+([0-9,.]+)?%$/, ['Percent', 'Cardinal', 'NumericValue']], //7%  ..\n  [/^[0-9]{1,4}\\/[0-9]{1,4}$/, 'Fraction'], //3/2ths\n  [/^[0-9\\.]{1,2}[-–][0-9]{1,2}$/, ['Value', 'NumberRange']], //7-8\n  [/^[0-9][0-9,\\.]*(st|nd|rd|r?th)$/, ['NumericValue', 'Ordinal']], //like 5th\n  [/[0-9]\\+$/, ['Cardinal', 'NumericValue']], //10+\n  [/^[0-9]+(st|nd|rd|th)$/, 'Ordinal'], //like 5th\n  [/^[0-9]+([a-z]{1,4})$/, 'Value'], //like 5tbsp\n]\n","const regex = require('./regexes')\n\nconst romanNumeral = /^[IVXLCDM]{2,}$/\nconst romanNumValid = /^M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$/ //  https://stackoverflow.com/a/267405/168877\n\n//try each of the ^regexes in our list\nconst checkRegex = function(term, world) {\n  let str = term.text\n  // do them all!\n  for (let r = 0; r < regex.length; r += 1) {\n    if (regex[r][0].test(str) === true) {\n      term.tagSafe(regex[r][1], 'regex #' + r, world)\n      break\n    }\n  }\n  // do some more!\n  //roman numberals - XVII\n  if (term.text.length >= 2 && romanNumeral.test(str) && romanNumValid.test(str)) {\n    term.tag('RomanNumeral', 'xvii', world)\n  }\n}\nmodule.exports = checkRegex\n","//regex suffix patterns and their most common parts of speech,\n//built using wordnet, by spencer kelly.\n//this mapping shrinks-down the uglified build\nconst Adj = 'Adjective'\nconst Inf = 'Infinitive'\nconst Pres = 'PresentTense'\nconst Sing = 'Singular'\nconst Past = 'PastTense'\nconst Adverb = 'Adverb'\nconst Exp = 'Expression'\nconst Actor = 'Actor'\nconst Verb = 'Verb'\nconst Noun = 'Noun'\nconst Last = 'LastName'\n//the order here matters.\n\n//regexes indexed by mandated last-character\nmodule.exports = {\n  a: [\n    [/.[aeiou]na$/, Noun],\n    [/.[oau][wvl]ska$/, Last], //polish (female)\n    [/.[^aeiou]ica$/, Sing],\n    [/^([hyj]a)+$/, Exp], //hahah\n  ],\n  c: [[/.[^aeiou]ic$/, Adj]],\n  d: [\n    [/.[ia]sed$/, Adj],\n    [/.[gt]led$/, Adj],\n    [/.[aeiou][td]ed$/, Past],\n    [/.[aeiou]red$/, Past],\n    [/.[^aeiou]led$/, Past], //rumbled\n    [/[^aeiou]ard$/, Sing],\n    [/[aeiou][^aeiou]id$/, Adj],\n    [/[aeiou]c?ked$/, Past], //hooked\n    [/[^aeiou][aeiou][tvx]ed$/, Past], //boxed\n    [/.[vrl]id$/, Adj],\n  ],\n  e: [\n    [/.[lnr]ize$/, Inf],\n    [/.[^aeiou]ise$/, Inf],\n    [/.[aeiou]te$/, Inf],\n    [/.[^aeiou][ai]ble$/, Adj],\n    [/.[^aeiou]eable$/, Adj],\n    [/.[ts]ive$/, Adj],\n  ],\n  h: [\n    [/.[^aeiouf]ish$/, Adj],\n    [/.v[iy]ch$/, Last], //east-europe\n    [/^ug?h+$/, Exp], //uhh\n    [/^uh[ -]?oh$/, Exp], //uhoh\n  ],\n  i: [\n    [/.[oau][wvl]ski$/, Last], //polish (male)\n  ],\n  k: [\n    [/^(k)+$/, Exp], //kkkk\n  ],\n  l: [[/.[gl]ial$/, Adj], [/.[^aeiou]ful$/, Adj], [/.[nrtumcd]al$/, Adj], [/.[^aeiou][ei]al$/, Adj]],\n  m: [\n    [/.[^aeiou]ium$/, Sing],\n    [/[^aeiou]ism$/, Sing],\n    [/^h*u*m+$/, Exp], //mmmmmmm / ummmm / huuuuuummmmmm\n    [/^\\d+ ?[ap]m$/, 'Date'],\n  ],\n  n: [[/.[lsrnpb]ian$/, Adj], [/[^aeiou]ician$/, Actor]],\n  o: [\n    [/^no+$/, Exp], //noooo\n    [/^(yo)+$/, Exp], //yoyo\n    [/^woo+[pt]?$/, Exp], //woo\n  ],\n  r: [[/.[ilk]er$/, 'Comparative'], [/[aeiou][pns]er$/, Sing], [/[^i]fer$/, Inf], [/.[^aeiou][ao]pher$/, Actor]],\n  t: [[/.[di]est$/, 'Superlative'], [/.[icldtgrv]ent$/, Adj], [/[aeiou].*ist$/, Adj], [/^[a-z]et$/, Verb]],\n  s: [\n    [/.[rln]ates$/, Pres],\n    [/.[^z]ens$/, Verb],\n    [/.[lstrn]us$/, Sing],\n    [/[aeiou][^aeiou]is$/, Sing],\n    [/[a-z]\\'s$/, Noun],\n    [/^yes+$/, Exp], //yessss\n  ],\n  v: [\n    [/.[^aeiou][ai][kln]ov$/, Last], //east-europe\n  ],\n  y: [\n    [/.[cts]hy$/, Adj],\n    [/.[st]ty$/, Adj],\n    [/.[gk]y$/, Adj],\n    [/.[tnl]ary$/, Adj],\n    [/.[oe]ry$/, Sing],\n    [/[rdntkbhs]ly$/, Adverb],\n    [/...lly$/, Adverb],\n    [/[bszmp]{2}y$/, Adj],\n    [/.(gg|bb|zz)ly$/, Adj],\n    [/.[aeiou]my$/, Adj],\n    [/[ea]{2}zy$/, Adj],\n    [/.[^aeiou]ity$/, Sing],\n  ],\n}\n","//just a foolish lookup of known suffixes\nconst Adj = 'Adjective'\nconst Inf = 'Infinitive'\nconst Pres = 'PresentTense'\nconst Sing = 'Singular'\nconst Past = 'PastTense'\nconst Avb = 'Adverb'\nconst Plrl = 'Plural'\nconst Actor = 'Actor'\nconst Vb = 'Verb'\nconst Noun = 'Noun'\nconst Last = 'LastName'\nconst Modal = 'Modal'\n\n// find any issues - https://observablehq.com/@spencermountain/suffix-word-lookup\nmodule.exports = [\n  null, //0\n  null, //1\n  {\n    //2-letter\n    ea: Sing,\n    ia: Noun,\n    ic: Adj,\n    ly: Avb,\n    \"'n\": Vb,\n    \"'t\": Vb,\n  },\n  {\n    //3-letter\n    que: Adj,\n    lar: Adj,\n    ffy: Adj,\n    nny: Adj,\n    rmy: Adj,\n    azy: Adj,\n    oid: Adj,\n    mum: Adj,\n    ous: Adj,\n    end: Vb,\n    sis: Sing,\n    rol: Sing,\n    ize: Inf,\n    ify: Inf,\n    zes: Pres,\n    nes: Pres,\n    ing: 'Gerund', //likely to be converted to Adj after lexicon pass\n    ' so': Avb,\n    \"'ll\": Modal,\n    \"'re\": 'Copula',\n  },\n  {\n    //4-letter\n    teen: 'Value',\n    tors: Noun,\n    amed: Past,\n    ched: Past,\n    ends: Vb,\n    oses: Pres,\n    fies: Pres,\n    ects: Pres,\n    nded: Past,\n    cede: Inf,\n    tage: Inf,\n    gate: Inf,\n    vice: Sing,\n    tion: Sing,\n    cted: Past,\n    ette: Sing,\n    some: Adj,\n    llen: Adj,\n    ried: Adj,\n    gone: Adj,\n    made: Adj,\n    fore: Avb,\n    less: Avb,\n    ices: Plrl,\n    ions: Plrl,\n    ints: Plrl,\n    aped: Past,\n    lked: Past,\n    ould: Modal,\n    tive: Actor,\n    sson: Last, //swedish male\n    czyk: Last, //polish (male)\n    chuk: Last, //east-europe\n    enko: Last, //east-europe\n    akis: Last, //greek\n    nsen: Last, //norway\n  },\n  {\n    //5-letter\n    fully: Avb,\n    where: Avb,\n    wards: Avb,\n    urned: Past,\n    tized: Past,\n    eased: Past,\n    ances: Plrl,\n    tures: Plrl,\n    ports: Plrl,\n    ettes: Plrl,\n    ities: Plrl,\n    rough: Adj,\n    bound: Adj,\n    tieth: 'Ordinal',\n    ishes: Pres,\n    tches: Pres,\n    nssen: Last, //norway\n    marek: Last, //polish (male)\n  },\n  {\n    //6-letter\n    keeper: Actor,\n    logist: Actor,\n    auskas: Last, //lithuania\n    teenth: 'Value',\n  },\n  {\n    //7-letter\n    sdottir: Last, //swedish female\n    opoulos: Last, //greek\n  },\n]\n","const regexes = require('./suffixes/regex')\nconst suffixList = require('./suffixes/suffixList')\n\nconst suffixRegexes = function(term, world) {\n  let str = term.clean\n  let char = str[str.length - 1]\n  if (regexes.hasOwnProperty(char) === true) {\n    let regs = regexes[char]\n    for (let r = 0; r < regs.length; r += 1) {\n      if (regs[r][0].test(str) === true) {\n        term.tagSafe(regs[r][1], `endsWith ${char} #${r}`, world)\n        break\n      }\n    }\n  }\n}\n\n//sweep-through all suffixes\nconst knownSuffixes = function(term, world) {\n  const len = term.clean.length\n  let max = 7\n  if (len <= max) {\n    max = len - 1\n  }\n  for (let i = max; i > 1; i -= 1) {\n    let str = term.clean.substr(len - i, len)\n    if (suffixList[str.length].hasOwnProperty(str) === true) {\n      let tag = suffixList[str.length][str]\n      term.tagSafe(tag, 'suffix -' + str, world)\n      break\n    }\n  }\n}\n\n//all-the-way-down!\nconst checkRegex = function(term, world) {\n  suffixRegexes(term, world)\n  knownSuffixes(term, world)\n}\nmodule.exports = checkRegex\n","//yep,\n//https://github.com/mathiasbynens/emoji-regex/blob/master/index.js\nmodule.exports = /(?:0\\u20E3\\n1\\u20E3|2\\u20E3|3\\u20E3|4\\u20E3|5\\u20E3|6\\u20E3|7\\u20E3|8\\u20E3|9\\u20E3|#\\u20E3|\\*\\u20E3|\\uD83C(?:\\uDDE6\\uD83C(?:\\uDDE8|\\uDDE9|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDEE|\\uDDF1|\\uDDF2|\\uDDF4|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA|\\uDDFC|\\uDDFD|\\uDDFF)|\\uDDE7\\uD83C(?:\\uDDE6|\\uDDE7|\\uDDE9|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDED|\\uDDEE|\\uDDEF|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFB|\\uDDFC|\\uDDFE|\\uDDFF)|\\uDDE8\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDE9|\\uDDEB|\\uDDEC|\\uDDED|\\uDDEE|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF5|\\uDDF7|\\uDDFA|\\uDDFB|\\uDDFC|\\uDDFD|\\uDDFE|\\uDDFF)|\\uDDE9\\uD83C(?:\\uDDEA|\\uDDEC|\\uDDEF|\\uDDF0|\\uDDF2|\\uDDF4|\\uDDFF)|\\uDDEA\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDEA|\\uDDEC|\\uDDED|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA)|\\uDDEB\\uD83C(?:\\uDDEE|\\uDDEF|\\uDDF0|\\uDDF2|\\uDDF4|\\uDDF7)|\\uDDEC\\uD83C(?:\\uDDE6|\\uDDE7|\\uDDE9|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDED|\\uDDEE|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF5|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA|\\uDDFC|\\uDDFE)|\\uDDED\\uD83C(?:\\uDDF0|\\uDDF2|\\uDDF3|\\uDDF7|\\uDDF9|\\uDDFA)|\\uDDEE\\uD83C(?:\\uDDE8|\\uDDE9|\\uDDEA|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9)|\\uDDEF\\uD83C(?:\\uDDEA|\\uDDF2|\\uDDF4|\\uDDF5)|\\uDDF0\\uD83C(?:\\uDDEA|\\uDDEC|\\uDDED|\\uDDEE|\\uDDF2|\\uDDF3|\\uDDF5|\\uDDF7|\\uDDFC|\\uDDFE|\\uDDFF)|\\uDDF1\\uD83C(?:\\uDDE6|\\uDDE7|\\uDDE8|\\uDDEE|\\uDDF0|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA|\\uDDFB|\\uDDFE)|\\uDDF2\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDE9|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDED|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF5|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA|\\uDDFB|\\uDDFC|\\uDDFD|\\uDDFE|\\uDDFF)|\\uDDF3\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDEE|\\uDDF1|\\uDDF4|\\uDDF5|\\uDDF7|\\uDDFA|\\uDDFF)|\\uDDF4\\uD83C\\uDDF2|\\uDDF5\\uD83C(?:\\uDDE6|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDED|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFC|\\uDDFE)|\\uDDF6\\uD83C\\uDDE6|\\uDDF7\\uD83C(?:\\uDDEA|\\uDDF4|\\uDDF8|\\uDDFA|\\uDDFC)|\\uDDF8\\uD83C(?:\\uDDE6|\\uDDE7|\\uDDE8|\\uDDE9|\\uDDEA|\\uDDEC|\\uDDED|\\uDDEE|\\uDDEF|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFB|\\uDDFD|\\uDDFE|\\uDDFF)|\\uDDF9\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDE9|\\uDDEB|\\uDDEC|\\uDDED|\\uDDEF|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF7|\\uDDF9|\\uDDFB|\\uDDFC|\\uDDFF)|\\uDDFA\\uD83C(?:\\uDDE6|\\uDDEC|\\uDDF2|\\uDDF8|\\uDDFE|\\uDDFF)|\\uDDFB\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDEA|\\uDDEC|\\uDDEE|\\uDDF3|\\uDDFA)|\\uDDFC\\uD83C(?:\\uDDEB|\\uDDF8)|\\uDDFD\\uD83C\\uDDF0|\\uDDFE\\uD83C(?:\\uDDEA|\\uDDF9)|\\uDDFF\\uD83C(?:\\uDDE6|\\uDDF2|\\uDDFC)))|[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267F\\u2692-\\u2694\\u2696\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED0\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3]|\\uD83E[\\uDD10-\\uDD18\\uDD80-\\uDD84\\uDDC0]/g\n","//just some of the most common emoticons\n//faster than\n//http://stackoverflow.com/questions/28077049/regex-matching-emoticons\nmodule.exports = {\n  ':(': true,\n  ':)': true,\n  ':P': true,\n  ':p': true,\n  ':O': true,\n  ':3': true,\n  ':|': true,\n  ':/': true,\n  ':\\\\': true,\n  ':$': true,\n  ':*': true,\n  ':@': true,\n  ':-(': true,\n  ':-)': true,\n  ':-P': true,\n  ':-p': true,\n  ':-O': true,\n  ':-3': true,\n  ':-|': true,\n  ':-/': true,\n  ':-\\\\': true,\n  ':-$': true,\n  ':-*': true,\n  ':-@': true,\n  ':^(': true,\n  ':^)': true,\n  ':^P': true,\n  ':^p': true,\n  ':^O': true,\n  ':^3': true,\n  ':^|': true,\n  ':^/': true,\n  ':^\\\\': true,\n  ':^$': true,\n  ':^*': true,\n  ':^@': true,\n  '):': true,\n  '(:': true,\n  '$:': true,\n  '*:': true,\n  ')-:': true,\n  '(-:': true,\n  '$-:': true,\n  '*-:': true,\n  ')^:': true,\n  '(^:': true,\n  '$^:': true,\n  '*^:': true,\n  '<3': true,\n  '</3': true,\n  '<\\\\3': true,\n}\n","const emojiReg = require('./emoji/regex')\nconst emoticon = require('./emoji/list')\n//for us, there's three types -\n// * ;) - emoticons\n// * 🌵 - unicode emoji\n// * :smiling_face: - asci-represented emoji\n\n//test for forms like ':woman_tone2:‍:ear_of_rice:'\n//https://github.com/Kikobeats/emojis-keywords/blob/master/index.js\nconst isCommaEmoji = t => {\n  if (t.raw.charAt(0) === ':') {\n    //end comma can be last or second-last ':haircut_tone3:‍♀️'\n    if (t.raw.match(/:.?$/) === null) {\n      return false\n    }\n    //ensure no spaces\n    if (t.raw.match(' ')) {\n      return false\n    }\n    //reasonably sized\n    if (t.raw.length > 35) {\n      return false\n    }\n    return true\n  }\n  return false\n}\n\n//check against emoticon whitelist\nconst isEmoticon = t => {\n  let str = t.raw.replace(/^[:;]/, ':') //normalize the 'eyes'\n  return emoticon.hasOwnProperty(str)\n}\n\n//these are somewhat popular.\nconst tagEmoji = (term, world) => {\n  //test for :keyword: emojis\n  if (isCommaEmoji(term) === true) {\n    term.tag('Emoji', 'comma-emoji', world)\n    term.text = term.raw\n    term.pre = term.pre.replace(':', '')\n    term.post = term.post.replace(':', '')\n  }\n  //test for unicode emojis\n  if (term.text.match(emojiReg)) {\n    term.tag('Emoji', 'unicode-emoji', world)\n    term.text = term.raw\n  }\n  //test for emoticon ':)' emojis\n  if (isEmoticon(term) === true) {\n    term.tag('Emoji', 'emoticon-emoji', world)\n    term.text = term.raw\n  }\n}\nmodule.exports = tagEmoji\n","const steps = {\n  lexicon: require('./01-lexicon'),\n  punctuation: require('./02-punctuation'),\n  regex: require('./03-regex'),\n  suffix: require('./04-suffixes'),\n  emoji: require('./05-emoji'),\n}\n\n//'lookups' look at a term by itself\nconst lookups = function(doc) {\n  let terms = doc.termList()\n  let world = doc.world\n  //our list of known-words\n  steps.lexicon(terms, world)\n\n  //try these other methods\n  for (let i = 0; i < terms.length; i += 1) {\n    let term = terms[i]\n    //or maybe some helpful punctuation\n    steps.punctuation(terms, i, world)\n    //mostly prefix checks\n    steps.regex(term, world)\n    //maybe we can guess\n    steps.suffix(term, world)\n    // :c\n    steps.emoji(term, world)\n  }\n  return doc\n}\nmodule.exports = lookups\n","//markov-like stats about co-occurance, for hints about unknown terms\n//basically, a little-bit better than the noun-fallback\n//just top n-grams from nlp tags, generated from nlp-corpus\n\n//after this word, here's what happens usually\nlet afterThisWord = {\n  i: 'Verb', //44% //i walk..\n  first: 'Noun', //50% //first principles..\n  it: 'Verb', //33%\n  there: 'Verb', //35%\n  not: 'Verb', //33%\n  because: 'Noun', //31%\n  if: 'Noun', //32%\n  but: 'Noun', //26%\n  who: 'Verb', //40%\n  this: 'Noun', //37%\n  his: 'Noun', //48%\n  when: 'Noun', //33%\n  you: 'Verb', //35%\n  very: 'Adjective', // 39%\n  old: 'Noun', //51%\n  never: 'Verb', //42%\n  before: 'Noun', //28%\n}\n\n//in advance of this word, this is what happens usually\nlet beforeThisWord = {\n  there: 'Verb', //23% // be there\n  me: 'Verb', //31% //see me\n  man: 'Adjective', // 80% //quiet man\n  only: 'Verb', //27% //sees only\n  him: 'Verb', //32% //show him\n  were: 'Noun', //48% //we were\n  took: 'Noun', //38% //he took\n  himself: 'Verb', //31% //see himself\n  went: 'Noun', //43% //he went\n  who: 'Noun', //47% //person who\n  jr: 'Person',\n}\n\n//following this POS, this is likely\nlet afterThisPOS = {\n  Adjective: 'Noun', //36% //blue dress\n  Possessive: 'Noun', //41% //his song\n  Determiner: 'Noun', //47%\n  Adverb: 'Verb', //20%\n  Pronoun: 'Verb', //40%\n  Value: 'Noun', //47%\n  Ordinal: 'Noun', //53%\n  Modal: 'Verb', //35%\n  Superlative: 'Noun', //43%\n  Demonym: 'Noun', //38%\n  Honorific: 'Person', //\n}\n\n//in advance of this POS, this is likely\nlet beforeThisPOS = {\n  Copula: 'Noun', //44% //spencer is\n  PastTense: 'Noun', //33% //spencer walked\n  Conjunction: 'Noun', //36%\n  Modal: 'Noun', //38%\n  PluperfectTense: 'Noun', //40%\n  PerfectTense: 'Verb', //32%\n}\nmodule.exports = {\n  beforeThisWord: beforeThisWord,\n  afterThisWord: afterThisWord,\n\n  beforeThisPos: beforeThisPOS,\n  afterThisPos: afterThisPOS,\n}\n","const markov = require('./data/markov')\nconst afterKeys = Object.keys(markov.afterThisPos)\nconst beforeKeys = Object.keys(markov.beforeThisPos)\n\nconst checkNeighbours = function(terms, world) {\n  for (let i = 0; i < terms.length; i += 1) {\n    let term = terms[i]\n    //do we still need a tag?\n    if (term.isKnown() === true) {\n      continue\n    }\n    //ok, this term needs a tag.\n    //look at previous word for clues..\n    let lastTerm = terms[i - 1]\n    if (lastTerm) {\n      // 'foobar term'\n      if (markov.afterThisWord.hasOwnProperty(lastTerm.clean) === true) {\n        let tag = markov.afterThisWord[lastTerm.clean]\n        term.tag(tag, 'after-' + lastTerm.clean, world)\n        continue\n      }\n      // 'Tag term'\n      // (look at previous POS tags for clues..)\n      let foundTag = afterKeys.find(tag => lastTerm.tags[tag])\n      if (foundTag !== undefined) {\n        let tag = markov.afterThisPos[foundTag]\n        term.tag(tag, 'after-' + foundTag, world)\n        continue\n      }\n    }\n\n    //look at next word for clues..\n    let nextTerm = terms[i + 1]\n    if (nextTerm) {\n      // 'term foobar'\n      if (markov.beforeThisWord.hasOwnProperty(nextTerm.clean) === true) {\n        let tag = markov.beforeThisWord[nextTerm.clean]\n        term.tag(tag, 'before-' + nextTerm.clean, world)\n        continue\n      }\n      // 'term Tag'\n      // (look at next POS tags for clues..)\n      let foundTag = beforeKeys.find(tag => nextTerm.tags[tag])\n      if (foundTag !== undefined) {\n        let tag = markov.beforeThisPos[foundTag]\n        term.tag(tag, 'before-' + foundTag, world)\n        continue\n      }\n    }\n  }\n}\nmodule.exports = checkNeighbours\n","const titleCase = /^[A-Z][a-z'\\u00C0-\\u00FF]/\nconst hasNumber = /[0-9]/\n\n/** look for any grammar signals based on capital/lowercase */\nconst checkCase = function(terms, world) {\n  terms.forEach((term, i) => {\n    //is it a titlecased word?\n    if (titleCase.test(term.text) === true && hasNumber.test(term.text) === false) {\n      // tag it as titlecase, if possible\n      if (i !== 0) {\n        term.tag('TitleCase', 'case', world)\n      } else if (term.tags.Person || term.tags.Organization || term.tags.Place) {\n        term.tag('TitleCase', 'case-person', world)\n      }\n      // can we call it a noun?\n      if (i !== 0) {\n        //sure!\n        term.tag('ProperNoun', 'case-noun', world)\n      }\n    }\n  })\n}\nmodule.exports = checkCase\n","//these tags don't have plurals\nconst noPlurals = ['Uncountable', 'Pronoun', 'Place', 'Value', 'Person', 'Month', 'WeekDay', 'RelativeDay', 'Holiday']\n\nconst notPlural = [/ss$/, /sis$/, /[uo]s$/]\nconst notSingular = [/i$/, /ae$/, /men$/, /tia$/]\n\n/** turn nouns into singular/plural */\nconst checkPlural = function(t, world) {\n  if (t.tags.Noun && !t.tags.Acronym) {\n    let str = t.clean\n    //skip existing tags, fast\n    if (t.tags.Singular || t.tags.Plural) {\n      return\n    }\n    //too short\n    if (str.length <= 2) {\n      return\n    }\n    //is it impossible to be plural?\n    if (noPlurals.find(tag => t.tags[tag])) {\n      return\n    }\n    // finally, fallback 'looks check plural' rules..\n    if (/s$/.test(str) === true) {\n      //avoid anything too sketchy to be plural\n      if (notPlural.find(reg => reg.test(str))) {\n        return\n      }\n      t.tag('Plural', 'plural-fallback', world)\n      return\n    }\n    //avoid anything too sketchy to be singular\n    if (notSingular.find(reg => reg.test(str))) {\n      return\n    }\n    t.tag('Singular', 'singular-fallback', world)\n  }\n}\nmodule.exports = checkPlural\n","const hasPrefix = /^(re|un)-?[a-z\\u00C0-\\u00FF]/\nconst prefix = /^(re|un)-?/\n\n/** check 'rewatch' in lexicon as 'watch' */\nconst checkPrefix = function(terms, world) {\n  let lex = world.lexicon\n  terms.forEach(term => {\n    // skip if we have a good tag already\n    if (term.isKnown() === true) {\n      return\n    }\n    //does it start with 'un|re'\n    if (hasPrefix.test(term.clean) === true) {\n      // look for the root word in the lexicon:\n      let stem = term.clean.replace(prefix, '')\n      if (lex[stem] !== undefined && lex.hasOwnProperty(stem) === true) {\n        term.tag(lex[stem], 'stem-' + stem, world)\n      }\n    }\n  })\n}\nmodule.exports = checkPrefix\n","const step = {\n  neighbours: require('./01-neighbours'),\n  case: require('./02-case'),\n  plural: require('./04-plurals'),\n  stem: require('./03-stem'),\n}\n//\nconst fallbacks = function(doc) {\n  let terms = doc.termList()\n  let world = doc.world\n\n  // if it's empty, consult it's neighbours, first\n  step.neighbours(terms, world)\n\n  // is there a case-sensitive clue?\n  step.case(terms, world)\n\n  // check 'rewatch' as 'watch'\n  step.stem(terms, world)\n\n  // ... fallback to a noun!\n  terms.forEach(t => {\n    if (t.isKnown() === false) {\n      t.tag('Noun', 'noun-fallback', doc.world)\n    }\n  })\n\n  //are the nouns singular or plural?\n  terms.forEach(t => {\n    step.plural(t, doc.world)\n  })\n\n  return doc\n}\nmodule.exports = fallbacks\n","const hasNegative = /n't$/\n\nconst irregulars = {\n  \"won't\": ['will', 'not'],\n  wont: ['will', 'not'],\n  \"can't\": ['can', 'not'],\n  cant: ['can', 'not'],\n  cannot: ['can', 'not'],\n  \"shan't\": ['should', 'not'],\n  dont: ['do', 'not'],\n  dun: ['do', 'not'],\n  // \"ain't\" is ambiguous for is/was\n}\n\nconst checkNegative = function(term) {\n  //check named-ones\n  if (irregulars.hasOwnProperty(term.clean) === true) {\n    return irregulars[term.clean]\n  }\n  //try it normally\n  if (hasNegative.test(term.clean) === true) {\n    let main = term.clean.replace(hasNegative, '')\n    return [main, 'not']\n  }\n  return null\n}\nmodule.exports = checkNegative\n","const contraction = /([a-z\\u00C0-\\u00FF]+)'([a-z]{1,2})$/i\n\n//these ones don't seem to be ambiguous\nconst easy = {\n  ll: 'will',\n  ve: 'have',\n  re: 'are',\n  m: 'am',\n  \"n't\": 'not',\n}\n//\nconst checkApostrophe = function(term) {\n  let parts = term.text.match(contraction)\n  if (parts === null) {\n    return null\n  }\n  if (easy.hasOwnProperty(parts[2])) {\n    return [parts[1], easy[parts[2]]]\n  }\n  return null\n}\nmodule.exports = checkApostrophe\n","const irregulars = {\n  wanna: ['want', 'to'],\n  gonna: ['going', 'to'],\n  im: ['i', 'am'],\n  alot: ['a', 'lot'],\n  ive: ['i', 'have'],\n  imma: ['I', 'will'],\n\n  \"where'd\": ['where', 'did'],\n  whered: ['where', 'did'],\n  \"when'd\": ['when', 'did'],\n  whend: ['when', 'did'],\n  \"how'd\": ['how', 'did'],\n  howd: ['how', 'did'],\n  \"what'd\": ['what', 'did'],\n  whatd: ['what', 'did'],\n  \"let's\": ['let', 'us'],\n\n  //multiple word contractions\n  dunno: ['do', 'not', 'know'],\n  brb: ['be', 'right', 'back'],\n  gtg: ['got', 'to', 'go'],\n  irl: ['in', 'real', 'life'],\n  tbh: ['to', 'be', 'honest'],\n  imo: ['in', 'my', 'opinion'],\n  til: ['today', 'i', 'learned'],\n  rn: ['right', 'now'],\n  twas: ['it', 'was'],\n  '@': ['at'],\n}\n\n// either 'is not' or 'are not'\nconst doAint = function(term, phrase) {\n  let terms = phrase.terms()\n  let index = terms.indexOf(term)\n  let before = terms.slice(0, index)\n  //look for the preceding noun\n  let noun = before.find(t => {\n    return t.tags.Noun\n  })\n  if (noun && noun.tags.Plural) {\n    return ['are', 'not']\n  }\n  return ['is', 'not']\n}\n\n//\nconst checkIrregulars = function(term, phrase) {\n  //this word needs it's own logic:\n  if (term.clean === `ain't` || term.clean === 'aint') {\n    return doAint(term, phrase)\n  }\n  //check white-list\n  if (irregulars.hasOwnProperty(term.clean)) {\n    return irregulars[term.clean]\n  }\n  return null\n}\nmodule.exports = checkIrregulars\n","const hasApostropheS = /([a-z\\u00C0-\\u00FF]+)'s$/i\n\nconst blacklist = {\n  that: true,\n  there: true,\n}\nconst isPossessive = (term, pool) => {\n  // if we already know it\n  if (term.tags.Possessive) {\n    return true\n  }\n  //a pronoun can't be possessive - \"he's house\"\n  if (term.tags.Pronoun || term.tags.QuestionWord) {\n    return false\n  }\n  if (blacklist.hasOwnProperty(term.clean)) {\n    return false\n  }\n  //if end of sentence, it is possessive - \"was spencer's\"\n  let nextTerm = pool.get(term.next)\n  if (!nextTerm) {\n    return true\n  }\n  //a gerund suggests 'is walking'\n  if (nextTerm.tags.Verb) {\n    //fix 'jamie's bite'\n    if (nextTerm.tags.Infinitive) {\n      return true\n    }\n    return false\n  }\n\n  //spencer's house\n  if (nextTerm.tags.Noun) {\n    return true\n  }\n  //rocket's red glare\n  let twoTerm = pool.get(nextTerm.next)\n  if (twoTerm && twoTerm.tags.Noun) {\n    return true\n  }\n  //othwerwise, an adjective suggests 'is good'\n  if (nextTerm.tags.Adjective || nextTerm.tags.Adverb || nextTerm.tags.Verb) {\n    return false\n  }\n  return false\n}\n\nconst isHas = (term, phrase) => {\n  let terms = phrase.terms()\n  let index = terms.indexOf(term)\n  let after = terms.slice(index + 1, index + 3)\n  //look for a past-tense verb\n  return after.find(t => {\n    return t.tags.PastTense\n  })\n}\n\nconst checkPossessive = function(term, phrase, world) {\n  //the rest of 's\n  let found = term.text.match(hasApostropheS)\n  if (found !== null) {\n    //spencer's thing vs spencer-is\n    if (isPossessive(term, phrase.pool) === true) {\n      term.tag('#Possessive', 'isPossessive', world)\n      return null\n    }\n    //'spencer is'\n    if (found !== null) {\n      if (isHas(term, phrase)) {\n        return [found[1], 'has']\n      }\n      return [found[1], 'is']\n    }\n  }\n  return null\n}\nmodule.exports = checkPossessive\n","const hasPerfect = /[a-z\\u00C0-\\u00FF]'d$/\n\n/** split `i'd` into 'i had', or 'i would' */\nconst checkPerfect = function(term, phrase) {\n  if (hasPerfect.test(term.clean)) {\n    let root = term.clean.replace(/'d$/, '')\n    //look at the next few words\n    let terms = phrase.terms()\n    let index = terms.indexOf(term)\n    let after = terms.slice(index + 1, index + 4)\n    //is it before a past-tense verb? - 'i'd walked'\n    for (let i = 0; i < after.length; i++) {\n      let t = after[i]\n      if (t.tags.Verb) {\n        if (t.tags.PastTense) {\n          return [root, 'had']\n        }\n        return [root, 'would']\n      }\n    }\n    //otherwise, 'i'd walk'\n    return [root, 'would']\n  }\n  return null\n}\nmodule.exports = checkPerfect\n","const checkNegative = require('./01-negative')\nconst checkApostrophe = require('./02-simple')\nconst checkIrregulars = require('./03-irregulars')\nconst checkPossessive = require('./04-possessive')\nconst checkPerfect = require('./05-perfectTense')\nconst tokenize = require('../../01-tokenizer')\nconst checkLexicon = require('../01-init/01-lexicon')\n\nconst createPhrase = function(found, doc) {\n  //create phrase from ['would', 'not']\n  let phrase = tokenize.fromText(found.join(' '), doc.world, doc.pool())[0]\n  //tag it\n  let terms = phrase.terms()\n  checkLexicon(terms, doc.world)\n  //make these terms implicit\n  terms.forEach((t, i) => {\n    t.implicit = t.text\n    t.text = ''\n    t.clean = ''\n    // remove whitespace for implicit terms\n    t.pre = ''\n    t.post = ''\n  })\n  return phrase\n}\n\nconst contractions = function(doc) {\n  let world = doc.world\n  doc.list.forEach(p => {\n    let terms = p.terms()\n    for (let i = 0; i < terms.length; i += 1) {\n      let term = terms[i]\n      let found = checkNegative(term)\n      found = found || checkApostrophe(term)\n      found = found || checkIrregulars(term, p)\n      found = found || checkPossessive(term, p, world)\n      found = found || checkPerfect(term, p)\n      //add them in\n      if (found !== null) {\n        let newPhrase = createPhrase(found, doc)\n        //set text as contraction\n        let firstTerm = newPhrase.terms(0)\n        firstTerm.text = term.text\n        //grab sub-phrase to remove\n        let match = p.buildFrom(term.id, 1, doc.pool())\n        match.replace(newPhrase, doc)\n      }\n    }\n  })\n  return doc\n}\nmodule.exports = contractions\n","//nouns that also signal the title of an unknown organization\n//todo remove/normalize plural forms\nconst orgWords = [\n  'academy',\n  'administration',\n  'agence',\n  'agences',\n  'agencies',\n  'agency',\n  'airlines',\n  'airways',\n  'army',\n  'assoc',\n  'associates',\n  'association',\n  'assurance',\n  'authority',\n  'autorite',\n  'aviation',\n  'bank',\n  'banque',\n  'board',\n  'boys',\n  'brands',\n  'brewery',\n  'brotherhood',\n  'brothers',\n  'building society',\n  'bureau',\n  'cafe',\n  'caisse',\n  'capital',\n  'care',\n  'cathedral',\n  'center',\n  'central bank',\n  'centre',\n  'chemicals',\n  'choir',\n  'chronicle',\n  'church',\n  'circus',\n  'clinic',\n  'clinique',\n  'club',\n  'co',\n  'coalition',\n  'coffee',\n  'collective',\n  'college',\n  'commission',\n  'committee',\n  'communications',\n  'community',\n  'company',\n  'comprehensive',\n  'computers',\n  'confederation',\n  'conference',\n  'conseil',\n  'consulting',\n  'containers',\n  'corporation',\n  'corps',\n  'corp',\n  'council',\n  'crew',\n  'daily news',\n  'data',\n  'departement',\n  'department',\n  'department store',\n  'departments',\n  'design',\n  'development',\n  'directorate',\n  'division',\n  'drilling',\n  'education',\n  'eglise',\n  'electric',\n  'electricity',\n  'energy',\n  'ensemble',\n  'enterprise',\n  'enterprises',\n  'entertainment',\n  'estate',\n  'etat',\n  'evening news',\n  'faculty',\n  'federation',\n  'financial',\n  'fm',\n  'foundation',\n  'fund',\n  'gas',\n  'gazette',\n  'girls',\n  'government',\n  'group',\n  'guild',\n  'health authority',\n  'herald',\n  'holdings',\n  'hospital',\n  'hotel',\n  'hotels',\n  'inc',\n  'industries',\n  'institut',\n  'institute',\n  'institute of technology',\n  'institutes',\n  'insurance',\n  'international',\n  'interstate',\n  'investment',\n  'investments',\n  'investors',\n  'journal',\n  'laboratory',\n  'labs',\n  // 'law',\n  'liberation army',\n  'limited',\n  'local authority',\n  'local health authority',\n  'machines',\n  'magazine',\n  'management',\n  'marine',\n  'marketing',\n  'markets',\n  'media',\n  'memorial',\n  'mercantile exchange',\n  'ministere',\n  'ministry',\n  'military',\n  'mobile',\n  'motor',\n  'motors',\n  'musee',\n  'museum',\n  // 'network',\n  'news',\n  'news service',\n  'observatory',\n  'office',\n  'oil',\n  'optical',\n  'orchestra',\n  'organization',\n  'partners',\n  'partnership',\n  // 'party',\n  \"people's party\",\n  'petrol',\n  'petroleum',\n  'pharmacare',\n  'pharmaceutical',\n  'pharmaceuticals',\n  'pizza',\n  'plc',\n  'police',\n  'polytechnic',\n  'post',\n  'power',\n  'press',\n  'productions',\n  'quartet',\n  'radio',\n  'regional authority',\n  'regional health authority',\n  'reserve',\n  'resources',\n  'restaurant',\n  'restaurants',\n  'savings',\n  'school',\n  'securities',\n  'service',\n  'services',\n  'social club',\n  'societe',\n  'society',\n  'sons',\n  'standard',\n  'state police',\n  'state university',\n  'stock exchange',\n  'subcommittee',\n  'syndicat',\n  'systems',\n  'telecommunications',\n  'telegraph',\n  'television',\n  'times',\n  'tribunal',\n  'tv',\n  'union',\n  'university',\n  'utilities',\n  'workers',\n]\n\nmodule.exports = orgWords.reduce(function(h, str) {\n  h[str] = 'Noun'\n  return h\n}, {})\n","let orgWords = require('./data/orgWords')\n\n//could this word be an organization\nconst maybeOrg = function(t) {\n  //must be a noun\n  if (!t.tags.Noun) {\n    return false\n  }\n  //can't be these things\n  if (t.tags.Pronoun || t.tags.Comma || t.tags.Possessive) {\n    return false\n  }\n  //must be one of these\n  if (t.tags.TitleCase || t.tags.Organization || t.tags.Acronym || t.tags.Place) {\n    return true\n  }\n  return false\n}\n\nconst tagOrgs = function(doc, termArr) {\n  termArr.forEach(terms => {\n    for (let i = 0; i < terms.length; i += 1) {\n      let t = terms[i]\n      if (orgWords[t.clean] !== undefined && orgWords.hasOwnProperty(t.clean) === true) {\n        // look-backward - eg. 'Toronto University'\n        let lastTerm = terms[i - 1]\n        if (lastTerm !== undefined && maybeOrg(lastTerm) === true) {\n          lastTerm.tag('Organization', 'org-word-1', doc.world)\n          t.tag('Organization', 'org-word-2', doc.world)\n          continue\n        }\n        //look-forward - eg. University of Toronto\n        let nextTerm = terms[i + 1]\n        if (nextTerm !== undefined && nextTerm.clean === 'of') {\n          if (terms[i + 2] && maybeOrg(terms[i + 2])) {\n            t.tag('Organization', 'org-of-word-1', doc.world)\n            nextTerm.tag('Organization', 'org-of-word-2', doc.world)\n            terms[i + 2].tag('Organization', 'org-of-word-3', doc.world)\n            continue\n          }\n        }\n      }\n    }\n  })\n\n  return doc\n}\nmodule.exports = tagOrgs\n","const organizations = require('./01-organizations')\nconst people = require('./02-people')\n\n//some 'deeper' tagging, based on some basic word-knowledge\nconst inference = function(doc) {\n  let termArr = doc.list.map(p => p.terms())\n  organizations(doc, termArr)\n  people(doc, termArr)\n  return doc\n}\nmodule.exports = inference\n","//mostly pos-corections here\nconst miscCorrection = function(doc) {\n  //misc:\n  //foot/feet\n  doc.match('(foot|feet)').tag('Noun', 'foot-noun')\n  //3 feet\n  doc.match('#Value [(foot|feet)]').tag('Unit', 'foot-unit')\n  //'u' as pronoun\n  doc.match('#Conjunction [u]').tag('Pronoun', 'u-pronoun-2')\n  //6 am\n  doc.match('#Holiday (day|eve)').tag('Holiday', 'holiday-day')\n  //timezones\n  doc.match('(standard|daylight|summer|eastern|pacific|central|mountain) standard? time').tag('Time', 'timezone')\n  //about to go\n  doc.match('[about to] #Adverb? #Verb').tag(['Auxiliary', 'Verb'], 'about-to')\n  //right of way\n  doc.match('(right|rights) of .').tag('Noun', 'right-of')\n  // a bit\n  doc.match('[much] #Adjective').tag('Adverb')\n  doc.match('a [bit]').tag('Noun')\n  doc.match('a bit much').tag('Determiner Adverb Adjective')\n  doc.match('too much').tag('Adverb Adjective')\n  // u r cool\n  doc.match('u r').tag('Pronoun #Copula')\n  //swear-words as non-expression POS\n  //nsfw\n  doc.match('holy (shit|fuck|hell)').tag('Expression', 'swears-expression')\n  doc.match('#Determiner [(shit|damn|hell)]').tag('Noun', 'swears-noun')\n  doc.match('[(shit|damn|fuck)] (#Determiner|#Possessive|them)').tag('Verb', 'swears-verb')\n  doc\n    .match('#Copula fucked up?')\n    .not('#Copula')\n    .tag('Adjective', 'swears-adjective')\n\n  //ambig prepositions/conjunctions\n  let so = doc.if('so')\n  if (so.found === true) {\n    //so funny\n    so.match('[so] #Adjective').tag('Adverb', 'so-adv')\n    //so the\n    so.match('[so] #Noun').tag('Conjunction', 'so-conj')\n    //do so\n    so.match('do [so]').tag('Noun', 'so-noun')\n  }\n\n  let all = doc.if('all')\n  if (all.found === true) {\n    //all students\n    all.match('[all] #Determiner? #Noun').tag('Adjective', 'all-noun')\n    //it all fell apart\n    all.match('[all] #Verb').tag('Adverb', 'all-verb')\n  }\n\n  //the ambiguous word 'that' and 'which'\n  let which = doc.if('which')\n  if (which.found === true) {\n    //remind john that\n    which.match('#Verb #Adverb? #Noun [(that|which)]').tag('Preposition', 'that-prep')\n    //that car goes\n    which.match('that #Noun [#Verb]').tag('Determiner', 'that-determiner')\n    //work, which has been done.\n    which.match('#Comma [which] (#Pronoun|#Verb)').tag('Preposition', 'which-copula')\n    //things that provide\n    // doc.match('#Plural (that|which) #Adverb? #Verb').term(1).tag('Preposition', 'noun-that');\n  }\n\n  //like\n  let like = doc.if('like')\n  if (like.found === true) {\n    like.match('just [like]').tag('Preposition', 'like-preposition')\n    //folks like her\n    like.match('#Noun [like] #Noun').tag('Preposition', 'noun-like')\n    //look like\n    like.match('#Verb [like]').tag('Adverb', 'verb-like')\n    //exactly like\n    like\n      .match('#Adverb like')\n      .notIf('(really|generally|typically|usually|sometimes|often) [like]')\n      .tag('Adverb', 'adverb-like')\n  }\n\n  let title = doc.if('#TitleCase')\n  if (title.found === true) {\n    //FitBit Inc\n    title.match('#TitleCase (ltd|co|inc|dept|assn|bros)').tag('Organization', 'org-abbrv')\n    //Foo District\n    title\n      .match('#TitleCase+ (district|region|province|county|prefecture|municipality|territory|burough|reservation)')\n      .tag('Region', 'foo-district')\n    //District of Foo\n    title\n      .match('(district|region|province|municipality|territory|burough|state) of #TitleCase')\n      .tag('Region', 'district-of-Foo')\n  }\n\n  let hyph = doc.if('#Hyphenated')\n  if (hyph.found === true) {\n    //air-flow\n    hyph\n      .match('#Hyphenated #Hyphenated')\n      .match('#Noun #Verb')\n      .tag('Noun', 'hyphen-verb')\n    //connect hyphenated expressions - 'ooh-wee'\n    hyph\n      .match('#Hyphenated+')\n      .if('#Expression')\n      .tag('Expression', 'ooh-wee')\n  }\n\n  let place = doc.if('#Place')\n  if (place.found === true) {\n    //West Norforlk\n    place.match('(west|north|south|east|western|northern|southern|eastern)+ #Place').tag('Region', 'west-norfolk')\n    //some us-state acronyms (exlude: al, in, la, mo, hi, me, md, ok..)\n    place\n      .match('#City [#Acronym]')\n      .match('(al|ak|az|ar|ca|ct|dc|fl|ga|id|il|nv|nh|nj|ny|oh|or|pa|sc|tn|tx|ut|vt|pr)')\n      .tag('Region', 'us-state')\n  }\n\n  return doc\n}\n\nmodule.exports = miscCorrection\n","//Determiner-signals\nconst fixThe = function(doc) {\n  let det = doc.if('#Determiner')\n  if (det.found === true) {\n    //the wait to vote\n    det.match('(the|this) [#Verb] #Preposition .').tag('Noun', 'correction-determiner1')\n    //the nice swim\n    det.match('(the|this|those|these) #Adjective [#Verb]').tag('Noun', 'the-adj-verb')\n    //the truly nice swim\n    det.match('(the|this|those|these) #Adverb #Adjective [#Verb]').tag('Noun', 'correction-determiner4')\n    //a stream runs\n    det.match('(the|this|a|an) [#Infinitive] #Adverb? #Verb').tag('Noun', 'correction-determiner5')\n    //some pressing issues\n    det.match('some [#Verb] #Plural').tag('Noun', 'correction-determiner6')\n    //the orange is\n    det.match('#Determiner [#Adjective] (#Copula|#PastTense|#Auxiliary)').tag('Noun', 'the-adj-2')\n    //a sense of\n    det.match('#Determiner [#Verb] of').tag('Noun', 'the-verb-of')\n    //the threat of force\n    det.match('#Determiner #Noun of [#Verb]').tag('Noun', 'noun-of-noun')\n    //a close\n    det.match('#Determiner #Adverb? [close]').tag('Adjective', 'a-close')\n    //the test string\n    det.match('#Determiner [#Infinitive] #Noun').tag('Noun', 'correction-determiner7')\n    //by a bear.\n    det.match('#Determiner [#Infinitive]$').tag('Noun', 'a-inf')\n    //the western line\n    det.match('#Determiner [(western|eastern|northern|southern|central)] #Noun').tag('Noun', 'western-line')\n    //the swim\n    det.match('(the|those|these) [(#Infinitive|#PresentTense|#PastTense)]').tag('Noun', 'correction-determiner2')\n    //the orange.\n    det\n      .match('#Determiner #Adjective$')\n      .notIf('(#Comparative|#Superlative)')\n      .terms(1)\n      .tag('Noun', 'the-adj-1')\n  }\n\n  let an = doc.if('(a|an)')\n  if (an.found === true) {\n    //a staggering cost\n    an.match('(a|an) [#Gerund]').tag('Adjective', 'correction-a|an')\n    //did a 900, paid a 20\n    an.match('#Verb (a|an) [#Value]').tag('Singular', 'a-value')\n    //a tv show\n    an.match('(a|an) #Noun [#Infinitive]').tag('Noun', 'a-noun-inf')\n    //a great run\n    an.match('(a|an) #Adjective (#Infinitive|#PresentTense)')\n      .terms(2)\n      .tag('Noun', 'correction-a|an2')\n    //'a/an' can mean 1 - \"a hour\"\n    an.match('[(a|an)] (#Duration|hundred|thousand|million|billion|trillion)')\n      .ifNo('#Plural')\n      .tag('Value', 'a-is-one')\n  }\n\n  return doc\n}\nmodule.exports = fixThe\n","//\nconst fixNouns = function(doc) {\n  let noun = doc.if('#Noun')\n  if (noun.found === true) {\n    //'more' is not always an adverb\n    noun.match('more #Noun').tag('Noun', 'more-noun')\n    //he quickly foo\n    noun.match('#Noun #Adverb [#Noun]').tag('Verb', 'correction')\n    //fix for busted-up phrasalVerbs\n    noun.match('#Noun [#Particle]').tag('Preposition', 'repair-noPhrasal')\n    //John & Joe's\n    noun.match('#Noun (&|n) #Noun').tag('Organization', 'Noun-&-Noun')\n    //Aircraft designer\n    noun.match('#Noun #Actor').tag('Actor', 'thing-doer')\n    //this rocks\n    noun.match('(this|that) [#Plural]').tag('PresentTense', 'this-verbs')\n    //j.k Rowling\n    doc.match('#Noun van der? #Noun').tagSafe('#Person', 'von der noun')\n    //king of spain\n    doc.match('(king|queen|prince|saint|lady) of? #Noun').tagSafe('#Person', 'king-of-noun')\n    //the word 'second'\n    noun\n      .match('[second] #Noun')\n      .notIf('#Honorific')\n      .unTag('Unit')\n      .tag('Ordinal', 'second-noun')\n    //linear algebra\n    noun\n      .match('(#Determiner|#Value) [(linear|binary|mobile|lexical|technical|computer|scientific|formal)] #Noun')\n      .tag('Noun', 'technical-noun')\n\n    //organization\n    let org = noun.if('#Organization')\n    if (org.found === true) {\n      org.match('#Organization of the? #TitleCase').tag('Organization', 'org-of-place')\n      org.match('#Organization #Country').tag('Organization', 'org-country')\n      org.match('(world|global|international|national|#Demonym) #Organization').tag('Organization', 'global-org')\n    }\n  }\n\n  //acronyms\n  let acronym = doc.if('#Acronym')\n  if (acronym.found === true) {\n    acronym\n      .match('the [#Acronym]')\n      .notIf('(iou|fomo|yolo|diy|dui|nimby)')\n      .tag('Organization', 'the-acronym')\n    acronym\n      .match('#Acronym')\n      .match('#Possessive')\n      .tag('Organization', 'possessive-acronym')\n  }\n\n  //possessives\n  let poss = doc.if('#Possessive')\n  if (poss.found === true) {\n    //my buddy\n    poss.match('#Possessive [#FirstName]').unTag('Person', 'possessive-name')\n    //spencer kelly's\n    poss\n      .match('#FirstName #Acronym? #Possessive')\n      .ifNo('#Comma')\n      .match('#FirstName #Acronym? #LastName')\n      .tag('Possessive')\n    //Super Corp's fundraiser\n    poss\n      .match('#Organization+ #Possessive')\n      .ifNo('#Comma')\n      .tag('Possessive')\n    //Los Angeles's fundraiser\n    poss\n      .match('#Place+ #Possessive')\n      .ifNo('#Comma')\n      .tag('Possessive')\n  }\n  return doc\n}\nmodule.exports = fixNouns\n","const maybeNoun =\n  '(rose|robin|dawn|ray|holly|bill|joy|viola|penny|sky|violet|daisy|melody|kelvin|hope|mercedes|olive|jewel|faith|van|charity|miles|lily|summer|dolly|rod|dick|cliff|lane|reed|kitty|art|jean|trinity)'\nconst maybeVerb = '(pat|wade|ollie|will|rob|buck|bob|mark|jack)'\nconst maybeAdj = '(misty|rusty|dusty|rich|randy)'\nconst maybeDate = '(april|june|may|jan|august|eve)'\nconst maybePlace = '(paris|alexandria|houston|kobe|salvador|sydney)'\n\nconst fixPerson = function(doc) {\n  // clues from honorifics\n  let hon = doc.if('#Honorific')\n  if (hon.found === true) {\n    //mr Putin\n    doc.match('(mr|mrs|ms|dr) (#TitleCase|#Possessive)+').tag('#Person', 'mr-putin')\n    //mr X\n    hon.match('#Honorific #Acronym').tag('Person', 'Honorific-TitleCase')\n    //remove single 'mr'\n    hon.match('^#Honorific$').unTag('Person', 'single-honorific')\n    //first general..\n    hon.match('[(1st|2nd|first|second)] #Honorific').tag('Honorific', 'ordinal-honorific')\n  }\n\n  //methods requiring a titlecase\n  let titleCase = doc.if('#TitleCase')\n  if (titleCase.found === true) {\n    titleCase.match('#Acronym #TitleCase').tagSafe('#Person', 'acronym-titlecase')\n    //ludwig van beethovan\n    titleCase.match('#TitleCase (van|al|bin) #TitleCase').tagSafe('Person', 'titlecase-van-titlecase')\n    //jose de Sucre\n    titleCase.match('#TitleCase (de|du) la? #TitleCase').tagSafe('Person', 'titlecase-van-titlecase')\n\n    //pope francis\n    titleCase\n      .match('(lady|queen|sister) #TitleCase')\n      .ifNo('#Date')\n      .ifNo('#Honorific')\n      .tag('#FemaleName', 'lady-titlecase')\n    titleCase\n      .match('(king|pope|father) #TitleCase')\n      .ifNo('#Date')\n      .tag('#MaleName', 'poe')\n  }\n\n  let person = doc.if('#Person')\n  if (person.found === true) {\n    //Frank jr\n    person.match('#Person (jr|sr|md)').tag('Person', 'person-honorific')\n    //peter II\n    person.match('#Person #Person the? #RomanNumeral').tag('Person', 'roman-numeral')\n    //'Professor Fink', 'General McCarthy'\n    person.match('#Honorific #Person').tag('Person', 'Honorific-Person')\n    // 'john E rockefeller'\n    person.match('#FirstName [/^[^aiurck]$/]').tag(['Acronym', 'Person'], 'john-e')\n    //Doctor john smith jr\n    person.match('#Honorific #Person').tag('Person', 'honorific-person')\n    //general pearson\n    person\n      .match('[(private|general|major|corporal|lord|lady|secretary|premier)] #Honorific? #Person')\n      .tag('Honorific', 'ambg-honorifics')\n    //Morgan Shlkjsfne\n    titleCase\n      .match('#Person #TitleCase')\n      .match('#TitleCase #Noun')\n      .tagSafe('Person', 'person-titlecase')\n    //a bunch of ambiguous first names\n\n    //Nouns: 'viola' or 'sky'\n    let ambigNoun = person.if(maybeNoun)\n    if (ambigNoun.found === true) {\n      ambigNoun.match('(#Determiner|#Adverb|#Pronoun|#Possessive) [' + maybeNoun + ']').tag('Noun', 'the-ray')\n      ambigNoun.match(maybeNoun + ' (#Person|#Acronym|#TitleCase)').tagSafe('Person', 'ray-smith')\n    }\n\n    //Verbs: 'pat' or 'wade'\n    let ambigVerb = person.if(maybeVerb)\n    if (ambigVerb === true) {\n      ambigVerb.match('(#Modal|#Adverb) [' + maybeVerb + ']').tag('Verb', 'would-mark')\n      ambigVerb.match(maybeVerb + ' (#Person|#TitleCase)').tag('Person', 'rob-smith')\n    }\n\n    //Adjectives: 'rusty' or 'rich'\n    let ambigAdj = person.if(maybeAdj)\n    if (ambigAdj.found === true) {\n      ambigAdj.match('#Adverb [' + maybeAdj + ']').tag('Adjective', 'really-rich')\n      ambigAdj.match(maybeAdj + ' (#Person|#TitleCase)').tag('Person', 'randy-smith')\n    }\n\n    //Dates: 'june' or 'may'\n    let ambigDate = person.if(maybeDate)\n    if (ambigDate.found === true) {\n      ambigDate.match(String(maybeDate) + ' (#Person|#TitleCase)').tagSafe('Person', 'june-smith')\n      ambigDate.match('(in|during|on|by|before|#Date) [' + maybeDate + ']').tagSafe('Date', 'in-june')\n      ambigDate.match(maybeDate + ' (#Date|#Value)').tagSafe('Date', 'june-5th')\n    }\n\n    //Places: paris or syndey\n    let ambigPlace = person.if(maybePlace)\n    if (ambigPlace.found === true) {\n      ambigPlace.match('(in|near|at|from|to|#Place) [' + maybePlace + ']').tagSafe('Place', 'in-paris')\n      ambigPlace.match('[' + maybePlace + '] #Place').tagSafe('Place', 'paris-france')\n      ambigPlace.match('[' + maybePlace + '] #Person').tagSafe('Person', 'paris-hilton')\n    }\n\n    //this one is tricky\n    let al = person.if('al')\n    if (al.found === true) {\n      al.match('al (#Person|#TitleCase)').tagSafe('#Person', 'al-borlen')\n      al.match('#TitleCase al #TitleCase').tagSafe('#Person', 'arabic-al-arabic')\n    }\n\n    let firstName = person.if('#FirstName')\n    if (firstName.found === true) {\n      //ferdinand de almar\n      firstName.match('#FirstName de #Noun').tag('#Person', 'firstname-de-noun')\n      //Osama bin Laden\n      firstName.match('#FirstName (bin|al) #Noun').tag('#Person', 'firstname-al-noun')\n      //John L. Foo\n      firstName.match('#FirstName #Acronym #TitleCase').tag('Person', 'firstname-acronym-titlecase')\n      //Andrew Lloyd Webber\n      firstName.match('#FirstName #FirstName #TitleCase').tag('Person', 'firstname-firstname-titlecase')\n      //Mr Foo\n      firstName.match('#Honorific #FirstName? #TitleCase').tag('Person', 'Honorific-TitleCase')\n      //peter the great\n      firstName.match('#FirstName the #Adjective').tag('Person', 'determiner5')\n\n      //very common-but-ambiguous lastnames\n      firstName\n        .match('#FirstName (green|white|brown|hall|young|king|hill|cook|gray|price)')\n        .tag('#Person', 'firstname-maybe')\n\n      //John Foo\n      firstName\n        .match('#FirstName #TitleCase #TitleCase?')\n        .match('#Noun+')\n        .tag('Person', 'firstname-titlecase')\n      //Joe K. Sombrero\n      firstName\n        .match('#FirstName #Acronym #Noun')\n        .ifNo('#Date')\n        .tag('#Person', 'n-acro-noun')\n        .lastTerm()\n        .tag('#LastName', 'n-acro-noun')\n\n      // Dwayne 'the rock' Johnson\n      firstName\n        .match('#FirstName [#Determiner #Noun] #LastName')\n        .tag('#NickName', 'first-noun-last')\n        .tag('#Person', 'first-noun-last')\n\n      //john bodego's\n      firstName\n        .match('#FirstName (#Singular|#Possessive)')\n        .ifNo('#Date')\n        .ifNo('#NickName')\n        .tag('#Person', 'first-possessive')\n        .lastTerm()\n        .tag('#LastName', 'first-possessive')\n\n      // Firstname x (dangerous)\n      let tmp = firstName\n        .match('#FirstName (#Noun|#TitleCase)')\n        .ifNo('^#Possessive')\n        .ifNo('#ClauseEnd .')\n        .ifNo('#Pronoun')\n      tmp.lastTerm().tag('#LastName', 'firstname-noun')\n    }\n\n    let lastName = person.if('#LastName')\n    if (lastName === true) {\n      //is foo Smith\n      lastName.match('#Copula [(#Noun|#PresentTense)] #LastName').tag('#FirstName', 'copula-noun-lastname')\n      // x Lastname\n      lastName\n        .match('[#Noun] #LastName')\n        .canBe('#FirstName')\n        .tag('#FirstName', 'noun-lastname')\n      //ambiguous-but-common firstnames\n      lastName\n        .match(\n          '[(will|may|april|june|said|rob|wade|ray|rusty|drew|miles|jack|chuck|randy|jan|pat|cliff|bill)] #LastName'\n        )\n        .tag('#FirstName', 'maybe-lastname')\n\n      //Jani K. Smith\n      lastName\n        .match('#TitleCase #Acronym? #LastName')\n        .ifNo('#Date')\n        .tag('#Person', 'title-acro-noun')\n        .lastTerm()\n        .tag('#LastName', 'title-acro-noun')\n    }\n  }\n\n  return doc\n}\nmodule.exports = fixPerson\n","const advb = '(#Adverb|not)+?'\n//\nconst fixVerb = function(doc) {\n  let vb = doc.if('#Verb')\n  if (vb.found) {\n    //still make\n    vb.match('[still] #Verb').tag('Adverb', 'still-verb')\n    //'u' as pronoun\n    vb.match('[u] #Verb').tag('Pronoun', 'u-pronoun-1')\n    //is no walk\n    vb.match('is no [#Verb]').tag('Noun', 'is-no-verb')\n    //different views than\n    vb.match('[#Verb] than').tag('Noun', 'correction')\n    //her polling\n    vb.match('#Possessive [#Verb]').tag('Noun', 'correction-possessive')\n    //there are reasons\n    vb.match('there (are|were) #Adjective? [#PresentTense]').tag('Plural', 'there-are')\n    //jack seems guarded\n    vb.match('#Singular (seems|appears) #Adverb? [#PastTense$]').tag('Adjective', 'seems-filled')\n    //fall over\n    vb.match('#PhrasalVerb [#PhrasalVerb]').tag('Particle', 'phrasal-particle')\n    //went to sleep\n    // vb.match('#Verb to #Verb').lastTerm().tag('Noun', 'verb-to-verb');\n\n    //support a splattering of auxillaries before a verb\n    vb.match(`(has|had) ${advb} #PastTense`)\n      .not('#Verb$')\n      .tag('Auxiliary', 'had-walked')\n    //was walking\n    vb.match(`#Copula ${advb} #Gerund`)\n      .not('#Verb$')\n      .tag('Auxiliary', 'copula-walking')\n    //been walking\n    vb.match(`(be|been) ${advb} #Gerund`)\n      .not('#Verb$')\n      .tag('Auxiliary', 'be-walking')\n    //would walk\n    vb.match(`(#Modal|did) ${advb} #Verb`)\n      .not('#Verb$')\n      .tag('Auxiliary', 'modal-verb')\n    //would have had\n    vb.match(`#Modal ${advb} have ${advb} had ${advb} #Verb`)\n      .not('#Verb$')\n      .tag('Auxiliary', 'would-have')\n    //would be walking\n    vb.match(`(#Modal) ${advb} be ${advb} #Verb`)\n      .not('#Verb$')\n      .tag('Auxiliary', 'would-be')\n    //would been walking\n    vb.match(`(#Modal|had|has) ${advb} been ${advb} #Verb`)\n      .not('#Verb$')\n      .tag('Auxiliary', 'would-be')\n    //infinitive verbs suggest plural nouns - 'XYZ walk to the store'\n    // r.match(`#Singular+ #Infinitive`).match('#Singular+').tag('Plural', 'infinitive-make-plural');\n\n    let copula = vb.if('#Copula')\n    if (copula.found === true) {\n      //is mark hughes\n      copula.match('#Copula [#Infinitive] #Noun').tag('Noun', 'is-pres-noun')\n      //\n      copula.match('[#Infinitive] #Copula').tag('Noun', 'inf-copula')\n      //sometimes not-adverbs\n      copula.match('#Copula [(just|alone)]$').tag('Adjective', 'not-adverb')\n      //jack is guarded\n      copula.match('#Singular is #Adverb? [#PastTense$]').tag('Adjective', 'is-filled')\n      //is eager to go\n      copula\n        .match('#Copula #Adjective to #Verb')\n        .match('#Adjective to')\n        .tag('Verb', 'correction')\n\n      //sometimes adverbs - 'pretty good','well above'\n      copula\n        .match('#Copula (pretty|dead|full|well) (#Adjective|#Noun)')\n        .ifNo('#Comma')\n        .tag('#Copula #Adverb #Adjective', 'sometimes-adverb')\n    }\n\n    //Gerund - 'walking'\n    let gerund = vb.if('#Gerund')\n    if (gerund.found === true) {\n      //walking is cool\n      gerund\n        .match('#Gerund #Adverb? not? #Copula')\n        .firstTerm()\n        .tag('Activity', 'gerund-copula')\n      //walking should be fun\n      gerund\n        .match('#Gerund #Modal')\n        .firstTerm()\n        .tag('Activity', 'gerund-modal')\n      //running-a-show\n      gerund.match('#Gerund #Determiner [#Infinitive]').tag('Noun', 'running-a-show')\n      //setting records\n      // doc.match('#Gerund [#PresentTense]').tag('Plural', 'setting-records');\n    }\n\n    //'will be'\n    let willBe = vb.if('will #Adverb? not? #Adverb? be')\n    if (willBe.found === true) {\n      //will be running (not copula\n      if (willBe.has('will #Adverb? not? #Adverb? be #Gerund') === false) {\n        //tag it all\n        willBe.match('will not? be').tag('Copula', 'will-be-copula')\n        //for more complex forms, just tag 'be'\n        willBe\n          .match('will #Adverb? not? #Adverb? be #Adjective')\n          .match('be')\n          .tag('Copula', 'be-copula')\n      }\n    }\n  }\n\n  //question words\n  let m = doc.if('(who|what|where|why|how|when)')\n  if (m.found) {\n    //the word 'how'\n    m.match('^how').tag('QuestionWord', 'how-question')\n    m.match('[how] (#Determiner|#Copula|#Modal|#PastTense)').tag('QuestionWord', 'how-is')\n    // //the word 'which'\n    m.match('^which').tag('QuestionWord', 'which-question')\n    m.match('[which] . (#Noun)+ #Pronoun').tag('QuestionWord', 'which-question2')\n    m.match('which').tag('QuestionWord', 'which-question3')\n\n    //how he is driving\n    m.match('[#QuestionWord] #Noun #Copula #Adverb? (#Verb|#Adjective)')\n      .unTag('QuestionWord')\n      .tag('Conjunction', 'how-he-is-x')\n\n    //when i go fishing\n    m.match('#QuestionWord #Noun #Adverb? #Infinitive not? #Gerund')\n      .unTag('QuestionWord')\n      .tag('Conjunction', 'when i go fishing')\n  }\n\n  return doc\n}\nmodule.exports = fixVerb\n","//\nconst fixAdjective = function(doc) {\n  let adj = doc.if('#Adjective')\n  if (adj.found) {\n    //still good\n    adj.match('[still] #Adjective').tag('Adverb', 'still-advb')\n    //barely even walk\n    adj.match('(barely|hardly) even').tag('#Adverb', 'barely-even')\n    //big dreams, critical thinking\n    adj.match('#Adjective [#PresentTense]').tag('Noun', 'adj-presentTense')\n    //will secure our\n    adj.match('will [#Adjective]').tag('Verb', 'will-adj')\n    //cheering hard - dropped -ly's\n    adj.match('#PresentTense [(hard|quick|long|bright|slow)]').tag('Adverb', 'lazy-ly')\n    //his fine\n    adj.match('(his|her|its) [#Adjective]').tag('Noun', 'his-fine')\n    //he left\n    adj.match('#Noun #Adverb? [left]').tag('PastTense', 'left-verb')\n  }\n  return doc\n}\nmodule.exports = fixAdjective\n","//\nconst fixValue = function(doc) {\n  //canadian dollar, Brazilian pesos\n  doc.match('#Demonym #Currency').tag('Currency', 'demonym-currency')\n\n  let val = doc.if('#Value')\n  if (val.found === true) {\n    //half a million\n    val.match('half a? #Value').tag('Value', 'half-a-value') //(quarter not ready)\n    //five and a half\n    val.match('#Value and a (half|quarter)').tag('Value', 'value-and-a-half')\n    //one hundred and seven dollars\n    val.match('#Money and #Money #Currency?').tag('Money', 'money-and-money')\n    //1 800 PhoneNumber\n    val.match('1 #Value #PhoneNumber').tag('PhoneNumber', '1-800-Value')\n    //(454) 232-9873\n    val.match('#NumericValue #PhoneNumber').tag('PhoneNumber', '(800) PhoneNumber')\n    //three trains\n    val.match('#Value [#PresentTense]').tag('Plural', 'value-presentTense')\n    //all values are either ordinal or cardinal\n    // doc.match('#Value').match('!#Ordinal').tag('#Cardinal', 'not-ordinal');\n    //money\n    val\n      .match('#Value+ #Currency')\n      .tag('Money', 'value-currency')\n      .lastTerm()\n      .tag('Unit', 'money-unit')\n\n    //two hundredth\n    val\n      .match('#TextValue+')\n      .match('#Cardinal+ #Ordinal')\n      .tag('Ordinal', 'two-hundredth')\n  }\n  return doc\n}\nmodule.exports = fixValue\n","//ambiguous 'may' and 'march'\nconst preps = '(in|by|before|during|on|until|after|of|within|all)'\nconst thisNext = '(last|next|this|previous|current|upcoming|coming)'\nconst sections = '(start|end|middle|starting|ending|midpoint|beginning)'\nconst seasons = '(spring|summer|winter|fall|autumn)'\nconst people = '(january|april|may|june|summer|autumn|jan|sep)'\nconst verbs = '(may|march)'\nconst units = '(hundred|thousand|million|billion|trillion|quadrillion|quintillion|sextillion|septillion)'\n\n//ensure a year is approximately typical for common years\n//please change in one thousand years\nconst tagYear = (m, reason) => {\n  if (m.found !== true) {\n    return\n  }\n  let term = m.termList()[0]\n  if (term) {\n    let num = parseInt(term.clean, 10)\n    if (num && num > 1000 && num < 3000) {\n      m.tag('Year', reason)\n    }\n  }\n}\n//same, but for less-confident values\nconst tagYearSafe = (m, reason) => {\n  if (m.found !== true) {\n    return\n  }\n  let term = m.termList()[0]\n  if (term) {\n    let num = parseInt(term.clean, 10)\n    if (num && num > 1900 && num < 2030) {\n      m.tag('Year', reason)\n    }\n  }\n}\n\nconst fixDates = function(doc) {\n  doc.match('in the (night|evening|morning|afternoon|day|daytime)').tag('Time', 'in-the-night')\n  doc.match('(#Value|#Time) (am|pm)').tag('Time', 'value-ampm')\n\n  //ambiguous month - person forms\n  let person = doc.if(people)\n  if (person.found === true) {\n    //give to april\n    person.match(`#Infinitive #Determiner? #Adjective? #Noun? (to|for) [${people}]`).tag('Person', 'ambig-person')\n    //remind june\n    person.match(`#Infinitive [${people}]`).tag('Person', 'infinitive-person')\n    //may waits for\n    person.match(`[${people}] #PresentTense (to|for)`).tag('Person', 'ambig-active')\n    //april will\n    person.match(`[${people}] #Modal`).tag('Person', 'ambig-modal')\n    //would april\n    person.match(`#Modal [${people}]`).tag('Person', 'modal-ambig')\n    //with april\n    person.match(`(that|with|for) [${people}]`).tag('Person', 'that-month')\n    //it is may\n    person.match(`#Copula [${people}]`).tag('Person', 'is-may')\n    //may is\n    person.match(`[${people}] #Copula`).tag('Person', 'may-is')\n    //april the 5th\n    person.match(`[${people}] the? #Value`).tag('Month', 'person-value')\n    //wednesday april\n    person.match(`#Date [${people}]`).tag('Month', 'correction-may')\n    //may 5th\n    person.match(`[${people}] the? #Value`).tag('Month', 'may-5th')\n    //5th of may\n    person.match(`#Value of [${people}]`).tag('Month', '5th-of-may')\n    //by april\n    person\n      .match(`${preps} ${people}`)\n      .ifNo('#Holiday')\n      .terms(1)\n      .tag('Month', 'preps-month')\n    //this april\n    person.match(`(next|this|last) [${people}]`).tag('Month', 'correction-may') //maybe not 'this'\n  }\n\n  //ambiguous month - verb-forms\n  let verb = doc.if(verbs)\n  if (verb.found === true) {\n    //quickly march\n    verb\n      .match(`#Adverb ${verbs}`)\n      .lastTerm()\n      .tag('Infinitive', 'ambig-verb')\n    verb\n      .match(`${verbs} #Adverb`)\n      .lastTerm()\n      .tag('Infinitive', 'ambig-verb')\n    //all march\n    verb\n      .match(`${preps} ${verbs}`)\n      .lastTerm()\n      .tag('Month', 'in-month')\n    //this march\n    verb\n      .match(`(next|this|last) ${verbs}`)\n      .lastTerm()\n      .tag('Month', 'this-month')\n    //with date\n    verb\n      .match(`${verbs} the? #Value`)\n      .firstTerm()\n      .tag('Month', 'march-5th')\n    verb\n      .match(`#Value of? ${verbs}`)\n      .lastTerm()\n      .tag('Month', '5th-of-march')\n    //nearby\n    verb\n      .match(`[${verbs}] .? #Date`)\n      .lastTerm()\n      .tag('Month', 'march-and-feb')\n    verb\n      .match(`#Date .? [${verbs}]`)\n      .lastTerm()\n      .tag('Month', 'feb-and-march')\n\n    let march = doc.if('march')\n    if (march.found === true) {\n      //march to\n      march.match('[march] (up|down|back|to|toward)').tag('Infinitive', 'march-to')\n      //must march\n      march.match('#Modal [march]').tag('Infinitive', 'must-march')\n    }\n  }\n  //sun 5th\n  let sun = doc.if('sun')\n  if (sun.found === true) {\n    //sun feb 2\n    sun.match('[sun] #Date').tag('WeekDay', 'sun-feb')\n    //sun the 5th\n    sun\n      .match('sun the #Ordinal')\n      .tag('Date')\n      .firstTerm()\n      .tag('WeekDay', 'sun-the-5th')\n    //the sun\n    sun.match('#Determiner [sun]').tag('Singular', 'the-sun')\n  }\n\n  //sat, nov 5th\n  let sat = doc.if('sat')\n  if (sat.found) {\n    //sat november\n    sat.match('[sat] #Date').tag('WeekDay', 'sat-feb')\n    //this sat\n    sat.match(`${preps} [sat]`).tag('WeekDay', 'sat')\n  }\n\n  //months:\n  let month = doc.if('#Month')\n  if (month.found === true) {\n    //June 5-7th\n    month.match(`#Month #DateRange+`).tag('Date', 'correction-numberRange')\n    //5th of March\n    month.match('#Value of #Month').tag('Date', 'value-of-month')\n    //5 March\n    month.match('#Cardinal #Month').tag('Date', 'cardinal-month')\n    //march 5 to 7\n    month.match('#Month #Value to #Value').tag('Date', 'value-to-value')\n    //march the 12th\n    month.match('#Month the #Value').tag('Date', 'month-the-value')\n  }\n\n  //months:\n  let val = doc.if('#Value')\n  if (val.found === true) {\n    //values\n    val.match('#Value #Abbreviation').tag('Value', 'value-abbr')\n    //seven point five\n    val.match('#Value (point|decimal) #Value').tag('Value', 'value-point-value')\n    //minus 7\n    val.match('(minus|negative) #Value').tag('Value', 'minus-value')\n    // ten grand\n    val.match('#Value grand').tag('Value', 'value-grand')\n    //quarter million\n    val.match('(a|the) [(half|quarter)] #Ordinal').tag('Value', 'half-ordinal')\n    //june 7\n    val\n      .match('(#WeekDay|#Month) #Value')\n      .ifNo('#Money')\n      .tag('Date', 'date-value')\n\n    //7 june\n    val\n      .match('#Value (#WeekDay|#Month)')\n      .ifNo('#Money')\n      .tag('Date', 'value-date')\n\n    //may twenty five\n    val\n      .match('#TextValue #TextValue')\n      .if('#Date')\n      .tag('#Date', 'textvalue-date')\n\n    //eg 'year'\n    let duration = val.if('#Duration')\n    if (duration.found === true) {\n      //for 4 months\n      duration.match('for #Value #Duration').tag('Date', 'for-x-duration')\n      //two days before\n      duration.match('#Value #Duration #Conjunction').tag('Date', 'val-duration-conjunction')\n      //for four days\n      duration.match(`${preps}? #Value #Duration`).tag('Date', 'value-duration')\n      //two years old\n      duration.match('#Value #Duration old').unTag('Date', 'val-years-old')\n    }\n    //eg 'trillion'\n    let mult = val.if(units)\n    if (mult.found === true) {\n      mult.match('a #Value').tag('Value', 'a-value')\n      // mult.match('#Ordinal (half|quarter)').tag('Value', 'ordinal-half');//not ready\n      mult.match(`${units} and #Value`).tag('Value', 'magnitude-and-value')\n    }\n  }\n\n  //seasons\n  let season = doc.if(seasons)\n  if (season.found === true) {\n    season.match(`${preps}? ${thisNext} ${seasons}`).tag('Date', 'thisNext-season')\n    season.match(`the? ${sections} of ${seasons}`).tag('Date', 'section-season')\n    season.match(`${seasons} ${preps}? #Cardinal`).tag('Date', 'season-year')\n  }\n\n  //rest-dates\n  let date = doc.if('#Date')\n  if (date.found === true) {\n    //june the 5th\n    date.match('#Date the? #Ordinal').tag('Date', 'correction')\n    //last month\n    date.match(`${thisNext} #Date`).tag('Date', 'thisNext')\n    //by 5 March\n    date.match('due? (by|before|after|until) #Date').tag('Date', 'by')\n    //next feb\n    date.match('(last|next|this|previous|current|upcoming|coming|the) #Date').tag('Date', 'next-feb')\n    //start of june\n    date.match(`the? ${sections} of #Date`).tag('Date', 'section-of')\n    //fifth week in 1998\n    date.match('#Ordinal #Duration in #Date').tag('Date', 'duration-in')\n    //early in june\n    date.match('(early|late) (at|in)? the? #Date').tag('Time', 'early-evening')\n    //tomorrow before 3\n    date\n      .match('#Date (by|before|after|at|@|about) #Cardinal')\n      .not('^#Date')\n      .tag('Time', 'date-before-Cardinal')\n    //saturday am\n    date\n      .match('#Date [(am|pm)]')\n      .unTag('Verb')\n      .unTag('Copula')\n      .tag('Time', 'date-am')\n    //feb to june\n    date\n      .match('#Date (#Preposition|to) #Date')\n      .ifNo('#Duration')\n      .tag('Date', 'date-prep-date')\n  }\n\n  //year/cardinal tagging\n  let cardinal = doc.if('#Cardinal')\n  if (cardinal.found === true) {\n    let v = cardinal.match(`#Date #Value [#Cardinal]`)\n    tagYear(v, 'date-value-year')\n    //scoops up a bunch\n    v = cardinal.match(`#Date+ [#Cardinal]`)\n    tagYear(v, 'date-year')\n    //feb 8 2018\n    v = cardinal.match(`#Month #Value [#Cardinal]`)\n    tagYear(v, 'month-value-year')\n    //feb 8 to 10th 2018\n    v = cardinal.match(`#Month #Value to #Value [#Cardinal]`)\n    tagYear(v, 'month-range-year')\n    //in 1998\n    v = cardinal.match(`(in|of|by|during|before|starting|ending|for|year) [#Cardinal]`)\n    tagYear(v, 'in-year')\n    //q2 2009\n    v = cardinal.match('(q1|q2|q3|q4) [#Cardinal]')\n    tagYear(v, 'in-year')\n    //2nd quarter 2009\n    v = cardinal.match('#Ordinal quarter [#Cardinal]')\n    tagYear(v, 'in-year')\n    //in the year 1998\n    v = cardinal.match('the year [#Cardinal]')\n    tagYear(v, 'in-year')\n    //it was 1998\n    v = cardinal.match('it (is|was) [#Cardinal]')\n    tagYearSafe(v, 'in-year')\n    //was 1998 and...\n    v = cardinal.match(`[#Cardinal] !#Plural`)\n    tagYearSafe(v, 'year-unsafe')\n  }\n\n  let time = doc.if('#Time')\n  if (time.found === true) {\n    //by 6pm\n    time.match('(by|before|after|at|@|about) #Time').tag('Time', 'preposition-time')\n    //7 7pm\n    time\n      .match('#Cardinal #Time')\n      .not('#Year')\n      .tag('Time', 'value-time')\n    //2pm est\n    time.match('#Time [(eastern|pacific|central|mountain)]').tag('Time', 'timezone')\n    //6pm est\n    time.match('#Time [(est|pst|gmt)]').tag('Time', 'timezone abbr')\n  }\n\n  return doc\n}\nmodule.exports = fixDates\n","const fixMisc = require('./fixMisc')\nconst fixDeterminer = require('./fixThe')\nconst fixNouns = require('./fixNouns')\nconst fixPerson = require('./fixPerson')\nconst fixVerb = require('./fixVerb')\nconst fixAdjective = require('./fixAdjective')\nconst fixValue = require('./fixValue')\nconst fixDates = require('./fixDates')\n\n//sequence of match-tag statements to correct mis-tags\nconst corrections = function(doc) {\n  fixDeterminer(doc)\n  fixNouns(doc)\n  fixPerson(doc)\n  fixVerb(doc)\n  fixAdjective(doc)\n  fixValue(doc)\n  fixDates(doc)\n  fixMisc(doc)\n  return doc\n}\nmodule.exports = corrections\n","const init = require('./01-init')\nconst fallbacks = require('./02-fallbacks')\nconst contractions = require('./03-contractions')\nconst inference = require('./04-inference')\nconst corrections = require('./05-correction')\n\n/** POS-tag all terms in this document */\nconst tagger = function(doc) {\n  let terms = doc.termList()\n  // check against any known-words\n  doc = init(doc, terms)\n\n  // everything has gotta be something. ¯\\_(:/)_/¯\n  doc = fallbacks(doc, terms)\n\n  // support \"didn't\" & \"spencer's\"\n  doc = contractions(doc)\n\n  // deduce more specific tags - singular/plurals/quotations...\n  doc = inference(doc)\n\n  //set our cache, to speed things up\n  // doc.freeze()\n\n  // wiggle-around the results, so they make more sense\n  doc = corrections(doc)\n\n  //remove our cache?\n  // doc.unfreeze()\n  return doc\n}\nmodule.exports = tagger\n","const addMethod = function(Doc) {\n  /**  */\n  class Acronyms extends Doc {\n    // stripPeriods() {//TODO:finish\n    //   return this\n    // }\n    // addPeriods() {\n    //   return this\n    // }\n  }\n\n  Doc.prototype.acronyms = function(n) {\n    let match = this.match('#Acronym')\n    if (typeof n === 'number') {\n      match = match.get(n)\n    }\n    return new Acronyms(match.list, this, this.world)\n  }\n  return Doc\n}\nmodule.exports = addMethod\n","const addMethod = function(Doc) {\n  /**  */\n  class Contractions extends Doc {\n    constructor(list, from, world) {\n      super(list, from, world)\n      this.contracted = null\n    }\n    /** turn didn't into 'did not' */\n    expand() {\n      this.list.forEach(p => {\n        let terms = p.terms()\n        //change the case?\n        let isTitlecase = terms[0].isTitleCase()\n\n        terms.forEach((t, i) => {\n          //use the implicit text\n          // console.log(t.clean)\n          t.set(t.implicit || t.text)\n          t.implicit = undefined\n\n          //add whitespace\n          if (i < terms.length - 1) {\n            t.post += ' '\n          }\n        })\n        //set titlecase\n        if (isTitlecase) {\n          terms[0].toTitleCase()\n        }\n      })\n      return this\n    }\n  }\n\n  //find contractable, expanded-contractions\n  // const findExpanded = r => {\n  //   let remain = r.not('#Contraction')\n  //   let m = remain.match('(#Noun|#QuestionWord) (#Copula|did|do|have|had|could|would|will)')\n  //   m.concat(remain.match('(they|we|you|i) have'))\n  //   m.concat(remain.match('i am'))\n  //   m.concat(remain.match('(#Copula|#Modal|do|does|have|has|can|will) not'))\n  //   return m\n  // }\n\n  Doc.prototype.contractions = function(n) {\n    //find currently-contracted\n    let found = this.match('@hasContraction+')\n    //todo: split consecutive contractions\n    if (typeof n === 'number') {\n      found = found.get(n)\n    }\n    return new Contractions(found.list, this, this.world)\n  }\n\n  //aliases\n  Doc.prototype.expanded = Doc.prototype.isExpanded\n  Doc.prototype.contracted = Doc.prototype.isContracted\n  return Doc\n}\nmodule.exports = addMethod\n","const open = /\\(/\nconst close = /\\)/\n\nconst addMethod = function(Doc) {\n  /** anything between (these things) */\n  class Parentheses extends Doc {\n    /** remove the parentheses characters */\n    unwrap() {\n      this.list.forEach(p => {\n        let first = p.terms(0)\n        first.pre = first.pre.replace(open, '')\n        let last = p.lastTerm()\n        last.post = last.post.replace(close, '')\n      })\n      return this\n    }\n  }\n\n  Doc.prototype.parentheses = function(n) {\n    let list = []\n    this.list.forEach(p => {\n      let terms = p.terms()\n      //look for opening brackets\n      for (let i = 0; i < terms.length; i += 1) {\n        const t = terms[i]\n        if (open.test(t.pre)) {\n          //look for the closing bracket..\n          for (let o = i; o < terms.length; o += 1) {\n            if (close.test(terms[o].post)) {\n              let len = o - i + 1\n              list.push(p.buildFrom(t.id, len))\n              i = o\n              break\n            }\n          }\n        }\n      }\n    })\n    //support nth result\n    if (typeof n === 'number') {\n      if (list[n]) {\n        list = [list[n]]\n      } else {\n        list = []\n      }\n      return new Parentheses(list, this, this.world)\n    }\n    return new Parentheses(list, this, this.world)\n  }\n\n  return Doc\n}\nmodule.exports = addMethod\n","const addMethod = function(Doc) {\n  /**  */\n  class Possessives extends Doc {\n    constructor(list, from, world) {\n      super(list, from, world)\n      this.contracted = null\n    }\n    /** turn didn't into 'did not' */\n    strip() {\n      this.list.forEach(p => {\n        let terms = p.terms()\n        terms.forEach((t, i) => {\n          let str = t.text.replace(/'s$/, '')\n          t.set(str || t.text)\n        })\n      })\n      return this\n    }\n  }\n\n  //find contractable, expanded-contractions\n  // const findExpanded = r => {\n  //   let remain = r.not('#Contraction')\n  //   let m = remain.match('(#Noun|#QuestionWord) (#Copula|did|do|have|had|could|would|will)')\n  //   m.concat(remain.match('(they|we|you|i) have'))\n  //   m.concat(remain.match('i am'))\n  //   m.concat(remain.match('(#Copula|#Modal|do|does|have|has|can|will) not'))\n  //   return m\n  // }\n\n  Doc.prototype.possessives = function(n) {\n    //find currently-contracted\n    let found = this.match('#Possessive')\n    //todo: split consecutive contractions\n    if (typeof n === 'number') {\n      found = found.get(n)\n    }\n    return new Possessives(found.list, this, this.world)\n  }\n  return Doc\n}\nmodule.exports = addMethod\n","const addMethod = function(Doc) {\n  //pull it apart..\n  const parse = function(doc) {\n    let things = doc.splitAfter('@hasComma').not('(and|or) not?')\n    let beforeLast = doc.match('[.] (and|or)')\n    return {\n      things: things,\n      conjunction: doc.match('(and|or) not?'),\n      beforeLast: beforeLast,\n      hasOxford: beforeLast.has('@hasComma'),\n    }\n  }\n\n  /** cool, fun, and nice */\n  class Lists extends Doc {\n    /** coordinating conjunction */\n    conjunctions() {\n      return this.match('(and|or)')\n    }\n    /** remove conjunctions */\n    things() {\n      let arr = []\n      this.forEach(p => {\n        let things = parse(p).things\n        arr = arr.concat(things.list)\n      })\n      return this.buildFrom(arr)\n    }\n    /** add a new unit to the list */\n    add(str) {\n      this.forEach(p => {\n        let beforeLast = parse(p).beforeLast\n        //add a comma to it\n        beforeLast.termList(0).addPunctuation(',')\n        beforeLast.append(str)\n      })\n      return this\n    }\n    /** remove any matching unit from the list */\n    remove(str) {\n      return this\n    }\n\n    /** return only lists that use a serial comma */\n    hasOxfordComma() {\n      return this.filter(doc => parse(doc).hasOxford)\n    }\n    addOxfordComma() {\n      return this\n    }\n    removeOxfordComma() {\n      return this\n    }\n  }\n\n  Doc.prototype.lists = function(n) {\n    let match = this.match('@hasComma+ .? (and|or) not? .') // '... and Don Smith'?\n    if (typeof n === 'number') {\n      match = match.get(n)\n    }\n    return new Lists(match.list, this, this.world)\n  }\n  return Doc\n}\nmodule.exports = addMethod\n","const selections = [\n  require('./acronyms'),\n  require('./contractions'),\n  require('./parentheses'),\n  require('./possessives'),\n  require('./lists'),\n]\n\nconst extend = function(Doc) {\n  selections.forEach(addFn => addFn(Doc))\n  return Doc\n}\nmodule.exports = extend\n","const methods = {\n  misc: require('./methods'),\n  match: require('./match'),\n  selections: require('./selections'),\n}\nconst tagger = require('../02-tagger')\nconst extend = require('../Subset')\n\n/** a parsed text object */\nclass Doc {\n  constructor(list, from, world) {\n    this.list = list\n    //quiet these properties in console.logs\n    Object.defineProperty(this, 'from', {\n      enumerable: false,\n      value: from,\n      writable: true,\n    })\n    //borrow some missing data from parent\n    if (world === undefined && from !== undefined) {\n      world = from.world\n    }\n    //'world' getter\n    Object.defineProperty(this, 'world', {\n      enumerable: false,\n      value: world,\n    })\n    //'found' getter\n    Object.defineProperty(this, 'found', {\n      get: () => this.list.length > 0,\n    })\n    //'length' getter\n    Object.defineProperty(this, 'length', {\n      get: () => this.list.length,\n    })\n    // this is way easier than .constructor.name...\n    Object.defineProperty(this, 'isA', {\n      get: () => 'Doc',\n    })\n  }\n\n  /** run part-of-speech tagger on all results*/\n  tagger() {\n    return tagger(this)\n  }\n\n  /** pool is stored on phrase objects */\n  pool() {\n    if (this.list.length > 0) {\n      return this.list[0].pool\n    }\n    return this.all().list[0].pool\n  }\n\n  /** return the previous result */\n  parent() {\n    if (this.from) {\n      return this.from\n    }\n    return this\n  }\n\n  /**  return a list of all previous results */\n  parents() {\n    let arr = []\n    const addParent = function(doc) {\n      if (doc.from) {\n        arr.push(doc.from)\n        addParent(doc.from)\n      }\n    }\n    addParent(this)\n    return arr.reverse()\n  }\n\n  /** return the root, first document */\n  all() {\n    return this.parents()[0] || this\n  }\n}\n\n/** create a new Document object */\nDoc.prototype.buildFrom = function(list) {\n  return new Doc(list, this, this.world)\n}\n/** add new subclass methods */\nDoc.prototype.extend = function(fn) {\n  fn(this)\n  return this\n}\n\nObject.assign(Doc.prototype, methods.match)\nObject.assign(Doc.prototype, methods.selections)\nObject.assign(Doc.prototype, methods.misc)\n\n//add sub-classes\nextend(Doc)\n\n//aliases\nconst aliases = {\n  untag: 'unTag',\n  and: 'match',\n  notIf: 'ifNo',\n  only: 'if',\n  onlyIf: 'if',\n}\nObject.keys(aliases).forEach(k => (Doc.prototype[k] = Doc.prototype[aliases[k]]))\nmodule.exports = Doc\n","const tokenize = require('./01-tokenizer')\nconst version = require('./_version')\nconst World = require('./World/World')\nconst Doc = require('./Doc/Doc')\n\n//blast-out our word-lists, just once\nlet world = new World()\n\n/** parse and tag text into a compromise object  */\nconst nlp = function(text = '') {\n  let list = tokenize.fromText(text, world)\n  let doc = new Doc(list, null, world)\n  doc.tagger()\n  return doc\n}\n\n/** parse text into a compromise object, without running POS-tagging */\nnlp.tokenize = function(text = '') {\n  let list = tokenize.fromText(text, world)\n  let doc = new Doc(list, null, world)\n  return doc\n}\n\n/** mix in a compromise-plugin */\nnlp.extend = function(fn) {\n  fn(Doc)\n}\n\n/** make a deep-copy of the library state */\nnlp.clone = function() {\n  world = world.clone()\n  return this\n}\n\n/** re-generate a Doc object from .json() results */\nnlp.fromJSON = function(json) {\n  let list = tokenize.fromJSON(json)\n  return new Doc(list, null, world)\n}\n\n/** log our decision-making for debugging */\nnlp.verbose = function(bool = true) {\n  world.verbose(bool)\n}\n\n/** current version of the library */\nnlp.version = version\n\nmodule.exports = nlp\n"],"names":["chars","split","makeId","str","text","i","Math","floor","random","length","compact","a","b","c","d","e","f","g","h","I","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","unicode","Object","keys","forEach","killUnicode","join","periodAcronym","oneLetterAcronym","noPeriodAcronym","lowerCaseAcronym","isAcronym","test","hasSlash","clean","toLowerCase","trim","original","replace","startings","endings","parseTerm","pre","post","found","parsed","titleCase","world","toUpperCase","tag","unTag","punct","includes","hasPost","Boolean","implicit","wrapMatch","doesMatch","reg","id","anything","word","undefined","tags","method","regex","choices","foundOne","find","result","negative","boring","TitleCase","UpperCase","CamelCase","Hyphenated","StartBracket","EndBracket","Comma","ClauseEnd","some","hasSpace","options","showPre","showPost","before","after","whitespace","last","lowercase","punctuation","hasEllipses","assign","require$$0","require$$1","require$$2","require$$3","padEnd","width","toString","reason","log","console","arr","prototype","call","charAt","substr","addTag","warn","fns","isVerbose","logTag","tagset","hasOwnProperty","isA","parentTag","also","alsoTag","notA","addTags","term","isArray","logUntag","downward","untagAll","canBe","enemies","add","Term","String","obj","raw","prev","next","clone","methods","tagMethods","terms","pool","get","start","push","newTerms","map","buildFrom","wantId","lastId","filter","trimEnd","isFirst","isLast","isFull","reduce","textOut","res","normal","json","lastTerm","addWhitespace","beforeTerms","newTerm","stitchIn","main","newPhrase","afterId","afterTerm","beforeId","stretchAll","doc","len","phrase","list","hasId","parents","parent","joinPhrase","oldStart","error","from","shrinkAll","deleteLength","deletePhrase","append","prepend","firstLength","tmp","match","index","findIndex","slice","end","failFast","regs","optional","getGreedy","until","greedyTo","nextReg","tryHere","captures","hasNeeds","remain","greedy","skipto","startAt","capture","stripStart","stripEnd","stripBoth","token","RegExp","byParentheses","byWords","words","concat","byArray","postProcess","tokens","count","captureArr","first","indexOf","reverse","fromDoc","syntax","input","parseToken","matchAll","matchOne","minLength","matches","tryMatch","notMatch","ts","current","results","previous","can","Phrase","defineProperty","enumerable","writable","value","matchMethods","aliases","Pool","initSplit","hasSomething","hasEllipse","newLine","hasLetter","startWhitespace","naiive_split","all","lines","isSentence","abbrevs","txt","lastWord","splitSentences","cache","abbreviations","sentences","chunks","splits","ws","wordlike","isBoundary","naiiveSplit","notWord","hasHyphen","reg2","splitHyphens","hyphens","splitWords","carry","addLinks","fromText","splitTerms","phrases","fromJSON","data","Noun","Singular","ProperNoun","Person","FirstName","MaleName","FemaleName","LastName","Honorific","Place","Country","City","Region","Address","Organization","SportsTeam","Company","School","Plural","Uncountable","Pronoun","Actor","Activity","Unit","Demonym","Possessive","Verb","PresentTense","Infinitive","Gerund","PastTense","PerfectTense","FuturePerfect","Pluperfect","Copula","Modal","Participle","Particle","PhrasalVerb","Value","Ordinal","Cardinal","RomanNumeral","Fraction","TextValue","NumericValue","Money","Percent","Date","Month","WeekDay","RelativeDay","Year","Duration","Time","Holiday","Adjective","Comparable","Comparative","Superlative","NumberRange","Adverb","Currency","Determiner","Conjunction","Preposition","QuestionWord","RelativeProunoun","Expression","Abbreviation","Url","PhoneNumber","HashTag","AtMention","Emoji","Email","Auxiliary","Negative","Contraction","Acronym","Quotation","StartQuotation","EndQuotation","Parentheses","addDownword","colors","addIn","addConflicts","conflicts","addColors","color","build","nouns","verbs","values","dates","misc","addDownward","seq","toAlphaCode","fromCharCode","fromAlphaCode","charCodeAt","encoding","symbols","nodes","exec","symCount","syms","indexFromRef","toArray","unpack","unpack_1","unpack_1$1","Array","addWord","lex","addMore","lexicon","transform","transforms","hasCompound","plural","conj","adjectives","addWords","addIrregulars","irregulars","inf","forms","g8","vh1","q1","q2","q3","q4","addendum","alga","alumna","alumnus","analysis","antenna","appendix","avocado","axis","bacillus","barracks","beau","bus","cactus","chateau","child","circus","clothes","corpus","criterion","curriculum","database","deer","diagnosis","echo","embargo","epoch","foot","formula","fungus","genus","goose","halo","hippopotamus","larva","leaf","libretto","loaf","man","matrix","memorandum","modulus","mosquito","mouse","move","nebula","nucleus","octopus","opus","ovum","ox","parenthesis","person","phenomenon","prognosis","quiz","radius","referendum","rodeo","sex","shoe","sombrero","stimulus","stomach","syllabus","synopsis","tableau","thesis","thief","tooth","tornado","tuxedo","vertebra","zero","mapping","prt","perf","pst","fut","pres","pluperf","act","conjugations","age","aim","arise","babysit","ban","be","beat","become","begin","being","bend","bet","bind","bite","bleed","blow","boil","brake","breed","bring","broadcast","budget","burn","burst","buy","choose","cling","come","compete","cost","creep","cut","deal","develop","die","dig","dive","draw","dream","drink","drive","drop","eat","edit","egg","fall","feed","feel","fight","flee","fling","fly","forbid","forget","forgive","free","freeze","give","go","grow","hang","have","hear","hide","hit","hold","hurt","ice","imply","is","keep","kneel","know","lay","lead","leap","leave","lend","lie","light","loose","lose","make","mean","meet","miss","pay","prove","puke","put","quit","read","ride","ring","rise","rub","run","say","seat","see","seek","sell","send","set","sew","shake","shave","shed","shine","shoot","show","shut","sing","sink","sit","ski","slay","sleep","slide","smash","sneak","speak","speed","spend","spill","spin","spit","spread","spring","stand","steal","stick","sting","stink","stream","strew","strike","suit","sware","swear","sweep","swim","swing","take","teach","tear","tell","think","thrive","tie","undergo","understand","upset","wait","wake","wear","weave","weep","win","wind","withdraw","wring","write","final","key","full","endsWith","repl","pr","pa","gr","ar","posMap","doTransform","pos","checkSuffix","suffixes","hasY","generic","fastConjugate","genericFill","naivety","to_noun","lastChar","do_rules","dont_rules","nice","late","hard","inner","outer","far","worse","bad","good","big","large","to_superlative","grey","gray","green","yellow","red","well","sad","to_comparative","not_matches","icy","idle","male","simple","single","special","straight","vague","whole","dontChange","adj_to_adv","dontDo","dontDoTwo","ed","nt","blacklist","wild","bored","fat","small","tired","toVerb","suffix","toNoun","toSuperlative","toComparative","toAdverb","require$$4","conjugate","noun","sup","comp","adv","vb","addE","trySuffix","pluralize","World","defaultTags","unpackWords","lexData","getByTag","bool","plurals","irregular","compounds","JSON","parse","stringify","w2","tagTerms","safe","tagList","why","setTag","verbose","exports","num","wordCount","untag","eachTerm","fn","toTitleCase","newPhrases","tokenize","tmpDoc","tagger","replaceWith","toRemove","alpha","left","right","chron","byFreq","counts","sort","alphabetical","wordcount","chronological","reset","blue","magenta","cyan","black","tagString","debug","module","jsonDefaults","showFull","trimPre","trimPost","arguments","arg","isPunct","quotes","defaults","termArr","termList","parentheses","unwrap","contraction","contractions","expand","possessive","possessives","strip","quotations","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","parseSyntax","not","allFound","pop","splitOn","has","befores","ids","splitAfter","isQuestion","isStatement","isExclamation","findMethods","tryMultiple","checkLexicon","foundWords","apostrophes","checkPunctuation","endChar","romanNumeral","romanNumValid","checkRegex","tagSafe","Adj","Inf","Pres","Sing","Past","Exp","Last","Avb","Plrl","Vb","ea","ia","ic","ly","que","lar","ffy","nny","rmy","azy","oid","mum","ous","sis","rol","ize","ify","zes","nes","ing","teen","tors","amed","ched","ends","oses","fies","ects","nded","cede","tage","gate","vice","tion","cted","ette","llen","ried","gone","made","fore","less","ices","ions","ints","aped","lked","ould","tive","sson","czyk","chuk","enko","akis","nsen","fully","where","wards","urned","tized","eased","ances","tures","ports","ettes","ities","rough","bound","tieth","ishes","tches","nssen","marek","keeper","logist","auskas","teenth","sdottir","opoulos","suffixRegexes","char","regexes","knownSuffixes","max","suffixList","isCommaEmoji","isEmoticon","emoticon","tagEmoji","emojiReg","steps","emoji","lookups","afterThisWord","it","there","because","but","who","his","when","you","very","old","never","beforeThisWord","me","only","him","were","took","himself","went","jr","afterThisPOS","beforeThisPOS","PluperfectTense","beforeThisPos","afterThisPos","afterKeys","markov","beforeKeys","checkNeighbours","isKnown","foundTag","nextTerm","hasNumber","checkCase","noPlurals","notPlural","notSingular","checkPlural","hasPrefix","prefix","checkPrefix","stem","step","neighbours","fallbacks","hasNegative","wont","cant","cannot","dont","dun","checkNegative","easy","ll","ve","re","checkApostrophe","parts","wanna","gonna","im","alot","ive","imma","whered","whend","howd","whatd","dunno","brb","gtg","irl","tbh","imo","til","rn","twas","doAint","checkIrregulars","hasApostropheS","that","isPossessive","twoTerm","isHas","checkPossessive","hasPerfect","checkPerfect","root","createPhrase","firstTerm","orgWords","maybeOrg","tagOrgs","inference","organizations","people","miscCorrection","so","which","like","notIf","title","hyph","place","fixThe","det","an","ifNo","fixNouns","org","acronym","poss","maybeNoun","maybeVerb","maybeAdj","maybeDate","maybePlace","fixPerson","hon","ambigNoun","ambigVerb","ambigAdj","ambigDate","ambigPlace","al","firstName","lastName","advb","fixVerb","copula","gerund","willBe","fixAdjective","adj","fixValue","val","preps","thisNext","sections","seasons","units","tagYear","parseInt","tagYearSafe","fixDates","verb","march","sun","sat","month","duration","mult","season","date","cardinal","time","corrections","fixDeterminer","fixMisc","init","addMethod","Doc","Acronyms","acronyms","Contractions","contracted","isTitlecase","isTitleCase","expanded","isExpanded","isContracted","open","close","Possessives","things","beforeLast","conjunction","hasOxford","Lists","addPunctuation","lists","selections","extend","addFn","addParent","and","onlyIf","nlp","version"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;EACA,IAAMA,KAAK,GAAG,iEAAiEC,KAAjE,CAAuE,EAAvE,CAAd;;EAGA,SAASC,MAAT,CAAgBC,GAAhB,EAAqB;EACnBA,EAAAA,GAAG,GAAGA,GAAG,IAAI,GAAb;EACA,MAAIC,IAAI,GAAGD,GAAG,GAAG,GAAjB;;EACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;EAC1BD,IAAAA,IAAI,IAAIJ,KAAK,CAACM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBR,KAAK,CAACS,MAAjC,CAAD,CAAb;EACD;;EACD,SAAOL,IAAP;EACD;;EAED,OAAc,GAAGF,MAAjB;;ECbA;;;;EAIA,IAAIQ,OAAO,GAAG;EACZ,OAAK,GADO;EAEZ,OAAK,IAFO;EAGZ,OAAK,OAHO;EAIZ,OAAK,MAJO;EAKZ,OAAK,IALO;EAMZC,EAAAA,CAAC,EAAE,uDANS;EAOZC,EAAAA,CAAC,EAAE,0BAPS;EAQZC,EAAAA,CAAC,EAAE,iCARS;EASZC,EAAAA,CAAC,EAAE,aATS;EAUZC,EAAAA,CAAC,EAAE,6DAVS;EAWZC,EAAAA,CAAC,EAAE,WAXS;EAYZC,EAAAA,CAAC,EAAE,iBAZS;EAaZC,EAAAA,CAAC,EAAE,2BAbS;EAcZC,EAAAA,CAAC,EAAE,MAdS;EAeZd,EAAAA,CAAC,EAAE,gCAfS;EAgBZe,EAAAA,CAAC,EAAE,WAhBS;EAiBZC,EAAAA,CAAC,EAAE,yBAjBS;EAkBZC,EAAAA,CAAC,EAAE,sBAlBS;EAmBZC,EAAAA,CAAC,EAAE,SAnBS;EAoBZC,EAAAA,CAAC,EAAE,2CApBS;EAqBZC,EAAAA,CAAC,EAAE,oEArBS;EAsBZC,EAAAA,CAAC,EAAE,cAtBS;EAuBZC,EAAAA,CAAC,EAAE,IAvBS;EAwBZC,EAAAA,CAAC,EAAE,uBAxBS;EAyBZC,EAAAA,CAAC,EAAE,iBAzBS;EA0BZC,EAAAA,CAAC,EAAE,sBA1BS;EA2BZC,EAAAA,CAAC,EAAE,+CA3BS;EA4BZC,EAAAA,CAAC,EAAE,OA5BS;EA6BZC,EAAAA,CAAC,EAAE,gBA7BS;EA8BZC,EAAAA,CAAC,EAAE,eA9BS;EA+BZC,EAAAA,CAAC,EAAE,uCA/BS;EAgCZC,EAAAA,CAAC,EAAE;EAhCS,CAAd;;EAmCA,IAAIC,OAAO,GAAG,EAAd;EACAC,MAAM,CAACC,IAAP,CAAY7B,OAAZ,EAAqB8B,OAArB,CAA6B,UAASnB,CAAT,EAAY;EACvCX,EAAAA,OAAO,CAACW,CAAD,CAAP,CAAWpB,KAAX,CAAiB,EAAjB,EAAqBuC,OAArB,CAA6B,UAASX,CAAT,EAAY;EACvCQ,IAAAA,OAAO,CAACR,CAAD,CAAP,GAAaR,CAAb;EACD,GAFD;EAGD,CAJD;;EAMA,IAAMoB,WAAW,GAAG,SAAdA,WAAc,CAAAtC,GAAG,EAAI;EACzB,MAAIH,KAAK,GAAGG,GAAG,CAACF,KAAJ,CAAU,EAAV,CAAZ;EACAD,EAAAA,KAAK,CAACwC,OAAN,CAAc,UAACX,CAAD,EAAIxB,CAAJ,EAAU;EACtB,QAAIgC,OAAO,CAACR,CAAD,CAAX,EAAgB;EACd7B,MAAAA,KAAK,CAACK,CAAD,CAAL,GAAWgC,OAAO,CAACR,CAAD,CAAlB;EACD;EACF,GAJD;EAKA,SAAO7B,KAAK,CAAC0C,IAAN,CAAW,EAAX,CAAP;EACD,CARD;;EASA,aAAc,GAAGD,WAAjB;;ECvDA,IAAME,aAAa,GAAG,qBAAtB;EACA,IAAMC,gBAAgB,GAAG,aAAzB;EACA,IAAMC,eAAe,GAAG,kBAAxB;EACA,IAAMC,gBAAgB,GAAG,wBAAzB;;;;EAIA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAS5C,GAAT,EAAc;;EAE9B,MAAIwC,aAAa,CAACK,IAAd,CAAmB7C,GAAnB,MAA4B,IAAhC,EAAsC;EACpC,WAAO,IAAP;EACD,GAJ6B;;;EAM9B,MAAI2C,gBAAgB,CAACE,IAAjB,CAAsB7C,GAAtB,MAA+B,IAAnC,EAAyC;EACvC,WAAO,IAAP;EACD,GAR6B;;;EAU9B,MAAIyC,gBAAgB,CAACI,IAAjB,CAAsB7C,GAAtB,MAA+B,IAAnC,EAAyC;EACvC,WAAO,IAAP;EACD,GAZ6B;;;EAc9B,MAAI0C,eAAe,CAACG,IAAhB,CAAqB7C,GAArB,MAA8B,IAAlC,EAAwC;EACtC,WAAO,IAAP;EACD;;EACD,SAAO,KAAP;EACD,CAlBD;;EAmBA,eAAc,GAAG4C,SAAjB;;ECxBA,IAAME,QAAQ,GAAG,4CAAjB;;;EAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAS/C,GAAT,EAAc;EAC1BA,EAAAA,GAAG,GAAGA,GAAG,IAAI,EAAb;EACAA,EAAAA,GAAG,GAAGA,GAAG,CAACgD,WAAJ,EAAN;EACAhD,EAAAA,GAAG,GAAGA,GAAG,CAACiD,IAAJ,EAAN;EACA,MAAIC,QAAQ,GAAGlD,GAAf,CAJ0B;;EAM1BA,EAAAA,GAAG,GAAGsC,SAAW,CAACtC,GAAD,CAAjB,CAN0B;;EAQ1B,MAAI8C,QAAQ,CAACD,IAAT,CAAc7C,GAAd,MAAuB,IAA3B,EAAiC;EAC/BA,IAAAA,GAAG,GAAGA,GAAG,CAACmD,OAAJ,CAAY,MAAZ,EAAoB,EAApB,CAAN;EACD,GAVyB;;;EAY1BnD,EAAAA,GAAG,GAAGA,GAAG,CAACmD,OAAJ,CAAY,OAAZ,EAAqB,EAArB,CAAN,CAZ0B;;EAc1BnD,EAAAA,GAAG,GAAGA,GAAG,CAACmD,OAAJ,CAAY,WAAZ,EAAyB,EAAzB,CAAN,CAd0B;;EAgB1BnD,EAAAA,GAAG,GAAGA,GAAG,CAACmD,OAAJ,CAAY,wEAAZ,EAAsF,GAAtF,CAAN,CAhB0B;;EAkB1BnD,EAAAA,GAAG,GAAGA,GAAG,CAACmD,OAAJ,CACJ,sGADI,EAEJ,GAFI,CAAN,CAlB0B;;EAuB1BnD,EAAAA,GAAG,GAAGA,GAAG,CAACmD,OAAJ,CAAY,SAAZ,EAAuB,KAAvB,CAAN,CAvB0B;;EAyB1BnD,EAAAA,GAAG,GAAGA,GAAG,CAACmD,OAAJ,CAAY,SAAZ,EAAuB,GAAvB,CAAN,CAzB0B;;EA2B1B,MAAI,uBAAuBN,IAAvB,CAA4B7C,GAA5B,MAAqC,IAAzC,EAA+C;EAC7CA,IAAAA,GAAG,GAAGA,GAAG,CAACmD,OAAJ,CAAY,SAAZ,EAAuB,KAAvB,CAAN;EACD,GA7ByB;;;EA+B1B,MAAI,sBAAsBN,IAAtB,CAA2B7C,GAA3B,MAAoC,IAAxC,EAA8C;EAC5CA,IAAAA,GAAG,GAAGA,GAAG,CAACmD,OAAJ,CAAY,GAAZ,EAAiB,EAAjB,CAAN;EACD,GAjCyB;;;EAmC1B,MAAI,QAAQN,IAAR,CAAa7C,GAAb,MAAsB,KAA1B,EAAiC;EAC/BA,IAAAA,GAAG,GAAGA,GAAG,CAACmD,OAAJ,CAAY,UAAZ,EAAwB,EAAxB,CAAN;EACAnD,IAAAA,GAAG,GAAGA,GAAG,CAACmD,OAAJ,CAAY,mBAAZ,EAAiC,EAAjC,CAAN;EACAnD,IAAAA,GAAG,GAAGA,GAAG,CAACmD,OAAJ,CAAY,WAAZ,EAAyB,EAAzB,CAAN;EACD,GAvCyB;;;EAyC1BnD,EAAAA,GAAG,GAAGA,GAAG,CAACmD,OAAJ,CAAY,QAAZ,EAAsB,EAAtB,CAAN,CAzC0B;;EA4C1BnD,EAAAA,GAAG,GAAGA,GAAG,CAACiD,IAAJ,EAAN,CA5C0B;;EA8C1B,MAAIjD,GAAG,KAAK,EAAZ,EAAgB;EACdA,IAAAA,GAAG,GAAGkD,QAAN;EACD,GAhDyB;;;EAkD1B,MAAIN,WAAS,CAAC5C,GAAD,CAAb,EAAoB;EAClBA,IAAAA,GAAG,GAAGA,GAAG,CAACmD,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,CAAN;EACD,GApDyB;;;EAsD1BnD,EAAAA,GAAG,GAAGA,GAAG,CAACmD,OAAJ,CAAY,kBAAZ,EAAgC,MAAhC,CAAN;EACA,SAAOnD,GAAP;EACD,CAxDD;;EA0DA,WAAc,GAAG+C,KAAjB;;;;;EC1DA,IAAIK,SAAS,GAAG,4FAAhB;EACA,IAAIC,OAAO,GAAG,8FAAd;;;;;;EAMA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAtD,GAAG,EAAI;EACvB,MAAIuD,GAAG,GAAG,EAAV;EACA,MAAIC,IAAI,GAAG,EAAX;EACAxD,EAAAA,GAAG,GAAGA,GAAG,CAACmD,OAAJ,CAAYC,SAAZ,EAAuB,UAAAK,KAAK,EAAI;EACpCF,IAAAA,GAAG,GAAGE,KAAN;EACA,WAAO,EAAP;EACD,GAHK,CAAN;EAIAzD,EAAAA,GAAG,GAAGA,GAAG,CAACmD,OAAJ,CAAYE,OAAZ,EAAqB,UAAAI,KAAK,EAAI;EAClCD,IAAAA,IAAI,GAAGC,KAAP;EACA,WAAO,EAAP;EACD,GAHK,CAAN,CAPuB;;EAYvB,MAAIzD,GAAG,KAAK,EAAZ,EAAgB;EACdA,IAAAA,GAAG,GAAGuD,GAAG,CAACJ,OAAJ,CAAY,OAAZ,EAAqB,EAArB,EAAyBF,IAAzB,EAAN;EACAM,IAAAA,GAAG,GAAG,EAAN;EACAC,IAAAA,IAAI,GAAG,GAAP;EACD;;EACD,MAAME,MAAM,GAAG;EACbzD,IAAAA,IAAI,EAAED,GADO;EAEb+C,IAAAA,KAAK,EAAEA,OAAK,CAAC/C,GAAD,CAFC;EAGbuD,IAAAA,GAAG,EAAEA,GAHQ;EAIbC,IAAAA,IAAI,EAAEA;EAJO,GAAf;EAMA,SAAOE,MAAP;EACD,CAxBD;;EAyBA,SAAc,GAAGJ,SAAjB;;ECrCA,IAAMK,SAAS,GAAG,2BAAlB;;;EAGA,eAAmB,GAAG,oBAAA,CAASC,KAAT,EAAgB;EACpC,OAAK3D,IAAL,GAAY,KAAKA,IAAL,CAAU4D,WAAV,EAAZ;EACA,OAAKC,GAAL,CAAS,YAAT,EAAuB,aAAvB,EAAsCF,KAAtC;EACA,SAAO,IAAP;EACD,CAJD;;;;EAOA,eAAmB,GAAG,oBAAA,CAASA,KAAT,EAAgB;EACpC,OAAK3D,IAAL,GAAY,KAAKA,IAAL,CAAU+C,WAAV,EAAZ;EACA,OAAKe,KAAL,CAAW,YAAX,EAAyBH,KAAzB;EACA,OAAKG,KAAL,CAAW,YAAX,EAAyBH,KAAzB;EACA,SAAO,IAAP;EACD,CALD;;;;;;EAUA,eAAmB,GAAG,oBAAA,CAASA,KAAT,EAAgB;EACpC,OAAK3D,IAAL,GAAY,KAAKA,IAAL,CAAUkD,OAAV,CAAkB,uBAAlB,EAA2C,UAAApB,CAAC;EAAA,WAAIA,CAAC,CAAC8B,WAAF,EAAJ;EAAA,GAA5C,CAAZ,CADoC;;EAEpC,OAAKC,GAAL,CAAS,YAAT,EAAuB,aAAvB,EAAsCF,KAAtC;EACA,SAAO,IAAP;EACD,CAJD;;;;EAOA,eAAmB,GAAG,oBAAA,GAAW;EAC/B,SAAOD,SAAS,CAACd,IAAV,CAAe,KAAK5C,IAApB,CAAP;EACD,CAFD;;;;;;;;;EC3BA;;;EAGA,WAAe,GAAG,gBAAA,CAAS+D,KAAT,EAAgB;EAChC,SAAO,KAAKR,IAAL,CAAUS,QAAV,CAAmBD,KAAnB,CAAP;EACD,CAFD;;;;EAKA,YAAgB,GAAG,iBAAA,GAAW;EAC5B,SAAO,KAAKE,OAAL,CAAa,GAAb,CAAP;EACD,CAFD;;;;EAKA,aAAiB,GAAG,kBAAA,GAAW;EAC7B,SAAO,KAAKA,OAAL,CAAa,GAAb,MAAsB,IAAtB,IAA8B,KAAKA,OAAL,CAAa,KAAb,MAAwB,KAA7D;EACD,CAFD;;;;EAKA,kBAAsB,GAAG,uBAAA,GAAW;EAClC,SAAO,KAAKA,OAAL,CAAa,GAAb,CAAP;EACD,CAFD;;;;EAKA,mBAAuB,GAAG,wBAAA,GAAW;EACnC,SAAO,KAAKA,OAAL,CAAa,GAAb,KAAqB,KAAKA,OAAL,CAAa,GAAb,CAA5B;EACD,CAFD;;;;EAKA,eAAmB,GAAG,oBAAA,GAAW;EAC/B,SAAO,KAAKA,OAAL,CAAa,IAAb,KAAsB,KAAKA,OAAL,CAAa,GAAb,CAA7B;EACD,CAFD;;;;EAKA,gBAAoB,GAAG,qBAAA,GAAW;EAChC,SAAO,KAAKA,OAAL,CAAa,GAAb,CAAP;EACD,CAFD;;;;EAKA,cAAgB,GAAG,iBAAA,GAAW;EAC5B,SAAO,KAAKA,OAAL,CAAa,GAAb,CAAP;EACD,CAFD;;;;EAKA,kBAAsB,GAAG,uBAAA,GAAW;EAClC,SAAOC,OAAO,CAAC,KAAKC,QAAN,CAAd;EACD,CAFD;;;;EAKA,kBAAsB,GAAG,uBAAA,CAASJ,KAAT,EAAgB;;EAEvC,MAAIA,KAAK,KAAK,GAAV,IAAiBA,KAAK,KAAK,GAA/B,EAAoC;EAClC,SAAKR,IAAL,GAAY,KAAKA,IAAL,CAAUL,OAAV,CAAkBa,KAAlB,EAAyB,EAAzB,CAAZ;EACD;;EACD,OAAKR,IAAL,GAAYQ,KAAK,GAAG,KAAKR,IAAzB;EACA,SAAO,IAAP;EACD,CAPD;;;;;;;;;;;;;;;EChDA;EACA,IAAIa,SAAS,GAAG,qBAAW,EAA3B;;;;EAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAS3C,CAAT,EAAY4C,GAAZ,EAAiB;;EAEjC,MAAIA,GAAG,CAACC,EAAJ,KAAW7C,CAAC,CAAC6C,EAAjB,EAAqB;EACnB,WAAO,IAAP;EACD,GAJgC;;;EAMjC,MAAID,GAAG,CAACE,QAAJ,KAAiB,IAArB,EAA2B;EACzB,WAAO,IAAP;EACD,GARgC;;;EAUjC,MAAIF,GAAG,CAACG,IAAJ,KAAaC,SAAjB,EAA4B;;EAE1B,QAAIhD,CAAC,CAACyC,QAAF,KAAe,IAAf,IAAuBzC,CAAC,CAACyC,QAAF,KAAeG,GAAG,CAACG,IAA9C,EAAoD;EAClD,aAAO,IAAP;EACD,KAJyB;;;EAM1B,WAAOH,GAAG,CAACG,IAAJ,KAAa/C,CAAC,CAACoB,KAAf,IAAwBwB,GAAG,CAACG,IAAJ,KAAa/C,CAAC,CAAC1B,IAA9C;EACD,GAjBgC;;;EAmBjC,MAAIsE,GAAG,CAACT,GAAJ,KAAYa,SAAhB,EAA2B;EACzB,WAAOhD,CAAC,CAACiD,IAAF,CAAOL,GAAG,CAACT,GAAX,MAAoB,IAA3B;EACD,GArBgC;;;EAuBjC,MAAIS,GAAG,CAACM,MAAJ,KAAeF,SAAnB,EAA8B;EAC5B,QAAI,OAAOhD,CAAC,CAAC4C,GAAG,CAACM,MAAL,CAAR,KAAyB,UAAzB,IAAuClD,CAAC,CAAC4C,GAAG,CAACM,MAAL,CAAD,OAAoB,IAA/D,EAAqE;EACnE,aAAO,IAAP;EACD;;EACD,WAAO,KAAP;EACD,GA5BgC;;;EA8BjC,MAAIN,GAAG,CAACO,KAAJ,KAAcH,SAAlB,EAA6B;EAC3B,WAAOJ,GAAG,CAACO,KAAJ,CAAUjC,IAAV,CAAelB,CAAC,CAACoB,KAAjB,CAAP;EACD,GAhCgC;;;EAkCjC,MAAIwB,GAAG,CAACQ,OAAJ,KAAgBJ,SAApB,EAA+B;;EAE7B,QAAIK,QAAQ,GAAGT,GAAG,CAACQ,OAAJ,CAAYE,IAAZ,CAAiB,UAAAxD,CAAC;EAAA,aAAI4C,SAAS,CAAC1C,CAAD,EAAIF,CAAJ,CAAb;EAAA,KAAlB,CAAf;EACA,WAAOuD,QAAQ,KAAKL,SAApB;EACD;;EACD,SAAO,KAAP;EACD,CAxCD;;;EA2CAN,SAAS,GAAG,mBAAS1C,CAAT,EAAY4C,GAAZ,EAAiB;EAC3B,MAAIW,MAAM,GAAGZ,SAAS,CAAC3C,CAAD,EAAI4C,GAAJ,CAAtB;;EACA,MAAIA,GAAG,CAACY,QAAJ,KAAiB,IAArB,EAA2B;EACzB,WAAO,CAACD,MAAR;EACD;;EACD,SAAOA,MAAP;EACD,CAND;;EAQA,cAAc,GAAGb,SAAjB;;ECnDA,IAAMe,MAAM,GAAG;EACbC,EAAAA,SAAS,EAAE,IADE;EAEbC,EAAAA,SAAS,EAAE,IAFE;EAGbC,EAAAA,SAAS,EAAE,IAHE;EAIbC,EAAAA,UAAU,EAAE,IAJC;EAKbC,EAAAA,YAAY,EAAE,IALD;EAMbC,EAAAA,UAAU,EAAE,IANC;EAObC,EAAAA,KAAK,EAAE,IAPM;EAQbC,EAAAA,SAAS,EAAE;EARE,CAAf;;;EAYA,eAAiB,GAAG,oBAAA,CAASrB,GAAT,EAAc;EAChC,SAAOD,UAAS,CAAC,IAAD,EAAOC,GAAP,CAAhB;EACD,CAFD;;;;EAKA,iBAAiB,GAAG,sBAAA,GAAW;EAC7B,SAAO3B,WAAS,CAAC,KAAK3C,IAAN,CAAhB;EACD,CAFD;;;;EAKA,WAAe,GAAG,gBAAA,GAAW;EAC3B,SAAOkC,MAAM,CAACC,IAAP,CAAY,KAAKwC,IAAjB,EAAuBiB,IAAvB,CAA4B,UAAAlE,CAAC;EAAA,WAAIyD,MAAM,CAACzD,CAAD,CAAN,KAAc,IAAlB;EAAA,GAA7B,CAAP;EACD,CAFD;;;;;;;;EC1BA,IAAMmE,QAAQ,GAAG,MAAjB;;;EAEA,WAAe,GAAG,gBAAA,CAASC,OAAT,EAAkBC,OAAlB,EAA2BC,QAA3B,EAAqC;EACrD,MAAIvB,IAAI,GAAG,KAAKzE,IAAhB;EACA,MAAIiG,MAAM,GAAG,KAAK3C,GAAlB;EACA,MAAI4C,KAAK,GAAG,KAAK3C,IAAjB;;EAEA,MAAIuC,OAAO,CAAC7D,OAAR,KAAoB,IAAxB,EAA8B;EAC5BwC,IAAAA,IAAI,GAAG,KAAK3B,KAAZ;EACD;;EACD,MAAIgD,OAAO,CAACK,UAAR,KAAuB,IAA3B,EAAiC;EAC/BF,IAAAA,MAAM,GAAG,EAAT;EACAC,IAAAA,KAAK,GAAG,GAAR;;EACA,QAAIL,QAAQ,CAACjD,IAAT,CAAc,KAAKW,IAAnB,MAA6B,KAA7B,IAAsCuC,OAAO,CAACM,IAAlD,EAAwD;EACtDF,MAAAA,KAAK,GAAG,EAAR;EACD;EACF;;EACD,MAAIJ,OAAO,CAACO,SAAR,KAAsB,IAA1B,EAAgC;EAC9B5B,IAAAA,IAAI,GAAGA,IAAI,CAAC1B,WAAL,EAAP;EACD;;EACD,MAAI+C,OAAO,CAACQ,WAAR,KAAwB,IAA5B,EAAkC;;EAEhC,QAAI,KAAKrC,OAAL,CAAa,GAAb,MAAsB,IAA1B,EAAgC;EAC9BiC,MAAAA,KAAK,GAAG,MAAMA,KAAd;EACD,KAFD,MAEO,IAAI,KAAKjC,OAAL,CAAa,GAAb,MAAsB,IAA1B,EAAgC;EACrCiC,MAAAA,KAAK,GAAG,MAAMA,KAAd;EACD,KAFM,MAEA,IAAI,KAAKjC,OAAL,CAAa,GAAb,MAAsB,IAA1B,EAAgC;EACrCiC,MAAAA,KAAK,GAAG,MAAMA,KAAd;EACD,KAFM,MAEA,IAAI,KAAKjC,OAAL,CAAa,GAAb,MAAsB,IAA1B,EAAgC;EACrCiC,MAAAA,KAAK,GAAG,MAAMA,KAAd;EACD,KAFM,MAEA,IAAI,KAAKK,WAAL,OAAuB,IAA3B,EAAiC;EACtCL,MAAAA,KAAK,GAAG,QAAQA,KAAhB;EACD;EACF;;EACD,MAAIH,OAAO,KAAK,IAAhB,EAAsB;EACpBE,IAAAA,MAAM,GAAG,EAAT;EACD;;EACD,MAAID,QAAQ,KAAK,IAAjB,EAAuB;EACrBE,IAAAA,KAAK,GAAG,EAAR;EACD;;EACD,SAAOD,MAAM,GAAGxB,IAAT,GAAgByB,KAAvB;EACD,CAvCD;;;;EA0CA,QAAY,GAAG,aAAA,CAASJ,OAAT,EAAkB;EAC/B,MAAIb,MAAM,GAAG,EAAb;;EACA,MAAIa,OAAO,CAAC9F,IAAZ,EAAkB;EAChBiF,IAAAA,MAAM,CAACjF,IAAP,GAAc,KAAKA,IAAnB;EACD;;EACD,MAAI8F,OAAO,CAAChD,KAAZ,EAAmB;EACjBmC,IAAAA,MAAM,CAACnC,KAAP,GAAe,KAAKA,KAApB;EACD;;EACD,MAAIgD,OAAO,CAAC3B,QAAR,IAAoB,KAAKA,QAAL,KAAkB,IAA1C,EAAgD;EAC9Cc,IAAAA,MAAM,CAACd,QAAP,GAAkB,KAAKA,QAAvB;EACD;;EACD,MAAI2B,OAAO,CAACnB,IAAZ,EAAkB;EAChBM,IAAAA,MAAM,CAACN,IAAP,GAAczC,MAAM,CAACC,IAAP,CAAY,KAAKwC,IAAjB,CAAd;EACD;;EACD,MAAImB,OAAO,CAACK,UAAZ,EAAwB;EACtBlB,IAAAA,MAAM,CAAC3B,GAAP,GAAa,KAAKA,GAAlB;EACA2B,IAAAA,MAAM,CAAC1B,IAAP,GAAc,KAAKA,IAAnB;EACD;;EACD,SAAO0B,MAAP;EACD,CAnBD;;;;;;;EC5CA,WAAc,GAAG/C,MAAM,CAACsE,MAAP,CACf,EADe,EAEfC,OAFe,EAGfC,cAHe,EAIfC,OAJe,EAKfC,MALe,CAAjB;;ECAA;EACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAS9G,GAAT,EAAc+G,KAAd,EAAqB;EAClC/G,EAAAA,GAAG,GAAGA,GAAG,CAACgH,QAAJ,EAAN;;EACA,SAAOhH,GAAG,CAACM,MAAJ,GAAayG,KAApB,EAA2B;EACzB/G,IAAAA,GAAG,IAAI,GAAP;EACD;;EACD,SAAOA,GAAP;EACD,CAND;;;;EASA,UAAc,GAAG,eAAA,CAAS2B,CAAT,EAAYmC,GAAZ,EAAiBmD,MAAjB,EAAyB;EACxC,MAAIC,GAAG,GAAG,aAAaJ,MAAM,CAACnF,CAAC,CAACoB,KAAH,EAAU,EAAV,CAAnB,GAAmC,oBAAnC,GAA0De,GAA1D,GAAgE,UAA1E;;EACA,MAAImD,MAAJ,EAAY;EACVC,IAAAA,GAAG,GAAGJ,MAAM,CAACI,GAAD,EAAM,EAAN,CAAN,GAAkB,GAAlB,GAAwBD,MAAxB,GAAiC,EAAvC;EACD;;EACDE,EAAAA,OAAO,CAACD,GAAR,CAAYA,GAAZ;EACD,CAND;;;;EASA,YAAgB,GAAG,iBAAA,CAASvF,CAAT,EAAYmC,GAAZ,EAAiBmD,MAAjB,EAAyB;EAC1C,MAAIC,GAAG,GAAG,aAAaJ,MAAM,CAACnF,CAAC,CAACoB,KAAH,EAAU,CAAV,CAAnB,GAAkC,eAAlC,GAAoDe,GAApD,GAA0D,UAApE;;EACA,MAAImD,MAAJ,EAAY;EACVC,IAAAA,GAAG,GAAGJ,MAAM,CAACI,GAAD,EAAM,EAAN,CAAN,GAAkB,GAAlB,GAAwBD,MAA9B;EACD;;EACDE,EAAAA,OAAO,CAACD,GAAR,CAAYA,GAAZ;EACD,CAND;;EAQA,WAAe,GAAG,gBAAA,CAASE,GAAT,EAAc;EAC9B,SAAOjF,MAAM,CAACkF,SAAP,CAAiBL,QAAjB,CAA0BM,IAA1B,CAA+BF,GAA/B,MAAwC,gBAA/C;EACD,CAFD;;EAIA,eAAiB,GAAG,kBAAA,CAAApH,GAAG,EAAI;EACzB,SAAOA,GAAG,CAACuH,MAAJ,CAAW,CAAX,EAAc1D,WAAd,KAA8B7D,GAAG,CAACwH,MAAJ,CAAW,CAAX,CAArC;EACD,CAFD;;;;;;;;;EC7BA;;EACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAS9F,CAAT,EAAYmC,GAAZ,EAAiBmD,MAAjB,EAAyBrD,KAAzB,EAAgC;EAC7C,MAAI,CAACA,KAAL,EAAY;EACVuD,IAAAA,OAAO,CAACO,IAAR,CAAa,uBAAuBT,MAApC;EACD,GAH4C;;;EAK7C,MAAInD,GAAG,KAAK,EAAR,IAAcA,GAAG,KAAK,GAAtB,IAA6BA,GAAG,KAAK,GAAzC,EAA8C;EAC5C;EACD;;EACD,MAAIA,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoB;EAClBA,IAAAA,GAAG,GAAGA,GAAG,CAACX,OAAJ,CAAY,IAAZ,EAAkB,EAAlB,CAAN;EACD;;EACDW,EAAAA,GAAG,GAAG6D,GAAG,CAAChE,SAAJ,CAAcG,GAAd,CAAN,CAX6C;;EAa7C,MAAInC,CAAC,CAACiD,IAAF,CAAOd,GAAP,MAAgB,IAApB,EAA0B;EACxB;EACD;;EACD,MAAIF,KAAK,KAAKe,SAAV,IAAuBf,KAAK,CAACgE,SAAN,OAAsB,IAAjD,EAAuD;EACrDD,IAAAA,GAAG,CAACE,MAAJ,CAAWlG,CAAX,EAAcmC,GAAd,EAAmBmD,MAAnB;EACD,GAlB4C;;;EAoB7CtF,EAAAA,CAAC,CAACiD,IAAF,CAAOd,GAAP,IAAc,IAAd,CApB6C;;;EAuB7C,MAAIF,KAAK,KAAKe,SAAV,IAAuBf,KAAK,CAACgB,IAAN,KAAeD,SAA1C,EAAqD;EACnD,QAAImD,MAAM,GAAGlE,KAAK,CAACgB,IAAnB;;EACA,QAAIkD,MAAM,CAACC,cAAP,CAAsBjE,GAAtB,MAA+B,IAAnC,EAAyC;;EAEvC,UAAIgE,MAAM,CAAChE,GAAD,CAAN,CAAYkE,GAAZ,KAAoBrD,SAAxB,EAAmC;EACjC,YAAIsD,SAAS,GAAGH,MAAM,CAAChE,GAAD,CAAN,CAAYkE,GAA5B;EACAP,QAAAA,MAAM,CAAC9F,CAAD,EAAIsG,SAAJ,EAAe,GAAf,EAAoBrE,KAApB,CAAN,CAFiC;EAGlC,OALsC;;;EAOvC,UAAIkE,MAAM,CAAChE,GAAD,CAAN,CAAYoE,IAAZ,KAAqBvD,SAAzB,EAAoC;EAClC,YAAIwD,OAAO,GAAGL,MAAM,CAAChE,GAAD,CAAN,CAAYoE,IAA1B;EACAT,QAAAA,MAAM,CAAC9F,CAAD,EAAIwG,OAAJ,EAAa,GAAb,EAAkBvE,KAAlB,CAAN,CAFkC;EAGnC,OAVsC;;;EAYvC,UAAI,OAAOkE,MAAM,CAAChE,GAAD,CAAN,CAAYsE,IAAnB,KAA4B,WAAhC,EAA6C;EAC3CzG,QAAAA,CAAC,CAACoC,KAAF,CAAQ+D,MAAM,CAAChE,GAAD,CAAN,CAAYsE,IAApB,EAA0B,GAA1B,EAA+BxE,KAA/B;EACD;EACF;EACF;EACF,CA1CD;;;;EA6CA,IAAMyE,OAAO,GAAG,SAAVA,OAAU,CAASC,IAAT,EAAe1D,IAAf,EAAqBqC,MAArB,EAA6BrD,KAA7B,EAAoC;EAClD,MAAI+D,GAAG,CAACY,OAAJ,CAAY3D,IAAZ,MAAsB,IAA1B,EAAgC;EAC9BA,IAAAA,IAAI,CAACvC,OAAL,CAAa,UAAAyB,GAAG;EAAA,aAAI2D,MAAM,CAACa,IAAD,EAAOxE,GAAP,EAAYmD,MAAZ,EAAoBrD,KAApB,CAAV;EAAA,KAAhB;EACD,GAFD,MAEO;EACL6D,IAAAA,MAAM,CAACa,IAAD,EAAO1D,IAAP,EAAaqC,MAAb,EAAqBrD,KAArB,CAAN;EACD;EACF,CAND;;EAOA,OAAc,GAAGyE,OAAjB;;ECrDA;;EACA,IAAMtE,KAAK,GAAG,SAARA,KAAQ,CAASpC,CAAT,EAAYmC,GAAZ,EAAiBmD,MAAjB,EAAyBrD,KAAzB,EAAgC;;EAE5C,MAAIE,GAAG,KAAK,GAAZ,EAAiB;EACfnC,IAAAA,CAAC,CAACiD,IAAF,GAAS,EAAT;EACA,WAAOjD,CAAP;EACD,GAL2C;;;EAO5C,MAAIA,CAAC,CAACiD,IAAF,CAAOd,GAAP,MAAgB,IAAhB,IAAwBnC,CAAC,CAACiD,IAAF,CAAOmD,cAAP,CAAsBjE,GAAtB,MAA+B,IAA3D,EAAiE;EAC/D,WAAOnC,CAAC,CAACiD,IAAF,CAAOd,GAAP,CAAP,CAD+D;;EAG/D,QAAIF,KAAK,KAAKe,SAAV,IAAuBf,KAAK,CAACgE,SAAN,OAAsB,IAAjD,EAAuD;EACrDD,MAAAA,GAAG,CAACa,QAAJ,CAAa7G,CAAb,EAAgBmC,GAAhB,EAAqBmD,MAArB;EACD;EACF,GAb2C;;;EAe5C,MAAIrD,KAAJ,EAAW;;EAET,QAAMkE,MAAM,GAAGlE,KAAK,CAACgB,IAArB;;EACA,QAAIkD,MAAM,CAAChE,GAAD,CAAV,EAAiB;EACf,UAAIoE,IAAI,GAAGJ,MAAM,CAAChE,GAAD,CAAN,CAAY2E,QAAvB;;EACA,WAAK,IAAIvI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgI,IAAI,CAAC5H,MAAzB,EAAiCJ,CAAC,EAAlC,EAAsC;EACpC6D,QAAAA,KAAK,CAACpC,CAAD,EAAIuG,IAAI,CAAChI,CAAD,CAAR,EAAa,WAAb,EAA0B0D,KAA1B,CAAL,CADoC;EAErC;EACF;EACF;;EACD,SAAOjC,CAAP;EACD,CA1BD;;;EA6BA,IAAM+G,QAAQ,GAAG,SAAXA,QAAW,CAASJ,IAAT,EAAe1D,IAAf,EAAqBqC,MAArB,EAA6BrD,KAA7B,EAAoC;EACnD,MAAI+D,GAAG,CAACY,OAAJ,CAAY3D,IAAZ,MAAsB,IAA1B,EAAgC;EAC9BA,IAAAA,IAAI,CAACvC,OAAL,CAAa,UAAAyB,GAAG;EAAA,aAAIC,KAAK,CAACuE,IAAD,EAAOxE,GAAP,EAAYmD,MAAZ,EAAoBrD,KAApB,CAAT;EAAA,KAAhB;EACD,GAFD,MAEO;EACLG,IAAAA,KAAK,CAACuE,IAAD,EAAO1D,IAAP,EAAaqC,MAAb,EAAqBrD,KAArB,CAAL;EACD;EACF,CAND;;EAOA,WAAc,GAAG8E,QAAjB;;ECpCA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAASL,IAAT,EAAexE,GAAf,EAAoBF,KAApB,EAA2B;EACvC,MAAMkE,MAAM,GAAGlE,KAAK,CAACgB,IAArB,CADuC;;EAGvC,MAAId,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoB;EAClBA,IAAAA,GAAG,GAAGA,GAAG,CAACX,OAAJ,CAAY,IAAZ,EAAkB,EAAlB,CAAN;EACD,GALsC;;;EAOvC,MAAI2E,MAAM,CAAChE,GAAD,CAAN,KAAgBa,SAApB,EAA+B;EAC7B,WAAO,IAAP;EACD,GATsC;;;EAWvC,MAAIiE,OAAO,GAAGd,MAAM,CAAChE,GAAD,CAAN,CAAYsE,IAAZ,IAAoB,EAAlC;;EACA,OAAK,IAAIlI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0I,OAAO,CAACtI,MAA5B,EAAoCJ,CAAC,EAArC,EAAyC;EACvC,QAAIoI,IAAI,CAAC1D,IAAL,CAAUgE,OAAO,CAAC1I,CAAD,CAAjB,MAA0B,IAA9B,EAAoC;EAClC,aAAO,KAAP;EACD;EACF;;EACD,MAAI4H,MAAM,CAAChE,GAAD,CAAN,CAAYkE,GAAZ,KAAoBrD,SAAxB,EAAmC;EACjC,WAAOgE,KAAK,CAACL,IAAD,EAAOR,MAAM,CAAChE,GAAD,CAAN,CAAYkE,GAAnB,EAAwBpE,KAAxB,CAAZ,CADiC;EAElC;;EACD,SAAO,IAAP;EACD,CArBD;;EAuBA,WAAc,GAAG+E,KAAjB;;ECtBA;;;;;EAIA,SAAW,GAAG,cAAA,CAAS/D,IAAT,EAAeqC,MAAf,EAAuBrD,KAAvB,EAA8B;EAC1CiF,EAAAA,GAAG,CAAC,IAAD,EAAOjE,IAAP,EAAaqC,MAAb,EAAqBrD,KAArB,CAAH;EACA,SAAO,IAAP;EACD,CAHD;;;;EAMA,WAAe,GAAG,gBAAA,CAASgB,IAAT,EAAeqC,MAAf,EAAuBrD,KAAvB,EAA8B;EAC9C,MAAI+E,OAAK,CAAC,IAAD,EAAO/D,IAAP,EAAahB,KAAb,CAAT,EAA8B;EAC5BiF,IAAAA,GAAG,CAAC,IAAD,EAAOjE,IAAP,EAAaqC,MAAb,EAAqBrD,KAArB,CAAH;EACD;;EACD,SAAO,IAAP;EACD,CALD;;;;;;;EAWA,aAAa,GAAG,kBAAA,CAASgB,IAAT,EAAeqC,MAAf,EAAuBrD,KAAvB,EAA8B;EAC5CG,EAAAA,OAAK,CAAC,IAAD,EAAOa,IAAP,EAAaqC,MAAb,EAAqBrD,KAArB,CAAL;EACA,SAAO,IAAP;EACD,CAHD;;;;;;;EASA,aAAa,GAAG,kBAAA,CAASgB,IAAT,EAAehB,KAAf,EAAsB;EACpC,SAAO+E,OAAK,CAAC,IAAD,EAAO/D,IAAP,EAAahB,KAAb,CAAZ;EACD,CAFD;;;;;;;;;MC7BMkF;;;EACJ,kBAAuB;EAAA,QAAX7I,IAAW,uEAAJ,EAAI;;EAAA;;EACrBA,IAAAA,IAAI,GAAG8I,MAAM,CAAC9I,IAAD,CAAb;EACA,QAAI+I,GAAG,GAAG1F,KAAS,CAACrD,IAAD,CAAnB;EACA,SAAKA,IAAL,GAAY+I,GAAG,CAAC/I,IAAJ,IAAY,EAAxB;EACA,SAAK8C,KAAL,GAAaiG,GAAG,CAACjG,KAAJ,IAAa,EAA1B;EACA,SAAKqB,QAAL,GAAgB4E,CAAgB,IAAhC;EACA,SAAKzF,GAAL,GAAWyF,GAAG,CAACzF,GAAJ,IAAW,EAAtB;EACA,SAAKC,IAAL,GAAYwF,GAAG,CAACxF,IAAJ,IAAY,EAAxB;EACA,SAAKyF,GAAL,GAAWhJ,IAAI,CAACgD,IAAL,EAAX;EACA,SAAK2B,IAAL,GAAY,EAAZ;EACA,SAAKsE,IAAL,GAAY,IAAZ;EACA,SAAKC,IAAL,GAAY,IAAZ;EACA,SAAK3E,EAAL,GAAUzE,GAAM,CAAC,KAAKgD,KAAN,CAAhB;EACA,SAAKiF,GAAL,GAAW,MAAX,CAbqB;EActB;;;;;;0BAEGhI,KAAK;EACP,UAAIgJ,GAAG,GAAG1F,KAAS,CAACtD,GAAD,CAAnB;EACA,WAAKC,IAAL,GAAY+I,GAAG,CAAC/I,IAAhB;EACA,WAAK8C,KAAL,GAAaiG,GAAG,CAACjG,KAAjB;EACA,aAAO,IAAP;EACD;;;;;;;;EAIH+F,IAAI,CAACzB,SAAL,CAAe+B,KAAf,GAAuB,YAAW;EAChC,MAAId,IAAI,GAAG,IAAIQ,IAAJ,CAAS,KAAK7I,IAAd,CAAX;EACAqI,EAAAA,IAAI,CAAC/E,GAAL,GAAW,KAAKA,GAAhB;EACA+E,EAAAA,IAAI,CAAC9E,IAAL,GAAY,KAAKA,IAAjB;EACA8E,EAAAA,IAAI,CAAC1D,IAAL,GAAYzC,MAAM,CAACsE,MAAP,CAAc,EAAd,EAAkB6B,IAAI,CAAC1D,IAAvB,CAAZ;EACA,SAAO0D,IAAP;EACD,CAND;;EAQAnG,MAAM,CAACsE,MAAP,CAAcqC,IAAI,CAACzB,SAAnB,EAA8BgC,OAA9B;EACAlH,MAAM,CAACsE,MAAP,CAAcqC,IAAI,CAACzB,SAAnB,EAA8BiC,GAA9B;EAEA,UAAc,GAAGR,IAAjB;;EC1CA;EACA,SAAa,GAAG,eAASzH,CAAT,EAAY;EAC1B,MAAIkI,KAAK,GAAG,CAAC,KAAKC,IAAL,CAAUC,GAAV,CAAc,KAAKC,KAAnB,CAAD,CAAZ;;EACA,MAAI,KAAKpJ,MAAL,KAAgB,CAApB,EAAuB;EACrB,WAAO,EAAP;EACD;;EACD,OAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKI,MAAL,GAAc,CAAlC,EAAqCJ,CAAC,IAAI,CAA1C,EAA6C;EAC3C,QAAIsE,EAAE,GAAG+E,KAAK,CAACA,KAAK,CAACjJ,MAAN,GAAe,CAAhB,CAAL,CAAwB6I,IAAjC;;EACA,QAAI3E,EAAE,KAAK,IAAX,EAAiB;EACf2C,MAAAA,OAAO,CAACO,IAAR,CAAa,oBAAb;EACA;EACD;;EACD,QAAIY,IAAI,GAAG,KAAKkB,IAAL,CAAUC,GAAV,CAAcjF,EAAd,CAAX;EACA+E,IAAAA,KAAK,CAACI,IAAN,CAAWrB,IAAX,EAP2C;;EAS3C,QAAIjH,CAAC,KAAKsD,SAAN,IAAmBtD,CAAC,KAAKnB,CAA7B,EAAgC;EAC9B,aAAOqJ,KAAK,CAAClI,CAAD,CAAZ;EACD;EACF;;EACD,MAAIA,CAAC,KAAKsD,SAAV,EAAqB;EACnB,WAAO4E,KAAK,CAAClI,CAAD,CAAZ;EACD;;EACD,SAAOkI,KAAP;EACD,CAtBD;;;;EAyBA,SAAa,GAAG,cAAA,GAAW;EAAA;;;EAEzB,MAAIA,KAAK,GAAG,KAAKA,KAAL,EAAZ;EACA,MAAIK,QAAQ,GAAGL,KAAK,CAACM,GAAN,CAAU,UAAAlI,CAAC;EAAA,WAAIA,CAAC,CAACyH,KAAF,EAAJ;EAAA,GAAX,CAAf,CAHyB;;EAKzBQ,EAAAA,QAAQ,CAACvH,OAAT,CAAiB,UAACV,CAAD,EAAIzB,CAAJ,EAAU;;EAEzB,IAAA,KAAI,CAACsJ,IAAL,CAAUX,GAAV,CAAclH,CAAd;;EACA,QAAIiI,QAAQ,CAAC1J,CAAC,GAAG,CAAL,CAAZ,EAAqB;EACnByB,MAAAA,CAAC,CAACwH,IAAF,GAASS,QAAQ,CAAC1J,CAAC,GAAG,CAAL,CAAR,CAAgBsE,EAAzB;EACD;;EACD,QAAIoF,QAAQ,CAAC1J,CAAC,GAAG,CAAL,CAAZ,EAAqB;EACnByB,MAAAA,CAAC,CAACuH,IAAF,GAASU,QAAQ,CAAC1J,CAAC,GAAG,CAAL,CAAR,CAAgBsE,EAAzB;EACD;EACF,GATD;EAUA,SAAO,KAAKsF,SAAL,CAAeF,QAAQ,CAAC,CAAD,CAAR,CAAYpF,EAA3B,EAA+BoF,QAAQ,CAACtJ,MAAxC,CAAP;EACD,CAhBD;;;;EAmBA,YAAgB,GAAG,iBAAA,GAAW;EAC5B,MAAIiJ,KAAK,GAAG,KAAKA,KAAL,EAAZ;EACA,SAAOA,KAAK,CAACA,KAAK,CAACjJ,MAAN,GAAe,CAAhB,CAAZ;EACD,CAHD;;;;EAMA,SAAa,GAAG,cAAA,CAASyJ,MAAT,EAAiB;EAC/B,MAAI,KAAKzJ,MAAL,KAAgB,CAAhB,IAAqB,CAACyJ,MAA1B,EAAkC;EAChC,WAAO,KAAP;EACD;;EACD,MAAI,KAAKL,KAAL,KAAeK,MAAnB,EAA2B;EACzB,WAAO,IAAP;EACD;;EACD,MAAIC,MAAM,GAAG,KAAKN,KAAlB;;EACA,OAAK,IAAIxJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKI,MAAL,GAAc,CAAlC,EAAqCJ,CAAC,IAAI,CAA1C,EAA6C;EAC3C,QAAIoI,IAAI,GAAG,KAAKkB,IAAL,CAAUC,GAAV,CAAcO,MAAd,CAAX;;EACA,QAAI1B,IAAI,CAACa,IAAL,KAAcY,MAAlB,EAA0B;EACxB,aAAO,IAAP;EACD;;EACDC,IAAAA,MAAM,GAAG1B,IAAI,CAACa,IAAd;EACD;;EACD,SAAO,KAAP;EACD,CAhBD;;;;EAmBA,aAAiB,GAAG,kBAAA,GAAW;EAC7B,SAAO,KAAKI,KAAL,GAAaU,MAAb,CAAoB,UAAAtI,CAAC;EAAA,WAAIA,CAAC,CAAC1B,IAAF,KAAW,EAAf;EAAA,GAArB,EAAwCK,MAA/C;EACD,CAFD;;;;;;;;;;ECtEA,IAAM4J,OAAO,GAAG,SAAVA,OAAU,CAASlK,GAAT,EAAc;EAC5B,SAAOA,GAAG,CAACmD,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,CAAP;EACD,CAFD;;;;EAKA,QAAY,GAAG,gBAAwC;EAAA,MAA/B4C,OAA+B,uEAArB,EAAqB;EAAA,MAAjBoE,OAAiB;EAAA,MAARC,MAAQ;;EACrD,MAAI,OAAOrE,OAAP,KAAmB,QAAvB,EAAiC;EAC/B,QAAIA,OAAO,KAAK,QAAhB,EAA0B;EACxBA,MAAAA,OAAO,GAAG;EACRQ,QAAAA,WAAW,EAAE,IADL;EAERH,QAAAA,UAAU,EAAE,IAFJ;EAGRlE,QAAAA,OAAO,EAAE;EAHD,OAAV;EAKD,KAND,MAMO,IAAI6D,OAAO,KAAK,OAAhB,EAAyB;EAC9BA,MAAAA,OAAO,GAAG;EACRO,QAAAA,SAAS,EAAE,IADH;EAERC,QAAAA,WAAW,EAAE,IAFL;EAGRH,QAAAA,UAAU,EAAE,IAHJ;EAIRlE,QAAAA,OAAO,EAAE;EAJD,OAAV;EAMD,KAPM,MAOA;EACL6D,MAAAA,OAAO,GAAG,EAAV;EACD;EACF;;EACD,MAAIwD,KAAK,GAAG,KAAKA,KAAL,EAAZ,CAnBqD;;EAqBrD,MAAIc,MAAM,GAAG,KAAb;;EACA,MAAId,KAAK,CAAC,CAAD,CAAL,IAAYA,KAAK,CAAC,CAAD,CAAL,CAASL,IAAT,KAAkB,IAA9B,IAAsCK,KAAK,CAACA,KAAK,CAACjJ,MAAN,GAAe,CAAhB,CAAL,CAAwB6I,IAAxB,KAAiC,IAA3E,EAAiF;EAC/EkB,IAAAA,MAAM,GAAG,IAAT;EACD;;EACD,MAAIpK,IAAI,GAAGsJ,KAAK,CAACe,MAAN,CAAa,UAACtK,GAAD,EAAM2B,CAAN,EAASzB,CAAT,EAAe;EACrC6F,IAAAA,OAAO,CAACM,IAAR,GAAe+D,MAAM,IAAIlK,CAAC,KAAKqJ,KAAK,CAACjJ,MAAN,GAAe,CAA9C;EACA,QAAI0F,OAAO,GAAG,IAAd;EACA,QAAIC,QAAQ,GAAG,IAAf;;EACA,QAAIoE,MAAM,KAAK,KAAf,EAAsB;;EAEpB,UAAInK,CAAC,KAAK,CAAN,IAAWiK,OAAf,EAAwB;EACtBnE,QAAAA,OAAO,GAAG,KAAV;EACD,OAJmB;;;EAMpB,UAAI9F,CAAC,KAAKqJ,KAAK,CAACjJ,MAAN,GAAe,CAArB,IAA0B8J,MAA9B,EAAsC;EACpCnE,QAAAA,QAAQ,GAAG,KAAX;EACD;EACF;;EACD,WAAOjG,GAAG,GAAG2B,CAAC,CAAC4I,OAAF,CAAUxE,OAAV,EAAmBC,OAAnB,EAA4BC,QAA5B,CAAb;EACD,GAfU,EAeR,EAfQ,CAAX,CAzBqD;;EA0CrD,MAAIoE,MAAM,KAAK,IAAX,IAAmBD,MAAvB,EAA+B;EAC7BnK,IAAAA,IAAI,GAAGiK,OAAO,CAACjK,IAAD,CAAd;EACD;;EACD,SAAOA,IAAP;EACD,CA9CD;;;;EAiDA,UAAY,GAAG,aAAA,GAAuB;EAAA,MAAd8F,OAAc,uEAAJ,EAAI;EACpC,MAAIyE,GAAG,GAAG,EAAV,CADoC;;EAGpC,MAAIzE,OAAO,CAAC9F,IAAZ,EAAkB;EAChBuK,IAAAA,GAAG,CAACvK,IAAJ,GAAW,KAAKA,IAAL,CAAU8F,OAAV,CAAX;;EACA,QAAIA,OAAO,CAAC9C,IAAZ,EAAkB;EAChBuH,MAAAA,GAAG,CAACvK,IAAJ,GAAWuK,GAAG,CAACvK,IAAJ,CAASgD,IAAT,EAAX;EACD;EACF;;EACD,MAAI8C,OAAO,CAAC0E,MAAZ,EAAoB;EAClBD,IAAAA,GAAG,CAACC,MAAJ,GAAa,KAAKxK,IAAL,CAAU;EACrBsG,MAAAA,WAAW,EAAE,IADQ;EAErBH,MAAAA,UAAU,EAAE,IAFS;EAGrBlE,MAAAA,OAAO,EAAE;EAHY,KAAV,CAAb;EAKD,GAfmC;;;EAiBpC,MAAI6D,OAAO,CAACwD,KAAZ,EAAmB;EACjBiB,IAAAA,GAAG,CAACjB,KAAJ,GAAY,KAAKA,KAAL,GAAaM,GAAb,CAAiB,UAAAlI,CAAC;EAAA,aAAIA,CAAC,CAAC+I,IAAF,CAAO3E,OAAO,CAACwD,KAAf,CAAJ;EAAA,KAAlB,CAAZ;EACD;;EACD,SAAOiB,GAAP;EACD,CArBD;;;;;;;ECtDA;EACA,QAAY,GAAG,aAAA,GAAW;EACxB,MAAIjB,KAAK,GAAG,KAAKA,KAAL,EAAZ;;EACA,MAAIA,KAAK,CAACjJ,MAAN,GAAe,CAAnB,EAAsB;;EAEpBiJ,IAAAA,KAAK,CAAC,CAAD,CAAL,CAAShG,GAAT,GAAegG,KAAK,CAAC,CAAD,CAAL,CAAShG,GAAT,CAAaJ,OAAb,CAAqB,MAArB,EAA6B,EAA7B,CAAf,CAFoB;;EAIpB,QAAIwH,QAAQ,GAAGpB,KAAK,CAACA,KAAK,CAACjJ,MAAN,GAAe,CAAhB,CAApB;EACAqK,IAAAA,QAAQ,CAACnH,IAAT,GAAgBmH,QAAQ,CAACnH,IAAT,CAAcL,OAAd,CAAsB,MAAtB,EAA8B,EAA9B,CAAhB;EACD;;EACD,SAAO,IAAP;EACD,CAVD;;;;;;ECDA;EACA,IAAMyH,aAAa,GAAG,SAAhBA,aAAgB,CAASC,WAAT,EAAsBjB,QAAtB,EAAgC;;EAEpDA,EAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYrG,GAAZ,GAAkBsH,WAAW,CAAC,CAAD,CAAX,CAAetH,GAAjC;EACA,MAAIoH,QAAQ,GAAGE,WAAW,CAACA,WAAW,CAACvK,MAAZ,GAAqB,CAAtB,CAA1B,CAHoD;;EAMpD,MAAIwK,OAAO,GAAGlB,QAAQ,CAACA,QAAQ,CAACtJ,MAAT,GAAkB,CAAnB,CAAtB;EACAwK,EAAAA,OAAO,CAACtH,IAAR,GAAemH,QAAQ,CAACnH,IAAxB,CAPoD;;EASpDmH,EAAAA,QAAQ,CAACnH,IAAT,GAAgB,EAAhB,CAToD;;EAYpD,MAAImH,QAAQ,CAACnH,IAAT,KAAkB,EAAtB,EAA0B;EACxBmH,IAAAA,QAAQ,CAACnH,IAAT,IAAiB,GAAjB;EACD;EACF,CAfD;;;EAkBA,IAAMuH,QAAQ,GAAG,SAAXA,QAAW,CAASC,IAAT,EAAeC,SAAf,EAA0B;EACzC,MAAIC,OAAO,GAAGF,IAAI,CAACL,QAAL,GAAgBxB,IAA9B,CADyC;;EAGzC6B,EAAAA,IAAI,CAACL,QAAL,GAAgBxB,IAAhB,GAAuB8B,SAAS,CAACvB,KAAjC,CAHyC;;EAKzCuB,EAAAA,SAAS,CAACN,QAAV,GAAqBxB,IAArB,GAA4B+B,OAA5B,CALyC;;EAOzC,MAAIA,OAAJ,EAAa;;EAEX,QAAIC,SAAS,GAAGH,IAAI,CAACxB,IAAL,CAAUC,GAAV,CAAcyB,OAAd,CAAhB;EACAC,IAAAA,SAAS,CAACjC,IAAV,GAAiB+B,SAAS,CAACN,QAAV,GAAqBnG,EAAtC;EACD,GAXwC;;;EAazC,MAAI4G,QAAQ,GAAGJ,IAAI,CAACzB,KAAL,CAAW,CAAX,EAAc/E,EAA7B;;EACA,MAAI4G,QAAJ,EAAc;EACZ,QAAIN,OAAO,GAAGG,SAAS,CAAC1B,KAAV,CAAgB,CAAhB,CAAd;EACAuB,IAAAA,OAAO,CAAC5B,IAAR,GAAekC,QAAf;EACD;EACF,CAlBD;;;EAqBA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAASC,GAAT,EAAc9G,EAAd,EAAkB+G,GAAlB,EAAuB;EACxC,MAAIC,MAAM,GAAGF,GAAG,CAACG,IAAJ,CAASxG,IAAT,CAAc,UAAA1D,CAAC;EAAA,WAAIA,CAAC,CAACmK,KAAF,CAAQlH,EAAR,CAAJ;EAAA,GAAf,CAAb;EACAgH,EAAAA,MAAM,CAAClL,MAAP,IAAiBiL,GAAjB,CAFwC;;EAKxC,MAAII,OAAO,GAAGL,GAAG,CAACK,OAAJ,EAAd;EACAA,EAAAA,OAAO,CAACtJ,OAAR,CAAgB,UAAAuJ,MAAM,EAAI;EACxBJ,IAAAA,MAAM,GAAGI,MAAM,CAACH,IAAP,CAAYxG,IAAZ,CAAiB,UAAA1D,CAAC;EAAA,aAAIA,CAAC,CAACmK,KAAF,CAAQlH,EAAR,CAAJ;EAAA,KAAlB,CAAT;EACAgH,IAAAA,MAAM,CAAClL,MAAP,IAAiBiL,GAAjB;EACD,GAHD;EAID,CAVD;;;EAaA,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAASb,IAAT,EAAeC,SAAf,EAA0BK,GAA1B,EAA+B;EAChD,MAAIT,WAAW,GAAGG,IAAI,CAACzB,KAAL,EAAlB,CADgD;;EAGhDqB,EAAAA,aAAa,CAACC,WAAD,EAAcI,SAAS,CAAC1B,KAAV,EAAd,CAAb,CAHgD;;EAKhDwB,EAAAA,QAAQ,CAACC,IAAD,EAAOC,SAAP,CAAR,CALgD;;EAOhDI,EAAAA,UAAU,CAACC,GAAD,EAAMT,WAAW,CAAC,CAAD,CAAX,CAAerG,EAArB,EAAyByG,SAAS,CAAC3K,MAAnC,CAAV;EACA,SAAO0K,IAAP;EACD,CATD;;EAUA,UAAc,GAAGa,UAAjB;;EC/DA,IAAM/F,UAAQ,GAAG,GAAjB;;;EAIA,IAAM8E,eAAa,GAAG,SAAhBA,aAAgB,CAAShB,QAAT,EAAmB1G,QAAnB,EAA6B;;;EAIjD,MAAIyH,QAAQ,GAAGf,QAAQ,CAACA,QAAQ,CAACtJ,MAAT,GAAkB,CAAnB,CAAvB;;EACA,MAAIwF,UAAQ,CAACjD,IAAT,CAAc8H,QAAQ,CAACnH,IAAvB,MAAiC,KAArC,EAA4C;EAC1CmH,IAAAA,QAAQ,CAACnH,IAAT,IAAiB,GAAjB;EACD,GAPgD;;;;;;;;;;;;;;;EAuBjD;EACD,CAxBD;;;EA2BA,IAAMuH,UAAQ,GAAG,SAAXA,QAAW,CAASC,IAAT,EAAeC,SAAf,EAA0BrB,QAA1B,EAAoC;;EAEnD,MAAIe,QAAQ,GAAGf,QAAQ,CAACA,QAAQ,CAACtJ,MAAT,GAAkB,CAAnB,CAAvB;EACAqK,EAAAA,QAAQ,CAACxB,IAAT,GAAgB6B,IAAI,CAACtB,KAArB,CAHmD;;EAKnD,MAAIF,IAAI,GAAGwB,IAAI,CAACxB,IAAhB;EACA,MAAIE,KAAK,GAAGF,IAAI,CAACC,GAAL,CAASuB,IAAI,CAACtB,KAAd,CAAZ;;EACA,MAAIA,KAAK,CAACR,IAAV,EAAgB;EACd,QAAIhD,MAAM,GAAGsD,IAAI,CAACC,GAAL,CAASC,KAAK,CAACR,IAAf,CAAb;EACAhD,IAAAA,MAAM,CAACiD,IAAP,GAAc8B,SAAS,CAACvB,KAAxB;EACD,GAVkD;;;;EAanDE,EAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYV,IAAZ,GAAmB8B,IAAI,CAACzB,KAAL,CAAW,CAAX,EAAcL,IAAjC,CAbmD;;EAenD8B,EAAAA,IAAI,CAACzB,KAAL,CAAW,CAAX,EAAcL,IAAd,GAAqByB,QAAQ,CAACnG,EAA9B;EACD,CAhBD;;;EAmBA,IAAM6G,YAAU,GAAG,SAAbA,UAAa,CAASC,GAAT,EAAcQ,QAAd,EAAwBb,SAAxB,EAAmC;;EAEpD,MAAIO,MAAM,GAAGF,GAAG,CAACG,IAAJ,CAASxG,IAAT,CAAc,UAAA1D,CAAC;EAAA,WAAIA,CAAC,CAACmK,KAAF,CAAQI,QAAR,KAAqBvK,CAAC,CAACmK,KAAF,CAAQT,SAAS,CAACvB,KAAlB,CAAzB;EAAA,GAAf,CAAb;;EACA,MAAI8B,MAAM,KAAK7G,SAAf,EAA0B;EACxBwC,IAAAA,OAAO,CAAC4E,KAAR,CAAc,+CAA+CD,QAA7D;EACA;EACD,GANmD;;;EAQpD,MAAIN,MAAM,CAAC9B,KAAP,KAAiBoC,QAArB,EAA+B;EAC7BN,IAAAA,MAAM,CAAC9B,KAAP,GAAeuB,SAAS,CAACvB,KAAzB;EACD,GAVmD;;;EAYpD8B,EAAAA,MAAM,CAAClL,MAAP,IAAiB2K,SAAS,CAAC3K,MAA3B;;EACA,MAAIgL,GAAG,CAACU,IAAR,EAAc;EACZX,IAAAA,UAAU,CAACC,GAAG,CAACU,IAAL,EAAWF,QAAX,EAAqBb,SAArB,CAAV;EACD;EACF,CAhBD;;;EAmBA,IAAMY,YAAU,GAAG,SAAbA,UAAa,CAAS3I,QAAT,EAAmB+H,SAAnB,EAA8BK,GAA9B,EAAmC;EACpD,MAAI1B,QAAQ,GAAGqB,SAAS,CAAC1B,KAAV,EAAf;EACA,MAAIuC,QAAQ,GAAG5I,QAAQ,CAACwG,KAAxB,CAFoD;;EAIpDkB,EAAAA,eAAa,CAAChB,QAAD,AAAA,CAAb,CAJoD;;EAMpDmB,EAAAA,UAAQ,CAAC7H,QAAD,EAAW+H,SAAX,EAAsBrB,QAAtB,CAAR,CANoD;;EAQpDyB,EAAAA,YAAU,CAACC,GAAD,EAAMQ,QAAN,EAAgBb,SAAhB,CAAV;EACA,SAAO/H,QAAP;EACD,CAVD;;EAWA,WAAc,GAAG2I,YAAjB;;EChFA;EACA,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAASX,GAAT,EAAc9G,EAAd,EAAkB0H,YAAlB,EAAgC/F,KAAhC,EAAuC;;EAEvD,MAAIqF,MAAM,GAAGF,GAAG,CAACG,IAAJ,CAASxG,IAAT,CAAc,UAAA1D,CAAC;EAAA,WAAIA,CAAC,CAACmK,KAAF,CAAQlH,EAAR,CAAJ;EAAA,GAAf,CAAb;;EACA,MAAIgH,MAAM,KAAK7G,SAAf,EAA0B;EACxB6G,IAAAA,MAAM,CAAClL,MAAP,IAAiB4L,YAAjB,CADwB;;EAIxB,QAAIV,MAAM,CAAC9B,KAAP,KAAiBlF,EAArB,EAAyB;EACvBgH,MAAAA,MAAM,CAAC9B,KAAP,GAAevD,KAAK,CAAC3B,EAArB;EACD;EACF;;EACD,MAAI8G,GAAG,CAACU,IAAR,EAAc;EACZC,IAAAA,SAAS,CAACX,GAAG,CAACU,IAAL,EAAWxH,EAAX,EAAe0H,YAAf,EAA6B/F,KAA7B,CAAT;EACD;EACF,CAdD;;;;;;EAmBA,IAAMgG,YAAY,GAAG,SAAfA,YAAe,CAASX,MAAT,EAAiBF,GAAjB,EAAsB;EACzC,MAAI9B,IAAI,GAAG8B,GAAG,CAAC9B,IAAJ,EAAX;EACA,MAAID,KAAK,GAAGiC,MAAM,CAACjC,KAAP,EAAZ,CAFyC;;EAKzC,MAAIL,IAAI,GAAGM,IAAI,CAACC,GAAL,CAASF,KAAK,CAAC,CAAD,CAAL,CAASL,IAAlB,KAA2B,EAAtC;EACA,MAAI/C,KAAK,GAAGqD,IAAI,CAACC,GAAL,CAASF,KAAK,CAACA,KAAK,CAACjJ,MAAN,GAAe,CAAhB,CAAL,CAAwB6I,IAAjC,KAA0C,EAAtD,CANyC;;EASzC8C,EAAAA,SAAS,CAACX,GAAD,EAAME,MAAM,CAAC9B,KAAb,EAAoB8B,MAAM,CAAClL,MAA3B,EAAmC6F,KAAnC,CAAT,CATyC;;EAYzC,MAAI+C,IAAJ,EAAU;EACRA,IAAAA,IAAI,CAACC,IAAL,GAAYhD,KAAK,CAAC3B,EAAlB;EACD,GAdwC;;;EAgBzC,MAAI2B,KAAJ,EAAW;EACTA,IAAAA,KAAK,CAAC+C,IAAN,GAAaA,IAAI,CAAC1E,EAAlB;EACD,GAlBwC;;;EAoBzC,OAAK,IAAItE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqJ,KAAK,CAACjJ,MAA1B,EAAkCJ,CAAC,EAAnC,EAAuC;EAEtC;EACF,CAvBD;;EAwBA,WAAc,GAAGiM,YAAjB;;;;ECtCA,YAAc,GAAG,iBAAA,CAASlB,SAAT,EAAoBK,GAApB,EAAyB;EACxCc,EAAAA,MAAM,CAAC,IAAD,EAAOnB,SAAP,EAAkBK,GAAlB,CAAN;EACA,SAAO,IAAP;EACD,CAHD;;;;EAMA,aAAe,GAAG,kBAAA,CAASL,SAAT,EAAoBK,GAApB,EAAyB;EACzCe,EAAAA,OAAO,CAAC,IAAD,EAAOpB,SAAP,EAAkBK,GAAlB,CAAP;EACA,SAAO,IAAP;EACD,CAHD;;EAKA,YAAc,GAAG,iBAAA,CAASA,GAAT,EAAc;EAC7Ba,EAAAA,OAAY,CAAC,IAAD,EAAOb,GAAP,CAAZ;EACA,SAAO,IAAP;EACD,CAHD;;EAKA,WAAe,GAAG,gBAAA,CAASL,SAAT,EAAoBK,GAApB,EAAyB;;EAEzC,MAAIgB,WAAW,GAAG,KAAKhM,MAAvB;EACA8L,EAAAA,MAAM,CAAC,IAAD,EAAOnB,SAAP,EAAkBK,GAAlB,CAAN,CAHyC;;EAKzC,MAAIiB,GAAG,GAAG,KAAKzC,SAAL,CAAe,KAAKJ,KAApB,EAA2B,KAAKpJ,MAAhC,CAAV;EACAiM,EAAAA,GAAG,CAACjM,MAAJ,GAAagM,WAAb;EAEAH,EAAAA,OAAY,CAACI,GAAD,EAAMjB,GAAN,CAAZ;EACA,SAAO,IAAP;EACD,CAVD;;;;;;EAeA,WAAe,GAAG,gBAAA,CAAS/J,CAAT,EAAY;EAC5B,MAAIgI,KAAK,GAAG,KAAKA,KAAL,EAAZ;EACA,MAAIrE,MAAM,GAAG;EACXgB,IAAAA,MAAM,EAAE,IADG;EAEXsG,IAAAA,KAAK,EAAE,IAFI;EAGXrG,IAAAA,KAAK,EAAE;EAHI,GAAb;EAKA,MAAIsG,KAAK,GAAGlD,KAAK,CAACmD,SAAN,CAAgB,UAAA/K,CAAC;EAAA,WAAIA,CAAC,CAAC6C,EAAF,KAASjD,CAAC,CAACmI,KAAf;EAAA,GAAjB,CAAZ;;EACA,MAAI+C,KAAK,KAAK,CAAC,CAAf,EAAkB;EAChB,WAAOvH,MAAP;EACD,GAV2B;;;EAY5B,MAAIwE,KAAK,GAAGH,KAAK,CAACoD,KAAN,CAAY,CAAZ,EAAeF,KAAf,CAAZ;;EACA,MAAI/C,KAAK,CAACpJ,MAAN,GAAe,CAAnB,EAAsB;EACpB4E,IAAAA,MAAM,CAACgB,MAAP,GAAgB,KAAK4D,SAAL,CAAeJ,KAAK,CAAC,CAAD,CAAL,CAASlF,EAAxB,EAA4BkF,KAAK,CAACpJ,MAAlC,CAAhB;EACD;;EACD,MAAIkM,KAAK,GAAGjD,KAAK,CAACoD,KAAN,CAAYF,KAAZ,EAAmBA,KAAK,GAAGlL,CAAC,CAACjB,MAA7B,CAAZ;;EACA,MAAIkM,KAAK,CAAClM,MAAN,GAAe,CAAnB,EAAsB;EACpB4E,IAAAA,MAAM,CAACsH,KAAP,GAAe,KAAK1C,SAAL,CAAe0C,KAAK,CAAC,CAAD,CAAL,CAAShI,EAAxB,EAA4BgI,KAAK,CAAClM,MAAlC,CAAf;EACD;;EACD,MAAIsM,GAAG,GAAGrD,KAAK,CAACoD,KAAN,CAAYF,KAAK,GAAGlL,CAAC,CAACjB,MAAtB,EAA8BiJ,KAAK,CAACjJ,MAApC,CAAV;;EACA,MAAIsM,GAAG,CAACtM,MAAJ,GAAa,CAAjB,EAAoB;EAClB4E,IAAAA,MAAM,CAACiB,KAAP,GAAe,KAAK2D,SAAL,CAAe8C,GAAG,CAAC,CAAD,CAAH,CAAOpI,EAAtB,EAA0BoI,GAAG,CAACtM,MAA9B,EAAsC,KAAKkJ,IAA3C,CAAf;EACD;;EACD,SAAOtE,MAAP;EACD,CAzBD;;;;;;;;;;ECrCA,aAAc,GAAG/C,MAAM,CAACsE,MAAP,CACf,EADe,EAEfC,QAFe,EAGfC,MAHe,EAIfC,SAJe,EAKfC,QALe,CAAjB;;ECAA;EACA,IAAMgG,QAAQ,GAAG,SAAXA,QAAW,CAAStD,KAAT,EAAgBuD,IAAhB,EAAsB;EACrC,MAAIA,IAAI,CAACxM,MAAL,KAAgB,CAApB,EAAuB;EACrB,WAAO,IAAP;EACD;;EACD,OAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4M,IAAI,CAACxM,MAAzB,EAAiCJ,CAAC,IAAI,CAAtC,EAAyC;EACvC,QAAIqE,GAAG,GAAGuI,IAAI,CAAC5M,CAAD,CAAd,CADuC;;EAGvC,QAAIqE,GAAG,CAACwI,QAAJ,KAAiB,IAArB,EAA2B;;EAEzB,UAAIxI,GAAG,CAACE,QAAJ,KAAiB,IAAjB,IAAyBF,GAAG,CAACY,QAAJ,KAAiB,IAA9C,EAAoD;EAClD,eAAO,IAAP;EACD,OAJwB;;;EAMzB,UAAIZ,GAAG,CAACmF,KAAJ,KAAc,IAAd,IAAsBxJ,CAAC,GAAG,CAA9B,EAAiC;EAC/B,eAAO,IAAP;EACD;;EACD,UAAIqE,GAAG,CAACqI,GAAJ,KAAY,IAAZ,IAAoB1M,CAAC,GAAG4M,IAAI,CAACxM,MAAL,GAAc,CAA1C,EAA6C;EAC3C,eAAO,IAAP;EACD;;EACD,UAAIiE,GAAG,CAACmF,KAAJ,KAAc,IAAd,IAAsBnF,GAAG,CAACqI,GAAJ,KAAY,IAAlC,IAA0CrD,KAAK,CAACjJ,MAAN,GAAe,CAA7D,EAAgE;EAC9D,eAAO,IAAP;EACD,OAdwB;;;EAgBzB,UAAIiE,GAAG,CAACQ,OAAJ,IAAeR,GAAG,CAACQ,OAAJ,CAAYzE,MAAZ,KAAuB,CAA1C,EAA6C;EAC3C,eAAO,IAAP;EACD;EACF;EACF;;EACD,SAAO,KAAP;EACD,CA7BD;;EA8BA,eAAc,GAAGuM,QAAjB;;EC/BA;EACA,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAASzD,KAAT,EAAgB5H,CAAhB,EAAmB4C,GAAnB,EAAwB0I,KAAxB,EAA+B;EAC/C,SAAOtL,CAAC,GAAG4H,KAAK,CAACjJ,MAAjB,EAAyBqB,CAAC,IAAI,CAA9B,EAAiC;;EAE/B,QAAIsL,KAAK,IAAI1D,KAAK,CAAC5H,CAAD,CAAL,CAAS2C,SAAT,CAAmB2I,KAAnB,CAAb,EAAwC;EACtC,aAAOtL,CAAP;EACD,KAJ8B;;;EAM/B,QAAI4H,KAAK,CAAC5H,CAAD,CAAL,CAAS2C,SAAT,CAAmBC,GAAnB,MAA4B,KAAhC,EAAuC;EACrC,aAAO5C,CAAP;EACD;EACF;;EACD,SAAOA,CAAP;EACD,CAZD;;;EAeA,IAAMuL,QAAQ,GAAG,SAAXA,QAAW,CAAS3D,KAAT,EAAgB5H,CAAhB,EAAmBwL,OAAnB,EAA4B;;EAE3C,MAAI,CAACA,OAAL,EAAc;EACZ,WAAO5D,KAAK,CAACjJ,MAAb;EACD,GAJ0C;;;EAM3C,SAAOqB,CAAC,GAAG4H,KAAK,CAACjJ,MAAjB,EAAyBqB,CAAC,IAAI,CAA9B,EAAiC;EAC/B,QAAI4H,KAAK,CAAC5H,CAAD,CAAL,CAAS2C,SAAT,CAAmB6I,OAAnB,MAAgC,IAApC,EAA0C;EACxC,aAAOxL,CAAP;EACD;EACF,GAV0C;;;EAY3C,SAAO,IAAP;EACD,CAbD;;;;EAgBA,IAAMyL,OAAO,GAAG,SAAVA,OAAU,CAAS7D,KAAT,EAAgBuD,IAAhB,EAAsB;EACpC,MAAIO,QAAQ,GAAG,EAAf;EACA,MAAI1L,CAAC,GAAG,CAAR,CAFoC;;EAIpC,OAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqL,IAAI,CAACxM,MAAzB,EAAiCmB,CAAC,IAAI,CAAtC,EAAyC;EACvC,QAAI8C,GAAG,GAAGuI,IAAI,CAACrL,CAAD,CAAd,CADuC;;EAIvC,QAAI,CAAC8H,KAAK,CAAC5H,CAAD,CAAV,EAAe;;EAEb,UAAM2L,QAAQ,GAAGR,IAAI,CAACH,KAAL,CAAWlL,CAAX,EAAcoE,IAAd,CAAmB,UAAA0H,MAAM;EAAA,eAAI,CAACA,MAAM,CAACR,QAAZ;EAAA,OAAzB,CAAjB;;EACA,UAAIO,QAAQ,KAAK,KAAjB,EAAwB;EACtB;EACD,OALY;;;EAOb,aAAO,KAAP;EACD,KAZsC;;;EAevC,QAAI/I,GAAG,CAACE,QAAJ,KAAiB,IAAjB,IAAyBF,GAAG,CAACiJ,MAAJ,KAAe,IAA5C,EAAkD;EAChD,UAAIC,MAAM,GAAGP,QAAQ,CAAC3D,KAAD,EAAQ5H,CAAR,EAAWmL,IAAI,CAACrL,CAAC,GAAG,CAAL,CAAf,CAArB,CADgD;;EAGhD,UAAIgM,MAAM,KAAK,IAAf,EAAqB;EACnB,eAAO,KAAP,CADmB;EAEpB;;EACD9L,MAAAA,CAAC,GAAG8L,MAAJ;EACA;EACD,KAvBsC;;;EA0BvC,QAAIlJ,GAAG,CAACE,QAAJ,KAAiB,IAAjB,IAAyB8E,KAAK,CAAC5H,CAAD,CAAL,CAAS2C,SAAT,CAAmBC,GAAnB,MAA4B,IAAzD,EAA+D;EAC7D,UAAImJ,OAAO,GAAG/L,CAAd,CAD6D;;EAG7DA,MAAAA,CAAC,IAAI,CAAL,CAH6D;;EAK7D,UAAI4C,GAAG,CAACqI,GAAJ,KAAY,IAAhB,EAAsB;;EAEpB,YAAIjL,CAAC,KAAK4H,KAAK,CAACjJ,MAAZ,IAAsBiE,GAAG,CAACiJ,MAAJ,KAAe,IAAzC,EAA+C;EAC7C,iBAAO,KAAP;EACD;EACF,OAV4D;;;EAY7D,UAAIjJ,GAAG,CAACiJ,MAAJ,KAAe,IAAnB,EAAyB;EACvB7L,QAAAA,CAAC,GAAGqL,SAAS,CAACzD,KAAD,EAAQ5H,CAAR,EAAW4C,GAAX,EAAgBuI,IAAI,CAACrL,CAAC,GAAG,CAAL,CAApB,CAAb;EACD;;EACD,UAAI8C,GAAG,CAACoJ,OAAR,EAAiB;EACfN,QAAAA,QAAQ,CAAC1D,IAAT,CAAc+D,OAAd,EADe;;EAGf,YAAI/L,CAAC,GAAG,CAAJ,IAAS4C,GAAG,CAACiJ,MAAjB,EAAyB;EACvBH,UAAAA,QAAQ,CAAC1D,IAAT,CAAchI,CAAC,GAAG,CAAlB;EACD;EACF;;EACD;EACD,KAjDsC;;;EAoDvC,QAAI4C,GAAG,CAACwI,QAAJ,KAAiB,IAArB,EAA2B;EACzB;EACD,KAtDsC;;;EAwDvC,WAAO,KAAP;EACD,GA7DmC;;;;EAgEpC,MAAIM,QAAQ,CAAC/M,MAAT,GAAkB,CAAtB,EAAyB;;EAEvB,QAAI8G,GAAG,GAAGmC,KAAK,CAACoD,KAAN,CAAYU,QAAQ,CAAC,CAAD,CAApB,EAAyBA,QAAQ,CAACA,QAAQ,CAAC/M,MAAT,GAAkB,CAAnB,CAAR,GAAgC,CAAzD,CAAV,CAFuB;;EAIvB,SAAK,IAAIiM,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG5K,CAAxB,EAA2B4K,GAAG,EAA9B,EAAkC;EAChCnF,MAAAA,GAAG,CAACmF,GAAD,CAAH,GAAWnF,GAAG,CAACmF,GAAD,CAAH,IAAY,IAAvB;EACD;;EACD,WAAOnF,GAAP;EACD,GAxEmC;;;EA0EpC,SAAOmC,KAAK,CAACoD,KAAN,CAAY,CAAZ,EAAehL,CAAf,CAAP;EACD,CA3ED;;EA4EA,eAAc,GAAGyL,OAAjB;;EC5GA;;;;;;;;;;;;;;;;;EAiBA,IAAMR,GAAG,GAAG,SAANA,GAAM,CAAS5M,GAAT,EAAc;EACxB,SAAOA,GAAG,CAACA,GAAG,CAACM,MAAJ,GAAa,CAAd,CAAV;EACD,CAFD;;EAGA,IAAMoJ,KAAK,GAAG,SAARA,KAAQ,CAAS1J,GAAT,EAAc;EAC1B,SAAOA,GAAG,CAAC,CAAD,CAAV;EACD,CAFD;;EAGA,IAAM4N,UAAU,GAAG,SAAbA,UAAa,CAAS5N,GAAT,EAAc;EAC/B,SAAOA,GAAG,CAACwH,MAAJ,CAAW,CAAX,CAAP;EACD,CAFD;;EAGA,IAAMqG,QAAQ,GAAG,SAAXA,QAAW,CAAS7N,GAAT,EAAc;EAC7B,SAAOA,GAAG,CAACwH,MAAJ,CAAW,CAAX,EAAcxH,GAAG,CAACM,MAAJ,GAAa,CAA3B,CAAP;EACD,CAFD;;EAGA,IAAMwN,SAAS,GAAG,SAAZA,SAAY,CAAS9N,GAAT,EAAc;EAC9BA,EAAAA,GAAG,GAAG4N,UAAU,CAAC5N,GAAD,CAAhB;EACAA,EAAAA,GAAG,GAAG6N,QAAQ,CAAC7N,GAAD,CAAd;EACA,SAAOA,GAAP;EACD,CAJD;;;EAOA,IAAM+N,KAAK,GAAG,SAARA,KAAQ,CAASjM,CAAT,EAAY;EACxB,MAAIkH,GAAG,GAAG,EAAV,CADwB;;EAGxB,OAAK,IAAI9I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,IAAI,CAA5B,EAA+B;;EAE7B,QAAI0M,GAAG,CAAC9K,CAAD,CAAH,KAAW,GAAf,EAAoB;EAClBkH,MAAAA,GAAG,CAACwE,MAAJ,GAAa,IAAb;EACA1L,MAAAA,CAAC,GAAG+L,QAAQ,CAAC/L,CAAD,CAAZ;EACD;;EACD,QAAIA,CAAC,KAAK,GAAN,IAAa8K,GAAG,CAAC9K,CAAD,CAAH,KAAW,GAA5B,EAAiC;EAC/BkH,MAAAA,GAAG,CAACwE,MAAJ,GAAa,IAAb;EACA1L,MAAAA,CAAC,GAAG+L,QAAQ,CAAC/L,CAAD,CAAZ;EACD;;EACD,QAAI8K,GAAG,CAAC9K,CAAD,CAAH,KAAW,GAAf,EAAoB;EAClBkH,MAAAA,GAAG,CAAC+D,QAAJ,GAAe,IAAf;EACAjL,MAAAA,CAAC,GAAG+L,QAAQ,CAAC/L,CAAD,CAAZ;EACD;;EACD,QAAI8K,GAAG,CAAC9K,CAAD,CAAH,KAAW,GAAf,EAAoB;EAClBkH,MAAAA,GAAG,CAAC4D,GAAJ,GAAU,IAAV;EACA9K,MAAAA,CAAC,GAAG+L,QAAQ,CAAC/L,CAAD,CAAZ;EACD,KAjB4B;;;EAmB7B,QAAI4H,KAAK,CAAC5H,CAAD,CAAL,KAAa,GAAjB,EAAsB;EACpBkH,MAAAA,GAAG,CAACU,KAAJ,GAAY,IAAZ;EACA5H,MAAAA,CAAC,GAAG8L,UAAU,CAAC9L,CAAD,CAAd;EACD;;EACD,QAAI4H,KAAK,CAAC5H,CAAD,CAAL,KAAa,GAAjB,EAAsB;EACpBkH,MAAAA,GAAG,CAAC7D,QAAJ,GAAe,IAAf;EACArD,MAAAA,CAAC,GAAG8L,UAAU,CAAC9L,CAAD,CAAd;EACD,KA1B4B;;;EA4B7B,QAAI4H,KAAK,CAAC5H,CAAD,CAAL,KAAa,GAAb,IAAoB8K,GAAG,CAAC9K,CAAD,CAAH,KAAW,GAAnC,EAAwC;EACtCkH,MAAAA,GAAG,CAACjE,OAAJ,GAAcjD,CAAC,CAAChC,KAAF,CAAQ,GAAR,CAAd,CADsC;;EAGtCkJ,MAAAA,GAAG,CAACjE,OAAJ,CAAY,CAAZ,IAAiB6I,UAAU,CAAC5E,GAAG,CAACjE,OAAJ,CAAY,CAAZ,CAAD,CAA3B;EACA,UAAIsB,IAAI,GAAG2C,GAAG,CAACjE,OAAJ,CAAYzE,MAAZ,GAAqB,CAAhC;EACA0I,MAAAA,GAAG,CAACjE,OAAJ,CAAYsB,IAAZ,IAAoBwH,QAAQ,CAAC7E,GAAG,CAACjE,OAAJ,CAAYsB,IAAZ,CAAD,CAA5B;EACA2C,MAAAA,GAAG,CAACjE,OAAJ,GAAciE,GAAG,CAACjE,OAAJ,CAAYkF,MAAZ,CAAmB,UAAAvI,CAAC;EAAA,eAAIA,CAAJ;EAAA,OAApB,CAAd,CANsC;;EAQtCsH,MAAAA,GAAG,CAACjE,OAAJ,GAAciE,GAAG,CAACjE,OAAJ,CAAY8E,GAAZ,CAAgBkE,KAAhB,CAAd;EACAjM,MAAAA,CAAC,GAAG,EAAJ;EACD,KAtC4B;;;EAwC7B,QAAI4H,KAAK,CAAC5H,CAAD,CAAL,KAAa,GAAb,IAAoB8K,GAAG,CAAC9K,CAAD,CAAH,KAAW,GAAnC,EAAwC;EACtCkH,MAAAA,GAAG,CAAC2E,OAAJ,GAAc,IAAd;EACA7L,MAAAA,CAAC,GAAGA,CAAC,CAACqB,OAAF,CAAU,KAAV,EAAiB,EAAjB,CAAJ;EACArB,MAAAA,CAAC,GAAGA,CAAC,CAACqB,OAAF,CAAU,KAAV,EAAiB,EAAjB,CAAJ;EACD,KA5C4B;;;EA8C7B,QAAIuG,KAAK,CAAC5H,CAAD,CAAL,KAAa,GAAb,IAAoB8K,GAAG,CAAC9K,CAAD,CAAH,KAAW,GAAnC,EAAwC;EACtCA,MAAAA,CAAC,GAAGgM,SAAS,CAAChM,CAAD,CAAb;EACAkH,MAAAA,GAAG,CAAClE,KAAJ,GAAY,IAAIkJ,MAAJ,CAAWlM,CAAX,CAAZ;EACA,aAAOkH,GAAP;EACD;EACF,GAtDuB;;;EAyDxB,MAAIU,KAAK,CAAC5H,CAAD,CAAL,KAAa,GAAjB,EAAsB;EACpBkH,IAAAA,GAAG,CAAClF,GAAJ,GAAU8J,UAAU,CAAC9L,CAAD,CAApB;EACA,WAAOkH,GAAP;EACD,GA5DuB;;;EA8DxB,MAAIU,KAAK,CAAC5H,CAAD,CAAL,KAAa,GAAjB,EAAsB;EACpBkH,IAAAA,GAAG,CAACnE,MAAJ,GAAa+I,UAAU,CAAC9L,CAAD,CAAvB;EACA,WAAOkH,GAAP;EACD;;EACD,MAAIlH,CAAC,KAAK,GAAV,EAAe;EACbkH,IAAAA,GAAG,CAACvE,QAAJ,GAAe,IAAf;EACA,WAAOuE,GAAP;EACD,GArEuB;;;EAuExB,MAAIlH,CAAC,KAAK,GAAV,EAAe;EACbkH,IAAAA,GAAG,CAACvE,QAAJ,GAAe,IAAf;EACAuE,IAAAA,GAAG,CAACwE,MAAJ,GAAa,IAAb;EACAxE,IAAAA,GAAG,CAAC+D,QAAJ,GAAe,IAAf;EACA,WAAO/D,GAAP;EACD;;EACD,MAAIlH,CAAJ,EAAO;;EAELkH,IAAAA,GAAG,CAACtE,IAAJ,GAAW5C,CAAC,CAACkB,WAAF,EAAX;EACD;;EACD,SAAOgG,GAAP;EACD,CAlFD;;EAmFA,cAAc,GAAG+E,KAAjB;;ECrHA,IAAMxF,SAAO,GAAG,SAAVA,OAAU,CAASnB,GAAT,EAAc;EAC5B,SAAOjF,MAAM,CAACkF,SAAP,CAAiBL,QAAjB,CAA0BM,IAA1B,CAA+BF,GAA/B,MAAwC,gBAA/C;EACD,CAFD;;;EAKA,IAAM6G,aAAa,GAAG,SAAhBA,aAAgB,CAASjO,GAAT,EAAc;EAClC,MAAIoH,GAAG,GAAGpH,GAAG,CAACF,KAAJ,CAAU,0BAAV,CAAV;EACAsH,EAAAA,GAAG,GAAGA,GAAG,CAACyC,GAAJ,CAAQ,UAAAnI,CAAC;EAAA,WAAIA,CAAC,CAACuB,IAAF,EAAJ;EAAA,GAAT,CAAN;EACA,SAAOmE,GAAP;EACD,CAJD;;EAMA,IAAM8G,OAAO,GAAG,SAAVA,OAAU,CAAS9G,GAAT,EAAc;EAC5B,MAAI+G,KAAK,GAAG,EAAZ;EACA/G,EAAAA,GAAG,CAAC/E,OAAJ,CAAY,UAAA7B,CAAC,EAAI;;EAEf,QAAI,aAAaqC,IAAb,CAAkBrC,CAAC,CAAC,CAAD,CAAnB,CAAJ,EAA6B;EAC3B2N,MAAAA,KAAK,CAACxE,IAAN,CAAWnJ,CAAX;EACA;EACD;;EACD,QAAIiL,IAAI,GAAGjL,CAAC,CAACV,KAAF,CAAQ,GAAR,CAAX;EACA2L,IAAAA,IAAI,GAAGA,IAAI,CAACxB,MAAL,CAAY,UAAAnI,CAAC;EAAA,aAAIA,CAAJ;EAAA,KAAb,CAAP;EACAqM,IAAAA,KAAK,GAAGA,KAAK,CAACC,MAAN,CAAa3C,IAAb,CAAR;EACD,GATD;EAUA,SAAO0C,KAAP;EACD,CAbD;;;EAgBA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAASjH,GAAT,EAAc;EAC5B,SAAO,CACL;EACErC,IAAAA,OAAO,EAAEqC,GAAG,CAACyC,GAAJ,CAAQ,UAAAnI,CAAC,EAAI;EACpB,aAAO;EACLgD,QAAAA,IAAI,EAAEhD;EADD,OAAP;EAGD,KAJQ;EADX,GADK,CAAP;EASD,CAVD;;EAYA,IAAM4M,WAAW,GAAG,SAAdA,WAAc,CAASC,MAAT,EAAiB;;EAEnC,MAAIC,KAAK,GAAGD,MAAM,CAACtE,MAAP,CAAc,UAAAtI,CAAC;EAAA,WAAIA,CAAC,CAACgM,OAAF,KAAc,IAAlB;EAAA,GAAf,EAAuCrN,MAAnD;;EACA,MAAIkO,KAAK,GAAG,CAAZ,EAAe;EACb,QAAIC,UAAU,GAAGF,MAAM,CAAC1E,GAAP,CAAW,UAAAlI,CAAC;EAAA,aAAIA,CAAC,CAACgM,OAAN;EAAA,KAAZ,CAAjB;EACA,QAAIe,KAAK,GAAGD,UAAU,CAACE,OAAX,CAAmB,IAAnB,CAAZ;EACA,QAAItI,IAAI,GAAGoI,UAAU,CAACnO,MAAX,GAAoB,CAApB,GAAwBmO,UAAU,CAACG,OAAX,GAAqBD,OAArB,CAA6B,IAA7B,CAAnC,CAHa;;EAKb,SAAK,IAAIzO,CAAC,GAAGwO,KAAb,EAAoBxO,CAAC,GAAGmG,IAAxB,EAA8BnG,CAAC,EAA/B,EAAmC;EACjCqO,MAAAA,MAAM,CAACrO,CAAD,CAAN,CAAUyN,OAAV,GAAoB,IAApB;EACD;EACF;;EACD,SAAOY,MAAP;EACD,CAbD;;EAeA,IAAMM,OAAO,GAAG,SAAVA,OAAU,CAASvD,GAAT,EAAc;EAC5B,MAAI,CAACA,GAAD,IAAQ,CAACA,GAAG,CAACG,IAAb,IAAqB,CAACH,GAAG,CAACG,IAAJ,CAAS,CAAT,CAA1B,EAAuC;EACrC,WAAO,EAAP;EACD;;EACD,SAAOH,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYlC,KAAZ,GAAoBM,GAApB,CAAwB,UAAAlI,CAAC,EAAI;EAClC,WAAO;EACL6C,MAAAA,EAAE,EAAE7C,CAAC,CAAC6C;EADD,KAAP;EAGD,GAJM,CAAP;EAKD,CATD;;;;EAYA,IAAMsK,MAAM,GAAG,SAATA,MAAS,CAASC,KAAT,EAAgB;;EAE7B,MAAIA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKpK,SAA5B,IAAyCoK,KAAK,KAAK,EAAvD,EAA2D;EACzD,WAAO,EAAP;EACD,GAJ4B;;;EAM7B,MAAI,QAAOA,KAAP,MAAiB,QAArB,EAA+B;EAC7B,QAAIxG,SAAO,CAACwG,KAAD,CAAX,EAAoB;EAClB,UAAIA,KAAK,CAACzO,MAAN,KAAiB,CAAjB,IAAsB,CAACyO,KAAK,CAAC,CAAD,CAAhC,EAAqC;EACnC,eAAO,EAAP;EACD,OAHiB;;;EAMlB,UAAI,QAAOA,KAAK,CAAC,CAAD,CAAZ,MAAoB,QAAxB,EAAkC;EAChC,eAAOA,KAAP;EACD,OARiB;;;EAUlB,UAAI,OAAOA,KAAK,CAAC,CAAD,CAAZ,KAAoB,QAAxB,EAAkC;EAChC,eAAOV,OAAO,CAACU,KAAD,CAAd;EACD;EACF,KAd4B;;;EAgB7B,QAAIA,KAAK,IAAIA,KAAK,CAAC/G,GAAN,KAAc,KAA3B,EAAkC;EAChC,aAAO6G,OAAO,CAACE,KAAD,CAAd;EACD;;EACD,WAAO,EAAP;EACD;;EACD,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;EAC7BA,IAAAA,KAAK,GAAGhG,MAAM,CAACgG,KAAD,CAAd,CAD6B;EAE9B;;EACD,MAAIR,MAAM,GAAGN,aAAa,CAACc,KAAD,CAA1B;EACAR,EAAAA,MAAM,GAAGL,OAAO,CAACK,MAAD,CAAhB;EACAA,EAAAA,MAAM,GAAGA,MAAM,CAAC1E,GAAP,CAAWmF,UAAX,CAAT,CAhC6B;;EAkC7BT,EAAAA,MAAM,GAAGD,WAAW,CAACC,MAAD,CAApB;EACA,SAAOA,MAAP;EACD,CApCD;;EAqCA,YAAc,GAAGO,MAAjB;;ECrGA;;EACA,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAAS1N,CAAT,EAAYuL,IAAZ,EAAoC;EAAA,MAAlBoC,QAAkB,uEAAP,KAAO;;;EAEnD,MAAI,OAAOpC,IAAP,KAAgB,QAApB,EAA8B;EAC5BA,IAAAA,IAAI,GAAGgC,QAAM,CAAChC,IAAD,CAAb;EACD;;EAED,MAAIvD,KAAK,GAAGhI,CAAC,CAACgI,KAAF,EAAZ,CANmD;;EAQnD,MAAIsD,WAAQ,CAACtD,KAAD,EAAQuD,IAAR,CAAR,KAA0B,IAA9B,EAAoC;EAClC,WAAO,EAAP;EACD,GAVkD;;;EAYnD,MAAMqC,SAAS,GAAGrC,IAAI,CAAC7C,MAAL,CAAY,UAAAxI,CAAC;EAAA,WAAIA,CAAC,CAACsL,QAAF,KAAe,IAAnB;EAAA,GAAb,EAAsCzM,MAAxD;EACA,MAAI8O,OAAO,GAAG,EAAd,CAbmD;;EAgBnD,MAAItC,IAAI,CAAC,CAAD,CAAJ,CAAQpD,KAAR,KAAkB,IAAtB,EAA4B;EAC1B,QAAI8C,KAAK,GAAG6C,WAAQ,CAAC9F,KAAD,EAAQuD,IAAR,CAApB;;EACA,QAAIN,KAAK,KAAK,KAAV,IAAmBA,KAAK,CAAClM,MAAN,GAAe,CAAtC,EAAyC;EACvC8O,MAAAA,OAAO,CAACzF,IAAR,CAAa6C,KAAb;EACD;;EACD,WAAO4C,OAAP;EACD,GAtBkD;;;EAwBnD,OAAK,IAAIlP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqJ,KAAK,CAACjJ,MAA1B,EAAkCJ,CAAC,IAAI,CAAvC,EAA0C;;EAExC,QAAIA,CAAC,GAAGiP,SAAJ,GAAgB5F,KAAK,CAACjJ,MAA1B,EAAkC;EAChC;EACD,KAJuC;;;;EAOxC,QAAIkM,MAAK,GAAG6C,WAAQ,CAAC9F,KAAK,CAACoD,KAAN,CAAYzM,CAAZ,CAAD,EAAiB4M,IAAjB,CAApB;;EACA,QAAIN,MAAK,KAAK,KAAV,IAAmBA,MAAK,CAAClM,MAAN,GAAe,CAAtC,EAAyC;;EAEvCJ,MAAAA,CAAC,IAAIsM,MAAK,CAAClM,MAAN,GAAe,CAApB,CAFuC;;EAIvCkM,MAAAA,MAAK,GAAGA,MAAK,CAACvC,MAAN,CAAa,UAAA7I,CAAC;EAAA,eAAIA,CAAJ;EAAA,OAAd,CAAR;EACAgO,MAAAA,OAAO,CAACzF,IAAR,CAAa6C,MAAb,EALuC;;EAOvC,UAAI0C,QAAQ,KAAK,IAAjB,EAAuB;EACrB,eAAOE,OAAP;EACD;EACF;EACF;;EACD,SAAOA,OAAP;EACD,CA7CD;;EA8CA,eAAc,GAAGH,QAAjB;;ECjDA;;;;EAGA,IAAMK,QAAQ,GAAG,SAAXA,QAAW,CAAS/N,CAAT,EAAYuL,IAAZ,EAAkB;EACjC,MAAIrJ,KAAK,GAAG,EAAZ;EACA,MAAI2D,GAAG,GAAG6H,WAAQ,CAAC1N,CAAD,EAAIuL,IAAJ,CAAlB;EACA1F,EAAAA,GAAG,CAAC/E,OAAJ,CAAY,UAAAkN,EAAE,EAAI;EAChBA,IAAAA,EAAE,CAAClN,OAAH,CAAW,UAAAV,CAAC,EAAI;EACd8B,MAAAA,KAAK,CAAC9B,CAAC,CAAC6C,EAAH,CAAL,GAAc,IAAd;EACD,KAFD;EAGD,GAJD,EAHiC;;EASjC,MAAI+E,KAAK,GAAGhI,CAAC,CAACgI,KAAF,EAAZ;EACA,MAAIrE,MAAM,GAAG,EAAb;EACA,MAAIsK,OAAO,GAAG,EAAd;EACAjG,EAAAA,KAAK,CAAClH,OAAN,CAAc,UAAAV,CAAC,EAAI;EACjB,QAAI8B,KAAK,CAAC9B,CAAC,CAAC6C,EAAH,CAAL,KAAgB,IAApB,EAA0B;EACxB,UAAIgL,OAAO,CAAClP,MAAR,GAAiB,CAArB,EAAwB;EACtB4E,QAAAA,MAAM,CAACyE,IAAP,CAAY6F,OAAZ;EACAA,QAAAA,OAAO,GAAG,EAAV;EACD;;EACD;EACD;;EACDA,IAAAA,OAAO,CAAC7F,IAAR,CAAahI,CAAb;EACD,GATD;;EAUA,MAAI6N,OAAO,CAAClP,MAAR,GAAiB,CAArB,EAAwB;EACtB4E,IAAAA,MAAM,CAACyE,IAAP,CAAY6F,OAAZ;EACD;;EACD,SAAOtK,MAAP;EACD,CA1BD;;EA2BA,OAAc,GAAGoK,QAAjB;;EC7BA;;EACA,WAAa,GAAG,gBAAA,CAAStP,GAAT,EAAc;EAAA;;EAC5B,MAAIoP,OAAO,GAAGH,WAAQ,CAAC,IAAD,EAAOjP,GAAP,CAAtB,CAD4B;;EAG5BoP,EAAAA,OAAO,GAAGA,OAAO,CAACvF,GAAR,CAAY,UAAA4B,IAAI,EAAI;EAC5B,WAAO,KAAI,CAAC3B,SAAL,CAAe2B,IAAI,CAAC,CAAD,CAAJ,CAAQjH,EAAvB,EAA2BiH,IAAI,CAACnL,MAAhC,CAAP;EACD,GAFS,CAAV;EAGA,SAAO8O,OAAP;EACD,CAPD;;;;EAUA,OAAW,GAAG,YAAA,CAASpP,GAAT,EAAc;EAC1B,MAAIoP,OAAO,GAAGH,WAAQ,CAAC,IAAD,EAAOjP,GAAP,EAAY,IAAZ,CAAtB;EACA,SAAOoP,OAAO,CAAC9O,MAAR,GAAiB,CAAxB;EACD,CAHD;;;;EAMA,SAAW,GAAG,cAAA,CAASN,GAAT,EAAc;EAAA;;EAC1B,MAAIoP,OAAO,GAAGE,GAAQ,CAAC,IAAD,EAAOtP,GAAP,CAAtB,CAD0B;;EAG1BoP,EAAAA,OAAO,GAAGA,OAAO,CAACvF,GAAR,CAAY,UAAA4B,IAAI,EAAI;EAC5B,WAAO,MAAI,CAAC3B,SAAL,CAAe2B,IAAI,CAAC,CAAD,CAAJ,CAAQjH,EAAvB,EAA2BiH,IAAI,CAACnL,MAAhC,CAAP;EACD,GAFS,CAAV;EAGA,SAAO8O,OAAP;EACD,CAPD;;;;EAUA,WAAa,GAAG,cAAA,CAAStL,GAAT,EAAcF,KAAd,EAAqB;EAAA;;EACnC,MAAI6L,OAAO,GAAG,EAAd;EACA,MAAIlG,KAAK,GAAG,KAAKA,KAAL,EAAZ;EACA,MAAImG,QAAQ,GAAG,KAAf;;EACA,OAAK,IAAIxP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqJ,KAAK,CAACjJ,MAA1B,EAAkCJ,CAAC,IAAI,CAAvC,EAA0C;EACxC,QAAIyP,GAAG,GAAGpG,KAAK,CAACrJ,CAAD,CAAL,CAASyI,KAAT,CAAe7E,GAAf,EAAoBF,KAApB,CAAV;;EACA,QAAI+L,GAAG,KAAK,IAAZ,EAAkB;EAChB,UAAID,QAAQ,KAAK,IAAjB,EAAuB;;EAErBD,QAAAA,OAAO,CAACA,OAAO,CAACnP,MAAR,GAAiB,CAAlB,CAAP,CAA4BqJ,IAA5B,CAAiCJ,KAAK,CAACrJ,CAAD,CAAtC;EACD,OAHD,MAGO;EACLuP,QAAAA,OAAO,CAAC9F,IAAR,CAAa,CAACJ,KAAK,CAACrJ,CAAD,CAAN,CAAb,EADK;EAEN;;EACDwP,MAAAA,QAAQ,GAAGC,GAAX;EACD;EACF,GAfkC;;;EAiBnCF,EAAAA,OAAO,GAAGA,OAAO,CACdxF,MADO,CACA,UAAAzJ,CAAC;EAAA,WAAIA,CAAC,CAACF,MAAF,GAAW,CAAf;EAAA,GADD,EAEPuJ,GAFO,CAEH,UAAAzC,GAAG,EAAI;EACV,WAAO,MAAI,CAAC0C,SAAL,CAAe1C,GAAG,CAAC,CAAD,CAAH,CAAO5C,EAAtB,EAA0B4C,GAAG,CAAC9G,MAA9B,CAAP;EACD,GAJO,CAAV;EAKA,SAAOmP,OAAP;EACD,CAvBD;;;;;;;;;MC3BMG,SACJ,gBAAYpL,EAAZ,EAAgBlE,MAAhB,EAAwBkJ,IAAxB,EAA8B;EAAA;;EAC5B,OAAKE,KAAL,GAAalF,EAAb;EACA,OAAKlE,MAAL,GAAcA,MAAd;EACA,OAAK0H,GAAL,GAAW,QAAX,CAH4B;;EAI5B7F,EAAAA,MAAM,CAAC0N,cAAP,CAAsB,IAAtB,EAA4B,MAA5B,EAAoC;EAClCC,IAAAA,UAAU,EAAE,KADsB;EAElCC,IAAAA,QAAQ,EAAE,IAFwB;EAGlCC,IAAAA,KAAK,EAAExG;EAH2B,GAApC;EAKD;;;;EAIHoG,MAAM,CAACvI,SAAP,CAAiByC,SAAjB,GAA6B,UAAStF,EAAT,EAAalE,MAAb,EAAqB;EAChD,SAAO,IAAIsP,MAAJ,CAAWpL,EAAX,EAAelE,MAAf,EAAuB,KAAKkJ,IAA5B,CAAP;EACD,CAFD;;;EAKArH,MAAM,CAACsE,MAAP,CAAcmJ,MAAM,CAACvI,SAArB,EAAgC4I,KAAhC;EACA9N,MAAM,CAACsE,MAAP,CAAcmJ,MAAM,CAACvI,SAArB,EAAgCgC,SAAhC;;EAGA,IAAM6G,OAAO,GAAG;EACd5H,EAAAA,IAAI,EAAE;EADQ,CAAhB;EAGAnG,MAAM,CAACC,IAAP,CAAY8N,OAAZ,EAAqB7N,OAArB,CAA6B,UAAAnB,CAAC;EAAA,SAAK0O,MAAM,CAACvI,SAAP,CAAiBnG,CAAjB,IAAsB0O,MAAM,CAACvI,SAAP,CAAiB6I,OAAO,CAAChP,CAAD,CAAxB,CAA3B;EAAA,CAA9B;EAEA,YAAc,GAAG0O,MAAjB;;EC/BA;MACMO;;;EACJ,kBAAwB;EAAA,QAAZhC,KAAY,uEAAJ,EAAI;;EAAA;;;EAEtBhM,IAAAA,MAAM,CAAC0N,cAAP,CAAsB,IAAtB,EAA4B,OAA5B,EAAqC;EACnCC,MAAAA,UAAU,EAAE,KADuB;EAEnCE,MAAAA,KAAK,EAAE7B;EAF4B,KAArC;EAID;;;;;;0BAEG7F,MAAM;EACR,WAAK6F,KAAL,CAAW7F,IAAI,CAAC9D,EAAhB,IAAsB8D,IAAtB;EACA,aAAO,IAAP;EACD;;;;;0BAEG9D,IAAI;EACN,aAAO,KAAK2J,KAAL,CAAW3J,EAAX,CAAP;EACD;;;;;6BAEMA,IAAI;EACT,aAAO,KAAK2J,KAAL,CAAW3J,EAAX,CAAP;EACD;;;;;8BAEO;EACN,aAAO;EACL2J,QAAAA,KAAK,EAAEhM,MAAM,CAACC,IAAP,CAAY,KAAK+L,KAAjB,EAAwB7N;EAD1B,OAAP;EAGD;;;;;;;;EAIH6P,IAAI,CAAC9I,SAAL,CAAe+B,KAAf,GAAuB,YAAW;EAAA;;EAChC,MAAIhH,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAY,KAAK+L,KAAjB,CAAX;EACA,MAAIA,KAAK,GAAG/L,IAAI,CAACkI,MAAL,CAAY,UAACvJ,CAAD,EAAIG,CAAJ,EAAU;EAChC,QAAIS,CAAC,GAAG,KAAI,CAACwM,KAAL,CAAWjN,CAAX,EAAckI,KAAd,EAAR;;EACArI,IAAAA,CAAC,CAACY,CAAC,CAAC6C,EAAH,CAAD,GAAU7C,CAAV;EACA,WAAOZ,CAAP;EACD,GAJW,EAIT,EAJS,CAAZ;EAKA,SAAO,IAAIoP,IAAJ,CAAShC,KAAT,CAAP;EACD,CARD;;EAUA,UAAc,GAAGgC,IAAjB;;ECzCA;;;;;;;;;;EAYA,IAAMC,SAAS,GAAG,uDAAlB;EACA,IAAMC,YAAY,GAAG,IAArB;EAEA,IAAMzN,WAAS,GAAG,kBAAlB;EACA,IAAM0N,UAAU,GAAG,sBAAnB;EACA,IAAMC,OAAO,GAAG,iBAAhB;;EACA,IAAMC,SAAS,GAAG,qBAAlB;EAEA,IAAMC,eAAe,GAAG,MAAxB;;EAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAASzQ,IAAT,EAAe;EAClC,MAAI0Q,GAAG,GAAG,EAAV,CADkC;;EAGlC,MAAIC,KAAK,GAAG3Q,IAAI,CAACH,KAAL,CAAWyQ,OAAX,CAAZ;;EACA,OAAK,IAAIrQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0Q,KAAK,CAACtQ,MAA1B,EAAkCJ,CAAC,EAAnC,EAAuC;;EAErC,QAAIkH,GAAG,GAAGwJ,KAAK,CAAC1Q,CAAD,CAAL,CAASJ,KAAT,CAAesQ,SAAf,CAAV;;EACA,SAAK,IAAI9O,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8F,GAAG,CAAC9G,MAAxB,EAAgCgB,CAAC,EAAjC,EAAqC;EACnCqP,MAAAA,GAAG,CAAChH,IAAJ,CAASvC,GAAG,CAAC9F,CAAD,CAAZ;EACD;EACF;;EACD,SAAOqP,GAAP;EACD,CAZD;;;;EAeA,IAAME,UAAU,GAAG,SAAbA,UAAa,CAAS7Q,GAAT,EAAc8Q,OAAd,EAAuB;;EAExC,MAAIlO,WAAS,CAACC,IAAV,CAAe7C,GAAf,MAAwB,IAA5B,EAAkC;EAChC,WAAO,KAAP;EACD,GAJuC;;;EAMxC,MAAIsQ,UAAU,CAACzN,IAAX,CAAgB7C,GAAhB,MAAyB,IAA7B,EAAmC;EACjC,WAAO,KAAP;EACD,GARuC;;;EAUxC,MAAIwQ,SAAS,CAAC3N,IAAV,CAAe7C,GAAf,MAAwB,KAA5B,EAAmC;EACjC,WAAO,KAAP;EACD;;EAED,MAAI+Q,GAAG,GAAG/Q,GAAG,CAACmD,OAAJ,CAAY,yCAAZ,EAAuD,EAAvD,CAAV;EACA,MAAIgL,KAAK,GAAG4C,GAAG,CAACjR,KAAJ,CAAU,GAAV,CAAZ;EACA,MAAIkR,QAAQ,GAAG7C,KAAK,CAACA,KAAK,CAAC7N,MAAN,GAAe,CAAhB,CAAL,CAAwB0C,WAAxB,EAAf,CAhBwC;;EAkBxC,MAAI8N,OAAO,CAAC/I,cAAR,CAAuBiJ,QAAvB,CAAJ,EAAsC;EACpC,WAAO,KAAP;EACD,GApBuC;;;;;;EAyBxC,SAAO,IAAP;EACD,CA1BD;;EA4BA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAShR,IAAT,EAAe2D,KAAf,EAAsB;EAC3C,MAAIkN,OAAO,GAAGlN,KAAK,CAACsN,KAAN,CAAYC,aAA1B;EAEAlR,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;EACAA,EAAAA,IAAI,GAAG8I,MAAM,CAAC9I,IAAD,CAAb;EACA,MAAImR,SAAS,GAAG,EAAhB,CAL2C;;EAO3C,MAAIC,MAAM,GAAG,EAAb,CAP2C;;EAS3C,MAAI,CAACpR,IAAD,IAAS,OAAOA,IAAP,KAAgB,QAAzB,IAAqCoQ,YAAY,CAACxN,IAAb,CAAkB5C,IAAlB,MAA4B,KAArE,EAA4E;EAC1E,WAAOmR,SAAP;EACD,GAX0C;;;EAa3C,MAAIE,MAAM,GAAGZ,YAAY,CAACzQ,IAAD,CAAzB,CAb2C;;EAe3C,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoR,MAAM,CAAChR,MAA3B,EAAmCJ,CAAC,EAApC,EAAwC;EACtC,QAAIwB,CAAC,GAAG4P,MAAM,CAACpR,CAAD,CAAd;;EACA,QAAIwB,CAAC,KAAKiD,SAAN,IAAmBjD,CAAC,KAAK,EAA7B,EAAiC;EAC/B;EACD,KAJqC;;;EAMtC,QAAI2O,YAAY,CAACxN,IAAb,CAAkBnB,CAAlB,MAAyB,KAA7B,EAAoC;;EAElC,UAAI2P,MAAM,CAACA,MAAM,CAAC/Q,MAAP,GAAgB,CAAjB,CAAV,EAA+B;EAC7B+Q,QAAAA,MAAM,CAACA,MAAM,CAAC/Q,MAAP,GAAgB,CAAjB,CAAN,IAA6BoB,CAA7B;EACA;EACD,OAHD,MAGO,IAAI4P,MAAM,CAACpR,CAAC,GAAG,CAAL,CAAV,EAAmB;;EAExBoR,QAAAA,MAAM,CAACpR,CAAC,GAAG,CAAL,CAAN,GAAgBwB,CAAC,GAAG4P,MAAM,CAACpR,CAAC,GAAG,CAAL,CAA1B;EACA;EACD;EACF,KAhBqC;;;EAkBtCmR,IAAAA,MAAM,CAAC1H,IAAP,CAAYjI,CAAZ;EACD,GAlC0C;;;;EAsC3C,OAAK,IAAIxB,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGmR,MAAM,CAAC/Q,MAA3B,EAAmCJ,EAAC,EAApC,EAAwC;EACtC,QAAIQ,CAAC,GAAG2Q,MAAM,CAACnR,EAAD,CAAd,CADsC;;EAGtC,QAAImR,MAAM,CAACnR,EAAC,GAAG,CAAL,CAAN,IAAiB2Q,UAAU,CAACnQ,CAAD,EAAIoQ,OAAJ,CAAV,KAA2B,KAAhD,EAAuD;EACrDO,MAAAA,MAAM,CAACnR,EAAC,GAAG,CAAL,CAAN,GAAgBQ,CAAC,IAAI2Q,MAAM,CAACnR,EAAC,GAAG,CAAL,CAAN,IAAiB,EAArB,CAAjB;EACD,KAFD,MAEO,IAAIQ,CAAC,IAAIA,CAAC,CAACJ,MAAF,GAAW,CAAhB,IAAqBkQ,SAAS,CAAC3N,IAAV,CAAenC,CAAf,CAAzB,EAA4C;;EAEjD0Q,MAAAA,SAAS,CAACzH,IAAV,CAAejJ,CAAf;EACA2Q,MAAAA,MAAM,CAACnR,EAAD,CAAN,GAAY,EAAZ;EACD;EACF,GAhD0C;;;EAkD3C,MAAIkR,SAAS,CAAC9Q,MAAV,KAAqB,CAAzB,EAA4B;EAC1B,WAAO,CAACL,IAAD,CAAP;EACD,GApD0C;;;;EAwD3C,OAAK,IAAIC,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGkR,SAAS,CAAC9Q,MAA9B,EAAsCJ,GAAC,IAAI,CAA3C,EAA8C;EAC5C,QAAIqR,EAAE,GAAGH,SAAS,CAAClR,GAAD,CAAT,CAAasM,KAAb,CAAmBiE,eAAnB,CAAT;;EACA,QAAIc,EAAE,KAAK,IAAX,EAAiB;EACfH,MAAAA,SAAS,CAAClR,GAAC,GAAG,CAAL,CAAT,IAAoBqR,EAAE,CAAC,CAAD,CAAtB;EACAH,MAAAA,SAAS,CAAClR,GAAD,CAAT,GAAekR,SAAS,CAAClR,GAAD,CAAT,CAAaiD,OAAb,CAAqBsN,eAArB,EAAsC,EAAtC,CAAf;EACD;EACF;;EACD,SAAOW,SAAP;EACD,CAhED;;EAkEA,gBAAc,GAAGH,cAAjB;;ECpIA,IAAMO,QAAQ,GAAG,IAAjB;EACA,IAAMC,UAAU,GAAG,UAAnB;EACA,IAAMC,WAAW,GAAG,OAApB;EAEA,IAAMC,OAAO,GAAG;EACd,OAAK,IADS;EAEd,OAAK,IAFS;;EAGd,OAAK,IAHS;;EAId,OAAK,IAJS;;EAKd,QAAM,IALQ;EAMd,SAAO,IANO;EAOd,OAAK,IAPS;;EAAA,CAAhB;;EAUA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAS5R,GAAT,EAAc;;EAE9B,MAAI,sBAAsB6C,IAAtB,CAA2B7C,GAA3B,MAAoC,IAAxC,EAA8C;EAC5C,WAAO,KAAP;EACD,GAJ6B;;;EAM9B,MAAIuE,GAAG,GAAG,6DAAV;;EACA,MAAIA,GAAG,CAAC1B,IAAJ,CAAS7C,GAAT,MAAkB,IAAtB,EAA4B;EAC1B,WAAO,IAAP;EACD,GAT6B;;;EAW9B,MAAI6R,IAAI,GAAG,0BAAX;;EACA,MAAIA,IAAI,CAAChP,IAAL,CAAU7C,GAAV,CAAJ,EAAoB;EAClB,WAAO,IAAP;EACD;;EACD,SAAO,KAAP;EACD,CAhBD;;EAkBA,IAAM8R,YAAY,GAAG,SAAfA,YAAe,CAASpN,IAAT,EAAe;EAClC,MAAI0C,GAAG,GAAG,EAAV,CADkC;;EAGlC,MAAM2K,OAAO,GAAGrN,IAAI,CAAC5E,KAAL,CAAW,OAAX,CAAhB;;EACA,OAAK,IAAIwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyQ,OAAO,CAACzR,MAA5B,EAAoCgB,CAAC,EAArC,EAAyC;EACvC,QAAIA,CAAC,KAAKyQ,OAAO,CAACzR,MAAR,GAAiB,CAA3B,EAA8B;EAC5B8G,MAAAA,GAAG,CAACuC,IAAJ,CAASoI,OAAO,CAACzQ,CAAD,CAAhB;EACD,KAFD,MAEO;EACL8F,MAAAA,GAAG,CAACuC,IAAJ,CAASoI,OAAO,CAACzQ,CAAD,CAAP,GAAa,GAAtB;EACD;EACF;;EACD,SAAO8F,GAAP;EACD,CAZD;;;EAeA,IAAM4K,UAAU,GAAG,SAAbA,UAAa,CAAShS,GAAT,EAAc;EAC/B,MAAIkF,MAAM,GAAG,EAAb;EACA,MAAIkC,GAAG,GAAG,EAAV,CAF+B;;EAI/BpH,EAAAA,GAAG,GAAGA,GAAG,IAAI,EAAb;;EACA,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;EAC3BA,IAAAA,GAAG,GAAG+I,MAAM,CAAC/I,GAAD,CAAZ;EACD;;EAED,MAAMmO,KAAK,GAAGnO,GAAG,CAACF,KAAJ,CAAU4R,WAAV,CAAd;;EACA,OAAK,IAAIxR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiO,KAAK,CAAC7N,MAA1B,EAAkCJ,CAAC,EAAnC,EAAuC;;EAErC,QAAI0R,SAAS,CAACzD,KAAK,CAACjO,CAAD,CAAN,CAAT,KAAwB,IAA5B,EAAkC;EAChCkH,MAAAA,GAAG,GAAGA,GAAG,CAACgH,MAAJ,CAAW0D,YAAY,CAAC3D,KAAK,CAACjO,CAAD,CAAN,CAAvB,CAAN;EACA;EACD;;EACDkH,IAAAA,GAAG,CAACuC,IAAJ,CAASwE,KAAK,CAACjO,CAAD,CAAd;EACD,GAjB8B;;;EAoB/B,MAAI+R,KAAK,GAAG,EAAZ;;EACA,OAAK,IAAI/R,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGkH,GAAG,CAAC9G,MAAxB,EAAgCJ,EAAC,EAAjC,EAAqC;EACnC,QAAIwE,IAAI,GAAG0C,GAAG,CAAClH,EAAD,CAAd,CADmC;;EAGnC,QAAIsR,QAAQ,CAAC3O,IAAT,CAAc6B,IAAd,MAAwB,IAAxB,IAAgCiN,OAAO,CAAC5J,cAAR,CAAuBrD,IAAvB,MAAiC,KAAjE,IAA0E+M,UAAU,CAAC5O,IAAX,CAAgB6B,IAAhB,MAA0B,KAAxG,EAA+G;;EAE7G,UAAIQ,MAAM,CAAC5E,MAAP,GAAgB,CAApB,EAAuB;EACrB4E,QAAAA,MAAM,CAACA,MAAM,CAAC5E,MAAP,GAAgB,CAAjB,CAAN,IAA6B2R,KAA7B;EACA/M,QAAAA,MAAM,CAACyE,IAAP,CAAYjF,IAAZ;EACD,OAHD,MAGO;;EAELQ,QAAAA,MAAM,CAACyE,IAAP,CAAYsI,KAAK,GAAGvN,IAApB;EACD;;EACDuN,MAAAA,KAAK,GAAG,EAAR;EACD,KAVD,MAUO;EACLA,MAAAA,KAAK,IAAIvN,IAAT;EACD;EACF,GArC8B;;;EAuC/B,MAAIuN,KAAK,IAAI/M,MAAM,CAAC5E,MAAP,GAAgB,CAA7B,EAAgC;EAC9B4E,IAAAA,MAAM,CAACA,MAAM,CAAC5E,MAAP,GAAgB,CAAjB,CAAN,IAA6B2R,KAA7B,CAD8B;EAE/B;;EACD,SAAO/M,MAAP;EACD,CA3CD;;EA4CA,YAAc,GAAG8M,UAAjB;;ECnFA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAAA3I,KAAK,EAAI;EACxBA,EAAAA,KAAK,CAAClH,OAAN,CAAc,UAACiG,IAAD,EAAOpI,CAAP,EAAa;EACzB,QAAIA,CAAC,GAAG,CAAR,EAAW;EACToI,MAAAA,IAAI,CAACY,IAAL,GAAYK,KAAK,CAACrJ,CAAC,GAAG,CAAL,CAAL,CAAasE,EAAzB;EACD;;EACD,QAAI+E,KAAK,CAACrJ,CAAC,GAAG,CAAL,CAAT,EAAkB;EAChBoI,MAAAA,IAAI,CAACa,IAAL,GAAYI,KAAK,CAACrJ,CAAC,GAAG,CAAL,CAAL,CAAasE,EAAzB;EACD;EACF,GAPD;EAQD,CATD;;;;EAYA,IAAM2N,QAAQ,GAAG,SAAXA,QAAW,GAAiC;EAAA,MAAxBlS,IAAwB,uEAAjB,EAAiB;EAAA,MAAb2D,KAAa;EAAA,MAAN4F,IAAM;;;EAEhD,MAAI,OAAOvJ,IAAP,KAAgB,QAApB,EAA8B;EAC5B,QAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;EAC5BA,MAAAA,IAAI,GAAG8I,MAAM,CAAC9I,IAAD,CAAb;EACD;EACF,GAN+C;;;EAQhD,MAAImR,SAAS,GAAGH,YAAc,CAAChR,IAAD,EAAO2D,KAAP,CAA9B;EACAwN,EAAAA,SAAS,GAAGA,SAAS,CAACvH,GAAV,CAAc,UAAA7J,GAAG;EAAA,WAAIoS,QAAU,CAACpS,GAAD,CAAd;EAAA,GAAjB,CAAZ,CATgD;;EAYhDwJ,EAAAA,IAAI,GAAGA,IAAI,IAAI,IAAI2G,MAAJ,EAAf;EAEA,MAAIkC,OAAO,GAAGjB,SAAS,CAACvH,GAAV,CAAc,UAAAN,KAAK,EAAI;EACnCA,IAAAA,KAAK,GAAGA,KAAK,CAACM,GAAN,CAAU,UAAA7J,GAAG,EAAI;EACvB,UAAIsI,IAAI,GAAG,IAAIQ,MAAJ,CAAS9I,GAAT,CAAX;EACAwJ,MAAAA,IAAI,CAACX,GAAL,CAASP,IAAT;EACA,aAAOA,IAAP;EACD,KAJO,CAAR,CADmC;;EAOnC4J,IAAAA,QAAQ,CAAC3I,KAAD,CAAR,CAPmC;;EAUnC,WAAO,IAAIqG,QAAJ,CAAWrG,KAAK,CAAC,CAAD,CAAL,CAAS/E,EAApB,EAAwB+E,KAAK,CAACjJ,MAA9B,EAAsCkJ,IAAtC,CAAP;EACD,GAXa,CAAd,CAdgD;;EA2BhD,SAAO6I,OAAP;EACD,CA5BD;;;;EA+BA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAASC,IAAT,EAAe;EAC9B,MAAI/I,IAAI,GAAG,IAAI2G,MAAJ,EAAX,CAD8B;;EAG9B,MAAIkC,OAAO,GAAGE,IAAI,CAAC1I,GAAL,CAAS,UAAAN,KAAK,EAAI;;EAE9BA,IAAAA,KAAK,GAAGA,KAAK,CAACM,GAAN,CAAU,UAAAb,GAAG,EAAI;EACvB,UAAIV,IAAI,GAAG,IAAIQ,MAAJ,CAASE,GAAG,CAAC/I,IAAb,CAAX;EACAqI,MAAAA,IAAI,CAAC/E,GAAL,GAAWyF,GAAG,CAACzF,GAAf;EACA+E,MAAAA,IAAI,CAAC9E,IAAL,GAAYwF,GAAG,CAACxF,IAAhB;EACA8E,MAAAA,IAAI,CAAC1D,IAAL,GAAYoE,GAAG,CAACpE,IAAJ,CAAS0F,MAAT,CAAgB,UAACvJ,CAAD,EAAI+C,GAAJ,EAAY;EACtC/C,QAAAA,CAAC,CAAC+C,GAAD,CAAD,GAAS,IAAT;EACA,eAAO/C,CAAP;EACD,OAHW,EAGT,EAHS,CAAZ;EAIAyI,MAAAA,IAAI,CAACX,GAAL,CAASP,IAAT;EACA,aAAOA,IAAP;EACD,KAVO,CAAR,CAF8B;;EAc9B4J,IAAAA,QAAQ,CAAC3I,KAAD,CAAR;EACA,WAAO,IAAIqG,QAAJ,CAAWrG,KAAK,CAAC,CAAD,CAAL,CAAS/E,EAApB,EAAwB+E,KAAK,CAACjJ,MAA9B,EAAsCkJ,IAAtC,CAAP;EACD,GAhBa,CAAd;EAiBA,SAAO6I,OAAP;EACD,CArBD;;EAuBA,gBAAc,GAAG;EACfF,EAAAA,QAAQ,EAARA,QADe;EAEfG,EAAAA,QAAQ,EAARA;EAFe,CAAjB;;EC1EA,YAAc,GAAG,OAAjB;;ECAA,SAAc,GAAC;EACb,iBAAe,aADF;EAEb,iBAAe,cAFF;EAGb,kBAAgB,gBAHH;EAIb,WAAS,YAJI;EAKb,UAAQ,iNALK;EAMb,YAAU,0BANG;EAOb,eAAa,4DAPA;EAQb,eAAa,gBARA;EASb,YAAU,6CATG;EAUb,cAAY,sBAVC;EAWb,UAAQ,qHAXK;EAYb,kBAAgB,+CAZH;EAab,YAAU,cAbG;EAcb,iBAAe,0KAdF;EAeb,aAAW,gFAfE;EAgBb,cAAY,8mBAhBC;EAiBb,WAAS,+WAjBI;EAkBb,eAAa,2cAlBA;EAmBb,gBAAc,+8CAnBD;EAoBb,iBAAe,ggCApBF;EAqBb,gBAAc,qhFArBD;EAsBb,UAAQ,8rBAtBK;EAuBb,kBAAgB,u1EAvBH;EAwBb,aAAW,gzBAxBE;EAyBb,gBAAc,qGAzBD;EA0Bb,cAAY,0SA1BC;EA2Bb,kBAAgB,ubA3BH;EA4Bb,WAAS,ufA5BI;EA6Bb,aAAW,yyDA7BE;EA8Bb,YAAU,kvCA9BG;EA+Bb,UAAQ,8lDA/BK;EAgCb,gBAAc,2wKAhCD;EAiCb,aAAW,gEAjCE;EAkCb,UAAQ,sHAlCK;EAmCb,UAAQ,uHAnCK;EAoCb,aAAW,i0CApCE;EAqCb,WAAS,kGArCI;EAsCb,cAAY,oFAtCC;EAuCb,eAAa,sLAvCA;EAwCb,cAAY,mhDAxCC;EAyCb,cAAY,s8HAzCC;EA0Cb,YAAU,4nBA1CG;EA2Cb,iBAAe,g5FA3CF;EA4Cb,WAAS,wEA5CI;EA6Cb,eAAa,6+FA7CA;EA8Cb,gBAAc,sqDA9CD;EA+Cb,gBAAc,qNA/CD;EAgDb,aAAW,8KAhDE;EAiDb,cAAY,8JAjDC;EAkDb,gBAAc,wUAlDD;EAmDb,YAAU,4hBAnDG;EAoDb,iBAAe,wTApDF;EAqDb,gBAAc;EArDD,CAAf;;ECAA;EACA,aAAc,GAAG;EAEf,CACE,MADF,EAEE,MAFF,EAGE,WAHF,EAIE,QAJF,EAKE,YALF,EAME,aANF,EAOE,aAPF,EAQE,cARF,EASE,YATF,EAUE,KAVF,EAWE,aAXF,EAYE,OAZF,EAaE,OAbF,CAFe;EAkBf,CAAC,QAAD,EAAW,cAAX,EAA2B,OAA3B,EAAoC,OAApC,EAA6C,OAA7C,EAAsD,SAAtD,EAAiE,SAAjE,CAlBe;EAoBf,CAAC,SAAD,EAAY,SAAZ,EAAuB,OAAvB,EAAgC,MAAhC,EAAwC,SAAxC,CApBe,EAqBf,CAAC,SAAD,EAAY,QAAZ,CArBe;EAuBf,CAAC,QAAD,EAAW,UAAX,CAvBe;EAyBf,CAAC,UAAD,EAAa,YAAb,CAzBe,EA0Bf,CAAC,WAAD,EAAc,UAAd,EAA0B,WAA1B,CA1Be;EA4Bf,CAAC,aAAD,EAAgB,aAAhB,CA5Be;EA8Bf,CAAC,OAAD,EAAU,MAAV,EAAkB,WAAlB,CA9Be,EA+Bf,CAAC,SAAD,EAAY,UAAZ,CA/Be,EAgCf,CAAC,WAAD,EAAc,cAAd,CAhCe,EAiCf,CAAC,YAAD,EAAe,WAAf,CAjCe,EAkCf,CAAC,SAAD,EAAY,UAAZ,CAlCe;;EAoCf,CAAC,WAAD,EAAc,cAAd,EAA8B,aAA9B,CApCe,EAqCf,CAAC,YAAD,EAAe,QAAf,EAAyB,OAAzB,EAAkC,YAAlC,EAAgD,YAAhD,EAA8D,QAA9D,EAAwE,eAAxE,EAAyF,cAAzF,CArCe,EAsCf,CAAC,WAAD,EAAc,MAAd,EAAsB,OAAtB,CAtCe;EAwCf,CAAC,OAAD,EAAU,SAAV,EAAqB,MAArB,EAA6B,UAA7B,EAAyC,SAAzC,CAxCe,EAyCf,CAAC,UAAD,EAAa,aAAb,EAA4B,QAA5B,EAAsC,aAAtC,EAAqD,MAArD,CAzCe,EA0Cf,CAAC,MAAD,EAAS,MAAT,EAAiB,WAAjB,EAA8B,QAA9B,CA1Ce,EA2Cf,CAAC,MAAD,EAAS,OAAT,EAAkB,cAAlB,EAAkC,UAAlC,CA3Ce;EA6Cf,CAAC,OAAD,EAAU,YAAV,CA7Ce,EA8Cf,CAAC,KAAD,EAAQ,OAAR,EAAiB,SAAjB,EAA4B,aAA5B,EAA2C,OAA3C,CA9Ce;EAgDf,CAAC,cAAD,EAAiB,UAAjB,EAA6B,YAA7B,CAhDe,EAiDf,CAAC,cAAD,EAAiB,OAAjB,EAA0B,SAA1B,CAjDe;EAmDf,CAAC,WAAD,EAAc,WAAd,EAA2B,WAA3B,CAnDe;EAqDf,CAAC,MAAD,EAAS,MAAT,EAAiB,WAAjB,EAA8B,OAA9B,CArDe;;EAuDf,CAAC,cAAD,EAAiB,MAAjB,CAvDe;EAyDf,CAAC,SAAD,EAAY,MAAZ,CAzDe,CAAjB;;ECDA,SAAc,GAAG;EACfE,EAAAA,IAAI,EAAE,EADS;;EAGfC,EAAAA,QAAQ,EAAE;EACRzK,IAAAA,GAAG,EAAE;EADG,GAHK;;EAOf0K,EAAAA,UAAU,EAAE;EACV1K,IAAAA,GAAG,EAAE;EADK,GAPG;;EAYf2K,EAAAA,MAAM,EAAE;EACN3K,IAAAA,GAAG,EAAE,YADC;EAENE,IAAAA,IAAI,EAAE;EAFA,GAZO;EAgBf0K,EAAAA,SAAS,EAAE;EACT5K,IAAAA,GAAG,EAAE;EADI,GAhBI;EAmBf6K,EAAAA,QAAQ,EAAE;EACR7K,IAAAA,GAAG,EAAE;EADG,GAnBK;EAsBf8K,EAAAA,UAAU,EAAE;EACV9K,IAAAA,GAAG,EAAE;EADK,GAtBG;EAyBf+K,EAAAA,QAAQ,EAAE;EACR/K,IAAAA,GAAG,EAAE;EADG,GAzBK;EA4BfgL,EAAAA,SAAS,EAAE;EACThL,IAAAA,GAAG,EAAE;EADI,GA5BI;EA+BfiL,EAAAA,KAAK,EAAE;EACLjL,IAAAA,GAAG,EAAE;EADA,GA/BQ;;EAoCfkL,EAAAA,OAAO,EAAE;EACPlL,IAAAA,GAAG,EAAE,OADE;EAEPE,IAAAA,IAAI,EAAE;EAFC,GApCM;EAwCfiL,EAAAA,IAAI,EAAE;EACJnL,IAAAA,GAAG,EAAE,OADD;EAEJE,IAAAA,IAAI,EAAE;EAFF,GAxCS;EA4CfkL,EAAAA,MAAM,EAAE;EACNpL,IAAAA,GAAG,EAAE,OADC;EAENE,IAAAA,IAAI,EAAE;EAFA,GA5CO;EAgDfmL,EAAAA,OAAO,EAAE;EACPrL,IAAAA,GAAG,EAAE;EADE,GAhDM;EAmDfsL,EAAAA,YAAY,EAAE;EACZtL,IAAAA,GAAG,EAAE,UADO;EAEZE,IAAAA,IAAI,EAAE;EAFM,GAnDC;EAuDfqL,EAAAA,UAAU,EAAE;EACVvL,IAAAA,GAAG,EAAE;EADK,GAvDG;EA0DfwL,EAAAA,OAAO,EAAE;EACPxL,IAAAA,GAAG,EAAE;EADE,GA1DM;EA6DfyL,EAAAA,MAAM,EAAE;EACNzL,IAAAA,GAAG,EAAE;EADC,GA7DO;;EAkEf0L,EAAAA,MAAM,EAAE;EACN1L,IAAAA,GAAG,EAAE;EADC,GAlEO;EAqEf2L,EAAAA,WAAW,EAAE;;EAEX3L,IAAAA,GAAG,EAAE;EAFM,GArEE;EAyEf4L,EAAAA,OAAO,EAAE;EACP5L,IAAAA,GAAG,EAAE;EADE,GAzEM;;EA6Ef6L,EAAAA,KAAK,EAAE;EACL7L,IAAAA,GAAG,EAAE;EADA,GA7EQ;;EAiFf8L,EAAAA,QAAQ,EAAE;EACR9L,IAAAA,GAAG,EAAE;EADG,GAjFK;;EAqFf+L,EAAAA,IAAI,EAAE;EACJ/L,IAAAA,GAAG,EAAE;EADD,GArFS;;EAyFfgM,EAAAA,OAAO,EAAE;EACPhM,IAAAA,GAAG,EAAE,MADE;EAEPE,IAAAA,IAAI,EAAE;EAFC,GAzFM;;EA8Ff+L,EAAAA,UAAU,EAAE;EACVjM,IAAAA,GAAG,EAAE;EADK;EA9FG,CAAjB;;ECAA,SAAc,GAAG;EACfkM,EAAAA,IAAI,EAAE;EAAA,GADS;EAIfC,EAAAA,YAAY,EAAE;EACZnM,IAAAA,GAAG,EAAE;EADO,GAJC;EAOfoM,EAAAA,UAAU,EAAE;EACVpM,IAAAA,GAAG,EAAE;EADK,GAPG;EAUfqM,EAAAA,MAAM,EAAE;EACNrM,IAAAA,GAAG,EAAE;EADC,GAVO;EAafsM,EAAAA,SAAS,EAAE;EACTtM,IAAAA,GAAG,EAAE;EADI,GAbI;EAgBfuM,EAAAA,YAAY,EAAE;EACZvM,IAAAA,GAAG,EAAE;EADO,GAhBC;EAmBfwM,EAAAA,aAAa,EAAE;EACbxM,IAAAA,GAAG,EAAE;EADQ,GAnBA;EAsBfyM,EAAAA,UAAU,EAAE;EACVzM,IAAAA,GAAG,EAAE;EADK,GAtBG;EAyBf0M,EAAAA,MAAM,EAAE;EACN1M,IAAAA,GAAG,EAAE;EADC,GAzBO;EA4Bf2M,EAAAA,KAAK,EAAE;EACL3M,IAAAA,GAAG,EAAE;EADA,GA5BQ;EA+Bf4M,EAAAA,UAAU,EAAE;EACV5M,IAAAA,GAAG,EAAE;EADK,GA/BG;EAkCf6M,EAAAA,QAAQ,EAAE;EACR7M,IAAAA,GAAG,EAAE;EADG,GAlCK;EAqCf8M,EAAAA,WAAW,EAAE;EACX9M,IAAAA,GAAG,EAAE;EADM;EArCE,CAAjB;;ECAA,UAAc,GAAG;EACf+M,EAAAA,KAAK,EAAE,EADQ;EAEfC,EAAAA,OAAO,EAAE;EACPhN,IAAAA,GAAG,EAAE;EADE,GAFM;EAKfiN,EAAAA,QAAQ,EAAE;EACRjN,IAAAA,GAAG,EAAE;EADG,GALK;;;;EAWfkN,EAAAA,YAAY,EAAE;EACZlN,IAAAA,GAAG,EAAE;EADO,GAXC;EAcfmN,EAAAA,QAAQ,EAAE;EACRnN,IAAAA,GAAG,EAAE;EADG,GAdK;EAiBfoN,EAAAA,SAAS,EAAE;EACTpN,IAAAA,GAAG,EAAE;EADI,GAjBI;EAoBfqN,EAAAA,YAAY,EAAE;EACZrN,IAAAA,GAAG,EAAE;EADO,GApBC;EAuBfsN,EAAAA,KAAK,EAAE;EAAA,GAvBQ;EA0BfC,EAAAA,OAAO,EAAE;EACPvN,IAAAA,GAAG,EAAE;EADE;EA1BM,CAAjB;;ECAA,SAAc,GAAG;EACfwN,EAAAA,IAAI,EAAE,EADS;;EAEfC,EAAAA,KAAK,EAAE;EACLzN,IAAAA,GAAG,EAAE,MADA;EAELE,IAAAA,IAAI,EAAE;EAFD,GAFQ;EAMfwN,EAAAA,OAAO,EAAE;EACP1N,IAAAA,GAAG,EAAE,MADE;EAEPE,IAAAA,IAAI,EAAE;EAFC,GANM;EAUfyN,EAAAA,WAAW,EAAE;EACX3N,IAAAA,GAAG,EAAE;EADM,GAVE;EAaf4N,EAAAA,IAAI,EAAE;EACJ5N,IAAAA,GAAG,EAAE;EADD,GAbS;EAgBf6N,EAAAA,QAAQ,EAAE;EACR7N,IAAAA,GAAG,EAAE,MADG;EAERE,IAAAA,IAAI,EAAE;EAFE,GAhBK;EAoBf4N,EAAAA,IAAI,EAAE;EACJ9N,IAAAA,GAAG,EAAE,MADD;EAEJE,IAAAA,IAAI,EAAE;EAFF,GApBS;EAwBf6N,EAAAA,OAAO,EAAE;EACP/N,IAAAA,GAAG,EAAE,MADE;EAEPE,IAAAA,IAAI,EAAE;EAFC;EAxBM,CAAjB;;ECAA,QAAc,GAAG;EACf8N,EAAAA,SAAS,EAAE,EADI;EAEfC,EAAAA,UAAU,EAAE;EACVjO,IAAAA,GAAG,EAAE;EADK,GAFG;EAKfkO,EAAAA,WAAW,EAAE;EACXlO,IAAAA,GAAG,EAAE;EADM,GALE;EAQfmO,EAAAA,WAAW,EAAE;EACXnO,IAAAA,GAAG,EAAE;EADM,GARE;EAYfoO,EAAAA,WAAW,EAAE;EACXpO,IAAAA,GAAG,EAAE;EADM,GAZE;EAefqO,EAAAA,MAAM,EAAE,EAfO;EAiBfC,EAAAA,QAAQ,EAAE,EAjBK;;EAmBfC,EAAAA,UAAU,EAAE,EAnBG;EAoBfC,EAAAA,WAAW,EAAE,EApBE;EAqBfC,EAAAA,WAAW,EAAE,EArBE;EAsBfC,EAAAA,YAAY,EAAE,EAtBC;EAuBfC,EAAAA,gBAAgB,EAAE;EAChB3O,IAAAA,GAAG,EAAE;EADW,GAvBH;EA0Bf4O,EAAAA,UAAU,EAAE,EA1BG;EA2BfC,EAAAA,YAAY,EAAE,EA3BC;EA4BfC,EAAAA,GAAG,EAAE,EA5BU;EA6BfC,EAAAA,WAAW,EAAE,EA7BE;EA8BfC,EAAAA,OAAO,EAAE,EA9BM;EA+BfC,EAAAA,SAAS,EAAE;EACTjP,IAAAA,GAAG,EAAE;EADI,GA/BI;EAkCfkP,EAAAA,KAAK,EAAE,EAlCQ;EAmCfC,EAAAA,KAAK,EAAE,EAnCQ;;EAsCfC,EAAAA,SAAS,EAAE,EAtCI;EAuCfC,EAAAA,QAAQ,EAAE,EAvCK;EAwCfC,EAAAA,WAAW,EAAE,EAxCE;EA0CfjS,EAAAA,SAAS,EAAE,EA1CI;EA2CfE,EAAAA,SAAS,EAAE,EA3CI;EA4CfD,EAAAA,SAAS,EAAE,EA5CI;EA6CfE,EAAAA,UAAU,EAAE,EA7CG;EA8Cf+R,EAAAA,OAAO,EAAE,EA9CM;EA+Cf3R,EAAAA,SAAS,EAAE,EA/CI;;EAkDf4R,EAAAA,SAAS,EAAE,EAlDI;EAmDfC,EAAAA,cAAc,EAAE;EACdzP,IAAAA,GAAG,EAAE;EADS,GAnDD;EAsDf0P,EAAAA,YAAY,EAAE;EACZ1P,IAAAA,GAAG,EAAE;EADO,GAtDC;;EA0Df2P,EAAAA,WAAW,EAAE,EA1DE;EA2DfjS,EAAAA,UAAU,EAAE;EACVsC,IAAAA,GAAG,EAAE;EADK,GA3DG;EA8DfvC,EAAAA,YAAY,EAAE;EACZuC,IAAAA,GAAG,EAAE;EADO;EA9DC,CAAjB;;ECAA;EACA,IAAM4P,WAAW,GAAG,SAAdA,WAAc,CAAShT,IAAT,EAAe;EACjC,MAAMxC,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAYwC,IAAZ,CAAb;EACAxC,EAAAA,IAAI,CAACC,OAAL,CAAa,UAAAnB,CAAC,EAAI;EAChB0D,IAAAA,IAAI,CAAC1D,CAAD,CAAJ,CAAQuH,QAAR,GAAmB,EAAnB,CADgB;;EAGhB,SAAK,IAAIvI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkC,IAAI,CAAC9B,MAAzB,EAAiCJ,CAAC,EAAlC,EAAsC;EACpC,UAAI0E,IAAI,CAACxC,IAAI,CAAClC,CAAD,CAAL,CAAJ,CAAc8H,GAAd,IAAqBpD,IAAI,CAACxC,IAAI,CAAClC,CAAD,CAAL,CAAJ,CAAc8H,GAAd,KAAsB9G,CAA/C,EAAkD;EAChD0D,QAAAA,IAAI,CAAC1D,CAAD,CAAJ,CAAQuH,QAAR,CAAiBkB,IAAjB,CAAsBvH,IAAI,CAAClC,CAAD,CAA1B;EACD;EACF;EACF,GARD;EASD,CAXD;;EAYA,eAAc,GAAG0X,WAAjB;;ECJA,IAAMC,MAAM,GAAG;EACbrF,EAAAA,IAAI,EAAE,MADO;;EAIb0B,EAAAA,IAAI,EAAE,OAJO;EAKbkD,EAAAA,SAAS,EAAE,OALE;EAMbC,EAAAA,QAAQ,EAAE,OANG;;EASb7B,EAAAA,IAAI,EAAE,KATO;EAUbT,EAAAA,KAAK,EAAE,KAVM;EAYbiB,EAAAA,SAAS,EAAE,SAZE;EAcbS,EAAAA,WAAW,EAAE,MAdA;EAebD,EAAAA,WAAW,EAAE,MAfA;EAgBbD,EAAAA,UAAU,EAAE,MAhBC;EAiBbF,EAAAA,MAAM,EAAE,MAjBK;;EAAA,CAAf;;EAsBA,IAAMyB,KAAK,GAAG,SAARA,KAAQ,CAAS9O,GAAT,EAAcpE,IAAd,EAAoB;EAChCzC,EAAAA,MAAM,CAACC,IAAP,CAAY4G,GAAZ,EAAiB3G,OAAjB,CAAyB,UAAAnB,CAAC,EAAI;EAC5B0D,IAAAA,IAAI,CAAC1D,CAAD,CAAJ,GAAU8H,GAAG,CAAC9H,CAAD,CAAb;EACD,GAFD;EAGD,CAJD;;;EAOA,IAAM6W,YAAY,GAAG,SAAfA,YAAe,CAASnT,IAAT,EAAe;EAClCzC,EAAAA,MAAM,CAACC,IAAP,CAAYwC,IAAZ,EAAkBvC,OAAlB,CAA0B,UAAAnB,CAAC,EAAI;EAC7B0D,IAAAA,IAAI,CAAC1D,CAAD,CAAJ,CAAQkH,IAAR,GAAe,EAAf;;EACA,SAAK,IAAIlI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8X,SAAS,CAAC1X,MAA9B,EAAsCJ,CAAC,EAAvC,EAA2C;EACzC,UAAIkH,GAAG,GAAG4Q,SAAS,CAAC9X,CAAD,CAAnB;;EACA,UAAIkH,GAAG,CAACuH,OAAJ,CAAYzN,CAAZ,MAAmB,CAAC,CAAxB,EAA2B;EACzBkG,QAAAA,GAAG,GAAGA,GAAG,CAAC6C,MAAJ,CAAW,UAAAzJ,CAAC;EAAA,iBAAIA,CAAC,KAAKU,CAAV;EAAA,SAAZ,CAAN;EACAkG,QAAAA,GAAG,CAAC/E,OAAJ,CAAY,UAAAzB,CAAC,EAAI;EACfgE,UAAAA,IAAI,CAAC1D,CAAD,CAAJ,CAAQkH,IAAR,CAAaxH,CAAb,IAAkB,IAAlB;EACD,SAFD;EAGD;EACF;;EACDgE,IAAAA,IAAI,CAAC1D,CAAD,CAAJ,CAAQkH,IAAR,GAAejG,MAAM,CAACC,IAAP,CAAYwC,IAAI,CAAC1D,CAAD,CAAJ,CAAQkH,IAApB,CAAf;EACD,GAZD;EAaD,CAdD;;EAgBA,IAAM6P,SAAS,GAAG,SAAZA,SAAY,CAASrT,IAAT,EAAe;EAC/BzC,EAAAA,MAAM,CAACC,IAAP,CAAYwC,IAAZ,EAAkBvC,OAAlB,CAA0B,UAAAnB,CAAC,EAAI;EAC7B,QAAI2W,MAAM,CAAC3W,CAAD,CAAV,EAAe;EACb0D,MAAAA,IAAI,CAAC1D,CAAD,CAAJ,CAAQgX,KAAR,GAAgBL,MAAM,CAAC3W,CAAD,CAAtB;EACA;EACD;;EACD,QAAI0D,IAAI,CAAC1D,CAAD,CAAJ,CAAQ8G,GAAR,IAAe6P,MAAM,CAACjT,IAAI,CAAC1D,CAAD,CAAJ,CAAQ8G,GAAT,CAAzB,EAAwC;EACtCpD,MAAAA,IAAI,CAAC1D,CAAD,CAAJ,CAAQgX,KAAR,GAAgBL,MAAM,CAACjT,IAAI,CAAC1D,CAAD,CAAJ,CAAQ8G,GAAT,CAAtB;EACA;EACD;;EACD,QAAIpD,IAAI,CAAC1D,CAAD,CAAJ,CAAQ8G,GAAR,IAAepD,IAAI,CAACA,IAAI,CAAC1D,CAAD,CAAJ,CAAQ8G,GAAT,CAAJ,CAAkBkQ,KAArC,EAA4C;EAC1CtT,MAAAA,IAAI,CAAC1D,CAAD,CAAJ,CAAQgX,KAAR,GAAgBtT,IAAI,CAACA,IAAI,CAAC1D,CAAD,CAAJ,CAAQ8G,GAAT,CAAJ,CAAkBkQ,KAAlC;EACD;EACF,GAZD;EAaD,CAdD;;EAgBA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;EAClB,MAAIvT,IAAI,GAAG,EAAX;EACAkT,EAAAA,KAAK,CAACM,KAAD,EAAQxT,IAAR,CAAL;EACAkT,EAAAA,KAAK,CAACO,KAAD,EAAQzT,IAAR,CAAL;EACAkT,EAAAA,KAAK,CAACQ,MAAD,EAAS1T,IAAT,CAAL;EACAkT,EAAAA,KAAK,CAACS,KAAD,EAAQ3T,IAAR,CAAL;EACAkT,EAAAA,KAAK,CAACU,IAAD,EAAO5T,IAAP,CAAL,CANkB;;EAQlB6T,EAAAA,WAAW,CAAC7T,IAAD,CAAX,CARkB;;EAUlBmT,EAAAA,YAAY,CAACnT,IAAD,CAAZ,CAVkB;;EAYlBqT,EAAAA,SAAS,CAACrT,IAAD,CAAT;EACA,SAAOA,IAAP;EACD,CAdD;;EAeA,QAAc,GAAGuT,KAAK,EAAtB;;MCrF2BO,GAAG,GAAC,sCAAlB;EAAA,IAAyDxH,KAAK,GAACwH,GAAG,CAAC5Y,KAAJ,CAAU,EAAV,EAAcwK,MAAd,CAAqB,UAASjJ,CAAT,EAAWC,CAAX,EAAaV,CAAb,EAAe;EAAC,SAAOS,CAAC,CAACC,CAAD,CAAD,GAAKV,CAAL,EAAOS,CAAd;EAAgB,CAArD,EAAsD,EAAtD,CAA/D;EAAA,IAAyHsX,WAAW,GAAC,SAAZA,WAAY,CAAStX,CAAT,EAAW;EAAC,MAAG,KAAK,CAAL,KAASqX,GAAG,CAACrX,CAAD,CAAf,EAAmB,OAAOqX,GAAG,CAACrX,CAAD,CAAV;EAAc,MAAIC,CAAC,GAAC,CAAN;EAAA,MAAQV,CAAC,GAAC,EAAV;EAAA,MAAae,CAAC,GAAC,EAAf;;EAAkB,SAAKN,CAAC,IAAET,CAAR,EAAUS,CAAC,IAAET,CAAH,EAAKU,CAAC,EAAN,EAASV,CAAC,IAAE,EAAtB;AAAyB,EAAzB;;EAA0B,SAAKU,CAAC,EAAN,GAAU;EAAC,QAAMA,EAAC,GAACD,CAAC,GAAC,EAAV;;EAAaM,IAAAA,CAAC,GAACoH,MAAM,CAAC6P,YAAP,CAAoB,CAACtX,EAAC,GAAC,EAAF,GAAK,EAAL,GAAQ,EAAT,IAAaA,EAAjC,IAAoCK,CAAtC,EAAwCN,CAAC,GAAC,CAACA,CAAC,GAACC,EAAH,IAAM,EAAhD;EAAmD;;EAAA,SAAOK,CAAP;EAAS,CAAlT;EAAA,IAAmTkX,aAAa,GAAC,SAAdA,aAAc,CAASxX,CAAT,EAAW;EAAC,MAAG,KAAK,CAAL,KAAS6P,KAAK,CAAC7P,CAAD,CAAjB,EAAqB,OAAO6P,KAAK,CAAC7P,CAAD,CAAZ;EAAgB,MAAIC,CAAC,GAAC,CAAN;EAAA,MAAQV,CAAC,GAAC,CAAV;EAAA,MAAYe,CAAC,GAAC,EAAd;EAAA,MAAiBF,CAAC,GAAC,CAAnB;;EAAqB,SAAKb,CAAC,GAACS,CAAC,CAACf,MAAT,EAAgBgB,CAAC,IAAEK,CAAH,EAAKf,CAAC,EAAN,EAASe,CAAC,IAAE,EAA5B;AAA+B,EAA/B;;EAAgC,OAAI,IAAIf,EAAC,GAACS,CAAC,CAACf,MAAF,GAAS,CAAnB,EAAqBM,EAAC,IAAE,CAAxB,EAA0BA,EAAC,IAAGa,CAAC,IAAE,EAAjC,EAAoC;EAAC,QAAIE,EAAC,GAACN,CAAC,CAACyX,UAAF,CAAalY,EAAb,IAAgB,EAAtB;;EAAyBe,IAAAA,EAAC,GAAC,EAAF,KAAOA,EAAC,IAAE,CAAV,GAAaL,CAAC,IAAEK,EAAC,GAACF,CAAlB;EAAoB;;EAAA,SAAOH,CAAP;EAAS,CAAlgB;;EAAmgB,IAAIyX,QAAQ,GAAC;EAACJ,EAAAA,WAAW,EAACA,WAAb;EAAyBE,EAAAA,aAAa,EAACA;EAAvC,CAAb;EAAA,IAAmEG,OAAO,GAAC,SAARA,OAAQ,CAAS3X,CAAT,EAAW;EAAC,MAAMC,CAAC,GAAC,IAAI0M,MAAJ,CAAW,yBAAX,CAAR;;EAA8C,OAAI,IAAIpN,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACS,CAAC,CAAC4X,KAAF,CAAQ3Y,MAAtB,EAA6BM,CAAC,EAA9B,EAAiC;EAAC,QAAMe,CAAC,GAACL,CAAC,CAAC4X,IAAF,CAAO7X,CAAC,CAAC4X,KAAF,CAAQrY,CAAR,CAAP,CAAR;;EAA2B,QAAG,CAACe,CAAJ,EAAM;EAACN,MAAAA,CAAC,CAAC8X,QAAF,GAAWvY,CAAX;EAAa;EAAM;;EAAAS,IAAAA,CAAC,CAAC+X,IAAF,CAAOL,QAAQ,CAACF,aAAT,CAAuBlX,CAAC,CAAC,CAAD,CAAxB,CAAP,IAAqCoX,QAAQ,CAACF,aAAT,CAAuBlX,CAAC,CAAC,CAAD,CAAxB,CAArC;EAAkE;;EAAAN,EAAAA,CAAC,CAAC4X,KAAF,GAAQ5X,CAAC,CAAC4X,KAAF,CAAQtM,KAAR,CAActL,CAAC,CAAC8X,QAAhB,EAAyB9X,CAAC,CAAC4X,KAAF,CAAQ3Y,MAAjC,CAAR;EAAiD,CAA/U;;EAAgV,IAAM+Y,YAAY,GAAC,SAAbA,YAAa,CAAShY,CAAT,EAAWC,CAAX,EAAaV,CAAb,EAAe;EAAC,MAAMe,CAAC,GAACoX,QAAQ,CAACF,aAAT,CAAuBvX,CAAvB,CAAR;EAAkC,SAAOK,CAAC,GAACN,CAAC,CAAC8X,QAAJ,GAAa9X,CAAC,CAAC+X,IAAF,CAAOzX,CAAP,CAAb,GAAuBf,CAAC,GAACe,CAAF,GAAI,CAAJ,GAAMN,CAAC,CAAC8X,QAAtC;EAA+C,CAApH;EAAA,IAAqHG,OAAO,GAAC,SAARA,OAAQ,CAASjY,CAAT,EAAW;EAAC,MAAMC,CAAC,GAAC,EAAR;EAAA,MAAWV,CAAC,GAAC,SAAFA,CAAE,CAACe,CAAD,EAAGF,CAAH,EAAO;EAAC,QAAIC,CAAC,GAACL,CAAC,CAAC4X,KAAF,CAAQtX,CAAR,CAAN;EAAiB,YAAMD,CAAC,CAAC,CAAD,CAAP,KAAaJ,CAAC,CAACqI,IAAF,CAAOlI,CAAP,GAAUC,CAAC,GAACA,CAAC,CAACiL,KAAF,CAAQ,CAAR,CAAzB;EAAqC,QAAMjM,CAAC,GAACgB,CAAC,CAAC5B,KAAF,CAAQ,eAAR,CAAR;;EAAiC,SAAI,IAAI4B,EAAC,GAAC,CAAV,EAAYA,EAAC,GAAChB,CAAC,CAACJ,MAAhB,EAAuBoB,EAAC,IAAE,CAA1B,EAA4B;EAAC,UAAME,CAAC,GAAClB,CAAC,CAACgB,EAAD,CAAT;EAAA,UAAaxB,CAAC,GAACQ,CAAC,CAACgB,EAAC,GAAC,CAAH,CAAhB;EAAsB,UAAG,CAACE,CAAJ,EAAM;EAAS,UAAMT,CAAC,GAACM,CAAC,GAACG,CAAV;;EAAY,UAAG,QAAM1B,CAAN,IAAS,KAAK,CAAL,KAASA,CAArB,EAAuB;EAACoB,QAAAA,CAAC,CAACqI,IAAF,CAAOxI,CAAP;EAAU;EAAS;;EAAA,UAAMN,CAAC,GAACwY,YAAY,CAAChY,CAAD,EAAGnB,CAAH,EAAKyB,CAAL,CAApB;EAA4Bf,MAAAA,CAAC,CAACC,CAAD,EAAGM,CAAH,CAAD;EAAO;EAAC,GAAzQ;;EAA0Q,SAAOP,CAAC,CAAC,CAAD,EAAG,EAAH,CAAD,EAAQU,CAAf;EAAiB,CAApa;EAAA,IAAqaiY,MAAM,GAAC,SAAPA,MAAO,CAASlY,CAAT,EAAW;EAAC,MAAMC,CAAC,GAAC;EAAC2X,IAAAA,KAAK,EAAC5X,CAAC,CAACvB,KAAF,CAAQ,GAAR,CAAP;EAAoBsZ,IAAAA,IAAI,EAAC,EAAzB;EAA4BD,IAAAA,QAAQ,EAAC;EAArC,GAAR;EAAgD,SAAO9X,CAAC,CAACmL,KAAF,CAAQ,GAAR,KAAcwM,OAAO,CAAC1X,CAAD,CAArB,EAAyBgY,OAAO,CAAChY,CAAD,CAAvC;EAA2C,CAAnhB;;EAAohB,IAAIkY,QAAQ,GAACD,MAAb;EAAA,IAAoBE,UAAU,GAAC,SAAXA,UAAW,CAASpY,CAAT,EAAW;EAAC,MAAMC,CAAC,GAACD,CAAC,CAACvB,KAAF,CAAQ,GAAR,EAAawK,MAAb,CAAoB,UAACjJ,CAAD,EAAGC,CAAH,EAAO;EAAC,QAAMV,CAAC,GAACU,CAAC,CAACxB,KAAF,CAAQ,GAAR,CAAR;EAAqB,WAAOuB,CAAC,CAACT,CAAC,CAAC,CAAD,CAAF,CAAD,GAAQA,CAAC,CAAC,CAAD,CAAT,EAAaS,CAApB;EAAsB,GAAvE,EAAwE,EAAxE,CAAR;EAAA,MAAoFT,CAAC,GAAC,EAAtF;EAAyF,SAAOuB,MAAM,CAACC,IAAP,CAAYd,CAAZ,EAAee,OAAf,CAAuB,UAAShB,CAAT,EAAW;EAAC,QAAMM,CAAC,GAAC6X,QAAQ,CAAClY,CAAC,CAACD,CAAD,CAAF,CAAhB;EAAuB,eAASA,CAAT,KAAaA,CAAC,GAAC,CAAC,CAAhB;;EAAmB,SAAI,IAAIC,GAAC,GAAC,CAAV,EAAYA,GAAC,GAACK,CAAC,CAACrB,MAAhB,EAAuBgB,GAAC,EAAxB,EAA2B;EAAC,UAAMG,CAAC,GAACE,CAAC,CAACL,GAAD,CAAT;EAAa,OAAC,CAAD,KAAKV,CAAC,CAACmH,cAAF,CAAiBtG,CAAjB,CAAL,GAAyB,CAAC,CAAD,KAAKiY,KAAK,CAACnR,OAAN,CAAc3H,CAAC,CAACa,CAAD,CAAf,CAAL,GAAyBb,CAAC,CAACa,CAAD,CAAD,GAAK,CAACb,CAAC,CAACa,CAAD,CAAF,EAAMJ,CAAN,CAA9B,GAAuCT,CAAC,CAACa,CAAD,CAAD,CAAKkI,IAAL,CAAUtI,CAAV,CAAhE,GAA6ET,CAAC,CAACa,CAAD,CAAD,GAAKJ,CAAlF;EAAoF;EAAC,GAA3M,GAA6MT,CAApN;EAAsN,CAA1V;;EAA2V,kBAAc,GAAC6Y,UAAf;;ECA/sD;EACA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAASjV,IAAT,EAAeZ,GAAf,EAAoB8V,GAApB,EAAyB;EACvC,MAAIA,GAAG,CAAClV,IAAD,CAAH,KAAcC,SAAlB,EAA6B;EAC3B,QAAI,OAAOiV,GAAG,CAAClV,IAAD,CAAV,KAAqB,QAAzB,EAAmC;EACjCkV,MAAAA,GAAG,CAAClV,IAAD,CAAH,GAAY,CAACkV,GAAG,CAAClV,IAAD,CAAJ,CAAZ;EACD;;EACDkV,IAAAA,GAAG,CAAClV,IAAD,CAAH,CAAUiF,IAAV,CAAe7F,GAAf;EACD,GALD,MAKO;EACL8V,IAAAA,GAAG,CAAClV,IAAD,CAAH,GAAYZ,GAAZ;EACD;EACF,CATD;;;EAYA,IAAM+V,OAAO,GAAG,SAAVA,OAAU,CAASnV,IAAT,EAAeZ,GAAf,EAAoBF,KAApB,EAA2B;EACzC,MAAIkW,OAAO,GAAGlW,KAAK,CAACkW,OAApB;EACA,MAAIC,SAAS,GAAGnW,KAAK,CAACoW,UAAtB,CAFyC;;EAKzC,MAAI7L,KAAK,GAAGzJ,IAAI,CAAC5E,KAAL,CAAW,GAAX,CAAZ;;EACA,MAAIqO,KAAK,CAAC7N,MAAN,GAAe,CAAnB,EAAsB;;EAEpBsD,IAAAA,KAAK,CAACqW,WAAN,CAAkB9L,KAAK,CAAC,CAAD,CAAvB,IAA8B,IAA9B;EACD,GATwC;;;EAWzC,MAAIrK,GAAG,KAAK,UAAZ,EAAwB;EACtB,QAAIoW,MAAM,GAAGH,SAAS,CAAC3B,KAAV,CAAgB1T,IAAhB,CAAb;EACAoV,IAAAA,OAAO,CAACI,MAAD,CAAP,GAAkBJ,OAAO,CAACI,MAAD,CAAP,IAAmB,QAArC,CAFsB;EAGvB,GAdwC;;;EAgBzC,MAAIpW,GAAG,KAAK,YAAZ,EAA0B;EACxB,QAAIqW,IAAI,GAAGJ,SAAS,CAAC1B,KAAV,CAAgB3T,IAAhB,CAAX;EACA,QAAIE,IAAI,GAAGzC,MAAM,CAACC,IAAP,CAAY+X,IAAZ,CAAX;;EACA,SAAK,IAAIja,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0E,IAAI,CAACtE,MAAzB,EAAiCJ,CAAC,EAAlC,EAAsC;EACpC,UAAI4B,CAAC,GAAGqY,IAAI,CAACvV,IAAI,CAAC1E,CAAD,CAAL,CAAZ;EACA4Z,MAAAA,OAAO,CAAChY,CAAD,CAAP,GAAagY,OAAO,CAAChY,CAAD,CAAP,IAAc8C,IAAI,CAAC1E,CAAD,CAA/B,CAFoC;EAGrC;EACF,GAvBwC;;;EAyBzC,MAAI4D,GAAG,KAAK,YAAZ,EAA0B;EACxB,QAAIqW,KAAI,GAAGJ,SAAS,CAACK,UAAV,CAAqB1V,IAArB,CAAX;;EACA,QAAIE,KAAI,GAAGzC,MAAM,CAACC,IAAP,CAAY+X,KAAZ,CAAX;;EACA,SAAK,IAAIja,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG0E,KAAI,CAACtE,MAAzB,EAAiCJ,EAAC,EAAlC,EAAsC;EACpC,UAAI4B,EAAC,GAAGqY,KAAI,CAACvV,KAAI,CAAC1E,EAAD,CAAL,CAAZ;EACA4Z,MAAAA,OAAO,CAAChY,EAAD,CAAP,GAAagY,OAAO,CAAChY,EAAD,CAAP,IAAc8C,KAAI,CAAC1E,EAAD,CAA/B,CAFoC;EAGrC;EACF,GAhCwC;;;EAkCzC,MAAI4D,GAAG,KAAK,aAAZ,EAA2B;;EAEzB6V,IAAAA,OAAO,CAACjV,IAAD,EAAO,YAAP,EAAqBoV,OAArB,CAAP,CAFyB;;EAIzB,QAAIK,MAAI,GAAGJ,SAAS,CAAC1B,KAAV,CAAgBlK,KAAK,CAAC,CAAD,CAArB,CAAX;;EACA,QAAIvJ,MAAI,GAAGzC,MAAM,CAACC,IAAP,CAAY+X,MAAZ,CAAX;;EACA,SAAK,IAAIja,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG0E,MAAI,CAACtE,MAAzB,EAAiCJ,GAAC,EAAlC,EAAsC;;EAEpC0D,MAAAA,KAAK,CAACqW,WAAN,CAAkBE,MAAI,CAACvV,MAAI,CAAC1E,GAAD,CAAL,CAAtB,IAAmC,IAAnC,CAFoC;;EAIpC,UAAI4B,GAAC,GAAGqY,MAAI,CAACvV,MAAI,CAAC1E,GAAD,CAAL,CAAJ,GAAgB,GAAhB,GAAsBiO,KAAK,CAAC,CAAD,CAAnC;;EACAwL,MAAAA,OAAO,CAAC7X,GAAD,EAAI8C,MAAI,CAAC1E,GAAD,CAAR,EAAa4Z,OAAb,CAAP;EACAH,MAAAA,OAAO,CAAC7X,GAAD,EAAI,aAAJ,EAAmBgY,OAAnB,CAAP;EACD;EACF,GAhDwC;;;EAkDzC,MAAIhW,GAAG,KAAK,SAAZ,EAAuB;EACrB,QAAIoW,OAAM,GAAGH,SAAS,CAAC3B,KAAV,CAAgB1T,IAAhB,CAAb;;EACAoV,IAAAA,OAAO,CAACI,OAAD,CAAP,GAAkBJ,OAAO,CAACI,OAAD,CAAP,IAAmB,CAAC,SAAD,EAAY,QAAZ,CAArC,CAFqB;EAGtB;EACF,CAtDD;;;EAyDA,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAASlM,KAAT,EAAgBrK,GAAhB,EAAqBF,KAArB,EAA4B;EAC3C,MAAIkW,OAAO,GAAGlW,KAAK,CAACkW,OAApB;;EACA,OAAK,IAAI5Z,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiO,KAAK,CAAC7N,MAA1B,EAAkCJ,CAAC,EAAnC,EAAuC;EACrCyZ,IAAAA,OAAO,CAACxL,KAAK,CAACjO,CAAD,CAAN,EAAW4D,GAAX,EAAgBgW,OAAhB,CAAP,CADqC;;EAGrCD,IAAAA,OAAO,CAAC1L,KAAK,CAACjO,CAAD,CAAN,EAAW4D,GAAX,EAAgBF,KAAhB,CAAP;EACD;EACF,CAPD;;EAQA,cAAc,GAAGyW,QAAjB;;EC9EA;EACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAS1W,KAAT,EAAgB;;EAEpC,MAAIwU,KAAK,GAAGxU,KAAK,CAAC2W,UAAN,CAAiBnC,KAA7B;EACA,MAAIjK,KAAK,GAAGhM,MAAM,CAACC,IAAP,CAAYgW,KAAZ,CAAZ;;EACA,OAAK,IAAIlY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiO,KAAK,CAAC7N,MAA1B,EAAkCJ,CAAC,EAAnC,EAAuC;EACrC,QAAM4B,CAAC,GAAGqM,KAAK,CAACjO,CAAD,CAAf;EACA0D,IAAAA,KAAK,CAACkW,OAAN,CAAchY,CAAd,IAAmB,UAAnB;EACA8B,IAAAA,KAAK,CAACkW,OAAN,CAAc1B,KAAK,CAACtW,CAAD,CAAnB,IAA0B,QAA1B;EACD,GARmC;;;EAWpC,MAAIuW,KAAK,GAAGzU,KAAK,CAAC2W,UAAN,CAAiBlC,KAA7B;EACA,MAAIjW,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAYiW,KAAZ,CAAX;;EAZoC,6BAa3BnY,EAb2B;EAclC,QAAMsa,GAAG,GAAGpY,IAAI,CAAClC,EAAD,CAAhB,CAdkC;;EAgBlC0D,IAAAA,KAAK,CAACkW,OAAN,CAAcU,GAAd,IAAqB5W,KAAK,CAACkW,OAAN,CAAcU,GAAd,KAAsB,YAA3C;EACA,QAAIC,KAAK,GAAG7W,KAAK,CAACoW,UAAN,CAAiB3B,KAAjB,CAAuBmC,GAAvB,CAAZ;EACAC,IAAAA,KAAK,GAAGtY,MAAM,CAACsE,MAAP,CAAcgU,KAAd,EAAqBpC,KAAK,CAACmC,GAAD,CAA1B,CAAR,CAlBkC;;EAoBlCrY,IAAAA,MAAM,CAACC,IAAP,CAAYqY,KAAZ,EAAmBpY,OAAnB,CAA2B,UAAAyB,GAAG,EAAI;EAChCF,MAAAA,KAAK,CAACkW,OAAN,CAAcW,KAAK,CAAC3W,GAAD,CAAnB,IAA4BF,KAAK,CAACkW,OAAN,CAAcW,KAAK,CAAC3W,GAAD,CAAnB,KAA6BA,GAAzD;EACD,KAFD;EApBkC;;EAapC,OAAK,IAAI5D,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGkC,IAAI,CAAC9B,MAAzB,EAAiCJ,EAAC,EAAlC,EAAsC;EAAA,UAA7BA,EAA6B;EAUrC;EACF,CAxBD;;EAyBA,mBAAc,GAAGoa,aAAjB;;EC1BA;EACA,UAAc,GAAG;;EAEf,sBAAoB,cAFL;EAGf,QAAM,cAHS;EAIf,cAAY,cAJG;EAKf,cAAY,cALG;EAMfI,EAAAA,EAAE,EAAE,cANW;EAOf,aAAW,cAPI;EAQfC,EAAAA,GAAG,EAAE,cARU;EASfC,EAAAA,EAAE,EAAE,MATW;EAUfC,EAAAA,EAAE,EAAE,MAVW;EAWfC,EAAAA,EAAE,EAAE,MAXW;EAYfC,EAAAA,EAAE,EAAE;EAZW,CAAjB;;ECDA;;EAGA,WAAc,GAAG;EACfC,EAAAA,QAAQ,EAAE,SADK;EAEfC,EAAAA,IAAI,EAAE,OAFS;EAGfC,EAAAA,MAAM,EAAE,SAHO;EAIfC,EAAAA,OAAO,EAAE,QAJM;EAKfC,EAAAA,QAAQ,EAAE,UALK;EAMfC,EAAAA,OAAO,EAAE,UANM;EAOfC,EAAAA,QAAQ,EAAE,YAPK;EAQfC,EAAAA,OAAO,EAAE,UARM;EASfC,EAAAA,IAAI,EAAE,MATS;EAUfC,EAAAA,QAAQ,EAAE,SAVK;EAWfC,EAAAA,QAAQ,EAAE,UAXK;EAYfC,EAAAA,IAAI,EAAE,OAZS;EAafC,EAAAA,GAAG,EAAE,OAbU;EAcfC,EAAAA,MAAM,EAAE,OAdO;EAefC,EAAAA,OAAO,EAAE,UAfM;EAgBfC,EAAAA,KAAK,EAAE,UAhBQ;EAiBfC,EAAAA,MAAM,EAAE,UAjBO;EAkBfC,EAAAA,OAAO,EAAE,SAlBM;EAmBfC,EAAAA,MAAM,EAAE,SAnBO;EAoBfC,EAAAA,SAAS,EAAE,UApBI;EAqBfC,EAAAA,UAAU,EAAE,WArBG;EAsBfC,EAAAA,QAAQ,EAAE,WAtBK;EAuBfC,EAAAA,IAAI,EAAE,MAvBS;EAwBfC,EAAAA,SAAS,EAAE,WAxBI;EAyBfC,EAAAA,IAAI,EAAE,QAzBS;EA0BfC,EAAAA,OAAO,EAAE,WA1BM;EA2BfC,EAAAA,KAAK,EAAE,QA3BQ;EA4BfC,EAAAA,IAAI,EAAE,MA5BS;EA6BfC,EAAAA,OAAO,EAAE,UA7BM;EA8BfC,EAAAA,MAAM,EAAE,OA9BO;EA+BfC,EAAAA,KAAK,EAAE,QA/BQ;EAgCfC,EAAAA,KAAK,EAAE,OAhCQ;EAiCfC,EAAAA,IAAI,EAAE,OAjCS;EAkCfC,EAAAA,YAAY,EAAE,aAlCC;EAmCfxQ,EAAAA,KAAK,EAAE,SAnCQ;EAoCfyQ,EAAAA,KAAK,EAAE,QApCQ;EAqCfC,EAAAA,IAAI,EAAE,QArCS;EAsCfC,EAAAA,QAAQ,EAAE,UAtCK;EAuCfC,EAAAA,IAAI,EAAE,QAvCS;EAwCfC,EAAAA,GAAG,EAAE,KAxCU;EAyCfC,EAAAA,MAAM,EAAE,UAzCO;EA0CfC,EAAAA,UAAU,EAAE,WA1CG;EA2CfC,EAAAA,OAAO,EAAE,QA3CM;EA4CfC,EAAAA,QAAQ,EAAE,YA5CK;EA6CfC,EAAAA,KAAK,EAAE,MA7CQ;EA8CfC,EAAAA,IAAI,EAAE,OA9CS;EA+CfC,EAAAA,MAAM,EAAE,SA/CO;EAgDfC,EAAAA,OAAO,EAAE,QAhDM;EAiDfC,EAAAA,OAAO,EAAE,QAjDM;EAkDfC,EAAAA,IAAI,EAAE,OAlDS;EAmDfC,EAAAA,IAAI,EAAE,KAnDS;EAoDfC,EAAAA,EAAE,EAAE,MApDW;EAqDfC,EAAAA,WAAW,EAAE,aArDE;EAsDfC,EAAAA,MAAM,EAAE,QAtDO;EAuDfC,EAAAA,UAAU,EAAE,WAvDG;EAwDfC,EAAAA,SAAS,EAAE,WAxDI;EAyDfC,EAAAA,IAAI,EAAE,SAzDS;EA0DfC,EAAAA,MAAM,EAAE,OA1DO;EA2DfC,EAAAA,UAAU,EAAE,WA3DG;EA4DfC,EAAAA,KAAK,EAAE,QA5DQ;EA6DfC,EAAAA,GAAG,EAAE,OA7DU;EA8DfC,EAAAA,IAAI,EAAE,OA9DS;EA+DfC,EAAAA,QAAQ,EAAE,WA/DK;EAgEfC,EAAAA,QAAQ,EAAE,SAhEK;EAiEfC,EAAAA,OAAO,EAAE,UAjEM;EAkEfC,EAAAA,QAAQ,EAAE,SAlEK;EAmEfC,EAAAA,QAAQ,EAAE,UAnEK;EAoEfC,EAAAA,OAAO,EAAE,UApEM;EAqEfC,EAAAA,MAAM,EAAE,QArEO;EAsEfC,EAAAA,KAAK,EAAE,SAtEQ;EAuEfC,EAAAA,KAAK,EAAE,OAvEQ;EAwEfC,EAAAA,OAAO,EAAE,UAxEM;EAyEfC,EAAAA,MAAM,EAAE,SAzEO;EA0EfC,EAAAA,QAAQ,EAAE,WA1EK;;EA4EfC,EAAAA,IAAI,EAAE;EA5ES,CAAjB;;ECHA;;;;EAKA,IAAMC,OAAO,GAAG;EACd5e,EAAAA,CAAC,EAAE,QADW;EAEd6e,EAAAA,GAAG,EAAE,YAFS;EAGdC,EAAAA,IAAI,EAAE,cAHQ;EAIdC,EAAAA,GAAG,EAAE,WAJS;EAKdC,EAAAA,GAAG,EAAE,eALS;EAMdC,EAAAA,IAAI,EAAE,cANQ;EAOdC,EAAAA,OAAO,EAAE,YAPK;EAQdC,EAAAA,GAAG,EAAE;EARS,CAAhB;;EAYA,IAAIC,YAAY,GAAG;EACjBD,EAAAA,GAAG,EAAE;EACHA,IAAAA,GAAG,EAAE;EADF,GADY;EAIjBE,EAAAA,GAAG,EAAE;EACHrf,IAAAA,CAAC,EAAE,QADA;EAEH+e,IAAAA,GAAG,EAAE,MAFF;EAGHE,IAAAA,IAAI,EAAE;EAHH,GAJY;EASjBK,EAAAA,GAAG,EAAE;EACHH,IAAAA,GAAG,EAAE,KADF;EAEHnf,IAAAA,CAAC,EAAE,MAFA;EAGH+e,IAAAA,GAAG,EAAE;EAHF,GATY;EAcjBQ,EAAAA,KAAK,EAAE;EACLV,IAAAA,GAAG,EAAE,IADA;EAELE,IAAAA,GAAG,EAAE;EAFA,GAdU;EAkBjBS,EAAAA,OAAO,EAAE;EACPL,IAAAA,GAAG,EAAE,MADE;EAEPJ,IAAAA,GAAG,EAAE;EAFE,GAlBQ;EAsBjBU,EAAAA,GAAG,EAAE;EACHN,IAAAA,GAAG,EAAE,EADF;EAEHnf,IAAAA,CAAC,EAAE,OAFA;EAGH+e,IAAAA,GAAG,EAAE;EAHF,GAtBY;EA2BjBW,EAAAA,EAAE,EAAE;EACFP,IAAAA,GAAG,EAAE,EADH;EAEFnf,IAAAA,CAAC,EAAE,IAFD;EAGF6e,IAAAA,GAAG,EAAE,MAHH;EAIFE,IAAAA,GAAG,EAAE,KAJH;EAKFE,IAAAA,IAAI,EAAE;EALJ,GA3Ba;EAkCjBU,EAAAA,IAAI,EAAE;EACJR,IAAAA,GAAG,EAAE,KADD;EAEJnf,IAAAA,CAAC,EAAE,MAFC;EAGJ6e,IAAAA,GAAG,EAAE;EAHD,GAlCW;EAuCjBe,EAAAA,MAAM,EAAE;EACNf,IAAAA,GAAG,EAAE;EADC,GAvCS;EA0CjBgB,EAAAA,KAAK,EAAE;EACL7f,IAAAA,CAAC,EAAE,OADE;EAEL6e,IAAAA,GAAG,EAAE,OAFA;EAGLE,IAAAA,GAAG,EAAE;EAHA,GA1CU;EA+CjBe,EAAAA,KAAK,EAAE;EACL9f,IAAAA,CAAC,EAAE,KADE;EAEL+e,IAAAA,GAAG,EAAE,MAFA;EAGLE,IAAAA,IAAI,EAAE;EAHD,GA/CU;EAoDjBc,EAAAA,IAAI,EAAE;EACJlB,IAAAA,GAAG,EAAE;EADD,GApDW;EAuDjBmB,EAAAA,GAAG,EAAE;EACHb,IAAAA,GAAG,EAAE,MADF;EAEHN,IAAAA,GAAG,EAAE;EAFF,GAvDY;EA2DjBoB,EAAAA,IAAI,EAAE;EACJlB,IAAAA,GAAG,EAAE;EADD,GA3DW;EA8DjBmB,EAAAA,IAAI,EAAE;EACJlgB,IAAAA,CAAC,EAAE,QADC;EAEJ6e,IAAAA,GAAG,EAAE,QAFD;EAGJE,IAAAA,GAAG,EAAE;EAHD,GA9DW;EAmEjBoB,EAAAA,KAAK,EAAE;EACLtB,IAAAA,GAAG,EAAE,MADA;EAELE,IAAAA,GAAG,EAAE;EAFA,GAnEU;EAuEjBqB,EAAAA,IAAI,EAAE;EACJvB,IAAAA,GAAG,EAAE,IADD;EAEJE,IAAAA,GAAG,EAAE;EAFD,GAvEW;EA2EjBsB,EAAAA,IAAI,EAAE;EACJlB,IAAAA,GAAG,EAAE;EADD,GA3EW;EA8EjBmB,EAAAA,KAAK,EAAE;EACLzB,IAAAA,GAAG,EAAE;EADA,GA9EU;EAiFjB,WAAO;EACLE,IAAAA,GAAG,EAAE;EADA,GAjFU;EAoFjBwB,EAAAA,KAAK,EAAE;EACLxB,IAAAA,GAAG,EAAE;EADA,GApFU;EAuFjByB,EAAAA,KAAK,EAAE;EACL3B,IAAAA,GAAG,EAAE,SADA;EAELE,IAAAA,GAAG,EAAE;EAFA,GAvFU;EA2FjB0B,EAAAA,SAAS,EAAE;EACT1B,IAAAA,GAAG,EAAE;EADI,GA3FM;EA8FjB2B,EAAAA,MAAM,EAAE;EACN3B,IAAAA,GAAG,EAAE;EADC,GA9FS;EAiGjB1H,EAAAA,KAAK,EAAE;EACLwH,IAAAA,GAAG,EAAE,OADA;EAELE,IAAAA,GAAG,EAAE;EAFA,GAjGU;EAqGjB4B,EAAAA,IAAI,EAAE;EACJ9B,IAAAA,GAAG,EAAE;EADD,GArGW;EAwGjB+B,EAAAA,KAAK,EAAE;EACL/B,IAAAA,GAAG,EAAE;EADA,GAxGU;EA2GjBgC,EAAAA,GAAG,EAAE;EACHhC,IAAAA,GAAG,EAAE,QADF;EAEHE,IAAAA,GAAG,EAAE;EAFF,GA3GY;EA+GjBlQ,EAAAA,GAAG,EAAE;EACHsQ,IAAAA,GAAG,EAAE,EADF;EAEHH,IAAAA,GAAG,EAAE,GAFF;EAGHhf,IAAAA,CAAC,EAAE,EAHA;EAIH+e,IAAAA,GAAG,EAAE,OAJF;EAKHD,IAAAA,IAAI,EAAE,OALH;EAMHI,IAAAA,OAAO,EAAE,OANN;EAOHD,IAAAA,IAAI,EAAE;EAPH,GA/GY;EAwHjB,WAAO;EACLF,IAAAA,GAAG,EAAE;EADA,GAxHU;EA2HjB+B,EAAAA,MAAM,EAAE;EACN9gB,IAAAA,CAAC,EAAE,UADG;EAEN6e,IAAAA,GAAG,EAAE,QAFC;EAGNE,IAAAA,GAAG,EAAE;EAHC,GA3HS;EAgIjBgC,EAAAA,KAAK,EAAE;EACLlC,IAAAA,GAAG,EAAE;EADA,GAhIU;EAmIjBmC,EAAAA,IAAI,EAAE;EACJnC,IAAAA,GAAG,EAAE,GADD;EAEJE,IAAAA,GAAG,EAAE;EAFD,GAnIW;EAuIjBkC,EAAAA,OAAO,EAAE;EACP9B,IAAAA,GAAG,EAAE,YADE;EAEPnf,IAAAA,CAAC,EAAE,WAFI;EAGP+e,IAAAA,GAAG,EAAE;EAHE,GAvIQ;EA4IjBmC,EAAAA,IAAI,EAAE;EACJnC,IAAAA,GAAG,EAAE;EADD,GA5IW;EA+IjBoC,EAAAA,KAAK,EAAE;EACLtC,IAAAA,GAAG,EAAE;EADA,GA/IU;EAkJjBuC,EAAAA,GAAG,EAAE;EACHvC,IAAAA,GAAG,EAAE;EADF,GAlJY;EAqJjBwC,EAAAA,IAAI,EAAE;EACJxC,IAAAA,GAAG,EAAE,IADD;EAEJE,IAAAA,GAAG,EAAE;EAFD,GArJW;EAyJjBuC,EAAAA,OAAO,EAAE;EACPnC,IAAAA,GAAG,EAAE,KADE;EAEPnf,IAAAA,CAAC,EAAE,MAFI;EAGP+e,IAAAA,GAAG,EAAE;EAHE,GAzJQ;EA8JjBwC,EAAAA,GAAG,EAAE;EACHvhB,IAAAA,CAAC,EAAE,OADA;EAEH+e,IAAAA,GAAG,EAAE;EAFF,GA9JY;EAkKjByC,EAAAA,GAAG,EAAE;EACHxhB,IAAAA,CAAC,EAAE,OADA;EAEH6e,IAAAA,GAAG,EAAE,KAFF;EAGHE,IAAAA,GAAG,EAAE;EAHF,GAlKY;EAuKjB0C,EAAAA,IAAI,EAAE;EACJ5C,IAAAA,GAAG,EAAE;EADD,GAvKW;EA0KjB,QAAI;EACFE,IAAAA,GAAG,EAAE,KADH;EAEFE,IAAAA,IAAI,EAAE;EAFJ,GA1Ka;EA8KjByC,EAAAA,IAAI,EAAE;EACJ7C,IAAAA,GAAG,EAAE,IADD;EAEJE,IAAAA,GAAG,EAAE;EAFD,GA9KW;EAkLjB4C,EAAAA,KAAK,EAAE;EACL9C,IAAAA,GAAG,EAAE;EADA,GAlLU;EAqLjB+C,EAAAA,KAAK,EAAE;EACL/C,IAAAA,GAAG,EAAE,OADA;EAELE,IAAAA,GAAG,EAAE;EAFA,GArLU;EAyLjB8C,EAAAA,KAAK,EAAE;EACL7hB,IAAAA,CAAC,EAAE,SADE;EAEL6e,IAAAA,GAAG,EAAE,IAFA;EAGLE,IAAAA,GAAG,EAAE;EAHA,GAzLU;EA8LjB+C,EAAAA,IAAI,EAAE;EACJ9hB,IAAAA,CAAC,EAAE,OADC;EAEJ+e,IAAAA,GAAG,EAAE;EAFD,GA9LW;EAkMjBgD,EAAAA,GAAG,EAAE;EACH5C,IAAAA,GAAG,EAAE,KADF;EAEHnf,IAAAA,CAAC,EAAE,MAFA;EAGH6e,IAAAA,GAAG,EAAE,KAHF;EAIHE,IAAAA,GAAG,EAAE;EAJF,GAlMY;EAwMjBiD,EAAAA,IAAI,EAAE;EACJhiB,IAAAA,CAAC,EAAE;EADC,GAxMW;EA2MjBiiB,EAAAA,GAAG,EAAE;EACHlD,IAAAA,GAAG,EAAE;EADF,GA3MY;EA8MjBmD,EAAAA,IAAI,EAAE;EACJrD,IAAAA,GAAG,EAAE,KADD;EAEJE,IAAAA,GAAG,EAAE;EAFD,GA9MW;EAkNjBoD,EAAAA,IAAI,EAAE;EACJtD,IAAAA,GAAG,EAAE,KADD;EAEJE,IAAAA,GAAG,EAAE;EAFD,GAlNW;EAsNjBqD,EAAAA,IAAI,EAAE;EACJjD,IAAAA,GAAG,EAAE,KADD;EAEJJ,IAAAA,GAAG,EAAE;EAFD,GAtNW;EA0NjBsD,EAAAA,KAAK,EAAE;EACLxD,IAAAA,GAAG,EAAE,QADA;EAELE,IAAAA,GAAG,EAAE;EAFA,GA1NU;EA8NjB5a,EAAAA,IAAI,EAAE;EACJ4a,IAAAA,GAAG,EAAE;EADD,GA9NW;EAiOjBuD,EAAAA,IAAI,EAAE;EACJtiB,IAAAA,CAAC,EAAE,MADC;EAEJ6e,IAAAA,GAAG,EAAE;EAFD,GAjOW;EAqOjB0D,EAAAA,KAAK,EAAE;EACL1D,IAAAA,GAAG,EAAE;EADA,GArOU;EAwOjB2D,EAAAA,GAAG,EAAE;EACH3D,IAAAA,GAAG,EAAE,OADF;EAEHE,IAAAA,GAAG,EAAE;EAFF,GAxOY;EA4OjB0D,EAAAA,MAAM,EAAE;EACN1D,IAAAA,GAAG,EAAE;EADC,GA5OS;EA+OjB2D,EAAAA,MAAM,EAAE;EACN1iB,IAAAA,CAAC,EAAE,MADG;EAEN6e,IAAAA,GAAG,EAAE,WAFC;EAGNE,IAAAA,GAAG,EAAE;EAHC,GA/OS;EAoPjB4D,EAAAA,OAAO,EAAE;EACP3iB,IAAAA,CAAC,EAAE,WADI;EAEP6e,IAAAA,GAAG,EAAE,IAFE;EAGPE,IAAAA,GAAG,EAAE;EAHE,GApPQ;EAyPjB6D,EAAAA,IAAI,EAAE;EACJzD,IAAAA,GAAG,EAAE,EADD;EAEJnf,IAAAA,CAAC,EAAE;EAFC,GAzPW;EA6PjB6iB,EAAAA,MAAM,EAAE;EACN7iB,IAAAA,CAAC,EAAE,UADG;EAEN6e,IAAAA,GAAG,EAAE,QAFC;EAGNE,IAAAA,GAAG,EAAE;EAHC,GA7PS;EAkQjBpW,EAAAA,GAAG,EAAE;EACHoW,IAAAA,GAAG,EAAE,KADF;EAEHF,IAAAA,GAAG,EAAE;EAFF,GAlQY;EAsQjBiE,EAAAA,IAAI,EAAE;EACJ9iB,IAAAA,CAAC,EAAE,QADC;EAEJ6e,IAAAA,GAAG,EAAE,IAFD;EAGJE,IAAAA,GAAG,EAAE;EAHD,GAtQW;EA2QjBgE,EAAAA,EAAE,EAAE;EACFlE,IAAAA,GAAG,EAAE,KADH;EAEFE,IAAAA,GAAG,EAAE,MAFH;EAGFE,IAAAA,IAAI,EAAE;EAHJ,GA3Qa;EAgRjB+D,EAAAA,IAAI,EAAE;EACJnE,IAAAA,GAAG,EAAE;EADD,GAhRW;EAmRjBoE,EAAAA,IAAI,EAAE;EACJpE,IAAAA,GAAG,EAAE,MADD;EAEJE,IAAAA,GAAG,EAAE;EAFD,GAnRW;EAuRjBmE,EAAAA,IAAI,EAAE;EACJljB,IAAAA,CAAC,EAAE,QADC;EAEJ6e,IAAAA,GAAG,EAAE,KAFD;EAGJE,IAAAA,GAAG,EAAE,KAHD;EAIJE,IAAAA,IAAI,EAAE;EAJF,GAvRW;EA6RjBkE,EAAAA,IAAI,EAAE;EACJtE,IAAAA,GAAG,EAAE,IADD;EAEJE,IAAAA,GAAG,EAAE;EAFD,GA7RW;EAiSjBqE,EAAAA,IAAI,EAAE;EACJvE,IAAAA,GAAG,EAAE,QADD;EAEJE,IAAAA,GAAG,EAAE;EAFD,GAjSW;EAqSjBsE,EAAAA,GAAG,EAAE;EACHxE,IAAAA,GAAG,EAAE;EADF,GArSY;EAwSjByE,EAAAA,IAAI,EAAE;EACJzE,IAAAA,GAAG,EAAE,MADD;EAEJE,IAAAA,GAAG,EAAE;EAFD,GAxSW;EA4SjBwE,EAAAA,IAAI,EAAE;EACJ1E,IAAAA,GAAG,EAAE,GADD;EAEJE,IAAAA,GAAG,EAAE;EAFD,GA5SW;EAgTjByE,EAAAA,GAAG,EAAE;EACHxjB,IAAAA,CAAC,EAAE,OADA;EAEH+e,IAAAA,GAAG,EAAE;EAFF,GAhTY;EAoTjB0E,EAAAA,KAAK,EAAE;EACL1E,IAAAA,GAAG,EAAE,SADA;EAELE,IAAAA,IAAI,EAAE;EAFD,GApTU;EAwTjByE,EAAAA,EAAE,EAAE;EACFvE,IAAAA,GAAG,EAAE,EADH;EAEFnf,IAAAA,CAAC,EAAE,OAFD;EAGF+e,IAAAA,GAAG,EAAE,KAHH;EAIFE,IAAAA,IAAI,EAAE;EAJJ,GAxTa;EA8TjB0E,EAAAA,IAAI,EAAE;EACJ9E,IAAAA,GAAG,EAAE;EADD,GA9TW;EAiUjB+E,EAAAA,KAAK,EAAE;EACL/E,IAAAA,GAAG,EAAE;EADA,GAjUU;EAoUjBgF,EAAAA,IAAI,EAAE;EACJhF,IAAAA,GAAG,EAAE;EADD,GApUW;EAuUjBiF,EAAAA,GAAG,EAAE;EACHjF,IAAAA,GAAG,EAAE,MADF;EAEHE,IAAAA,GAAG,EAAE;EAFF,GAvUY;EA2UjBgF,EAAAA,IAAI,EAAE;EACJlF,IAAAA,GAAG,EAAE,KADD;EAEJE,IAAAA,GAAG,EAAE;EAFD,GA3UW;EA+UjBiF,EAAAA,IAAI,EAAE;EACJnF,IAAAA,GAAG,EAAE;EADD,GA/UW;EAkVjBoF,EAAAA,KAAK,EAAE;EACLpF,IAAAA,GAAG,EAAE,MADA;EAELE,IAAAA,GAAG,EAAE;EAFA,GAlVU;EAsVjBmF,EAAAA,IAAI,EAAE;EACJrF,IAAAA,GAAG,EAAE;EADD,GAtVW;EAyVjBsF,EAAAA,GAAG,EAAE;EACHnkB,IAAAA,CAAC,EAAE,OADA;EAEH+e,IAAAA,GAAG,EAAE;EAFF,GAzVY;EA6VjBqF,EAAAA,KAAK,EAAE;EACLvF,IAAAA,GAAG,EAAE,KADA;EAELE,IAAAA,GAAG,EAAE;EAFA,GA7VU;EAiWjB3Y,EAAAA,GAAG,EAAE;EACHpG,IAAAA,CAAC,EAAE,OADA;EAEH+e,IAAAA,GAAG,EAAE;EAFF,GAjWY;EAqWjBsF,EAAAA,KAAK,EAAE;EACLxF,IAAAA,GAAG,EAAE;EADA,GArWU;EAwWjByF,EAAAA,IAAI,EAAE;EACJtkB,IAAAA,CAAC,EAAE,QADC;EAEJ+e,IAAAA,GAAG,EAAE;EAFD,GAxWW;EA4WjBwF,EAAAA,IAAI,EAAE;EACJ1F,IAAAA,GAAG,EAAE,MADD;EAEJE,IAAAA,GAAG,EAAE;EAFD,GA5WW;EAgXjByF,EAAAA,IAAI,EAAE;EACJ3F,IAAAA,GAAG,EAAE,IADD;EAEJE,IAAAA,GAAG,EAAE;EAFD,GAhXW;EAoXjB0F,EAAAA,IAAI,EAAE;EACJtF,IAAAA,GAAG,EAAE,KADD;EAEJnf,IAAAA,CAAC,EAAE,MAFC;EAGJ6e,IAAAA,GAAG,EAAE,KAHD;EAIJE,IAAAA,GAAG,EAAE;EAJD,GApXW;EA0XjB2F,EAAAA,IAAI,EAAE;EACJzF,IAAAA,IAAI,EAAE;EADF,GA1XW;EA6XjB0F,EAAAA,GAAG,EAAE;EACH9F,IAAAA,GAAG,EAAE,MADF;EAEHE,IAAAA,GAAG,EAAE;EAFF,GA7XY;EAiYjB6F,EAAAA,KAAK,EAAE;EACL/F,IAAAA,GAAG,EAAE;EADA,GAjYU;EAoYjBgG,EAAAA,IAAI,EAAE;EACJ7kB,IAAAA,CAAC,EAAE;EADC,GApYW;EAuYjB8kB,EAAAA,GAAG,EAAE;EACHjG,IAAAA,GAAG,EAAE;EADF,GAvYY;EA0YjBkG,EAAAA,IAAI,EAAE;EACJlG,IAAAA,GAAG,EAAE;EADD,GA1YW;EA6YjBmG,EAAAA,IAAI,EAAE;EACJnG,IAAAA,GAAG,EAAE,GADD;EAEJE,IAAAA,GAAG,EAAE;EAFD,GA7YW;EAiZjBkG,EAAAA,IAAI,EAAE;EACJpG,IAAAA,GAAG,EAAE;EADD,GAjZW;EAoZjBqG,EAAAA,IAAI,EAAE;EACJrG,IAAAA,GAAG,EAAE,MADD;EAEJE,IAAAA,GAAG,EAAE;EAFD,GApZW;EAwZjBoG,EAAAA,IAAI,EAAE;EACJnG,IAAAA,GAAG,EAAE,cADD;EAEJhf,IAAAA,CAAC,EAAE,QAFC;EAGJ6e,IAAAA,GAAG,EAAE,IAHD;EAIJE,IAAAA,GAAG,EAAE,MAJD;EAKJG,IAAAA,OAAO,EAAE;EALL,GAxZW;EA+ZjBkG,EAAAA,GAAG,EAAE;EACHplB,IAAAA,CAAC,EAAE,OADA;EAEH+e,IAAAA,GAAG,EAAE;EAFF,GA/ZY;EAmajBsG,EAAAA,GAAG,EAAE;EACHrlB,IAAAA,CAAC,EAAE,OADA;EAEH6e,IAAAA,GAAG,EAAE,GAFF;EAGHE,IAAAA,GAAG,EAAE;EAHF,GAnaY;EAwajBuG,EAAAA,GAAG,EAAE;EACHzG,IAAAA,GAAG,EAAE,MADF;EAEHE,IAAAA,GAAG,EAAE,MAFF;EAGHE,IAAAA,IAAI,EAAE;EAHH,GAxaY;EA6ajBsG,EAAAA,IAAI,EAAE;EACJ1G,IAAAA,GAAG,EAAE;EADD,GA7aW;EAgbjB2G,EAAAA,GAAG,EAAE;EACHxlB,IAAAA,CAAC,EAAE,MADA;EAEH6e,IAAAA,GAAG,EAAE,IAFF;EAGHE,IAAAA,GAAG,EAAE;EAHF,GAhbY;EAqbjB0G,EAAAA,IAAI,EAAE;EACJ5G,IAAAA,GAAG,EAAE;EADD,GArbW;EAwbjB6G,EAAAA,IAAI,EAAE;EACJ7G,IAAAA,GAAG,EAAE,MADD;EAEJE,IAAAA,GAAG,EAAE;EAFD,GAxbW;EA4bjB4G,EAAAA,IAAI,EAAE;EACJ9G,IAAAA,GAAG,EAAE;EADD,GA5bW;EA+bjB+G,EAAAA,GAAG,EAAE;EACH/G,IAAAA,GAAG,EAAE;EADF,GA/bY;EAkcjBgH,EAAAA,GAAG,EAAE;EACHhH,IAAAA,GAAG,EAAE;EADF,GAlcY;EAqcjBiH,EAAAA,KAAK,EAAE;EACLjH,IAAAA,GAAG,EAAE;EADA,GArcU;EAwcjBkH,EAAAA,KAAK,EAAE;EACLlH,IAAAA,GAAG,EAAE;EADA,GAxcU;EA2cjBmH,EAAAA,IAAI,EAAE;EACJhmB,IAAAA,CAAC,EAAE,OADC;EAEJ+e,IAAAA,GAAG,EAAE,GAFD;EAGJE,IAAAA,IAAI,EAAE;EAHF,GA3cW;EAgdjBgH,EAAAA,KAAK,EAAE;EACLpH,IAAAA,GAAG,EAAE,OADA;EAELE,IAAAA,GAAG,EAAE;EAFA,GAhdU;EAodjBmH,EAAAA,KAAK,EAAE;EACLrH,IAAAA,GAAG,EAAE,MADA;EAELE,IAAAA,GAAG,EAAE;EAFA,GApdU;EAwdjBoH,EAAAA,IAAI,EAAE;EACJpH,IAAAA,GAAG,EAAE;EADD,GAxdW;EA2djBqH,EAAAA,IAAI,EAAE;EACJvH,IAAAA,GAAG,EAAE;EADD,GA3dW;EA8djBwH,EAAAA,IAAI,EAAE;EACJxH,IAAAA,GAAG,EAAE,MADD;EAEJE,IAAAA,GAAG,EAAE;EAFD,GA9dW;EAkejBuH,EAAAA,IAAI,EAAE;EACJvH,IAAAA,GAAG,EAAE,MADD;EAEJG,IAAAA,OAAO,EAAE;EAFL,GAleW;EAsejBqH,EAAAA,GAAG,EAAE;EACHxH,IAAAA,GAAG,EAAE;EADF,GAteY;EAyejByH,EAAAA,GAAG,EAAE;EACHzH,IAAAA,GAAG,EAAE;EADF,GAzeY;EA4ejB0H,EAAAA,IAAI,EAAE;EACJ5H,IAAAA,GAAG,EAAE;EADD,GA5eW;EA+ejB6H,EAAAA,KAAK,EAAE;EACL7H,IAAAA,GAAG,EAAE;EADA,GA/eU;EAkfjB8H,EAAAA,KAAK,EAAE;EACL9H,IAAAA,GAAG,EAAE,MADA;EAELE,IAAAA,GAAG,EAAE;EAFA,GAlfU;EAsfjB6H,EAAAA,KAAK,EAAE;EACL3H,IAAAA,IAAI,EAAE;EADD,GAtfU;EAyfjB4H,EAAAA,KAAK,EAAE;EACLhI,IAAAA,GAAG,EAAE;EADA,GAzfU;EA4fjBiI,EAAAA,KAAK,EAAE;EACL9H,IAAAA,GAAG,EAAE,kBADA;EAELH,IAAAA,GAAG,EAAE,QAFA;EAGLE,IAAAA,GAAG,EAAE,OAHA;EAILD,IAAAA,IAAI,EAAE,aAJD;EAKLI,IAAAA,OAAO,EAAE;EALJ,GA5fU;EAmgBjB6H,EAAAA,KAAK,EAAE;EACLlI,IAAAA,GAAG,EAAE;EADA,GAngBU;EAsgBjBmI,EAAAA,KAAK,EAAE;EACLnI,IAAAA,GAAG,EAAE;EADA,GAtgBU;EAygBjBoI,EAAAA,KAAK,EAAE;EACLpI,IAAAA,GAAG,EAAE,KADA;EAELE,IAAAA,GAAG,EAAE;EAFA,GAzgBU;EA6gBjBmI,EAAAA,IAAI,EAAE;EACJlnB,IAAAA,CAAC,EAAE,OADC;EAEJ6e,IAAAA,GAAG,EAAE,MAFD;EAGJE,IAAAA,GAAG,EAAE;EAHD,GA7gBW;EAkhBjBoI,EAAAA,IAAI,EAAE;EACJtI,IAAAA,GAAG,EAAE;EADD,GAlhBW;EAqhBjB7f,EAAAA,KAAK,EAAE;EACL6f,IAAAA,GAAG,EAAE;EADA,GArhBU;EAwhBjBuI,EAAAA,MAAM,EAAE;EACNrI,IAAAA,GAAG,EAAE;EADC,GAxhBS;EA2hBjBsI,EAAAA,MAAM,EAAE;EACNxI,IAAAA,GAAG,EAAE;EADC,GA3hBS;EA8hBjByI,EAAAA,KAAK,EAAE;EACLvI,IAAAA,GAAG,EAAE;EADA,GA9hBU;EAiiBjBwI,EAAAA,KAAK,EAAE;EACLpI,IAAAA,GAAG,EAAE,KADA;EAELJ,IAAAA,GAAG,EAAE;EAFA,GAjiBU;EAqiBjByI,EAAAA,KAAK,EAAE;EACLzI,IAAAA,GAAG,EAAE;EADA,GAriBU;EAwiBjB0I,EAAAA,KAAK,EAAE;EACL1I,IAAAA,GAAG,EAAE;EADA,GAxiBU;EA2iBjB2I,EAAAA,KAAK,EAAE;EACL7I,IAAAA,GAAG,EAAE,OADA;EAELE,IAAAA,GAAG,EAAE;EAFA,GA3iBU;EA+iBjB4I,EAAAA,MAAM,EAAE;EACNxI,IAAAA,GAAG,EAAE;EADC,GA/iBS;EAkjBjByI,EAAAA,KAAK,EAAE;EACL/I,IAAAA,GAAG,EAAE;EADA,GAljBU;EAqjBjBgJ,EAAAA,MAAM,EAAE;EACN7nB,IAAAA,CAAC,EAAE,UADG;EAEN+e,IAAAA,GAAG,EAAE;EAFC,GArjBS;EAyjBjB+I,EAAAA,IAAI,EAAE;EACJ3I,IAAAA,GAAG,EAAE,KADD;EAEJnf,IAAAA,CAAC,EAAE,MAFC;EAGJ+e,IAAAA,GAAG,EAAE;EAHD,GAzjBW;EA8jBjBgJ,EAAAA,KAAK,EAAE;EACLlJ,IAAAA,GAAG,EAAE;EADA,GA9jBU;EAikBjBmJ,EAAAA,KAAK,EAAE;EACLjJ,IAAAA,GAAG,EAAE;EADA,GAjkBU;EAokBjBkJ,EAAAA,KAAK,EAAE;EACLpJ,IAAAA,GAAG,EAAE;EADA,GApkBU;EAukBjBqJ,EAAAA,IAAI,EAAE;EACJloB,IAAAA,CAAC,EAAE,OADC;EAEJ+e,IAAAA,GAAG,EAAE;EAFD,GAvkBW;EA2kBjBoJ,EAAAA,KAAK,EAAE;EACLpJ,IAAAA,GAAG,EAAE;EADA,GA3kBU;EA8kBjBqJ,EAAAA,IAAI,EAAE;EACJpJ,IAAAA,GAAG,EAAE,cADD;EAEJD,IAAAA,GAAG,EAAE,MAFD;EAGJD,IAAAA,IAAI,EAAE,SAHF;EAIJI,IAAAA,OAAO,EAAE;EAJL,GA9kBW;EAolBjBmJ,EAAAA,KAAK,EAAE;EACLtJ,IAAAA,GAAG,EAAE,QADA;EAELE,IAAAA,IAAI,EAAE;EAFD,GAplBU;EAwlBjBqJ,EAAAA,IAAI,EAAE;EACJvJ,IAAAA,GAAG,EAAE;EADD,GAxlBW;EA2lBjBwJ,EAAAA,IAAI,EAAE;EACJxJ,IAAAA,GAAG,EAAE;EADD,GA3lBW;EA8lBjByJ,EAAAA,KAAK,EAAE;EACLzJ,IAAAA,GAAG,EAAE;EADA,GA9lBU;EAimBjB0J,EAAAA,MAAM,EAAE;EACN5J,IAAAA,GAAG,EAAE;EADC,GAjmBS;EAomBjB6J,EAAAA,GAAG,EAAE;EACH1oB,IAAAA,CAAC,EAAE,OADA;EAEH+e,IAAAA,GAAG,EAAE;EAFF,GApmBY;EAwmBjB4J,EAAAA,OAAO,EAAE;EACP9J,IAAAA,GAAG,EAAE;EADE,GAxmBQ;EA2mBjB+J,EAAAA,UAAU,EAAE;EACV7J,IAAAA,GAAG,EAAE;EADK,GA3mBK;EA8mBjB8J,EAAAA,KAAK,EAAE;EACLhK,IAAAA,GAAG,EAAE;EADA,GA9mBU;EAinBjBiK,EAAAA,IAAI,EAAE;EACJ3J,IAAAA,GAAG,EAAE,KADD;EAEJnf,IAAAA,CAAC,EAAE,MAFC;EAGJ+e,IAAAA,GAAG,EAAE;EAHD,GAjnBW;EAsnBjBgK,EAAAA,IAAI,EAAE;EACJhK,IAAAA,GAAG,EAAE;EADD,GAtnBW;EAynBjBiK,EAAAA,IAAI,EAAE;EACJjK,IAAAA,GAAG,EAAE;EADD,GAznBW;EA4nBjBkK,EAAAA,KAAK,EAAE;EACLpK,IAAAA,GAAG,EAAE;EADA,GA5nBU;EA+nBjBqK,EAAAA,IAAI,EAAE;EACJrK,IAAAA,GAAG,EAAE;EADD,GA/nBW;EAkoBjBsK,EAAAA,GAAG,EAAE;EACHnpB,IAAAA,CAAC,EAAE,OADA;EAEH+e,IAAAA,GAAG,EAAE;EAFF,GAloBY;EAsoBjBqK,EAAAA,IAAI,EAAE;EACJvK,IAAAA,GAAG,EAAE;EADD,GAtoBW;EAyoBjBwK,EAAAA,QAAQ,EAAE;EACRtK,IAAAA,GAAG,EAAE;EADG,GAzoBO;EA4oBjBuK,EAAAA,KAAK,EAAE;EACLzK,IAAAA,GAAG,EAAE;EADA,GA5oBU;EA+oBjB0K,EAAAA,KAAK,EAAE;EACLvpB,IAAAA,CAAC,EAAE,SADE;EAEL6e,IAAAA,GAAG,EAAE,SAFA;EAGLE,IAAAA,GAAG,EAAE;EAHA;EA/oBU,CAAnB;;EAupBA,IAAIzd,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAY8d,YAAZ,CAAX;;6BACShgB;EACP,MAAMsa,GAAG,GAAGpY,IAAI,CAAClC,CAAD,CAAhB;EACA,MAAIoqB,MAAK,GAAG,EAAZ;EACAnoB,EAAAA,MAAM,CAACC,IAAP,CAAY8d,YAAY,CAAC1F,GAAD,CAAxB,EAA+BnY,OAA/B,CAAuC,UAAAkoB,GAAG,EAAI;EAC5C,QAAIvqB,GAAG,GAAGkgB,YAAY,CAAC1F,GAAD,CAAZ,CAAkB+P,GAAlB,CAAV,CAD4C;;EAG5CvqB,IAAAA,GAAG,GAAGA,GAAG,CAACmD,OAAJ,CAAY,GAAZ,EAAiBqX,GAAjB,CAAN;EAEA,QAAIgQ,IAAI,GAAG9K,OAAO,CAAC6K,GAAD,CAAlB;EACAD,IAAAA,MAAK,CAACE,IAAD,CAAL,GAAcxqB,GAAd;EACD,GAPD;;EASAkgB,EAAAA,YAAY,CAAC1F,GAAD,CAAZ,GAAoB8P,MAApB;;;EAZF,KAAK,IAAIpqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkC,IAAI,CAAC9B,MAAzB,EAAiCJ,CAAC,EAAlC,EAAsC;EAAA,QAA7BA,CAA6B;EAarC;;EAED,kBAAc,GAAGggB,YAAjB;;ECxrBA,IAAMuK,QAAQ,GAAG;EACfhqB,EAAAA,CAAC,EAAE,CACD;EACE8D,IAAAA,GAAG,EAAE,sBADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,MADA;EAEJC,MAAAA,EAAE,EAAE,QAFA;EAGJC,MAAAA,EAAE,EAAE;EAHA;EAFR,GADC,CADY;EAWflqB,EAAAA,CAAC,EAAE,CACD;EACE4D,IAAAA,GAAG,EAAE,SADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,KADA;EAEJC,MAAAA,EAAE,EAAE,KAFA;EAGJC,MAAAA,EAAE,EAAE,OAHA;EAIJC,MAAAA,EAAE,EAAE;EAJA;EAFR,GADC,EAUD;EACEvmB,IAAAA,GAAG,EAAE,SADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,KADA;EAEJC,MAAAA,EAAE,EAAE,MAFA;EAGJC,MAAAA,EAAE,EAAE,OAHA;EAIJC,MAAAA,EAAE,EAAE;EAJA;EAFR,GAVC,EAmBD;EACEvmB,IAAAA,GAAG,EAAE,QADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,KADA;EAEJC,MAAAA,EAAE,EAAE,OAFA;EAGJE,MAAAA,EAAE,EAAE,OAHA;EAIJD,MAAAA,EAAE,EAAE;EAJA;EAFR,GAnBC,EA4BD;EACEtmB,IAAAA,GAAG,EAAE,mBADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,MADA;EAEJC,MAAAA,EAAE,EAAE,QAFA;EAGJC,MAAAA,EAAE,EAAE;EAHA;EAFR,GA5BC,CAXY;EAgDfjqB,EAAAA,CAAC,EAAE,CACD;EACE2D,IAAAA,GAAG,EAAE,UADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,KADA;EAEJC,MAAAA,EAAE,EAAE,KAFA;EAGJC,MAAAA,EAAE,EAAE,QAHA;EAIJC,MAAAA,EAAE,EAAE;EAJA;EAFR,GADC,EAUD;EACEvmB,IAAAA,GAAG,EAAE,SADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,KADA;EAEJC,MAAAA,EAAE,EAAE,KAFA;EAGJC,MAAAA,EAAE,EAAE,OAHA;EAIJC,MAAAA,EAAE,EAAE;EAJA;EAFR,GAVC,EAmBD;EACEvmB,IAAAA,GAAG,EAAE,SADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,KADA;EAEJC,MAAAA,EAAE,EAAE,KAFA;EAGJC,MAAAA,EAAE,EAAE,OAHA;EAIJC,MAAAA,EAAE,EAAE;EAJA;EAFR,GAnBC,EA4BD;EACEvmB,IAAAA,GAAG,EAAE,8BADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,MADA;EAEJC,MAAAA,EAAE,EAAE,MAFA;EAGJC,MAAAA,EAAE,EAAE,OAHA;EAIJlL,MAAAA,GAAG,EAAE;EAJD;EAFR,GA5BC,EAqCD;EACEpb,IAAAA,GAAG,EAAE,YADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,MADA;EAEJC,MAAAA,EAAE,EAAE,MAFA;EAGJC,MAAAA,EAAE,EAAE;EAHA;EAFR,GArCC,EA6CD;EACEtmB,IAAAA,GAAG,EAAE,SADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,MADA;EAEJC,MAAAA,EAAE,EAAE,KAFA;EAGJC,MAAAA,EAAE,EAAE;EAHA;EAFR,GA7CC,CAhDY;EAuGf/pB,EAAAA,CAAC,EAAE,CACD;EACEyD,IAAAA,GAAG,EAAE,mBADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,MADA;EAEJC,MAAAA,EAAE,EAAE,QAFA;EAGJC,MAAAA,EAAE,EAAE;EAHA;EAFR,GADC,CAvGY;EAiHf9pB,EAAAA,CAAC,EAAE,CACD;EACEwD,IAAAA,GAAG,EAAE,eADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,QADA;EAEJC,MAAAA,EAAE,EAAE,QAFA;EAGJC,MAAAA,EAAE,EAAE;EAHA;EAFR,GADC,CAjHY;EA2Hf3pB,EAAAA,CAAC,EAAE,CACD;EACEqD,IAAAA,GAAG,EAAE,SADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,KADA;EAEJC,MAAAA,EAAE,EAAE,KAFA;EAGJC,MAAAA,EAAE,EAAE,OAHA;EAIJC,MAAAA,EAAE,EAAE;EAJA;EAFR,GADC,CA3HY;EAuIf1pB,EAAAA,CAAC,EAAE,CACD;EACEmD,IAAAA,GAAG,EAAE,sBADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,MADA;EAEJC,MAAAA,EAAE,EAAE,QAFA;EAGJC,MAAAA,EAAE,EAAE;EAHA;EAFR,GADC,CAvIY;EAkJfxpB,EAAAA,CAAC,EAAE,CACD;EACEkD,IAAAA,GAAG,EAAE,QADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,KADA;EAEJC,MAAAA,EAAE,EAAE,MAFA;EAGJC,MAAAA,EAAE,EAAE;EAHA;EAFR,GADC,CAlJY;EA4JftpB,EAAAA,CAAC,EAAE,CACD;EACEgD,IAAAA,GAAG,EAAE,WADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,OADA;EAEJC,MAAAA,EAAE,EAAE,MAFA;EAGJC,MAAAA,EAAE,EAAE,SAHA;EAIJC,MAAAA,EAAE,EAAE;EAJA;EAFR,GADC,EAUD;EACEvmB,IAAAA,GAAG,EAAE,sBADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,MADA;EAEJC,MAAAA,EAAE,EAAE,QAFA;EAGJC,MAAAA,EAAE,EAAE;EAHA;EAFR,GAVC,EAkBD;EACEtmB,IAAAA,GAAG,EAAE,aADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,MADA;EAEJC,MAAAA,EAAE,EAAE,KAFA;EAGJC,MAAAA,EAAE,EAAE;EAHA;EAFR,GAlBC,CA5JY;EAwLfppB,EAAAA,CAAC,EAAE,CACD;EACE8C,IAAAA,GAAG,EAAE,YADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,KADA;EAEJC,MAAAA,EAAE,EAAE,MAFA;EAGJC,MAAAA,EAAE,EAAE;EAHA;EAFR,GADC,EASD;EACEtmB,IAAAA,GAAG,EAAE,QADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,KADA;EAEJC,MAAAA,EAAE,EAAE,MAFA;EAGJC,MAAAA,EAAE,EAAE;EAHA;EAFR,GATC,CAxLY;EA0MfnpB,EAAAA,CAAC,EAAE,CACD;EACE6C,IAAAA,GAAG,EAAE,iBADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,MADA;EAEJC,MAAAA,EAAE,EAAE,MAFA;EAGJC,MAAAA,EAAE,EAAE;EAHA;EAFR,GADC,CA1MY;EAqNflpB,EAAAA,CAAC,EAAE,CACD;EACE4C,IAAAA,GAAG,EAAE,oBADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,KADA;EAEJC,MAAAA,EAAE,EAAE,MAFA;EAGJC,MAAAA,EAAE,EAAE;EAHA;EAFR,GADC,EASD;EACEtmB,IAAAA,GAAG,EAAE,UADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,KADA;EAEJC,MAAAA,EAAE,EAAE,MAFA;EAGJC,MAAAA,EAAE,EAAE;EAHA;EAFR,GATC,EAiBD;EACEtmB,IAAAA,GAAG,EAAE,aADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,MADA;EAEJC,MAAAA,EAAE,EAAE,KAFA;EAGJC,MAAAA,EAAE,EAAE;EAHA;EAFR,GAjBC,EAyBD;EACEtmB,IAAAA,GAAG,EAAE,sBADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,MADA;EAEJC,MAAAA,EAAE,EAAE,QAFA;EAGJC,MAAAA,EAAE,EAAE;EAHA;EAFR,GAzBC,CArNY;EAwPf/oB,EAAAA,CAAC,EAAE,CACD;EACEyC,IAAAA,GAAG,EAAE,YADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,OADA;EAEJC,MAAAA,EAAE,EAAE,MAFA;EAGJC,MAAAA,EAAE,EAAE,SAHA;EAIJlL,MAAAA,GAAG,EAAE;EAJD;EAFR,GADC,CAxPY;EAmQf3d,EAAAA,CAAC,EAAE,CACD;EACEuC,IAAAA,GAAG,EAAE,eADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,OADA;EAEJC,MAAAA,EAAE,EAAE,OAFA;EAGJC,MAAAA,EAAE,EAAE;EAHA;EAFR,GADC,CAnQY;EA8Qf5oB,EAAAA,CAAC,EAAE,CACD;EACEsC,IAAAA,GAAG,EAAE,eADP;EAEEmmB,IAAAA,IAAI,EAAE;EACJC,MAAAA,EAAE,EAAE,MADA;EAEJC,MAAAA,EAAE,EAAE,MAFA;EAGJC,MAAAA,EAAE,EAAE;EAHA;EAFR,GADC;EA9QY,CAAjB;EA0RA,YAAc,GAAGJ,QAAjB;;ECzRA,IAAMM,MAAM,GAAG;EACbJ,EAAAA,EAAE,EAAE,cADS;EAEbC,EAAAA,EAAE,EAAE,WAFS;EAGbC,EAAAA,EAAE,EAAE,QAHS;EAIblL,EAAAA,GAAG,EAAE,YAJQ;EAKbmL,EAAAA,EAAE,EAAE;EALS,CAAf;;EAQA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAShrB,GAAT,EAAcgJ,GAAd,EAAmB;EACrC,MAAIvF,KAAK,GAAG,EAAZ;EACA,MAAIrB,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAY4G,GAAG,CAAC0hB,IAAhB,CAAX;;EACA,OAAK,IAAIxqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkC,IAAI,CAAC9B,MAAzB,EAAiCJ,CAAC,IAAI,CAAtC,EAAyC;EACvC,QAAI+qB,GAAG,GAAG7oB,IAAI,CAAClC,CAAD,CAAd;EACAuD,IAAAA,KAAK,CAACsnB,MAAM,CAACE,GAAD,CAAP,CAAL,GAAqBjrB,GAAG,CAACmD,OAAJ,CAAY6F,GAAG,CAACzE,GAAhB,EAAqByE,GAAG,CAAC0hB,IAAJ,CAASO,GAAT,CAArB,CAArB;EACD;;EACD,SAAOxnB,KAAP;EACD,CARD;;;EAWA,IAAMynB,WAAW,GAAG,SAAdA,WAAc,GAAmB;EAAA,MAAVlrB,GAAU,uEAAJ,EAAI;EACrC,MAAIU,CAAC,GAAGV,GAAG,CAACA,GAAG,CAACM,MAAJ,GAAa,CAAd,CAAX;;EACA,MAAI6qB,QAAQ,CAACpjB,cAAT,CAAwBrH,CAAxB,MAA+B,IAAnC,EAAyC;EACvC,SAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0pB,QAAQ,CAACzqB,CAAD,CAAR,CAAYJ,MAAhC,EAAwCmB,CAAC,IAAI,CAA7C,EAAgD;EAC9C,UAAM8C,GAAG,GAAG4mB,QAAQ,CAACzqB,CAAD,CAAR,CAAYe,CAAZ,EAAe8C,GAA3B;;EACA,UAAIA,GAAG,CAAC1B,IAAJ,CAAS7C,GAAT,MAAkB,IAAtB,EAA4B;EAC1B,eAAOgrB,WAAW,CAAChrB,GAAD,EAAMmrB,QAAQ,CAACzqB,CAAD,CAAR,CAAYe,CAAZ,CAAN,CAAlB;EACD;EACF;EACF;;EACD,SAAO,EAAP;EACD,CAXD;;EAYA,eAAc,GAAGypB,WAAjB;;EChCA;EACA,IAAME,IAAI,GAAG,0BAAb;EAEA,IAAMC,OAAO,GAAG;EACdhX,EAAAA,MAAM,EAAE,gBAAAmG,GAAG,EAAI;EACb,QAAIA,GAAG,CAACjT,MAAJ,CAAWiT,GAAG,CAACla,MAAJ,GAAa,CAAxB,MAA+B,GAAnC,EAAwC;EACtC,aAAOka,GAAG,CAACrX,OAAJ,CAAY,IAAZ,EAAkB,KAAlB,CAAP;EACD;;EACD,WAAOqX,GAAG,GAAG,KAAb;EACD,GANa;EAQdrG,EAAAA,YAAY,EAAE,sBAAAqG,GAAG,EAAI;EACnB,QAAIA,GAAG,CAACjT,MAAJ,CAAWiT,GAAG,CAACla,MAAJ,GAAa,CAAxB,MAA+B,GAAnC,EAAwC;EACtC,aAAOka,GAAG,GAAG,IAAb;EACD;;EACD,QAAI4Q,IAAI,CAACvoB,IAAL,CAAU2X,GAAV,MAAmB,IAAvB,EAA6B;EAC3B,aAAOA,GAAG,CAAC7N,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,IAAmB,KAA1B;EACD;;EACD,WAAO6N,GAAG,GAAG,GAAb;EACD,GAhBa;EAkBdlG,EAAAA,SAAS,EAAE,mBAAAkG,GAAG,EAAI;EAChB,QAAIA,GAAG,CAACjT,MAAJ,CAAWiT,GAAG,CAACla,MAAJ,GAAa,CAAxB,MAA+B,GAAnC,EAAwC;EACtC,aAAOka,GAAG,GAAG,GAAb;EACD;;EACD,QAAIA,GAAG,CAAChT,MAAJ,CAAW,CAAC,CAAZ,MAAmB,IAAvB,EAA6B;EAC3B,aAAOgT,GAAP;EACD;;EACD,QAAI4Q,IAAI,CAACvoB,IAAL,CAAU2X,GAAV,MAAmB,IAAvB,EAA6B;EAC3B,aAAOA,GAAG,CAAC7N,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,IAAmB,KAA1B;EACD;;EACD,WAAO6N,GAAG,GAAG,IAAb;EACD;EA7Ba,CAAhB;EAgCA,cAAc,GAAG6Q,OAAjB;;;;EC9BA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAA0B;EAAA,MAAjBtrB,GAAiB,uEAAX,EAAW;EAAA,MAAP4D,KAAO;EAC9C,MAAIH,KAAK,GAAG,EAAZ,CAD8C;;;EAI9C,MAAIG,KAAK,IAAIA,KAAK,CAAC2W,UAAnB,EAA+B;EAC7B,QAAI3W,KAAK,CAAC2W,UAAN,CAAiBlC,KAAjB,CAAuBtQ,cAAvB,CAAsC/H,GAAtC,MAA+C,IAAnD,EAAyD;EACvDyD,MAAAA,KAAK,GAAGtB,MAAM,CAACsE,MAAP,CAAc,EAAd,EAAkB7C,KAAK,CAAC2W,UAAN,CAAiBlC,KAAjB,CAAuBrY,GAAvB,CAAlB,CAAR;EACD;EACF,GAR6C;;;EAU9CyD,EAAAA,KAAK,GAAGtB,MAAM,CAACsE,MAAP,CAAc,EAAd,EAAkBhD,KAAlB,EAAyBynB,WAAW,CAAClrB,GAAD,CAApC,CAAR,CAV8C;;;EAc9C,MAAIyD,KAAK,CAAC4Q,MAAN,KAAiB1P,SAArB,EAAgC;EAC9BlB,IAAAA,KAAK,CAAC4Q,MAAN,GAAekX,UAAW,CAAClX,MAAZ,CAAmBrU,GAAnB,CAAf;EACD,GAhB6C;;;EAkB9C,MAAIyD,KAAK,CAAC6Q,SAAN,KAAoB3P,SAAxB,EAAmC;EACjClB,IAAAA,KAAK,CAAC6Q,SAAN,GAAkBiX,UAAW,CAACjX,SAAZ,CAAsBtU,GAAtB,CAAlB;EACD,GApB6C;;;EAsB9C,MAAIyD,KAAK,CAAC0Q,YAAN,KAAuBxP,SAA3B,EAAsC;EACpClB,IAAAA,KAAK,CAAC0Q,YAAN,GAAqBoX,UAAW,CAACpX,YAAZ,CAAyBnU,GAAzB,CAArB;EACD;;EACD,SAAOyD,KAAP;EACD,CA1BD;;EA2BA,WAAc,GAAG6nB,aAAjB;;EChCA;EACA,IAAM/Q,UAAU,GAAG;EACjBxX,EAAAA,KAAK,EAAE,aADU;EAEjByoB,EAAAA,OAAO,EAAE,SAFQ;EAGjBnH,EAAAA,IAAI,EAAE;EAHW,CAAnB;EAMA,IAAMrK,UAAU,GAAG,CACjB;EACEzV,EAAAA,GAAG,EAAE,IADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CADiB,EAKjB;EACEnmB,EAAAA,GAAG,EAAE,KADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CALiB,EASjB;EACEnmB,EAAAA,GAAG,EAAE,MADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CATiB,EAajB;EACEnmB,EAAAA,GAAG,EAAE,KADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CAbiB,EAiBjB;EACEnmB,EAAAA,GAAG,EAAE,OADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CAjBiB,EAqBjB;EACEnmB,EAAAA,GAAG,EAAE,OADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CArBiB,EAyBjB;EACEnmB,EAAAA,GAAG,EAAE,OADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CAzBiB,EA6BjB;EACEnmB,EAAAA,GAAG,EAAE,OADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CA7BiB,EAiCjB;EACEnmB,EAAAA,GAAG,EAAE,MADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CAjCiB,EAqCjB;EACEnmB,EAAAA,GAAG,EAAE,MADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CArCiB,EAyCjB;EACEnmB,EAAAA,GAAG,EAAE,MADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CAzCiB,CAAnB;;EA+CA,IAAMe,OAAO,GAAG,SAAVA,OAAU,CAAS3pB,CAAT,EAAY;EAC1B,MAAIyY,UAAU,CAACxS,cAAX,CAA0BjG,CAA1B,CAAJ,EAAkC;EAChC,WAAOyY,UAAU,CAACzY,CAAD,CAAjB;EACD;;EACD,MAAM4pB,QAAQ,GAAG5pB,CAAC,CAACyF,MAAF,CAASzF,CAAC,CAACxB,MAAF,GAAW,CAApB,CAAjB;;EACA,MAAIorB,QAAQ,KAAK,GAAb,IAAoBA,QAAQ,KAAK,GAArC,EAA0C;EACxC,WAAO,IAAP;EACD;;EACD,OAAK,IAAIxrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8Z,UAAU,CAAC1Z,MAA/B,EAAuCJ,CAAC,EAAxC,EAA4C;EAC1C,QAAI8Z,UAAU,CAAC9Z,CAAD,CAAV,CAAcqE,GAAd,CAAkB1B,IAAlB,CAAuBf,CAAvB,MAA8B,IAAlC,EAAwC;EACtC,aAAOA,CAAC,CAACqB,OAAF,CAAU6W,UAAU,CAAC9Z,CAAD,CAAV,CAAcqE,GAAxB,EAA6ByV,UAAU,CAAC9Z,CAAD,CAAV,CAAcwqB,IAA3C,CAAP;EACD;EACF;;EACD,SAAO5oB,CAAC,GAAG,MAAX;EACD,CAdD;;EAgBA,UAAc,GAAG2pB,OAAjB;;ECtEA;AACA;EACA,IAAME,QAAQ,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0B,MAA1B,EAAkC,MAAlC,EAA0C,SAA1C,EAAqD,KAArD,EAA4D,MAA5D,EAAoE,OAApE,CAAjB;EACA,IAAMC,UAAU,GAAG,CAAC,MAAD,CAAnB;EAEA,IAAMrR,YAAU,GAAG;EACjBsR,EAAAA,IAAI,EAAE,QADW;EAEjBC,EAAAA,IAAI,EAAE,QAFW;EAGjBC,EAAAA,IAAI,EAAE,SAHW;EAIjBC,EAAAA,KAAK,EAAE,WAJU;EAKjBC,EAAAA,KAAK,EAAE,WALU;EAMjBC,EAAAA,GAAG,EAAE,UANY;EAOjBC,EAAAA,KAAK,EAAE,OAPU;EAQjBC,EAAAA,GAAG,EAAE,OARY;EASjBC,EAAAA,IAAI,EAAE,MATW;EAUjBC,EAAAA,GAAG,EAAE,SAVY;EAWjBC,EAAAA,KAAK,EAAE;EAXU,CAAnB;EAcA,IAAMvS,YAAU,GAAG,CACjB;EACEzV,EAAAA,GAAG,EAAE,KADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CADiB,EAKjB;EACEnmB,EAAAA,GAAG,EAAE,cADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CALiB,EASjB;EACEnmB,EAAAA,GAAG,EAAE,cADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CATiB,EAajB;EACEnmB,EAAAA,GAAG,EAAE,OADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CAbiB,EAiBjB;EACEnmB,EAAAA,GAAG,EAAE,eADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CAjBiB,CAAnB;;EAuBA,IAAM8B,cAAc,GAAG,SAAjBA,cAAiB,CAASxsB,GAAT,EAAc;;EAEnC,MAAIua,YAAU,CAACxS,cAAX,CAA0B/H,GAA1B,CAAJ,EAAoC;EAClC,WAAOua,YAAU,CAACva,GAAD,CAAjB;EACD,GAJkC;;;EAMnC,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8Z,YAAU,CAAC1Z,MAA/B,EAAuCJ,CAAC,EAAxC,EAA4C;EAC1C,QAAI8Z,YAAU,CAAC9Z,CAAD,CAAV,CAAcqE,GAAd,CAAkB1B,IAAlB,CAAuB7C,GAAvB,CAAJ,EAAiC;EAC/B,aAAOA,GAAG,CAACmD,OAAJ,CAAY6W,YAAU,CAAC9Z,CAAD,CAAV,CAAcqE,GAA1B,EAA+ByV,YAAU,CAAC9Z,CAAD,CAAV,CAAcwqB,IAA7C,CAAP;EACD;EACF,GAVkC;;;EAYnC,OAAK,IAAIxqB,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG0rB,UAAU,CAACtrB,MAA/B,EAAuCJ,EAAC,EAAxC,EAA4C;EAC1C,QAAI0rB,UAAU,CAAC1rB,EAAD,CAAV,CAAc2C,IAAd,CAAmB7C,GAAnB,MAA4B,IAAhC,EAAsC;EACpC,aAAO,IAAP;EACD;EACF,GAhBkC;;;EAkBnC,OAAK,IAAIE,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGyrB,QAAQ,CAACrrB,MAA7B,EAAqCJ,GAAC,EAAtC,EAA0C;EACxC,QAAIyrB,QAAQ,CAACzrB,GAAD,CAAR,CAAY2C,IAAZ,CAAiB7C,GAAjB,MAA0B,IAA9B,EAAoC;EAClC,UAAIA,GAAG,CAACuH,MAAJ,CAAWvH,GAAG,CAACM,MAAJ,GAAa,CAAxB,MAA+B,GAAnC,EAAwC;EACtC,eAAON,GAAG,GAAG,IAAb;EACD;;EACD,aAAOA,GAAG,GAAG,KAAb;EACD;EACF;;EACD,SAAOA,GAAG,GAAG,KAAb;EACD,CA3BD;;EA6BA,iBAAc,GAAGwsB,cAAjB;;ECvEA;EACA,IAAMb,UAAQ,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0B,MAA1B,EAAkC,MAAlC,EAA0C,SAA1C,EAAqD,KAArD,EAA4D,MAA5D,EAAoE,MAApE,EAA4E,SAA5E,CAAjB;EACA,IAAMC,YAAU,GAAG,CAAC,MAAD,EAAS,MAAT,CAAnB;EAEA,IAAMrR,YAAU,GAAG;EACjBkS,EAAAA,IAAI,EAAE,QADW;EAEjBC,EAAAA,IAAI,EAAE,QAFW;EAGjBC,EAAAA,KAAK,EAAE,SAHU;EAIjBC,EAAAA,MAAM,EAAE,UAJS;EAKjBC,EAAAA,GAAG,EAAE,QALY;EAMjBR,EAAAA,IAAI,EAAE,QANW;EAOjBS,EAAAA,IAAI,EAAE,QAPW;EAQjBV,EAAAA,GAAG,EAAE,OARY;EASjBW,EAAAA,GAAG,EAAE,QATY;EAUjBT,EAAAA,GAAG,EAAE;EAVY,CAAnB;EAaA,IAAMtS,YAAU,GAAG,CACjB;EACEzV,EAAAA,GAAG,EAAE,KADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CADiB,EAKjB;EACEnmB,EAAAA,GAAG,EAAE,cADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CALiB,EASjB;EACEnmB,EAAAA,GAAG,EAAE,cADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CATiB,EAajB;EACEnmB,EAAAA,GAAG,EAAE,OADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CAbiB,CAAnB;;EAmBA,IAAMsC,cAAc,GAAG,SAAjBA,cAAiB,CAAShtB,GAAT,EAAc;;EAEnC,MAAIua,YAAU,CAACxS,cAAX,CAA0B/H,GAA1B,CAAJ,EAAoC;EAClC,WAAOua,YAAU,CAACva,GAAD,CAAjB;EACD,GAJkC;;;EAMnC,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8Z,YAAU,CAAC1Z,MAA/B,EAAuCJ,CAAC,EAAxC,EAA4C;EAC1C,QAAI8Z,YAAU,CAAC9Z,CAAD,CAAV,CAAcqE,GAAd,CAAkB1B,IAAlB,CAAuB7C,GAAvB,MAAgC,IAApC,EAA0C;EACxC,aAAOA,GAAG,CAACmD,OAAJ,CAAY6W,YAAU,CAAC9Z,CAAD,CAAV,CAAcqE,GAA1B,EAA+ByV,YAAU,CAAC9Z,CAAD,CAAV,CAAcwqB,IAA7C,CAAP;EACD;EACF,GAVkC;;;EAYnC,OAAK,IAAIxqB,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG0rB,YAAU,CAACtrB,MAA/B,EAAuCJ,EAAC,EAAxC,EAA4C;EAC1C,QAAI0rB,YAAU,CAAC1rB,EAAD,CAAV,CAAc2C,IAAd,CAAmB7C,GAAnB,MAA4B,IAAhC,EAAsC;EACpC,aAAO,IAAP;EACD;EACF,GAhBkC;;;EAkBnC,OAAK,IAAIE,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGyrB,UAAQ,CAACrrB,MAA7B,EAAqCJ,GAAC,EAAtC,EAA0C;EACxC,QAAIyrB,UAAQ,CAACzrB,GAAD,CAAR,CAAY2C,IAAZ,CAAiB7C,GAAjB,MAA0B,IAA9B,EAAoC;EAClC,aAAOA,GAAG,GAAG,IAAb;EACD;EACF,GAtBkC;;;EAwBnC,MAAI,KAAK6C,IAAL,CAAU7C,GAAV,MAAmB,IAAvB,EAA6B;EAC3B,WAAOA,GAAG,GAAG,GAAb;EACD;;EACD,SAAOA,GAAG,GAAG,IAAb;EACD,CA5BD;;EA8BA,iBAAc,GAAGgtB,cAAjB;;EClEA;EACA,IAAMC,WAAW,GAAG,CAAC,OAAD,EAAU,KAAV,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,IAAjC,CAApB;EAEA,IAAM1S,YAAU,GAAG;EACjB6R,EAAAA,GAAG,EAAE,OADY;EAEjBC,EAAAA,IAAI,EAAE,MAFW;EAGjBa,EAAAA,GAAG,EAAE,OAHY;EAIjBC,EAAAA,IAAI,EAAE,MAJW;EAKjBC,EAAAA,IAAI,EAAE,OALW;EAMjB,YAAQ,UANS;EAOjBC,EAAAA,MAAM,EAAE,QAPS;EAQjBC,EAAAA,MAAM,EAAE,QARS;EASjBC,EAAAA,OAAO,EAAE,YATQ;EAUjBC,EAAAA,QAAQ,EAAE,UAVO;EAWjBC,EAAAA,KAAK,EAAE,SAXU;EAYjBC,EAAAA,KAAK,EAAE;EAZU,CAAnB;EAcA,IAAMC,UAAU,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,EAA0B,MAA1B,EAAkC,OAAlC,EAA2C,MAA3C,EAAmD,MAAnD,EAA2D,QAA3D,EAAqE,QAArE,EAA+E,MAA/E,EAAuF,KAAvF,EAA8FrjB,MAA9F,CACjB,UAACvJ,CAAD,EAAIL,CAAJ,EAAU;EACRK,EAAAA,CAAC,CAACL,CAAD,CAAD,GAAO,IAAP;EACA,SAAOK,CAAP;EACD,CAJgB,EAKjB,EALiB,CAAnB;EAQA,IAAMiZ,YAAU,GAAG,CACjB;EACEzV,EAAAA,GAAG,EAAE,MADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CADiB,EAKjB;EACEnmB,EAAAA,GAAG,EAAE,MADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CALiB,EASjB;EACEnmB,EAAAA,GAAG,EAAE,WADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CATiB,EAajB;EACEnmB,EAAAA,GAAG,EAAE,OADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CAbiB,EAiBjB;EACEnmB,EAAAA,GAAG,EAAE,MADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CAjBiB,EAqBjB;EACEnmB,EAAAA,GAAG,EAAE,MADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CArBiB,EAyBjB;EACEnmB,EAAAA,GAAG,EAAE,OADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CAzBiB,EA6BjB;EACEnmB,EAAAA,GAAG,EAAE,KADP;EAEEmmB,EAAAA,IAAI,EAAE;EAFR,CA7BiB,CAAnB;;EAmCA,IAAMkD,UAAU,GAAG,SAAbA,UAAa,CAAS5tB,GAAT,EAAc;EAC/B,MAAIua,YAAU,CAACxS,cAAX,CAA0B/H,GAA1B,MAAmC,IAAvC,EAA6C;EAC3C,WAAOua,YAAU,CAACva,GAAD,CAAjB;EACD;;EACD,MAAI2tB,UAAU,CAAC5lB,cAAX,CAA0B/H,GAA1B,MAAmC,IAAvC,EAA6C;EAC3C,WAAOA,GAAP;EACD;;EACD,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+sB,WAAW,CAAC3sB,MAAhC,EAAwCJ,CAAC,EAAzC,EAA6C;EAC3C,QAAI+sB,WAAW,CAAC/sB,CAAD,CAAX,CAAe2C,IAAf,CAAoB7C,GAApB,MAA6B,IAAjC,EAAuC;EACrC,aAAO,IAAP;EACD;EACF;;EACD,OAAK,IAAIE,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG8Z,YAAU,CAAC1Z,MAA/B,EAAuCJ,EAAC,EAAxC,EAA4C;EAC1C,QAAI8Z,YAAU,CAAC9Z,EAAD,CAAV,CAAcqE,GAAd,CAAkB1B,IAAlB,CAAuB7C,GAAvB,MAAgC,IAApC,EAA0C;EACxC,aAAOA,GAAG,CAACmD,OAAJ,CAAY6W,YAAU,CAAC9Z,EAAD,CAAV,CAAcqE,GAA1B,EAA+ByV,YAAU,CAAC9Z,EAAD,CAAV,CAAcwqB,IAA7C,CAAP;EACD;EACF;;EACD,SAAO1qB,GAAG,GAAG,IAAb;EACD,CAlBD;;EAoBA,YAAc,GAAG4tB,UAAjB;;EChFA;;;EAIA,IAAIC,MAAM,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyCvjB,MAAzC,CAAgD,UAACvJ,CAAD,EAAIL,CAAJ,EAAU;EACrEK,EAAAA,CAAC,CAACL,CAAD,CAAD,GAAO,IAAP;EACA,SAAOK,CAAP;EACD,CAHY,EAGV,EAHU,CAAb;EAKA,IAAM+sB,SAAS,GAAG;EAAEC,EAAAA,EAAE,EAAE,IAAN;EAAYC,EAAAA,EAAE,EAAE;EAAhB,CAAlB;EAEA,IAAMC,SAAS,GAAG;EAChB5tB,EAAAA,MAAM,EAAE,IADQ;EAEhB6tB,EAAAA,IAAI,EAAE;EAFU,CAAlB;EAKA,IAAM3T,YAAU,GAAG;EACjB4T,EAAAA,KAAK,EAAE,MADU;EAEjBtB,EAAAA,GAAG,EAAE,QAFY;EAGjBE,EAAAA,GAAG,EAAE,QAHY;EAIjBqB,EAAAA,GAAG,EAAE,QAJY;EAKjBC,EAAAA,KAAK,EAAE,QALU;EAMjB7D,EAAAA,IAAI,EAAE,MANW;EAOjB8D,EAAAA,KAAK,EAAE;EAPU,CAAnB;;EAUA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAvuB,GAAG,EAAI;EACpB,MAAIua,YAAU,CAACxS,cAAX,CAA0B/H,GAA1B,MAAmC,IAAvC,EAA6C;EAC3C,WAAOua,YAAU,CAACva,GAAD,CAAjB;EACD,GAHmB;;;EAKpB,MAAIA,GAAG,CAACM,MAAJ,IAAc,CAAlB,EAAqB;EACnB,WAAO,IAAP;EACD;;EACD,MAAI2tB,SAAS,CAAClmB,cAAV,CAAyB/H,GAAzB,MAAkC,IAAtC,EAA4C;EAC1C,WAAO,IAAP;EACD,GAVmB;;;EAYpB,MAAI6tB,MAAM,CAAC9lB,cAAP,CAAsB/H,GAAG,CAACA,GAAG,CAACM,MAAJ,GAAa,CAAd,CAAzB,CAAJ,EAAgD;EAC9C,WAAO,IAAP;EACD;;EACD,MAAIkuB,MAAM,GAAGxuB,GAAG,CAACwH,MAAJ,CAAWxH,GAAG,CAACM,MAAJ,GAAa,CAAxB,CAAb;;EACA,MAAIwtB,SAAS,CAAC/lB,cAAV,CAAyBymB,MAAzB,MAAqC,IAAzC,EAA+C;EAC7C,WAAO,IAAP;EACD;;EAED,MAAI,KAAK3rB,IAAL,CAAU7C,GAAV,MAAmB,IAAvB,EAA6B;EAC3B,WAAOA,GAAG,GAAG,GAAb;EACD;;EACD,SAAOA,GAAG,GAAG,IAAb;EACD,CAxBD;;EAyBA,YAAc,GAAGuuB,MAAjB;;EClDA,IAAM5mB,KAAG,GAAG;EACV8mB,EAAAA,MAAM,EAAE/nB,MADE;EAEVgoB,EAAAA,aAAa,EAAE/nB,aAFL;EAGVgoB,EAAAA,aAAa,EAAE/nB,aAHL;EAIVgoB,EAAAA,QAAQ,EAAE/nB,QAJA;EAKV0nB,EAAAA,MAAM,EAAEM;EALE,CAAZ;;;EASA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAShtB,CAAT,EAAY;EAC5B,MAAI0I,GAAG,GAAG,EAAV,CAD4B;;EAG5B,MAAIukB,IAAI,GAAGpnB,KAAG,CAAC8mB,MAAJ,CAAW3sB,CAAX,CAAX;;EACA,MAAIitB,IAAJ,EAAU;EACRvkB,IAAAA,GAAG,CAACgI,IAAJ,GAAWuc,IAAX;EACD,GAN2B;;;EAQ5B,MAAIC,GAAG,GAAGrnB,KAAG,CAAC+mB,aAAJ,CAAkB5sB,CAAlB,CAAV;;EACA,MAAIktB,GAAJ,EAAS;EACPxkB,IAAAA,GAAG,CAAC2L,WAAJ,GAAkB6Y,GAAlB;EACD,GAX2B;;;EAa5B,MAAIC,IAAI,GAAGtnB,KAAG,CAACgnB,aAAJ,CAAkB7sB,CAAlB,CAAX;;EACA,MAAImtB,IAAJ,EAAU;EACRzkB,IAAAA,GAAG,CAAC0L,WAAJ,GAAkB+Y,IAAlB;EACD,GAhB2B;;;EAkB5B,MAAIC,GAAG,GAAGvnB,KAAG,CAACinB,QAAJ,CAAa9sB,CAAb,CAAV;;EACA,MAAIotB,GAAJ,EAAS;EACP1kB,IAAAA,GAAG,CAAC6L,MAAJ,GAAa6Y,GAAb;EACD,GArB2B;;;EAuB5B,MAAIC,EAAE,GAAGxnB,KAAG,CAAC4mB,MAAJ,CAAWzsB,CAAX,CAAT;;EACA,MAAIqtB,EAAJ,EAAQ;EACN3kB,IAAAA,GAAG,CAAC0J,IAAJ,GAAWib,EAAX;EACD,GA1B2B;;;EA4B5B,SAAO3kB,GAAP;EACD,CA7BD;;EA8BA,cAAc,GAAGskB,SAAjB;;ECxCA;EACA,IAAM3D,UAAQ,GAAG;EACf3qB,EAAAA,CAAC,EAAE,CAAC,CAAC,sCAAD,EAAyC,MAAzC,CAAD,EAAmD,CAAC,WAAD,EAAc,KAAd,CAAnD,CADY;EAGfI,EAAAA,CAAC,EAAE,CACD,CAAC,eAAD,EAAkB,QAAlB,CADC,EAED,CAAC,UAAD,EAAa,KAAb,CAFC,EAGD,CAAC,eAAD,EAAkB,OAAlB,CAHC,EAID,CAAC,cAAD,EAAiB,OAAjB,CAJC,CAHY;EAUfC,EAAAA,CAAC,EAAE,CACD,CAAC,sCAAD,EAAyC,OAAzC,CADC,EAED,CAAC,kEAAD,EAAqE,OAArE,CAFC,CAVY;EAefX,EAAAA,CAAC,EAAE,CAAC,CAAC,gBAAD,EAAmB,KAAnB,CAAD,CAfY;EAiBfkB,EAAAA,CAAC,EAAE,CAAC,CAAC,YAAD,EAAe,KAAf,CAAD,CAjBY;EAmBfC,EAAAA,CAAC,EAAE,CAAC,CAAC,WAAD,EAAc,IAAd,CAAD,CAnBY;EAqBfC,EAAAA,CAAC,EAAE,CAAC,CAAC,2BAAD,EAA8B,OAA9B,CAAD,CArBY;EAuBfI,EAAAA,CAAC,EAAE,CACD,CAAC,eAAD,EAAkB,MAAlB,CADC,EAED,CAAC,kBAAD,EAAqB,MAArB,CAFC,EAGD,CAAC,OAAD,EAAU,KAAV,CAHC,EAID,CAAC,SAAD,EAAY,OAAZ,CAJC,EAKD,CAAC,SAAD,EAAY,KAAZ,CALC,EAMD,CAAC,0BAAD,EAA6B,OAA7B,CANC,EAOD,CAAC,6CAAD,EAAgD,KAAhD,CAPC,CAvBY;EAiCfK,EAAAA,CAAC,EAAE,CAAC,CAAC,+BAAD,EAAkC,QAAlC,CAAD,EAA8C,CAAC,SAAD,EAAY,MAAZ,CAA9C,CAjCY;EAmCfC,EAAAA,CAAC,EAAE,CAAC,CAAC,mBAAD,EAAsB,OAAtB,CAAD,CAnCY;EAqCfC,EAAAA,CAAC,EAAE,CAAC,CAAC,UAAD,EAAa,OAAb,CAAD;EArCY,CAAjB;EAwCA,iBAAc,GAAGkpB,UAAjB;;ECxCA,IAAMiE,IAAI,GAAG,gBAAb;;EAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAASrvB,GAAT,EAAc;EAC9B,MAAIU,CAAC,GAAGV,GAAG,CAACA,GAAG,CAACM,MAAJ,GAAa,CAAd,CAAX;;EACA,MAAI6qB,aAAQ,CAACpjB,cAAT,CAAwBrH,CAAxB,MAA+B,IAAnC,EAAyC;EACvC,SAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGirB,aAAQ,CAACzqB,CAAD,CAAR,CAAYJ,MAAhC,EAAwCJ,CAAC,IAAI,CAA7C,EAAgD;EAC9C,UAAIqE,GAAG,GAAG4mB,aAAQ,CAACzqB,CAAD,CAAR,CAAYR,CAAZ,EAAe,CAAf,CAAV;;EACA,UAAIqE,GAAG,CAAC1B,IAAJ,CAAS7C,GAAT,MAAkB,IAAtB,EAA4B;EAC1B,eAAOA,GAAG,CAACmD,OAAJ,CAAYoB,GAAZ,EAAiB4mB,aAAQ,CAACzqB,CAAD,CAAR,CAAYR,CAAZ,EAAe,CAAf,CAAjB,CAAP;EACD;EACF;EACF;;EACD,SAAO,IAAP;EACD,CAXD;;;;;;EAgBA,IAAMovB,SAAS,GAAG,SAAZA,SAAY,GAAmB;EAAA,MAAVtvB,GAAU,uEAAJ,EAAI;;EAEnC,MAAIka,MAAM,GAAGmV,SAAS,CAACrvB,GAAD,CAAtB;;EACA,MAAIka,MAAM,KAAK,IAAf,EAAqB;EACnB,WAAOA,MAAP;EACD,GALkC;;;EAOnC,MAAIkV,IAAI,CAACvsB,IAAL,CAAU7C,GAAV,CAAJ,EAAoB;EAClB,WAAOA,GAAG,GAAG,IAAb;EACD,GATkC;;;EAWnC,SAAOA,GAAG,GAAG,GAAb;EACD,CAZD;;EAaA,WAAc,GAAGsvB,SAAjB;;ECvBA,IAAM/U,YAAU,GAAG;EACjBnC,EAAAA,KAAK,EAAE1R,OADU;EAEjB2R,EAAAA,KAAK,EAAE1R;EAFU,CAAnB;;EAMA,IAAMqT,YAAU,GAAG;EACjB3B,EAAAA,KAAK,EAAEzR,OADU;EAEjBwT,EAAAA,UAAU,EAAEvT,UAFK;EAGjBuR,EAAAA,KAAK,EAAEyW;EAHU,CAAnB;EAMA,IAAIjnB,UAAS,GAAG,KAAhB;;;MAGM2nB;;;EACJ,mBAAc;EAAA;;;EAEZptB,IAAAA,MAAM,CAAC0N,cAAP,CAAsB,IAAtB,EAA4B,SAA5B,EAAuC;EACrCC,MAAAA,UAAU,EAAE,KADyB;EAErCE,MAAAA,KAAK,EAAEwI,MAF8B;EAGrCzI,MAAAA,QAAQ,EAAE;EAH2B,KAAvC;EAKA5N,IAAAA,MAAM,CAAC0N,cAAP,CAAsB,IAAtB,EAA4B,aAA5B,EAA2C;EACzCC,MAAAA,UAAU,EAAE,KAD6B;EAEzCE,MAAAA,KAAK,EAAE,EAFkC;EAGzCD,MAAAA,QAAQ,EAAE;EAH+B,KAA3C;EAKA5N,IAAAA,MAAM,CAAC0N,cAAP,CAAsB,IAAtB,EAA4B,YAA5B,EAA0C;EACxCC,MAAAA,UAAU,EAAE,KAD4B;EAExCE,MAAAA,KAAK,EAAEuK,YAFiC;EAGxCxK,MAAAA,QAAQ,EAAE;EAH8B,KAA1C;EAKA5N,IAAAA,MAAM,CAAC0N,cAAP,CAAsB,IAAtB,EAA4B,MAA5B,EAAoC;EAClCC,MAAAA,UAAU,EAAE,KADsB;EAElCE,MAAAA,KAAK,EAAE7N,MAAM,CAACsE,MAAP,CAAc,EAAd,EAAkB+oB,IAAlB,CAF2B;EAGlCzf,MAAAA,QAAQ,EAAE;EAHwB,KAApC;EAKA5N,IAAAA,MAAM,CAAC0N,cAAP,CAAsB,IAAtB,EAA4B,YAA5B,EAA0C;EACxCC,MAAAA,UAAU,EAAE,KAD4B;EAExCE,MAAAA,KAAK,EAAEgK;EAFiC,KAA1C,EAtBY;;EA2BZ,SAAKyV,WAAL,CAAiBC,KAAjB,EA3BY;;EA6BZ,SAAKpV,aAAL,GA7BY;;EAgCZnY,IAAAA,MAAM,CAAC0N,cAAP,CAAsB,IAAtB,EAA4B,OAA5B,EAAqC;EACnCC,MAAAA,UAAU,EAAE,KADuB;EAEnCE,MAAAA,KAAK,EAAE;EACLmB,QAAAA,aAAa,EAAE,KAAKwe,QAAL,CAAc,cAAd;EADV;EAF4B,KAArC;EAMD;;;;;;8BAGOC,MAAM;EACZhoB,MAAAA,UAAS,GAAGgoB,IAAZ;EACA,aAAO,IAAP;EACD;;;kCACW;EACV,aAAOhoB,UAAP;EACD;;;;;+BAGQ9D,KAAK;EACZ,UAAI8V,GAAG,GAAG,KAAKE,OAAf;EACA,UAAItP,GAAG,GAAG,EAAV;EACA,UAAI2D,KAAK,GAAGhM,MAAM,CAACC,IAAP,CAAYwX,GAAZ,CAAZ;;EACA,WAAK,IAAI1Z,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiO,KAAK,CAAC7N,MAA1B,EAAkCJ,CAAC,EAAnC,EAAuC;EACrC,YAAI,OAAO0Z,GAAG,CAACzL,KAAK,CAACjO,CAAD,CAAN,CAAV,KAAyB,QAA7B,EAAuC;EACrC,cAAI0Z,GAAG,CAACzL,KAAK,CAACjO,CAAD,CAAN,CAAH,KAAkB4D,GAAtB,EAA2B;EACzB0G,YAAAA,GAAG,CAAC2D,KAAK,CAACjO,CAAD,CAAN,CAAH,GAAgB,IAAhB;EACD;EACF,SAJD,MAIO,IAAI0Z,GAAG,CAACzL,KAAK,CAACjO,CAAD,CAAN,CAAH,CAAc2F,IAAd,CAAmB,UAAAlE,CAAC;EAAA,iBAAIA,CAAC,KAAKmC,GAAV;EAAA,SAApB,CAAJ,EAAwC;EAC7C0G,UAAAA,GAAG,CAAC2D,KAAK,CAACjO,CAAD,CAAN,CAAH,GAAgB,IAAhB;EACD;EACF;;EACD,aAAOsK,GAAP;EACD;;;;;kCAGWoP,KAAK;EACf,UAAIhV,IAAI,GAAGzC,MAAM,CAACC,IAAP,CAAYwX,GAAZ,CAAX;;EACA,WAAK,IAAI1Z,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0E,IAAI,CAACtE,MAAzB,EAAiCJ,CAAC,EAAlC,EAAsC;EACpC,YAAIiO,KAAK,GAAGhM,MAAM,CAACC,IAAP,CAAYmX,cAAM,CAACK,GAAG,CAAChV,IAAI,CAAC1E,CAAD,CAAL,CAAJ,CAAlB,CAAZ;EACAma,QAAAA,UAAQ,CAAClM,KAAD,EAAQvJ,IAAI,CAAC1E,CAAD,CAAZ,EAAiB,IAAjB,CAAR;EACD;EACF;;;sCACe;EACdoa,MAAAA,eAAa,CAAC,IAAD,CAAb;;EACA,aAAO,IAAP;EACD;;;;;8BAGO;EACN,aAAO;EACLnM,QAAAA,KAAK,EAAEhM,MAAM,CAACC,IAAP,CAAY,KAAK0X,OAAjB,EAA0BxZ,MAD5B;EAELuvB,QAAAA,OAAO,EAAE1tB,MAAM,CAACC,IAAP,CAAY,KAAK0tB,SAAL,CAAeD,OAA3B,EAAoCvvB,MAFxC;EAGL4f,QAAAA,YAAY,EAAE/d,MAAM,CAACC,IAAP,CAAY,KAAK0tB,SAAL,CAAe5P,YAA3B,EAAyC5f,MAHlD;EAILyvB,QAAAA,SAAS,EAAE5tB,MAAM,CAACC,IAAP,CAAY,KAAK6X,WAAjB,EAA8B3Z;EAJpC,OAAP;EAMD;;;;;;;EAIH,IAAM8I,OAAK,GAAG,SAARA,KAAQ,CAASJ,GAAT,EAAc;EAC1B,SAAOgnB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAelnB,GAAf,CAAX,CAAP;EACD,CAFD;;;;EAKAumB,KAAK,CAACloB,SAAN,CAAgB+B,KAAhB,GAAwB,YAAW;EACjC,MAAI+mB,EAAE,GAAG,IAAIZ,KAAJ,EAAT,CADiC;;EAGjCY,EAAAA,EAAE,CAACrW,OAAH,GAAa1Q,OAAK,CAAC,KAAK0Q,OAAN,CAAlB;EACAqW,EAAAA,EAAE,CAACN,OAAH,GAAazmB,OAAK,CAAC,KAAKymB,OAAN,CAAlB;EACAM,EAAAA,EAAE,CAACjQ,YAAH,GAAkB9W,OAAK,CAAC,KAAK8W,YAAN,CAAvB;EACAiQ,EAAAA,EAAE,CAACvrB,IAAH,GAAUwE,OAAK,CAAC,KAAKxE,IAAN,CAAf;EACA,SAAOurB,EAAP;EACD,CARD;;EASA,WAAc,GAAGZ,KAAjB;;EClIA;EACA,IAAMa,QAAQ,GAAG,SAAXA,QAAW,CAAStsB,GAAT,EAAcwH,GAAd,EAAmB+kB,IAAnB,EAAyBppB,MAAzB,EAAiC;EAChD,MAAIqpB,OAAO,GAAG,EAAd;;EACA,MAAI,OAAOxsB,GAAP,KAAe,QAAnB,EAA6B;EAC3BwsB,IAAAA,OAAO,GAAGxsB,GAAG,CAAChE,KAAJ,CAAU,GAAV,CAAV;EACD,GAJ+C;;;EAMhDwL,EAAAA,GAAG,CAACG,IAAJ,CAASpJ,OAAT,CAAiB,UAAAd,CAAC,EAAI;EACpB,QAAIgI,KAAK,GAAGhI,CAAC,CAACgI,KAAF,EAAZ,CADoB;;EAGpB,QAAI8mB,IAAI,KAAK,IAAb,EAAmB;EACjB9mB,MAAAA,KAAK,GAAGA,KAAK,CAACU,MAAN,CAAa,UAAAtI,CAAC;EAAA,eAAIA,CAAC,CAACgH,KAAF,CAAQ7E,GAAR,EAAawH,GAAG,CAAC1H,KAAjB,CAAJ;EAAA,OAAd,CAAR;EACD;;EACD2F,IAAAA,KAAK,CAAClH,OAAN,CAAc,UAACV,CAAD,EAAIzB,CAAJ,EAAU;;EAEtB,UAAIowB,OAAO,CAAChwB,MAAR,GAAiB,CAArB,EAAwB;EACtB,YAAIgwB,OAAO,CAACpwB,CAAD,CAAP,IAAcowB,OAAO,CAACpwB,CAAD,CAAP,KAAe,GAAjC,EAAsC;EACpCyB,UAAAA,CAAC,CAACmC,GAAF,CAAMwsB,OAAO,CAACpwB,CAAD,CAAb,EAAkB+G,MAAlB,EAA0BqE,GAAG,CAAC1H,KAA9B;EACD;EACF,OAJD,MAIO;;EAELjC,QAAAA,CAAC,CAACmC,GAAF,CAAMA,GAAN,EAAWmD,MAAX,EAAmBqE,GAAG,CAAC1H,KAAvB;EACD;EACF,KAVD;EAWD,GAjBD;EAkBA;EACD,CAzBD;;EA0BA,QAAc,GAAGwsB,QAAjB;;ECzBA;;EACA,SAAW,GAAG,YAAA,CAASxrB,IAAT,EAAe2rB,GAAf,EAAoB;EAChC,MAAI,CAAC3rB,IAAL,EAAW;EACT,WAAO,IAAP;EACD;;EACD4rB,EAAAA,IAAM,CAAC5rB,IAAD,EAAO,IAAP,EAAa,KAAb,EAAoB2rB,GAApB,CAAN;EACA,SAAO,IAAP;EACD,CAND;;;;EASA,aAAe,GAAG,gBAAA,CAAS3rB,IAAT,EAAe2rB,GAAf,EAAoB;EACpC,MAAI,CAAC3rB,IAAL,EAAW;EACT,WAAO,IAAP;EACD;;EACD4rB,EAAAA,IAAM,CAAC5rB,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB2rB,GAAnB,CAAN;EACA,SAAO,IAAP;EACD,CAND;;;;EASA,WAAa,GAAG,cAAA,CAAS3rB,IAAT,EAAe2rB,GAAf,EAAoB;EAAA;;EAClC,OAAK9kB,IAAL,CAAUpJ,OAAV,CAAkB,UAAAd,CAAC,EAAI;EACrBA,IAAAA,CAAC,CAACgI,KAAF,GAAUlH,OAAV,CAAkB,UAAAV,CAAC;EAAA,aAAIA,CAAC,CAACoC,KAAF,CAAQa,IAAR,EAAc2rB,GAAd,EAAmB,KAAI,CAAC3sB,KAAxB,CAAJ;EAAA,KAAnB;EACD,GAFD;EAGA,SAAO,IAAP;EACD,CALD;;;;EAQA,WAAe,GAAG,gBAAA,CAASgsB,IAAT,EAAe;EAC/B,MAAIA,IAAI,KAAKjrB,SAAb,EAAwB;EACtBirB,IAAAA,IAAI,GAAG,IAAP;EACD;;EACD,OAAKhsB,KAAL,CAAW6sB,OAAX,GAAqBb,IAArB;EACD,CALD;;;;;;;;;;;;;;EC7BA;EACAc,EAAAA,iBAAA,GAAoB,YAAW;EAC7B,WAAO,KAAKlkB,KAAL,CAAW,IAAX,CAAP;EACD,GAFD;;;;EAIAkkB,EAAAA,gBAAA,GAAmB,YAAW;EAC5B,WAAO,KAAKlkB,KAAL,CAAW,IAAX,CAAP;EACD,GAFD;;;;EAIAkkB,EAAAA,aAAA,GAAgB,UAASrvB,CAAT,EAAY;EAC1B,QAAIA,CAAC,KAAKsD,SAAV,EAAqB;EACnB,aAAO,KAAK8E,GAAL,CAASpI,CAAT,CAAP;EACD;;EACD,WAAO,KAAKsL,KAAL,CAAW,CAAX,EAActL,CAAd,CAAP;EACD,GALD;;;;EAOAqvB,EAAAA,YAAA,GAAe,UAASrvB,CAAT,EAAY;EACzB,QAAIA,CAAC,KAAKsD,SAAV,EAAqB;EACnB,aAAO,KAAK8E,GAAL,CAAS,KAAKgC,IAAL,CAAUnL,MAAV,GAAmB,CAA5B,CAAP;EACD;;EACD,QAAIsM,GAAG,GAAG,KAAKnB,IAAL,CAAUnL,MAApB;EACA,WAAO,KAAKqM,KAAL,CAAWC,GAAG,GAAGvL,CAAjB,EAAoBuL,GAApB,CAAP;EACD,GAND;;;;EASA8jB,EAAAA,aAAA,GAAgB,UAAShnB,KAAT,EAAgBkD,GAAhB,EAAqB;EACnC,QAAInB,IAAI,GAAG,KAAKA,IAAL,CAAUkB,KAAV,CAAgBjD,KAAhB,EAAuBkD,GAAvB,CAAX;EACA,WAAO,KAAK9C,SAAL,CAAe2B,IAAf,CAAP;EACD,GAHD;;;;EAKAilB,EAAAA,WAAA,GAAc,UAASrvB,CAAT,EAAY;;EAExB,QAAK,CAACA,CAAD,IAAMA,CAAC,KAAK,CAAb,IAAmB,CAAC,KAAKoK,IAAL,CAAUpK,CAAV,CAAxB,EAAsC;EACpC,aAAO,KAAKyI,SAAL,CAAe,EAAf,CAAP;EACD;;EACD,QAAI2B,IAAI,GAAG,CAAC,KAAKA,IAAL,CAAUpK,CAAV,CAAD,CAAX;EACA,WAAO,KAAKyI,SAAL,CAAe2B,IAAf,CAAP;EACD,GAPD;;;;EAUAilB,EAAAA,cAAA,GAAiB,UAASrvB,CAAT,EAAY;EAC3B,QAAI,CAAC,KAAKoC,KAAV,EAAiB;EACf,aAAO,IAAP;EACD;;EACD,QAAIhC,CAAC,GAAGtB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKoL,IAAL,CAAUnL,MAArC,CAAR;;EACA,QAAIe,CAAC,KAAKsD,SAAV,EAAqB;EACnB,UAAI8G,IAAI,GAAG,CAAC,KAAKA,IAAL,CAAUhK,CAAV,CAAD,CAAX;EACA,aAAO,KAAKqI,SAAL,CAAe2B,IAAf,CAAP;EACD,KAR0B;;;EAU3B,QAAIhK,CAAC,GAAGJ,CAAJ,GAAQ,KAAKf,MAAjB,EAAyB;EACvBmB,MAAAA,CAAC,GAAG,KAAKnB,MAAL,GAAce,CAAlB;EACAI,MAAAA,CAAC,GAAGA,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAYA,CAAhB;EACD;;EACD,WAAO,KAAKkL,KAAL,CAAWlL,CAAX,EAAcA,CAAC,GAAGJ,CAAlB,CAAP;EACD,GAfD;;;;EAkBAqvB,EAAAA,gBAAA,GAAmB,UAASC,GAAT,EAAc;EAC/B,QAAIvpB,GAAG,GAAG,EAAV,CAD+B;;EAG/B,SAAK,IAAIlH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKuL,IAAL,CAAUnL,MAA9B,EAAsCJ,CAAC,EAAvC,EAA2C;EACzC,UAAIqJ,KAAK,GAAG,KAAKkC,IAAL,CAAUvL,CAAV,EAAaqJ,KAAb,EAAZ;;EACA,WAAK,IAAIjI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiI,KAAK,CAACjJ,MAA1B,EAAkCgB,CAAC,EAAnC,EAAuC;EACrC8F,QAAAA,GAAG,CAACuC,IAAJ,CAASJ,KAAK,CAACjI,CAAD,CAAd,EADqC;;EAGrC,YAAIqvB,GAAG,KAAKhsB,SAAR,IAAqByC,GAAG,CAACupB,GAAD,CAAH,KAAahsB,SAAtC,EAAiD;EAC/C,iBAAOyC,GAAG,CAACupB,GAAD,CAAV;EACD;EACF;EACF;;EACD,WAAOvpB,GAAP;EACD,GAdD;;;;EAiBAspB,EAAAA,iBAAA,GAAoB,YAAW;EAC7B,WAAO,KAAKjlB,IAAL,CAAUnB,MAAV,CAAiB,UAACkE,KAAD,EAAQjN,CAAR,EAAc;EACpCiN,MAAAA,KAAK,IAAIjN,CAAC,CAACqvB,SAAX;EACA,aAAOpiB,KAAP;EACD,KAHM,EAGJ,CAHI,CAAP;EAID,GALD;;EAMAkiB,EAAAA,iBAAA,GAAoBA,OAAO,CAACE,SAA5B;;;;;;;;;;;;;ECjFA;EACA,UAAY,GAAG,aAAA,GAAW;EACxB,OAAKnlB,IAAL,GAAY,KAAKA,IAAL,CAAU5B,GAAV,CAAc,UAAAtI,CAAC;EAAA,WAAIA,CAAC,CAAC0B,IAAF,EAAJ;EAAA,GAAf,CAAZ;EACA,SAAO,IAAP;EACD,CAHD;;;;EAMA,aAAiB,GAAG,kBAAA,GAAW;EAC7B,OAAKwI,IAAL,CAAUpJ,OAAV,CAAkB,UAAAd,CAAC,EAAI;EACrB,QAAIgI,KAAK,GAAGhI,CAAC,CAACgI,KAAF,EAAZ,CADqB;;EAGrBA,IAAAA,KAAK,CAAClH,OAAN,CAAc,UAACV,CAAD,EAAIzB,CAAJ,EAAU;EACtB,UAAIA,CAAC,KAAK,CAAV,EAAa;EACXyB,QAAAA,CAAC,CAAC4B,GAAF,GAAQ,EAAR;EACD;;EACD,UAAIgG,KAAK,CAACrJ,CAAC,GAAG,CAAL,CAAT,EAAkB;EAChByB,QAAAA,CAAC,CAAC6B,IAAF,GAAS,GAAT;EACD;EACF,KAPD;EAQD,GAXD;EAYA,OAAKM,GAAL,CAAS,aAAT,EAAwB,WAAxB;EACA,SAAO,IAAP;EACD,CAfD;;;;EAkBA,eAAmB,GAAG,oBAAA,GAAW;EAC/B,MAAM8N,SAAS,GAAG,SAAlB;EACA,OAAKnG,IAAL,CAAUpJ,OAAV,CAAkB,UAAAd,CAAC,EAAI;EACrB,QAAIgI,KAAK,GAAGhI,CAAC,CAACgI,KAAF,EAAZ,CADqB;;EAGrBA,IAAAA,KAAK,CAAClH,OAAN,CAAc,UAAAV,CAAC,EAAI;EACjB,UAAIiQ,SAAS,CAAC/O,IAAV,CAAelB,CAAC,CAAC6B,IAAjB,CAAJ,EAA4B;EAC1B7B,QAAAA,CAAC,CAAC6B,IAAF,GAAS,GAAT;EACD;EACF,KAJD;EAKD,GARD;EASA,OAAKqtB,KAAL,CAAW,aAAX,EAA0B,WAA1B;EACA,SAAO,IAAP;EACD,CAbD;;;;;;;;ECzBA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAASxlB,GAAT,EAAcylB,EAAd,EAAkB;EACjC,MAAIntB,KAAK,GAAG0H,GAAG,CAAC1H,KAAhB;EACA0H,EAAAA,GAAG,CAACG,IAAJ,CAASpJ,OAAT,CAAiB,UAAAd,CAAC,EAAI;EACpBA,IAAAA,CAAC,CAACgI,KAAF,GAAUlH,OAAV,CAAkB,UAAAV,CAAC;EAAA,aAAIA,CAAC,CAACovB,EAAD,CAAD,CAAMntB,KAAN,CAAJ;EAAA,KAAnB;EACD,GAFD;EAGA,SAAO0H,GAAP;EACD,CAND;;;;EASA,iBAAmB,GAAG,oBAAA,GAAW;EAC/B,SAAOwlB,QAAQ,CAAC,IAAD,EAAO,aAAP,CAAf;EACD,CAFD;;;;EAKA,iBAAmB,GAAG,oBAAA,GAAW;EAC/B,SAAOA,QAAQ,CAAC,IAAD,EAAO,aAAP,CAAf;EACD,CAFD;;;;EAKA,iBAAmB,GAAG,oBAAA,GAAW;EAC/B,SAAOA,QAAQ,CAAC,IAAD,EAAO,aAAP,CAAf;EACD,CAFD;;;;EAIA,eAAmB,GAAG,oBAAA,GAAW;EAC/B,OAAKE,WAAL;EACA,OAAKvlB,IAAL,CAAUpJ,OAAV,CAAkB,UAAAd,CAAC,EAAI;;EAErB,QAAIgI,KAAK,GAAGhI,CAAC,CAACgI,KAAF,EAAZ;EACAA,IAAAA,KAAK,CAAClH,OAAN,CAAc,UAACV,CAAD,EAAIzB,CAAJ,EAAU;EACtB,UAAIA,CAAC,KAAKqJ,KAAK,CAACjJ,MAAN,GAAe,CAAzB,EAA4B;EAC1BqB,QAAAA,CAAC,CAAC6B,IAAF,GAAS,EAAT;EACD;EACF,KAJD;EAKD,GARD;EASA,OAAKM,GAAL,CAAS,YAAT,EAAuB,aAAvB;EACA,SAAO,IAAP;EACD,CAbD;;;;;;;;;ECvBA;EACA,MAAU,GAAG,WAAA,CAASzC,CAAT,EAAY;EACvB,MAAIE,CAAC,GAAG,KAAKkK,IAAL,CAAUpK,CAAV,CAAR;;EACA,MAAIE,CAAC,KAAKoD,SAAV,EAAqB;EACnB,WAAO,KAAKmF,SAAL,CAAe,EAAf,CAAP;EACD;;EACD,SAAO,KAAKA,SAAL,CAAe,CAACvI,CAAD,CAAf,CAAP;EACD,CAND;;;;EASA,OAAW,GAAG,YAAA,CAASwvB,EAAT,EAAa;EAAA;;EACzB,MAAI,CAACA,EAAL,EAAS;EACP,WAAO,IAAP;EACD;;EACD,MAAItlB,IAAI,GAAG,KAAKA,IAAL,CAAU5B,GAAV,CAAc,UAACtI,CAAD,EAAIrB,CAAJ,EAAU;EACjC,QAAIoL,GAAG,GAAG,KAAI,CAACxB,SAAL,CAAe,CAACvI,CAAD,CAAf,CAAV;;EACA+J,IAAAA,GAAG,CAACU,IAAJ,GAAW,IAAX,CAFiC;;EAGjC,WAAO+kB,EAAE,CAACzlB,GAAD,EAAMpL,CAAN,CAAF,CAAWuL,IAAX,CAAgB,CAAhB,CAAP;EACD,GAJU,CAAX;EAKA,SAAO,KAAK3B,SAAL,CAAe2B,IAAf,CAAP;EACD,CAVD;;;;EAaA,WAAe,GAAG,gBAAA,CAASslB,EAAT,EAAa;EAAA;;EAC7B,MAAI,CAACA,EAAL,EAAS;EACP,WAAO,IAAP;EACD;;EACD,OAAKtlB,IAAL,CAAUpJ,OAAV,CAAkB,UAACd,CAAD,EAAIrB,CAAJ,EAAU;EAC1B,QAAIoL,GAAG,GAAG,MAAI,CAACxB,SAAL,CAAe,CAACvI,CAAD,CAAf,CAAV;;EACA+J,IAAAA,GAAG,CAACU,IAAJ,GAAW,IAAX,CAF0B;;EAG1B+kB,IAAAA,EAAE,CAACzlB,GAAD,EAAMpL,CAAN,CAAF;EACD,GAJD;EAKA,SAAO,IAAP;EACD,CAVD;;;;EAaA,UAAc,GAAG,eAAA,CAAS6wB,EAAT,EAAa;EAAA;;EAC5B,MAAI,CAACA,EAAL,EAAS;EACP,WAAO,IAAP;EACD;;EACD,MAAItlB,IAAI,GAAG,KAAKA,IAAL,CAAUxB,MAAV,CAAiB,UAAC1I,CAAD,EAAIrB,CAAJ,EAAU;EACpC,QAAIoL,GAAG,GAAG,MAAI,CAACxB,SAAL,CAAe,CAACvI,CAAD,CAAf,CAAV;;EACA+J,IAAAA,GAAG,CAACU,IAAJ,GAAW,IAAX,CAFoC;;EAGpC,WAAO+kB,EAAE,CAACzlB,GAAD,EAAMpL,CAAN,CAAT;EACD,GAJU,CAAX;EAKA,SAAO,KAAK4J,SAAL,CAAe2B,IAAf,CAAP;EACD,CAVD;;;;EAaA,QAAY,GAAG,aAAA,CAASslB,EAAT,EAAa;EAAA;;EAC1B,MAAI,CAACA,EAAL,EAAS;EACP,WAAO,IAAP;EACD;;EACD,MAAItlB,IAAI,GAAG,KAAKA,IAAL,CAAUxG,IAAV,CAAe,UAAC1D,CAAD,EAAIrB,CAAJ,EAAU;EAClC,QAAIoL,GAAG,GAAG,MAAI,CAACxB,SAAL,CAAe,CAACvI,CAAD,CAAf,CAAV;;EACA+J,IAAAA,GAAG,CAACU,IAAJ,GAAW,IAAX,CAFkC;;EAGlC,WAAO+kB,EAAE,CAACzlB,GAAD,EAAMpL,CAAN,CAAT;EACD,GAJU,CAAX;;EAKA,MAAIuL,IAAJ,EAAU;EACR,WAAO,KAAK3B,SAAL,CAAe,CAAC2B,IAAD,CAAf,CAAP;EACD;;EACD,SAAO9G,SAAP;EACD,CAbD;;;;EAgBA,QAAY,GAAG,aAAA,CAASosB,EAAT,EAAa;EAAA;;EAC1B,MAAI,CAACA,EAAL,EAAS;EACP,WAAO,IAAP;EACD;;EACD,SAAO,KAAKtlB,IAAL,CAAU5F,IAAV,CAAe,UAACtE,CAAD,EAAIrB,CAAJ,EAAU;EAC9B,QAAIoL,GAAG,GAAG,MAAI,CAACxB,SAAL,CAAe,CAACvI,CAAD,CAAf,CAAV;;EACA+J,IAAAA,GAAG,CAACU,IAAJ,GAAW,IAAX,CAF8B;;EAG9B,WAAO+kB,EAAE,CAACzlB,GAAD,EAAMpL,CAAN,CAAT;EACD,GAJM,CAAP;EAKD,CATD;;;;;;;;;;;;;;;;;;;;;;EC/DA;EACAwwB,EAAAA,mBAAA,GAAsB,UAASvtB,OAAT,EAAkB;EAAA;;EACtC,QAAI,CAACA,OAAL,EAAc;EACZ,aAAO,gBAAP;EACD;;EACD,SAAKsI,IAAL,CAAUpJ,OAAV,CAAkB,UAAAd,CAAC,EAAI;EACrB,UAAI0vB,UAAU,GAAGC,YAAQ,CAAC/e,QAAT,CAAkBhP,OAAlB,EAA2B,KAAI,CAACS,KAAhC,EAAuC,KAAI,CAAC4F,IAAL,EAAvC,CAAjB,CADqB;;EAGrB,UAAI2nB,MAAM,GAAG,KAAI,CAACrnB,SAAL,CAAemnB,UAAf,CAAb;;EACAE,MAAAA,MAAM,CAACC,MAAP;EACA7vB,MAAAA,CAAC,CAAC4B,OAAF,CAAU8tB,UAAU,CAAC,CAAD,CAApB,EAAyB,KAAzB,EALqB;EAMtB,KAND;EAOA,WAAO,IAAP;EACD,GAZD;;;;EAeAP,EAAAA,eAAA,GAAkB,UAASlkB,KAAT,EAAgBrJ,OAAhB,EAAyB;EACzC,SAAKqJ,KAAL,CAAWA,KAAX,EAAkB6kB,WAAlB,CAA8BluB,OAA9B;EACA,WAAO,IAAP;EACD,GAHD;;;;EAMAutB,EAAAA,iBAAA,GAAiB,UAASlkB,KAAT,EAAgB;EAAA;;EAC/B,QAAI8kB,QAAQ,GAAG,IAAf;;EACA,QAAI9kB,KAAJ,EAAW;EACT8kB,MAAAA,QAAQ,GAAG,KAAK9kB,KAAL,CAAWA,KAAX,CAAX;EACD;;EACD8kB,IAAAA,QAAQ,CAAC7lB,IAAT,CAAcpJ,OAAd,CAAsB,UAAAmJ,MAAM;EAAA,aAAIA,MAAM,UAAN,CAAc,MAAd,CAAJ;EAAA,KAA5B;EACA,WAAO,IAAP;EACD,GAPD;;;EASAklB,EAAAA,cAAA,GAAiBA,OAAO,UAAxB;;;;;;ECjCA,IAAMrnB,SAAO,GAAG;;EAEdkoB,EAAAA,KAAK,EAAE,eAAC/wB,CAAD,EAAIC,CAAJ,EAAU;EACf,QAAI+wB,IAAI,GAAGhxB,CAAC,CAACP,IAAF,CAAO,OAAP,CAAX;EACA,QAAIwxB,KAAK,GAAGhxB,CAAC,CAACR,IAAF,CAAO,OAAP,CAAZ;;EACA,QAAIuxB,IAAI,GAAGC,KAAX,EAAkB;EAChB,aAAO,CAAC,CAAR;EACD;;EACD,QAAID,IAAI,GAAGC,KAAX,EAAkB;EAChB,aAAO,CAAP;EACD;;EACD,WAAO,CAAP;EACD,GAZa;;;EAedC,EAAAA,KAAK,EAAE,eAAClxB,CAAD,EAAIC,CAAJ,EAAU;EACf,QAAI+wB,IAAI,GAAGhxB,CAAC,CAACP,IAAF,EAAX;EACA,QAAIwxB,KAAK,GAAGhxB,CAAC,CAACR,IAAF,EAAZ;;EACA,QAAIuxB,IAAI,GAAGC,KAAX,EAAkB;EAChB,aAAO,CAAP;EACD;;EACD,QAAID,IAAI,GAAGC,KAAX,EAAkB;EAChB,aAAO,CAAC,CAAR;EACD;;EACD,WAAO,CAAP;EACD,GAzBa;;;EA4BdnxB,EAAAA,MAAM,EAAE,gBAACE,CAAD,EAAIC,CAAJ,EAAU;EAChB,QAAI+wB,IAAI,GAAGhxB,CAAC,CAACP,IAAF,GAASgD,IAAT,GAAgB3C,MAA3B;EACA,QAAImxB,KAAK,GAAGhxB,CAAC,CAACR,IAAF,GAASgD,IAAT,GAAgB3C,MAA5B;;EACA,QAAIkxB,IAAI,GAAGC,KAAX,EAAkB;EAChB,aAAO,CAAP;EACD;;EACD,QAAID,IAAI,GAAGC,KAAX,EAAkB;EAChB,aAAO,CAAC,CAAR;EACD;;EACD,WAAO,CAAP;EACD,GAtCa;;;EAyCdb,EAAAA,SAAS,EAAE,mBAACpwB,CAAD,EAAIC,CAAJ,EAAU;EACnB,QAAI+wB,IAAI,GAAGhxB,CAAC,CAACowB,SAAF,EAAX;EACA,QAAIa,KAAK,GAAGhxB,CAAC,CAACmwB,SAAF,EAAZ;;EACA,QAAIY,IAAI,GAAGC,KAAX,EAAkB;EAChB,aAAO,CAAP;EACD;;EACD,QAAID,IAAI,GAAGC,KAAX,EAAkB;EAChB,aAAO,CAAC,CAAR;EACD;;EACD,WAAO,CAAP;EACD;EAnDa,CAAhB;;;EAuDA,IAAME,MAAM,GAAG,SAATA,MAAS,CAASrmB,GAAT,EAAc;EAC3B,MAAIsmB,MAAM,GAAG,EAAb;EACA,MAAM7rB,OAAO,GAAG;EACd,YAAM,IADQ;EAEdQ,IAAAA,WAAW,EAAE,KAFC;EAGdH,IAAAA,UAAU,EAAE,IAHE;EAIdlE,IAAAA,OAAO,EAAE;EAJK,GAAhB;EAMAoJ,EAAAA,GAAG,CAACG,IAAJ,CAASpJ,OAAT,CAAiB,UAAAd,CAAC,EAAI;EACpB,QAAIvB,GAAG,GAAGuB,CAAC,CAACtB,IAAF,CAAO8F,OAAP,CAAV;EACA6rB,IAAAA,MAAM,CAAC5xB,GAAD,CAAN,GAAc4xB,MAAM,CAAC5xB,GAAD,CAAN,IAAe,CAA7B;EACA4xB,IAAAA,MAAM,CAAC5xB,GAAD,CAAN,IAAe,CAAf;EACD,GAJD;EAKAmH,EAAAA,OAAO,CAACD,GAAR,CAAY0qB,MAAZ,EAb2B;;EAe3BtmB,EAAAA,GAAG,CAACG,IAAJ,CAASomB,IAAT,CAAc,UAACrxB,CAAD,EAAIC,CAAJ,EAAU;EACtB,QAAI+wB,IAAI,GAAGI,MAAM,CAACpxB,CAAC,CAACP,IAAF,CAAO8F,OAAP,CAAD,CAAjB;EACA,QAAI0rB,KAAK,GAAGG,MAAM,CAACnxB,CAAC,CAACR,IAAF,CAAO8F,OAAP,CAAD,CAAlB;;EACA,QAAIyrB,IAAI,GAAGC,KAAX,EAAkB;EAChB,aAAO,CAAP;EACD;;EACD,QAAID,IAAI,GAAGC,KAAX,EAAkB;EAChB,aAAO,CAAC,CAAR;EACD;;EACD,WAAO,CAAP;EACD,GAVD;EAWA,SAAOnmB,GAAP;EACD,CA3BD;;;AA8BAjC,WAAO,CAACyoB,YAAR,GAAuBzoB,SAAO,CAACkoB,KAA/B;AACAloB,WAAO,CAAC0oB,SAAR,GAAoB1oB,SAAO,CAACunB,SAA5B;AACAvnB,WAAO,CAAC2oB,aAAR,GAAwB3oB,SAAO,CAACqoB,KAAhC;AACAroB,WAAO,CAACoD,KAAR,GAAgBpD,SAAO,CAACqoB,KAAxB;;;EAGA,QAAY,GAAG,aAAA,CAAS3iB,KAAT,EAAgB;EAC7BA,EAAAA,KAAK,GAAGA,KAAK,IAAI,OAAjB;EACAA,EAAAA,KAAK,GAAG1F,SAAO,CAAC0F,KAAD,CAAP,IAAkBA,KAA1B,CAF6B;;EAI7B,MAAIA,KAAK,KAAK,MAAV,IAAoBA,KAAK,KAAK,WAA9B,IAA6CA,KAAK,KAAK,MAA3D,EAAmE;EACjE,WAAO4iB,MAAM,CAAC,IAAD,CAAb;EACD,GAN4B;;;EAQ7B,MAAI,OAAO5iB,KAAP,KAAiB,UAArB,EAAiC;EAC/B,SAAKtD,IAAL,GAAY,KAAKA,IAAL,CAAUomB,IAAV,CAAe9iB,KAAf,CAAZ;EACA,WAAO,IAAP;EACD;;EACD,SAAO,IAAP;EACD,CAbD;;;;;;EC3FA;EACA,WAAa,GAAG,cAAA,GAAW;EACzB,MAAItD,IAAI,GAAG,KAAKA,IAAL,CAAU5B,GAAV,CAAc,UAAA0F,EAAE;EAAA,WAAIA,EAAE,CAACnG,KAAH,EAAJ;EAAA,GAAhB,CAAX;EACA,MAAImD,GAAG,GAAG,KAAKzC,SAAL,CAAe2B,IAAf,CAAV;EACA,SAAOc,GAAP;EACD,CAJD;;;;;;ECDA;EACA,eAAc,GAAG;EAEf,CACE,MADF,EAEE,MAFF,EAGE,WAHF,EAIE,QAJF,EAKE,YALF,EAME,aANF,EAOE,aAPF,EAQE,cARF,EASE,YATF,EAUE,KAVF,EAWE,aAXF,EAYE,OAZF,EAaE,OAbF,CAFe;EAkBf,CAAC,QAAD,EAAW,cAAX,EAA2B,OAA3B,EAAoC,OAApC,EAA6C,OAA7C,EAAsD,SAAtD,EAAiE,SAAjE,CAlBe;EAoBf,CAAC,SAAD,EAAY,SAAZ,EAAuB,OAAvB,EAAgC,MAAhC,EAAwC,SAAxC,CApBe,EAqBf,CAAC,SAAD,EAAY,QAAZ,CArBe;EAuBf,CAAC,QAAD,EAAW,UAAX,CAvBe;EAyBf,CAAC,UAAD,EAAa,YAAb,CAzBe,EA0Bf,CAAC,WAAD,EAAc,UAAd,EAA0B,WAA1B,CA1Be;EA4Bf,CAAC,aAAD,EAAgB,aAAhB,CA5Be;EA8Bf,CAAC,OAAD,EAAU,MAAV,EAAkB,WAAlB,CA9Be,EA+Bf,CAAC,SAAD,EAAY,UAAZ,CA/Be,EAgCf,CAAC,WAAD,EAAc,cAAd,CAhCe,EAiCf,CAAC,YAAD,EAAe,WAAf,CAjCe,EAkCf,CAAC,SAAD,EAAY,UAAZ,CAlCe;;EAoCf,CAAC,WAAD,EAAc,cAAd,EAA8B,aAA9B,CApCe,EAqCf,CAAC,YAAD,EAAe,QAAf,EAAyB,OAAzB,EAAkC,YAAlC,EAAgD,YAAhD,EAA8D,QAA9D,EAAwE,eAAxE,EAAyF,cAAzF,CArCe,EAsCf,CAAC,WAAD,EAAc,MAAd,EAAsB,OAAtB,CAtCe;EAwCf,CAAC,OAAD,EAAU,SAAV,EAAqB,MAArB,EAA6B,UAA7B,EAAyC,SAAzC,CAxCe,EAyCf,CAAC,UAAD,EAAa,aAAb,EAA4B,QAA5B,EAAsC,aAAtC,EAAqD,MAArD,CAzCe,EA0Cf,CAAC,MAAD,EAAS,MAAT,EAAiB,WAAjB,EAA8B,QAA9B,CA1Ce,EA2Cf,CAAC,MAAD,EAAS,OAAT,EAAkB,cAAlB,EAAkC,UAAlC,CA3Ce;EA6Cf,CAAC,OAAD,EAAU,YAAV,CA7Ce,EA8Cf,CAAC,KAAD,EAAQ,OAAR,EAAiB,SAAjB,EAA4B,aAA5B,EAA2C,OAA3C,CA9Ce;EAgDf,CAAC,cAAD,EAAiB,UAAjB,EAA6B,YAA7B,CAhDe,EAiDf,CAAC,cAAD,EAAiB,OAAjB,EAA0B,SAA1B,CAjDe;EAmDf,CAAC,WAAD,EAAc,WAAd,EAA2B,WAA3B,CAnDe;EAqDf,CAAC,MAAD,EAAS,MAAT,EAAiB,WAAjB,EAA8B,OAA9B,CArDe;;EAuDf,CAAC,cAAD,EAAiB,MAAjB,CAvDe;EAyDf,CAAC,SAAD,EAAY,MAAZ,CAzDe,CAAjB;;ECDA,WAAc,GAAG;EACfiG,EAAAA,IAAI,EAAE,EADS;;EAGfC,EAAAA,QAAQ,EAAE;EACRzK,IAAAA,GAAG,EAAE;EADG,GAHK;;EAOf0K,EAAAA,UAAU,EAAE;EACV1K,IAAAA,GAAG,EAAE;EADK,GAPG;;EAYf2K,EAAAA,MAAM,EAAE;EACN3K,IAAAA,GAAG,EAAE,YADC;EAENE,IAAAA,IAAI,EAAE;EAFA,GAZO;EAgBf0K,EAAAA,SAAS,EAAE;EACT5K,IAAAA,GAAG,EAAE;EADI,GAhBI;EAmBf6K,EAAAA,QAAQ,EAAE;EACR7K,IAAAA,GAAG,EAAE;EADG,GAnBK;EAsBf8K,EAAAA,UAAU,EAAE;EACV9K,IAAAA,GAAG,EAAE;EADK,GAtBG;EAyBf+K,EAAAA,QAAQ,EAAE;EACR/K,IAAAA,GAAG,EAAE;EADG,GAzBK;EA4BfgL,EAAAA,SAAS,EAAE;EACThL,IAAAA,GAAG,EAAE;EADI,GA5BI;EA+BfiL,EAAAA,KAAK,EAAE;EACLjL,IAAAA,GAAG,EAAE;EADA,GA/BQ;;EAoCfkL,EAAAA,OAAO,EAAE;EACPlL,IAAAA,GAAG,EAAE,OADE;EAEPE,IAAAA,IAAI,EAAE;EAFC,GApCM;EAwCfiL,EAAAA,IAAI,EAAE;EACJnL,IAAAA,GAAG,EAAE,OADD;EAEJE,IAAAA,IAAI,EAAE;EAFF,GAxCS;EA4CfkL,EAAAA,MAAM,EAAE;EACNpL,IAAAA,GAAG,EAAE,OADC;EAENE,IAAAA,IAAI,EAAE;EAFA,GA5CO;EAgDfmL,EAAAA,OAAO,EAAE;EACPrL,IAAAA,GAAG,EAAE;EADE,GAhDM;EAmDfsL,EAAAA,YAAY,EAAE;EACZtL,IAAAA,GAAG,EAAE,UADO;EAEZE,IAAAA,IAAI,EAAE;EAFM,GAnDC;EAuDfqL,EAAAA,UAAU,EAAE;EACVvL,IAAAA,GAAG,EAAE;EADK,GAvDG;EA0DfwL,EAAAA,OAAO,EAAE;EACPxL,IAAAA,GAAG,EAAE;EADE,GA1DM;EA6DfyL,EAAAA,MAAM,EAAE;EACNzL,IAAAA,GAAG,EAAE;EADC,GA7DO;;EAkEf0L,EAAAA,MAAM,EAAE;EACN1L,IAAAA,GAAG,EAAE;EADC,GAlEO;EAqEf2L,EAAAA,WAAW,EAAE;;EAEX3L,IAAAA,GAAG,EAAE;EAFM,GArEE;EAyEf4L,EAAAA,OAAO,EAAE;EACP5L,IAAAA,GAAG,EAAE;EADE,GAzEM;;EA6Ef6L,EAAAA,KAAK,EAAE;EACL7L,IAAAA,GAAG,EAAE;EADA,GA7EQ;;EAiFf8L,EAAAA,QAAQ,EAAE;EACR9L,IAAAA,GAAG,EAAE;EADG,GAjFK;;EAqFf+L,EAAAA,IAAI,EAAE;EACJ/L,IAAAA,GAAG,EAAE;EADD,GArFS;;EAyFfgM,EAAAA,OAAO,EAAE;EACPhM,IAAAA,GAAG,EAAE,MADE;EAEPE,IAAAA,IAAI,EAAE;EAFC,GAzFM;;EA8Ff+L,EAAAA,UAAU,EAAE;EACVjM,IAAAA,GAAG,EAAE;EADK;EA9FG,CAAjB;;ECAA,WAAc,GAAG;EACfkM,EAAAA,IAAI,EAAE;EAAA,GADS;EAIfC,EAAAA,YAAY,EAAE;EACZnM,IAAAA,GAAG,EAAE;EADO,GAJC;EAOfoM,EAAAA,UAAU,EAAE;EACVpM,IAAAA,GAAG,EAAE;EADK,GAPG;EAUfqM,EAAAA,MAAM,EAAE;EACNrM,IAAAA,GAAG,EAAE;EADC,GAVO;EAafsM,EAAAA,SAAS,EAAE;EACTtM,IAAAA,GAAG,EAAE;EADI,GAbI;EAgBfuM,EAAAA,YAAY,EAAE;EACZvM,IAAAA,GAAG,EAAE;EADO,GAhBC;EAmBfwM,EAAAA,aAAa,EAAE;EACbxM,IAAAA,GAAG,EAAE;EADQ,GAnBA;EAsBfyM,EAAAA,UAAU,EAAE;EACVzM,IAAAA,GAAG,EAAE;EADK,GAtBG;EAyBf0M,EAAAA,MAAM,EAAE;EACN1M,IAAAA,GAAG,EAAE;EADC,GAzBO;EA4Bf2M,EAAAA,KAAK,EAAE;EACL3M,IAAAA,GAAG,EAAE;EADA,GA5BQ;EA+Bf4M,EAAAA,UAAU,EAAE;EACV5M,IAAAA,GAAG,EAAE;EADK,GA/BG;EAkCf6M,EAAAA,QAAQ,EAAE;EACR7M,IAAAA,GAAG,EAAE;EADG,GAlCK;EAqCf8M,EAAAA,WAAW,EAAE;EACX9M,IAAAA,GAAG,EAAE;EADM;EArCE,CAAjB;;ECAA,YAAc,GAAG;EACf+M,EAAAA,KAAK,EAAE,EADQ;EAEfC,EAAAA,OAAO,EAAE;EACPhN,IAAAA,GAAG,EAAE;EADE,GAFM;EAKfiN,EAAAA,QAAQ,EAAE;EACRjN,IAAAA,GAAG,EAAE;EADG,GALK;;;;EAWfkN,EAAAA,YAAY,EAAE;EACZlN,IAAAA,GAAG,EAAE;EADO,GAXC;EAcfmN,EAAAA,QAAQ,EAAE;EACRnN,IAAAA,GAAG,EAAE;EADG,GAdK;EAiBfoN,EAAAA,SAAS,EAAE;EACTpN,IAAAA,GAAG,EAAE;EADI,GAjBI;EAoBfqN,EAAAA,YAAY,EAAE;EACZrN,IAAAA,GAAG,EAAE;EADO,GApBC;EAuBfsN,EAAAA,KAAK,EAAE;EAAA,GAvBQ;EA0BfC,EAAAA,OAAO,EAAE;EACPvN,IAAAA,GAAG,EAAE;EADE;EA1BM,CAAjB;;ECAA,WAAc,GAAG;EACfwN,EAAAA,IAAI,EAAE,EADS;;EAEfC,EAAAA,KAAK,EAAE;EACLzN,IAAAA,GAAG,EAAE,MADA;EAELE,IAAAA,IAAI,EAAE;EAFD,GAFQ;EAMfwN,EAAAA,OAAO,EAAE;EACP1N,IAAAA,GAAG,EAAE,MADE;EAEPE,IAAAA,IAAI,EAAE;EAFC,GANM;EAUfyN,EAAAA,WAAW,EAAE;EACX3N,IAAAA,GAAG,EAAE;EADM,GAVE;EAaf4N,EAAAA,IAAI,EAAE;EACJ5N,IAAAA,GAAG,EAAE;EADD,GAbS;EAgBf6N,EAAAA,QAAQ,EAAE;EACR7N,IAAAA,GAAG,EAAE,MADG;EAERE,IAAAA,IAAI,EAAE;EAFE,GAhBK;EAoBf4N,EAAAA,IAAI,EAAE;EACJ9N,IAAAA,GAAG,EAAE,MADD;EAEJE,IAAAA,IAAI,EAAE;EAFF,GApBS;EAwBf6N,EAAAA,OAAO,EAAE;EACP/N,IAAAA,GAAG,EAAE,MADE;EAEPE,IAAAA,IAAI,EAAE;EAFC;EAxBM,CAAjB;;ECAA,UAAc,GAAG;EACf8N,EAAAA,SAAS,EAAE,EADI;EAEfC,EAAAA,UAAU,EAAE;EACVjO,IAAAA,GAAG,EAAE;EADK,GAFG;EAKfkO,EAAAA,WAAW,EAAE;EACXlO,IAAAA,GAAG,EAAE;EADM,GALE;EAQfmO,EAAAA,WAAW,EAAE;EACXnO,IAAAA,GAAG,EAAE;EADM,GARE;EAYfoO,EAAAA,WAAW,EAAE;EACXpO,IAAAA,GAAG,EAAE;EADM,GAZE;EAefqO,EAAAA,MAAM,EAAE,EAfO;EAiBfC,EAAAA,QAAQ,EAAE,EAjBK;;EAmBfC,EAAAA,UAAU,EAAE,EAnBG;EAoBfC,EAAAA,WAAW,EAAE,EApBE;EAqBfC,EAAAA,WAAW,EAAE,EArBE;EAsBfC,EAAAA,YAAY,EAAE,EAtBC;EAuBfC,EAAAA,gBAAgB,EAAE;EAChB3O,IAAAA,GAAG,EAAE;EADW,GAvBH;EA0Bf4O,EAAAA,UAAU,EAAE,EA1BG;EA2BfC,EAAAA,YAAY,EAAE,EA3BC;EA4BfC,EAAAA,GAAG,EAAE,EA5BU;EA6BfC,EAAAA,WAAW,EAAE,EA7BE;EA8BfC,EAAAA,OAAO,EAAE,EA9BM;EA+BfC,EAAAA,SAAS,EAAE;EACTjP,IAAAA,GAAG,EAAE;EADI,GA/BI;EAkCfkP,EAAAA,KAAK,EAAE,EAlCQ;EAmCfC,EAAAA,KAAK,EAAE,EAnCQ;;EAsCfC,EAAAA,SAAS,EAAE,EAtCI;EAuCfC,EAAAA,QAAQ,EAAE,EAvCK;EAwCfC,EAAAA,WAAW,EAAE,EAxCE;EA0CfjS,EAAAA,SAAS,EAAE,EA1CI;EA2CfE,EAAAA,SAAS,EAAE,EA3CI;EA4CfD,EAAAA,SAAS,EAAE,EA5CI;EA6CfE,EAAAA,UAAU,EAAE,EA7CG;EA8Cf+R,EAAAA,OAAO,EAAE,EA9CM;EA+Cf3R,EAAAA,SAAS,EAAE,EA/CI;;EAkDf4R,EAAAA,SAAS,EAAE,EAlDI;EAmDfC,EAAAA,cAAc,EAAE;EACdzP,IAAAA,GAAG,EAAE;EADS,GAnDD;EAsDf0P,EAAAA,YAAY,EAAE;EACZ1P,IAAAA,GAAG,EAAE;EADO,GAtDC;;EA0Df2P,EAAAA,WAAW,EAAE,EA1DE;EA2DfjS,EAAAA,UAAU,EAAE;EACVsC,IAAAA,GAAG,EAAE;EADK,GA3DG;EA8DfvC,EAAAA,YAAY,EAAE;EACZuC,IAAAA,GAAG,EAAE;EADO;EA9DC,CAAjB;;ECAA;EACA,IAAM4P,aAAW,GAAG,SAAdA,WAAc,CAAShT,IAAT,EAAe;EACjC,MAAMxC,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAYwC,IAAZ,CAAb;EACAxC,EAAAA,IAAI,CAACC,OAAL,CAAa,UAAAnB,CAAC,EAAI;EAChB0D,IAAAA,IAAI,CAAC1D,CAAD,CAAJ,CAAQuH,QAAR,GAAmB,EAAnB,CADgB;;EAGhB,SAAK,IAAIvI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkC,IAAI,CAAC9B,MAAzB,EAAiCJ,CAAC,EAAlC,EAAsC;EACpC,UAAI0E,IAAI,CAACxC,IAAI,CAAClC,CAAD,CAAL,CAAJ,CAAc8H,GAAd,IAAqBpD,IAAI,CAACxC,IAAI,CAAClC,CAAD,CAAL,CAAJ,CAAc8H,GAAd,KAAsB9G,CAA/C,EAAkD;EAChD0D,QAAAA,IAAI,CAAC1D,CAAD,CAAJ,CAAQuH,QAAR,CAAiBkB,IAAjB,CAAsBvH,IAAI,CAAClC,CAAD,CAA1B;EACD;EACF;EACF,GARD;EASD,CAXD;;EAYA,iBAAc,GAAG0X,aAAjB;;ECJA,IAAMC,QAAM,GAAG;EACbrF,EAAAA,IAAI,EAAE,MADO;;EAIb0B,EAAAA,IAAI,EAAE,OAJO;EAKbkD,EAAAA,SAAS,EAAE,OALE;EAMbC,EAAAA,QAAQ,EAAE,OANG;;EASb7B,EAAAA,IAAI,EAAE,KATO;EAUbT,EAAAA,KAAK,EAAE,KAVM;EAYbiB,EAAAA,SAAS,EAAE,SAZE;EAcbS,EAAAA,WAAW,EAAE,MAdA;EAebD,EAAAA,WAAW,EAAE,MAfA;EAgBbD,EAAAA,UAAU,EAAE,MAhBC;EAiBbF,EAAAA,MAAM,EAAE,MAjBK;;EAAA,CAAf;;EAsBA,IAAMyB,OAAK,GAAG,SAARA,KAAQ,CAAS9O,GAAT,EAAcpE,IAAd,EAAoB;EAChCzC,EAAAA,MAAM,CAACC,IAAP,CAAY4G,GAAZ,EAAiB3G,OAAjB,CAAyB,UAAAnB,CAAC,EAAI;EAC5B0D,IAAAA,IAAI,CAAC1D,CAAD,CAAJ,GAAU8H,GAAG,CAAC9H,CAAD,CAAb;EACD,GAFD;EAGD,CAJD;;;EAOA,IAAM6W,cAAY,GAAG,SAAfA,YAAe,CAASnT,IAAT,EAAe;EAClCzC,EAAAA,MAAM,CAACC,IAAP,CAAYwC,IAAZ,EAAkBvC,OAAlB,CAA0B,UAAAnB,CAAC,EAAI;EAC7B0D,IAAAA,IAAI,CAAC1D,CAAD,CAAJ,CAAQkH,IAAR,GAAe,EAAf;;EACA,SAAK,IAAIlI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8X,WAAS,CAAC1X,MAA9B,EAAsCJ,CAAC,EAAvC,EAA2C;EACzC,UAAIkH,GAAG,GAAG4Q,WAAS,CAAC9X,CAAD,CAAnB;;EACA,UAAIkH,GAAG,CAACuH,OAAJ,CAAYzN,CAAZ,MAAmB,CAAC,CAAxB,EAA2B;EACzBkG,QAAAA,GAAG,GAAGA,GAAG,CAAC6C,MAAJ,CAAW,UAAAzJ,CAAC;EAAA,iBAAIA,CAAC,KAAKU,CAAV;EAAA,SAAZ,CAAN;EACAkG,QAAAA,GAAG,CAAC/E,OAAJ,CAAY,UAAAzB,CAAC,EAAI;EACfgE,UAAAA,IAAI,CAAC1D,CAAD,CAAJ,CAAQkH,IAAR,CAAaxH,CAAb,IAAkB,IAAlB;EACD,SAFD;EAGD;EACF;;EACDgE,IAAAA,IAAI,CAAC1D,CAAD,CAAJ,CAAQkH,IAAR,GAAejG,MAAM,CAACC,IAAP,CAAYwC,IAAI,CAAC1D,CAAD,CAAJ,CAAQkH,IAApB,CAAf;EACD,GAZD;EAaD,CAdD;;EAgBA,IAAM6P,WAAS,GAAG,SAAZA,SAAY,CAASrT,IAAT,EAAe;EAC/BzC,EAAAA,MAAM,CAACC,IAAP,CAAYwC,IAAZ,EAAkBvC,OAAlB,CAA0B,UAAAnB,CAAC,EAAI;EAC7B,QAAI2W,QAAM,CAAC3W,CAAD,CAAV,EAAe;EACb0D,MAAAA,IAAI,CAAC1D,CAAD,CAAJ,CAAQgX,KAAR,GAAgBL,QAAM,CAAC3W,CAAD,CAAtB;EACA;EACD;;EACD,QAAI0D,IAAI,CAAC1D,CAAD,CAAJ,CAAQ8G,GAAR,IAAe6P,QAAM,CAACjT,IAAI,CAAC1D,CAAD,CAAJ,CAAQ8G,GAAT,CAAzB,EAAwC;EACtCpD,MAAAA,IAAI,CAAC1D,CAAD,CAAJ,CAAQgX,KAAR,GAAgBL,QAAM,CAACjT,IAAI,CAAC1D,CAAD,CAAJ,CAAQ8G,GAAT,CAAtB;EACA;EACD;;EACD,QAAIpD,IAAI,CAAC1D,CAAD,CAAJ,CAAQ8G,GAAR,IAAepD,IAAI,CAACA,IAAI,CAAC1D,CAAD,CAAJ,CAAQ8G,GAAT,CAAJ,CAAkBkQ,KAArC,EAA4C;EAC1CtT,MAAAA,IAAI,CAAC1D,CAAD,CAAJ,CAAQgX,KAAR,GAAgBtT,IAAI,CAACA,IAAI,CAAC1D,CAAD,CAAJ,CAAQ8G,GAAT,CAAJ,CAAkBkQ,KAAlC;EACD;EACF,GAZD;EAaD,CAdD;;EAgBA,IAAMC,OAAK,GAAG,SAARA,KAAQ,GAAM;EAClB,MAAIvT,IAAI,GAAG,EAAX;EACAkT,EAAAA,OAAK,CAACM,OAAD,EAAQxT,IAAR,CAAL;EACAkT,EAAAA,OAAK,CAACO,OAAD,EAAQzT,IAAR,CAAL;EACAkT,EAAAA,OAAK,CAACQ,QAAD,EAAS1T,IAAT,CAAL;EACAkT,EAAAA,OAAK,CAACS,OAAD,EAAQ3T,IAAR,CAAL;EACAkT,EAAAA,OAAK,CAACU,MAAD,EAAO5T,IAAP,CAAL,CANkB;;EAQlB6T,EAAAA,aAAW,CAAC7T,IAAD,CAAX,CARkB;;EAUlBmT,EAAAA,cAAY,CAACnT,IAAD,CAAZ,CAVkB;;EAYlBqT,EAAAA,WAAS,CAACrT,IAAD,CAAT;EACA,SAAOA,IAAP;EACD,CAdD;;EAeA,UAAc,GAAGuT,OAAK,EAAtB;;;ECnFA;EACA,MAAM8Z,KAAK,GAAG,SAAd;;EAEA,MAAMnrB,MAAM,GAAG,SAATA,MAAS,CAAS9G,GAAT,EAAc+G,KAAd,EAAqB;EAClC/G,IAAAA,GAAG,GAAGA,GAAG,CAACgH,QAAJ,EAAN;;EACA,WAAOhH,GAAG,CAACM,MAAJ,GAAayG,KAApB,EAA2B;EACzB/G,MAAAA,GAAG,IAAI,GAAP;EACD;;EACD,WAAOA,GAAP;EACD,GAND;;;EASA,MAAM6X,MAAM,GAAG;EACb8U,IAAAA,KAAK,EAAE,eAAS3sB,GAAT,EAAc;EACnB,aAAO,aAAaA,GAAb,GAAmBiyB,KAA1B;EACD,KAHY;EAIbpF,IAAAA,GAAG,EAAE,aAAS7sB,GAAT,EAAc;EACjB,aAAO,aAAaA,GAAb,GAAmBiyB,KAA1B;EACD,KANY;EAObC,IAAAA,IAAI,EAAE,cAASlyB,GAAT,EAAc;EAClB,aAAO,aAAaA,GAAb,GAAmBiyB,KAA1B;EACD,KATY;EAUbE,IAAAA,OAAO,EAAE,iBAASnyB,GAAT,EAAc;EACrB,aAAO,aAAaA,GAAb,GAAmBiyB,KAA1B;EACD,KAZY;EAabG,IAAAA,IAAI,EAAE,cAASpyB,GAAT,EAAc;EAClB,aAAO,aAAaA,GAAb,GAAmBiyB,KAA1B;EACD,KAfY;EAgBbrF,IAAAA,MAAM,EAAE,gBAAS5sB,GAAT,EAAc;EACpB,aAAO,aAAaA,GAAb,GAAmBiyB,KAA1B;EACD,KAlBY;EAmBbI,IAAAA,KAAK,EAAE,eAASryB,GAAT,EAAc;EACnB,aAAO,aAAaA,GAAb,GAAmBiyB,KAA1B;EACD;EArBY,GAAf;;EAwBA,MAAMK,SAAS,GAAG,SAAZA,SAAY,CAAS1tB,IAAT,EAAe;EAC/BA,IAAAA,IAAI,GAAGA,IAAI,CAACiF,GAAL,CAAS,UAAA/F,GAAG,EAAI;EACrB,UAAI,CAACgE,MAAM,CAACC,cAAP,CAAsBjE,GAAtB,CAAL,EAAiC;EAC/B,eAAOA,GAAP;EACD;;EACD,UAAMpD,CAAC,GAAGoH,MAAM,CAAChE,GAAD,CAAN,CAAYoU,KAAZ,IAAqB,MAA/B;EACA,aAAOL,MAAM,CAACnX,CAAD,CAAN,CAAUoD,GAAV,CAAP;EACD,KANM,CAAP;EAOA,WAAOc,IAAI,CAACrC,IAAL,CAAU,IAAV,CAAP;EACD,GATD;;;EAYA,MAAMgwB,KAAK,GAAG,SAARA,KAAQ,CAASjnB,GAAT,EAAc;EAC1BnE,IAAAA,OAAO,CAACD,GAAR,CAAY2Q,MAAM,CAACqa,IAAP,CAAY,OAAZ,CAAZ;EACA5mB,IAAAA,GAAG,CAACG,IAAJ,CAASpJ,OAAT,CAAiB,UAAAd,CAAC,EAAI;EACpB4F,MAAAA,OAAO,CAACD,GAAR,CAAY2Q,MAAM,CAACqa,IAAP,CAAY,SAAZ,CAAZ;EACA3wB,MAAAA,CAAC,CAACgI,KAAF,GAAUlH,OAAV,CAAkB,UAAAV,CAAC,EAAI;EACrB,YAAIiD,IAAI,GAAGzC,MAAM,CAACC,IAAP,CAAYT,CAAC,CAACiD,IAAd,CAAX;EACA,YAAI3E,IAAI,GAAG0B,CAAC,CAAC1B,IAAF,IAAU,GAArB;;EACA,YAAI0B,CAAC,CAACyC,QAAN,EAAgB;EACdnE,UAAAA,IAAI,GAAG,MAAM0B,CAAC,CAACyC,QAAR,GAAmB,GAA1B;EACD;;EACD,QAAiC;EAC/BnE,UAAAA,IAAI,GAAG4X,MAAM,CAAC+U,MAAP,CAAc3sB,IAAd,CAAP;EACD;;EACD,YAAIyE,IAAI,GAAG,MAAMzE,IAAN,GAAa,GAAxB;EACAyE,QAAAA,IAAI,GAAGoC,MAAM,CAACpC,IAAD,EAAO,EAAP,CAAb;EACA,YAAI1E,GAAG,GAAG6X,MAAM,CAACqa,IAAP,CAAY,MAAZ,IAAsBxtB,IAAtB,GAA6B,MAA7B,GAAsC4tB,SAAS,CAAC1tB,IAAD,CAAzD;EACAuC,QAAAA,OAAO,CAACD,GAAR,CAAYlH,GAAZ;EACD,OAbD;EAcD,KAhBD;EAiBAmH,IAAAA,OAAO,CAACD,GAAR,CAAY,EAAZ;EACA,WAAOoE,GAAP;EACD,GArBD;;EAsBAknB,EAAAA,cAAA,GAAiBD,KAAjB;;;;ECvEA,MAAME,YAAY,GAAG;EAAExyB,IAAAA,IAAI,EAAE,IAAR;EAAcgD,IAAAA,IAAI,EAAE,IAApB;EAA0BsG,IAAAA,KAAK,EAAE;EAAEtJ,MAAAA,IAAI,EAAE,IAAR;EAAc2E,MAAAA,IAAI,EAAE,IAApB;EAA0BwB,MAAAA,UAAU,EAAE,IAAtC;EAA4ChC,MAAAA,QAAQ,EAAE;EAAtD;EAAjC,GAArB;;;EAGAssB,EAAAA,YAAA,GAAe,YAAuB;EAAA;;EAAA,QAAd3qB,OAAc,uEAAJ,EAAI;;EAEpC,QAAI2sB,QAAQ,GAAG,KAAf;;EACA,QAAI,KAAK/mB,OAAL,GAAerL,MAAf,KAA0B,CAA9B,EAAiC;EAC/BoyB,MAAAA,QAAQ,GAAG,IAAX;EACD;;EACD,WAAO,KAAKjnB,IAAL,CAAUnB,MAAV,CAAiB,UAACtK,GAAD,EAAMuB,CAAN,EAASrB,CAAT,EAAe;EACrC,UAAMyyB,OAAO,GAAG,CAACD,QAAD,IAAaxyB,CAAC,KAAK,CAAnC;EACA,UAAM0yB,QAAQ,GAAG,CAACF,QAAD,IAAaxyB,CAAC,KAAK,KAAI,CAACuL,IAAL,CAAUnL,MAAV,GAAmB,CAAvD;EACA,aAAON,GAAG,GAAGuB,CAAC,CAACtB,IAAF,CAAO8F,OAAP,EAAgB4sB,OAAhB,EAAyBC,QAAzB,CAAb;EACD,KAJM,EAIJ,EAJI,CAAP;EAKD,GAXD;;;;EAcAlC,EAAAA,YAAA,GAAe,YAAuB;EAAA,QAAd3qB,OAAc,uEAAJ,EAAI;;;EAEpC,QAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;EAC/B,aAAO,KAAK0F,IAAL,CAAU1F,OAAV,EAAmB2E,IAAnB,CAAwB+nB,YAAxB,CAAP;EACD;;EACD1sB,IAAAA,OAAO,GAAG5D,MAAM,CAACsE,MAAP,CAAc,EAAd,EAAkBgsB,YAAlB,EAAgC1sB,OAAhC,CAAV;EACA,WAAO,KAAK0F,IAAL,CAAU5B,GAAV,CAAc,UAAAtI,CAAC,EAAI;EACxB,aAAOA,CAAC,CAACmJ,IAAF,CAAO3E,OAAP,CAAP;EACD,KAFM,CAAP;EAGD,GATD;;;;EAYA2qB,EAAAA,aAAA,GAAgB,YAAW;EACzB6B,IAAAA,MAAK,CAAC,IAAD,CAAL;EACA,WAAO,IAAP;EACD,GAHD;;;;EAMA7B,EAAAA,WAAA,GAAc,UAAS7rB,MAAT,EAAiB;EAC7B,QAAIA,MAAM,KAAK,MAAf,EAAuB;EACrB,aAAO,KAAK5E,IAAL,EAAP;EACD;;EACD,QAAI4E,MAAM,KAAK,QAAf,EAAyB;EACvB,aAAO,KAAK5E,IAAL,CAAU,QAAV,CAAP;EACD;;EACD,QAAI4E,MAAM,KAAK,MAAf,EAAuB;EACrB,aAAO,KAAK6F,IAAL,EAAP;EACD;;EACD,QAAI7F,MAAM,KAAK,OAAf,EAAwB;EACtB,aAAO,KAAK6F,IAAL,CAAU;EAAEzK,QAAAA,IAAI,EAAE,IAAR;EAAcsJ,QAAAA,KAAK,EAAE;EAArB,OAAV,EAAwCM,GAAxC,CAA4C,UAAAb,GAAG;EAAA,eAAIA,GAAG,CAAC/I,IAAR;EAAA,OAA/C,CAAP;EACD;;EACD,QAAI4E,MAAM,KAAK,OAAf,EAAwB;EACtB,UAAI4G,IAAI,GAAG,EAAX;EACA,WAAKf,IAAL,CAAU;EAAEzK,QAAAA,IAAI,EAAE,KAAR;EAAesJ,QAAAA,KAAK,EAAE;EAAEtJ,UAAAA,IAAI,EAAE;EAAR;EAAtB,OAAV,EAAkDoC,OAAlD,CAA0D,UAAA2G,GAAG,EAAI;EAC/D,YAAIO,KAAK,GAAGP,GAAG,CAACO,KAAJ,CAAUM,GAAV,CAAc,UAAAlI,CAAC;EAAA,iBAAIA,CAAC,CAAC1B,IAAN;EAAA,SAAf,CAAZ;EACAsJ,QAAAA,KAAK,GAAGA,KAAK,CAACU,MAAN,CAAa,UAAAtI,CAAC;EAAA,iBAAIA,CAAJ;EAAA,SAAd,CAAR;EACA8J,QAAAA,IAAI,GAAGA,IAAI,CAAC2C,MAAL,CAAY7E,KAAZ,CAAP;EACD,OAJD;EAKA,aAAOkC,IAAP;EACD;;EACD,QAAI5G,MAAM,KAAK,OAAf,EAAwB;EACtB0tB,MAAAA,MAAK,CAAC,IAAD,CAAL;EACA,aAAO,IAAP;EACD;;EACD,WAAO,KAAKtyB,IAAL,EAAP;EACD,GA3BD;;;EA8BAywB,EAAAA,YAAA,GAAeA,OAAO,CAAChmB,IAAvB;;;;;;;;;EChEA;EACAgmB,EAAAA,eAAA,GAAkB,UAAS1wB,GAAT,EAAc;EAAA;;EAC9B,QAAI,CAACA,GAAL,EAAU;EACR,aAAO,IAAP;EACD,KAH6B;;;EAK9B,SAAKyL,IAAL,CAAUpJ,OAAV,CAAkB,UAAAd,CAAC,EAAI;;EAErB,UAAIiK,MAAM,GAAG0lB,YAAQ,CAAC/e,QAAT,CAAkBnS,GAAlB,EAAuB,KAAI,CAAC4D,KAA5B,EAAmC,KAAI,CAAC4F,IAAL,EAAnC,EAAgD,CAAhD,CAAb,CAFqB;;;EAIrB,UAAI2nB,MAAM,GAAG,KAAI,CAACrnB,SAAL,CAAe,CAAC0B,MAAD,CAAf,CAAb;;EACA2lB,MAAAA,MAAM,CAACC,MAAP,GALqB;;EAOrB7vB,MAAAA,CAAC,CAAC8K,OAAF,CAAUb,MAAV,EAAkB,KAAlB;EACD,KARD;EASA,WAAO,IAAP;EACD,GAfD;;EAgBAklB,EAAAA,oBAAA,GAAuBA,OAAO,CAACrkB,OAA/B;;;EAGAqkB,EAAAA,cAAA,GAAiB,UAAS1wB,GAAT,EAAc;EAAA;;EAC7B,QAAI,CAACA,GAAL,EAAU;EACR,aAAO,IAAP;EACD,KAH4B;;;EAK7B,SAAKyL,IAAL,CAAUpJ,OAAV,CAAkB,UAAAd,CAAC,EAAI;;EAErB,UAAIiK,MAAM,GAAG0lB,YAAQ,CAAC/e,QAAT,CAAkBnS,GAAlB,EAAuB,MAAI,CAAC4D,KAA5B,EAAmC,MAAI,CAAC4F,IAAL,EAAnC,EAAgD,CAAhD,CAAb,CAFqB;;;EAIrB,UAAI2nB,MAAM,GAAG,MAAI,CAACrnB,SAAL,CAAe,CAAC0B,MAAD,CAAf,CAAb;;EACA2lB,MAAAA,MAAM,CAACC,MAAP,GALqB;;EAOrB7vB,MAAAA,CAAC,CAAC6K,MAAF,CAASZ,MAAT,EAAiB,MAAjB;EACD,KARD;EASA,WAAO,IAAP;EACD,GAfD;;EAgBAklB,EAAAA,mBAAA,GAAsBA,OAAO,CAACtkB,MAA9B;EACAskB,EAAAA,gBAAA,GAAmBA,OAAO,CAACtkB,MAA3B;;;EAGAskB,EAAAA,cAAA,GAAiB,YAAW;EAC1B,QAAIjlB,IAAI,GAAG,KAAKA,IAAL,CAAUkB,KAAV,CAAgB,CAAhB,CAAX,CAD0B;;EAG1B,SAAK,IAAIzM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2yB,SAAS,CAACvyB,MAA9B,EAAsCJ,CAAC,EAAvC,EAA2C;EACzC,UAAI4yB,GAAG,GAAGD,SAAS,CAAC3yB,CAAD,CAAnB,CADyC;;EAGzC,UAAI,OAAO4yB,GAAP,KAAe,QAAnB,EAA6B;EAC3B,YAAI1rB,GAAG,GAAG8pB,YAAQ,CAAC/e,QAAT,CAAkB2gB,GAAlB,EAAuB,KAAKlvB,KAA5B,CAAV,CAD2B;;EAG3B6H,QAAAA,IAAI,GAAGA,IAAI,CAAC2C,MAAL,CAAYhH,GAAZ,CAAP;EACD,OAJD,MAIO,IAAI0rB,GAAG,CAAC9qB,GAAJ,KAAY,KAAhB,EAAuB;EAC5ByD,QAAAA,IAAI,GAAGA,IAAI,CAAC2C,MAAL,CAAY0kB,GAAG,CAACrnB,IAAhB,CAAP;EACD,OAFM,MAEA,IAAIqnB,GAAG,CAAC9qB,GAAJ,KAAY,QAAhB,EAA0B;EAC/ByD,QAAAA,IAAI,CAAC9B,IAAL,CAAUmpB,GAAV;EACD;EACF;;EACD,WAAO,KAAKhpB,SAAL,CAAe2B,IAAf,CAAP;EACD,GAjBD;;;;;;;;;;;;;;;EC1CA,IAAMsnB,OAAO,GAAG,mEAAhB;EACA,IAAMC,MAAM,GAAG,eAAf;;;;;;;;;;;;;;;;;;;EAoBA,IAAMC,QAAQ,GAAG,EAAjB;;;EAEA,aAAiB,GAAG,kBAAA,GAAuB;EAAA,MAAdltB,OAAc,uEAAJ,EAAI;EACzCA,EAAAA,OAAO,GAAG5D,MAAM,CAACsE,MAAP,CAAc,EAAd,EAAkBwsB,QAAlB,EAA4BltB,OAA5B,CAAV;EACA,MAAImtB,OAAO,GAAG,KAAKznB,IAAL,CAAU5B,GAAV,CAAc,UAAA0F,EAAE;EAAA,WAAIA,EAAE,CAAChG,KAAH,EAAJ;EAAA,GAAhB,CAAd,CAFyC;;EAIzC,MAAIxD,OAAO,CAACK,UAAZ,EAAwB;EACtB8sB,IAAAA,OAAO,CAAC7wB,OAAR,CAAgB,UAACkH,KAAD,EAAQjI,CAAR,EAAc;EAC5BiI,MAAAA,KAAK,CAAClH,OAAN,CAAc,UAACV,CAAD,EAAIzB,CAAJ,EAAU;EACtByB,QAAAA,CAAC,CAAC4B,GAAF,GAAQ5B,CAAC,CAAC4B,GAAF,CAAMJ,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAR;EACAxB,QAAAA,CAAC,CAAC6B,IAAF,GAAS7B,CAAC,CAAC6B,IAAF,CAAOL,OAAP,CAAe,KAAf,EAAsB,EAAtB,CAAT,CAFsB;;EAItB,YAAIoG,KAAK,CAACjJ,MAAN,GAAe,CAAf,KAAqBJ,CAArB,IAA0B,CAACgzB,OAAO,CAAC5xB,CAAC,GAAG,CAAL,CAAtC,EAA+C;EAC7C;EACD;;EACDK,QAAAA,CAAC,CAAC6B,IAAF,IAAU,GAAV;EACD,OARD;EASD,KAVD;EAWD;;EAED,MAAI2vB,QAAQ,GAAG,KAAKA,QAAL,EAAf,CAlByC;;EAoBzC,MAAIptB,OAAO,CAACQ,WAAZ,EAAyB;EACvB4sB,IAAAA,QAAQ,CAAC9wB,OAAT,CAAiB,UAAAV,CAAC,EAAI;EACpBA,MAAAA,CAAC,CAAC6B,IAAF,GAAS7B,CAAC,CAAC6B,IAAF,CAAOL,OAAP,CAAe4vB,OAAf,EAAwB,EAAxB,CAAT;EACApxB,MAAAA,CAAC,CAAC4B,GAAF,GAAQ5B,CAAC,CAAC4B,GAAF,CAAMJ,OAAN,CAAc4vB,OAAd,EAAuB,EAAvB,CAAR;EACD,KAHD;EAID,GAzBwC;;;EA2BzC,MAAIhtB,OAAO,CAAC7D,OAAZ,EAAqB;EACnBixB,IAAAA,QAAQ,CAAC9wB,OAAT,CAAiB,UAAAV,CAAC,EAAI;EACpBA,MAAAA,CAAC,CAAC1B,IAAF,GAASqC,SAAW,CAACX,CAAC,CAAC1B,IAAH,CAApB;EACD,KAFD;EAGD,GA/BwC;;;EAiCzC,MAAI8F,OAAO,CAACqtB,WAAZ,EAAyB;EACvB,SAAKA,WAAL,GAAmBC,MAAnB;EACD,GAnCwC;;;EAqCzC,MAAIttB,OAAO,CAACutB,WAAR,IAAuBvtB,OAAO,CAACwtB,YAAnC,EAAiD;EAC/C,SAAKA,YAAL,GAAoBC,MAApB;EACD,GAvCwC;;;EAyCzC,MAAIztB,OAAO,CAAC0tB,UAAR,IAAsB1tB,OAAO,CAAC2tB,WAAlC,EAA+C;EAC7C,SAAKA,WAAL,GAAmBC,KAAnB;EACD,GA3CwC;;;EA6CzC,MAAI5tB,OAAO,CAAC6tB,UAAR,IAAsB7tB,OAAO,CAACitB,MAAlC,EAA0C;EACxCG,IAAAA,QAAQ,CAAC9wB,OAAT,CAAiB,UAAAV,CAAC,EAAI;EACpBA,MAAAA,CAAC,CAAC6B,IAAF,GAAS7B,CAAC,CAAC6B,IAAF,CAAOL,OAAP,CAAe6vB,MAAf,EAAuB,EAAvB,CAAT;EACArxB,MAAAA,CAAC,CAAC4B,GAAF,GAAQ5B,CAAC,CAAC4B,GAAF,CAAMJ,OAAN,CAAc6vB,MAAd,EAAsB,EAAtB,CAAR;EACD,KAHD;EAID;;EACD,SAAO,IAAP;EACD,CApDD;;;;;;ECvBA,aAAc,GAAG7wB,MAAM,CAACsE,MAAP,CACf,EADe,EAEfC,MAFe,EAGfC,UAHe,EAIfC,aAJe,EAKfC,OALe,EAMfgoB,QANe,EAOfgF,UAPe,EAQfC,OARe,EASfC,QATe,EAUfC,MAVe,EAWfC,QAXe,EAYfC,YAZe,CAAjB;;;ECEA;EACAxD,EAAAA,aAAA,GAAgB,UAASnsB,GAAT,EAAc;;EAE5B,QAAIuI,IAAI,GAAGqnB,QAAW,CAAC5vB,GAAD,CAAtB;;EACA,QAAIuI,IAAI,CAACxM,MAAL,KAAgB,CAApB,EAAuB;EACrB,aAAO,KAAKwJ,SAAL,CAAe,EAAf,CAAP;EACD,KAL2B;;;EAO5B,QAAIsF,OAAO,GAAG,KAAK3D,IAAL,CAAUnB,MAAV,CAAiB,UAAClD,GAAD,EAAM7F,CAAN,EAAY;EACzC,aAAO6F,GAAG,CAACgH,MAAJ,CAAW7M,CAAC,CAACiL,KAAF,CAAQM,IAAR,CAAX,CAAP;EACD,KAFa,EAEX,EAFW,CAAd;EAGA,WAAO,KAAKhD,SAAL,CAAesF,OAAf,CAAP;EACD,GAXD;;;;EAcAshB,EAAAA,WAAA,GAAc,UAASnsB,GAAT,EAAc;;EAE1B,QAAIuI,IAAI,GAAGqnB,QAAW,CAAC5vB,GAAD,CAAtB,CAF0B;;EAI1B,QAAIuI,IAAI,CAACxM,MAAL,KAAgB,CAApB,EAAuB;EACrB,aAAO,IAAP;EACD,KANyB;;;EAQ1B,QAAI8O,OAAO,GAAG,KAAK3D,IAAL,CAAUnB,MAAV,CAAiB,UAAClD,GAAD,EAAM7F,CAAN,EAAY;EACzC,aAAO6F,GAAG,CAACgH,MAAJ,CAAW7M,CAAC,CAAC6yB,GAAF,CAAMtnB,IAAN,CAAX,CAAP;EACD,KAFa,EAEX,EAFW,CAAd;EAGA,WAAO,KAAKhD,SAAL,CAAesF,OAAf,CAAP;EACD,GAZD;;;;EAeAshB,EAAAA,gBAAA,GAAmB,UAASnsB,GAAT,EAAc;EAC/B,QAAIuI,IAAI,GAAGqnB,QAAW,CAAC5vB,GAAD,CAAtB;;EACA,SAAK,IAAIrE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKuL,IAAL,CAAUnL,MAA9B,EAAsCJ,CAAC,EAAvC,EAA2C;EACzC,UAAIsM,MAAK,GAAG,KAAKf,IAAL,CAAUvL,CAAV,EAAasM,KAAb,CAAmBM,IAAnB,CAAZ;;EACA,aAAO,KAAKhD,SAAL,CAAe0C,MAAf,CAAP;EACD;;EACD,WAAO,KAAK1C,SAAL,CAAe,EAAf,CAAP;EACD,GAPD;;;;;;EAYA4mB,EAAAA,aAAA,GAAgB,UAASnsB,GAAT,EAAc;EAC5B,QAAIuI,IAAI,GAAGqnB,QAAW,CAAC5vB,GAAD,CAAtB;EACA,QAAI6K,OAAO,GAAG,EAAd;EACA,SAAK3D,IAAL,CAAUpJ,OAAV,CAAkB,UAAAd,CAAC,EAAI;EACrB,UAAI8yB,QAAQ,GAAG9yB,CAAC,CAACiL,KAAF,CAAQM,IAAR,CAAf,CADqB;;EAGrB,UAAIunB,QAAQ,CAAC/zB,MAAT,KAAoB,CAAxB,EAA2B;EACzB8O,QAAAA,OAAO,CAACzF,IAAR,CAAapI,CAAb;EACD;;EACD8yB,MAAAA,QAAQ,CAAChyB,OAAT,CAAiB,UAAAoB,KAAK,EAAI;;EAExB,YAAI4C,IAAI,GAAG+I,OAAO,CAACklB,GAAR,MAAiB/yB,CAA5B;EACA,YAAIkO,OAAO,GAAGpJ,IAAI,CAACkuB,OAAL,CAAa9wB,KAAb,CAAd,CAHwB;;EAIxB,YAAIgM,OAAO,CAACvJ,MAAZ,EAAoB;EAClBkJ,UAAAA,OAAO,CAACzF,IAAR,CAAa8F,OAAO,CAACvJ,MAArB;EACD;;EACD,YAAIuJ,OAAO,CAACjD,KAAZ,EAAmB;EACjB4C,UAAAA,OAAO,CAACzF,IAAR,CAAa8F,OAAO,CAACjD,KAArB;EACD;;EACD,YAAIiD,OAAO,CAACtJ,KAAZ,EAAmB;EACjBiJ,UAAAA,OAAO,CAACzF,IAAR,CAAa8F,OAAO,CAACtJ,KAArB;EACD;EACF,OAbD;EAcD,KApBD;EAqBA,WAAO,KAAK2D,SAAL,CAAesF,OAAf,CAAP;EACD,GAzBD;;;;;;EA8BAshB,EAAAA,kBAAA,GAAqB,UAASnsB,GAAT,EAAc;EACjC,QAAIuI,IAAI,GAAGqnB,QAAW,CAAC5vB,GAAD,CAAtB;EACA,QAAI6K,OAAO,GAAG,EAAd;EACA,SAAK3D,IAAL,CAAUpJ,OAAV,CAAkB,UAAAd,CAAC,EAAI;EACrB,UAAI8yB,QAAQ,GAAG9yB,CAAC,CAACiL,KAAF,CAAQM,IAAR,CAAf,CADqB;;EAGrB,UAAIunB,QAAQ,CAAC/zB,MAAT,KAAoB,CAAxB,EAA2B;EACzB8O,QAAAA,OAAO,CAACzF,IAAR,CAAapI,CAAb;EACD;;EACD8yB,MAAAA,QAAQ,CAAChyB,OAAT,CAAiB,UAAAoB,KAAK,EAAI;;EAExB,YAAI4C,IAAI,GAAG+I,OAAO,CAACklB,GAAR,MAAiB/yB,CAA5B;EACA,YAAIkO,OAAO,GAAGpJ,IAAI,CAACkuB,OAAL,CAAa9wB,KAAb,CAAd,CAHwB;;;EAKxB,YAAIgM,OAAO,CAACvJ,MAAR,IAAkBuJ,OAAO,CAACjD,KAA9B,EAAqC;EACnCiD,UAAAA,OAAO,CAACvJ,MAAR,CAAe5F,MAAf,IAAyBmP,OAAO,CAACjD,KAAR,CAAclM,MAAvC;EACA8O,UAAAA,OAAO,CAACzF,IAAR,CAAa8F,OAAO,CAACvJ,MAArB;EACD,SAHD,MAGO,IAAIuJ,OAAO,CAACjD,KAAZ,EAAmB;EACxB4C,UAAAA,OAAO,CAACzF,IAAR,CAAa8F,OAAO,CAACjD,KAArB;EACD,SAVuB;;;EAYxB,YAAIiD,OAAO,CAACtJ,KAAZ,EAAmB;EACjBiJ,UAAAA,OAAO,CAACzF,IAAR,CAAa8F,OAAO,CAACtJ,KAArB;EACD;EACF,OAfD;EAgBD,KAtBD;EAuBA,WAAO,KAAK2D,SAAL,CAAesF,OAAf,CAAP;EACD,GA3BD;;;;EA8BAshB,EAAAA,mBAAA,GAAsB,UAASnsB,GAAT,EAAc;EAClC,QAAIuI,IAAI,GAAGqnB,QAAW,CAAC5vB,GAAD,CAAtB;EACA,QAAI6K,OAAO,GAAG,EAAd;EACA,SAAK3D,IAAL,CAAUpJ,OAAV,CAAkB,UAAAd,CAAC,EAAI;EACrB,UAAI8yB,QAAQ,GAAG9yB,CAAC,CAACiL,KAAF,CAAQM,IAAR,CAAf,CADqB;;EAGrB,UAAIunB,QAAQ,CAAC/zB,MAAT,KAAoB,CAAxB,EAA2B;EACzB8O,QAAAA,OAAO,CAACzF,IAAR,CAAapI,CAAb;EACD;;EACD8yB,MAAAA,QAAQ,CAAChyB,OAAT,CAAiB,UAAAoB,KAAK,EAAI;;EAExB,YAAI4C,IAAI,GAAG+I,OAAO,CAACklB,GAAR,MAAiB/yB,CAA5B;EACA,YAAIkO,OAAO,GAAGpJ,IAAI,CAACkuB,OAAL,CAAa9wB,KAAb,CAAd,CAHwB;;;EAKxB,YAAIgM,OAAO,CAACvJ,MAAZ,EAAoB;EAClBkJ,UAAAA,OAAO,CAACzF,IAAR,CAAa8F,OAAO,CAACvJ,MAArB;EACD,SAPuB;;;EASxB,YAAIuJ,OAAO,CAACjD,KAAR,IAAiBiD,OAAO,CAACtJ,KAA7B,EAAoC;EAClCsJ,UAAAA,OAAO,CAACjD,KAAR,CAAclM,MAAd,IAAwBmP,OAAO,CAACtJ,KAAR,CAAc7F,MAAtC;EACA8O,UAAAA,OAAO,CAACzF,IAAR,CAAa8F,OAAO,CAACjD,KAArB;EACD,SAHD,MAGO,IAAIiD,OAAO,CAACjD,KAAZ,EAAmB;EACxB4C,UAAAA,OAAO,CAACzF,IAAR,CAAa8F,OAAO,CAACjD,KAArB;EACD;EACF,OAfD;EAgBD,KAtBD;EAuBA,WAAO,KAAK1C,SAAL,CAAesF,OAAf,CAAP;EACD,GA3BD;;;;EA8BAshB,EAAAA,WAAA,GAAc,UAASnsB,GAAT,EAAc;EAC1B,QAAIuI,IAAI,GAAGqnB,QAAW,CAAC5vB,GAAD,CAAtB;EACA,WAAO,KAAKkH,IAAL,CAAU5F,IAAV,CAAe,UAAAtE,CAAC;EAAA,aAAIA,CAAC,CAACizB,GAAF,CAAM1nB,IAAN,MAAgB,IAApB;EAAA,KAAhB,CAAP;EACD,GAHD;;;;EAMA4jB,EAAAA,aAAA,GAAa,UAASnsB,GAAT,EAAc;EACzB,QAAIuI,IAAI,GAAGqnB,QAAW,CAAC5vB,GAAD,CAAtB;EACA,QAAId,KAAK,GAAG,KAAKgI,IAAL,CAAUxB,MAAV,CAAiB,UAAA1I,CAAC;EAAA,aAAIA,CAAC,CAACiL,KAAF,CAAQM,IAAR,EAAcxM,MAAd,GAAuB,CAA3B;EAAA,KAAlB,CAAZ;EACA,WAAO,KAAKwJ,SAAL,CAAerG,KAAf,CAAP;EACD,GAJD;;;;EAOAitB,EAAAA,YAAA,GAAe,UAASnsB,GAAT,EAAc;EAC3B,QAAIuI,IAAI,GAAGqnB,QAAW,CAAC5vB,GAAD,CAAtB;EACA,QAAId,KAAK,GAAG,KAAKgI,IAAL,CAAUxB,MAAV,CAAiB,UAAA1I,CAAC;EAAA,aAAIA,CAAC,CAACiL,KAAF,CAAQM,IAAR,EAAcxM,MAAd,KAAyB,CAA7B;EAAA,KAAlB,CAAZ;EACA,WAAO,KAAKwJ,SAAL,CAAerG,KAAf,CAAP;EACD,GAJD;;;;EAOAitB,EAAAA,aAAA,GAAgB,UAAS5sB,GAAT,EAAc;EAC5B,QAAI,CAACA,GAAL,EAAU;EACR,aAAO,IAAP;EACD;;EACD,QAAIF,KAAK,GAAG,KAAKA,KAAjB;EACA,QAAIwL,OAAO,GAAG,KAAK3D,IAAL,CAAUnB,MAAV,CAAiB,UAAClD,GAAD,EAAM7F,CAAN,EAAY;EACzC,aAAO6F,GAAG,CAACgH,MAAJ,CAAW7M,CAAC,CAACoH,KAAF,CAAQ7E,GAAR,EAAaF,KAAb,CAAX,CAAP;EACD,KAFa,EAEX,EAFW,CAAd;EAGA,WAAO,KAAKkG,SAAL,CAAesF,OAAf,CAAP;EACD,GATD;;;;EAYAshB,EAAAA,cAAA,GAAiB,UAASnsB,GAAT,EAAc;EAC7B,QAAIuI,IAAI,GAAGqnB,QAAW,CAAC5vB,GAAD,CAAtB,CAD6B;;EAG7B,QAAI8N,OAAO,GAAG,WAAQvF,IAAR,EAAcrB,IAA5B;EACA,QAAIgpB,OAAO,GAAGpiB,OAAO,CAACxI,GAAR,CAAY,UAAAtI,CAAC,EAAI;EAC7B,UAAImzB,GAAG,GAAGnzB,CAAC,CAACgI,KAAF,GAAUM,GAAV,CAAc,UAAAlI,CAAC;EAAA,eAAIA,CAAC,CAAC6C,EAAN;EAAA,OAAf,CAAV,CAD6B;;EAG7B,UAAIpD,CAAC,GAAGG,CAAC,CAACiL,KAAF,CAAQM,IAAR,EAAc,CAAd,CAAR;EACA,UAAIL,KAAK,GAAGioB,GAAG,CAAC/lB,OAAJ,CAAYvN,CAAC,CAACsI,KAAd,CAAZ,CAJ6B;;EAM7B,UAAI+C,KAAK,KAAK,CAAV,IAAeA,KAAK,KAAK,CAAC,CAA9B,EAAiC;EAC/B,eAAO,IAAP;EACD;;EACD,aAAOlL,CAAC,CAACuI,SAAF,CAAYvI,CAAC,CAACmI,KAAd,EAAqB+C,KAArB,CAAP;EACD,KAVa,CAAd;EAWAgoB,IAAAA,OAAO,GAAGA,OAAO,CAACxqB,MAAR,CAAe,UAAA1I,CAAC;EAAA,aAAIA,CAAC,KAAK,IAAV;EAAA,KAAhB,CAAV;EACA,WAAO,KAAKuI,SAAL,CAAe2qB,OAAf,CAAP;EACD,GAjBD;;;;EAoBA/D,EAAAA,aAAA,GAAgB,UAASnsB,GAAT,EAAc;EAC5B,QAAIuI,IAAI,GAAGqnB,QAAW,CAAC5vB,GAAD,CAAtB,CAD4B;;EAG5B,QAAI8N,OAAO,GAAG,WAAQvF,IAAR,EAAcrB,IAA5B;EACA,QAAIgpB,OAAO,GAAGpiB,OAAO,CAACxI,GAAR,CAAY,UAAAtI,CAAC,EAAI;EAC7B,UAAIgI,KAAK,GAAGhI,CAAC,CAACgI,KAAF,EAAZ;EACA,UAAImrB,GAAG,GAAGnrB,KAAK,CAACM,GAAN,CAAU,UAAAlI,CAAC;EAAA,eAAIA,CAAC,CAAC6C,EAAN;EAAA,OAAX,CAAV,CAF6B;;EAI7B,UAAIpD,CAAC,GAAGG,CAAC,CAACiL,KAAF,CAAQM,IAAR,EAAc,CAAd,CAAR;EACA,UAAIL,KAAK,GAAGioB,GAAG,CAAC/lB,OAAJ,CAAYvN,CAAC,CAACsI,KAAd,CAAZ,CAL6B;;EAO7B,UAAI+C,KAAK,KAAK,CAAC,CAAX,IAAgB,CAAClD,KAAK,CAACkD,KAAK,GAAGrL,CAAC,CAACd,MAAX,CAA1B,EAA8C;EAC5C,eAAO,IAAP;EACD,OAT4B;;;EAW7B,UAAIkE,EAAE,GAAG+E,KAAK,CAACkD,KAAK,GAAGrL,CAAC,CAACd,MAAX,CAAL,CAAwBkE,EAAjC;EACA,UAAI+G,GAAG,GAAGhK,CAAC,CAACjB,MAAF,GAAWmM,KAAX,GAAmBrL,CAAC,CAACd,MAA/B;EACA,aAAOiB,CAAC,CAACuI,SAAF,CAAYtF,EAAZ,EAAgB+G,GAAhB,CAAP;EACD,KAda,CAAd;EAeAkpB,IAAAA,OAAO,GAAGA,OAAO,CAACxqB,MAAR,CAAe,UAAA1I,CAAC;EAAA,aAAIA,CAAC,KAAK,IAAV;EAAA,KAAhB,CAAV;EACA,WAAO,KAAKuI,SAAL,CAAe2qB,OAAf,CAAP;EACD,GArBD;;;EAwBA/D,EAAAA,eAAA,GAAkBA,OAAO,CAAC5wB,KAA1B;;;;;;;;;;;;;;;;EClNA;;;EAGA4wB,EAAAA,aAAA,GAAgB,UAASrvB,CAAT,EAAY;EAC1B,QAAII,CAAC,GAAG,KAAK+K,KAAL,CAAW,GAAX,CAAR;;EACA,QAAI,OAAOnL,CAAP,KAAa,QAAjB,EAA2B;EACzBI,MAAAA,CAAC,GAAGA,CAAC,CAACgI,GAAF,CAAMpI,CAAN,CAAJ;EACD;;EACD,WAAOI,CAAP;EACD,GAND;;EAOAivB,EAAAA,aAAA,GAAgBA,OAAO,CAACnnB,KAAxB;;;EAGAmnB,EAAAA,eAAA,GAAkB,UAASrvB,CAAT,EAAY;EAC5B,QAAII,CAAC,GAAG,KAAKkzB,UAAL,CAAgB,YAAhB,CAAR;;EACA,QAAI,OAAOtzB,CAAP,KAAa,QAAjB,EAA2B;EACzBI,MAAAA,CAAC,GAAGA,CAAC,CAACgI,GAAF,CAAMpI,CAAN,CAAJ;EACD;;EACD,WAAOI,CAAP;EACD,GAND;;;;EAQAivB,EAAAA,gBAAA,GAAmB,UAASrvB,CAAT,EAAY;EAC7B,QAAII,CAAC,GAAG,KAAK+K,KAAL,CAAW,UAAX,EAAuBjD,KAAvB,EAAR;;EACA,QAAI,OAAOlI,CAAP,KAAa,QAAjB,EAA2B;EACzBI,MAAAA,CAAC,GAAGA,CAAC,CAACgI,GAAF,CAAMpI,CAAN,CAAJ;EACD;;EACD,WAAOI,CAAP;EACD,GAND;;;;EAQAivB,EAAAA,qBAAA,GAAwB,UAASrvB,CAAT,EAAY;EAClC,QAAII,CAAC,GAAG,KAAKkzB,UAAL,CAAgB,QAAhB,CAAR;EACAlzB,IAAAA,CAAC,GAAGA,CAAC,CAAC+K,KAAF,CAAQ,gBAAR,CAAJ;;EACA,QAAI,OAAOnL,CAAP,KAAa,QAAjB,EAA2B;EACzBI,MAAAA,CAAC,GAAGA,CAAC,CAACgI,GAAF,CAAMpI,CAAN,CAAJ;EACD;;EACD,WAAOI,CAAP;EACD,GAPD;;;;EASAivB,EAAAA,oBAAA,GAAuB,UAASrvB,CAAT,EAAY;EACjC,QAAII,CAAC,GAAG,KAAKkzB,UAAL,CAAgB,QAAhB,CAAR;EACAlzB,IAAAA,CAAC,GAAGA,CAAC,CAAC+K,KAAF,CAAQ,eAAR,CAAJ;;EACA,QAAI,OAAOnL,CAAP,KAAa,QAAjB,EAA2B;EACzBI,MAAAA,CAAC,GAAGA,CAAC,CAACgI,GAAF,CAAMpI,CAAN,CAAJ;EACD;;EACD,WAAOI,CAAP;EACD,GAPD;;;;EASAivB,EAAAA,cAAA,GAAiB,UAASrvB,CAAT,EAAY;EAC3B,QAAII,CAAC,GAAG,KAAKkzB,UAAL,CAAgB,QAAhB,CAAR;EACAlzB,IAAAA,CAAC,GAAGA,CAAC,CAAC+K,KAAF,CAAQ,SAAR,CAAJ;;EACA,QAAI,OAAOnL,CAAP,KAAa,QAAjB,EAA2B;EACzBI,MAAAA,CAAC,GAAGA,CAAC,CAACgI,GAAF,CAAMpI,CAAN,CAAJ;EACD;;EACD,WAAOI,CAAP;EACD,GAPD;;;;EAUAivB,EAAAA,YAAA,GAAe,UAASrvB,CAAT,EAAY;EACzB,QAAII,CAAC,GAAG,KAAK+K,KAAL,CAAW,MAAX,CAAR;;EACA,QAAI,OAAOnL,CAAP,KAAa,QAAjB,EAA2B;EACzBI,MAAAA,CAAC,GAAGA,CAAC,CAACgI,GAAF,CAAMpI,CAAN,CAAJ;EACD;;EACD,WAAOI,CAAP;EACD,GAND;;;;EAQAivB,EAAAA,mBAAA,GAAsB,UAASrvB,CAAT,EAAY;EAChC,QAAII,CAAC,GAAG,KAAK+K,KAAL,CAAW,eAAX,CAAR,CADgC;;EAGhC/K,IAAAA,CAAC,GAAGA,CAAC,CAACkzB,UAAF,CAAa,aAAb,CAAJ;;EACA,QAAI,OAAOtzB,CAAP,KAAa,QAAjB,EAA2B;EACzBI,MAAAA,CAAC,GAAGA,CAAC,CAACgI,GAAF,CAAMpI,CAAN,CAAJ;EACD;;EACD,WAAOI,CAAP;EACD,GARD;;;;EAWAivB,EAAAA,iBAAA,GAAoB,UAASplB,GAAT,EAAc;EAChC,WAAOA,GAAG,CAAC8F,SAAJ,GAAgBwjB,UAAhB,EAAP;EACD,GAFD;;;;EAKAlE,EAAAA,kBAAA,GAAqB,UAASplB,GAAT,EAAc;EACjC,WAAOA,GAAG,CAAC8F,SAAJ,GAAgByjB,WAAhB,EAAP;EACD,GAFD;;;;EAIAnE,EAAAA,oBAAA,GAAuB,UAASplB,GAAT,EAAc;EACnC,WAAOA,GAAG,CAAC8F,SAAJ,GAAgB0jB,aAAhB,EAAP;EACD,GAFD;;;;;;;;;;;;;;;ECnFA,cAAc,GAAG3yB,MAAM,CAACsE,MAAP,CAAc,EAAd,EAAkBsuB,MAAlB,CAAjB;;ECFA;EACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAASzrB,KAAT,EAAgB5H,CAAhB,EAAmBiC,KAAnB,EAA0B;EAC5C,MAAIgW,GAAG,GAAGhW,KAAK,CAACkW,OAAhB,CAD4C;;EAG5C,MAAI/I,GAAG,GAAGxH,KAAK,CAAC5H,CAAD,CAAL,CAASoB,KAAT,GAAiB,GAAjB,GAAuBwG,KAAK,CAAC5H,CAAC,GAAG,CAAL,CAAL,CAAaoB,KAA9C;;EACA,MAAI6W,GAAG,CAAC7I,GAAD,CAAH,KAAapM,SAAb,IAA0BiV,GAAG,CAAC7R,cAAJ,CAAmBgJ,GAAnB,MAA4B,IAA1D,EAAgE;EAC9DxH,IAAAA,KAAK,CAAC5H,CAAD,CAAL,CAASmC,GAAT,CAAa8V,GAAG,CAAC7I,GAAD,CAAhB,EAAuB,aAAvB,EAAsCnN,KAAtC;EACA2F,IAAAA,KAAK,CAAC5H,CAAC,GAAG,CAAL,CAAL,CAAamC,GAAb,CAAiB8V,GAAG,CAAC7I,GAAD,CAApB,EAA2B,aAA3B,EAA0CnN,KAA1C;EACA,WAAO,CAAP;EACD,GAR2C;;;EAU5C,MAAIjC,CAAC,GAAG,CAAJ,GAAQ4H,KAAK,CAACjJ,MAAlB,EAA0B;EACxByQ,IAAAA,GAAG,IAAI,MAAMxH,KAAK,CAAC5H,CAAC,GAAG,CAAL,CAAL,CAAaoB,KAA1B;;EACA,QAAI6W,GAAG,CAAC7I,GAAD,CAAH,KAAapM,SAAb,IAA0BiV,GAAG,CAAC7R,cAAJ,CAAmBgJ,GAAnB,MAA4B,IAA1D,EAAgE;EAC9DxH,MAAAA,KAAK,CAAC5H,CAAD,CAAL,CAASmC,GAAT,CAAa8V,GAAG,CAAC7I,GAAD,CAAhB,EAAuB,eAAvB,EAAwCnN,KAAxC;EACA2F,MAAAA,KAAK,CAAC5H,CAAC,GAAG,CAAL,CAAL,CAAamC,GAAb,CAAiB8V,GAAG,CAAC7I,GAAD,CAApB,EAA2B,eAA3B,EAA4CnN,KAA5C;EACA2F,MAAAA,KAAK,CAAC5H,CAAC,GAAG,CAAL,CAAL,CAAamC,GAAb,CAAiB8V,GAAG,CAAC7I,GAAD,CAApB,EAA2B,eAA3B,EAA4CnN,KAA5C;EACA,aAAO,CAAP;EACD;EACF;;EACD,SAAO,CAAP;EACD,CApBD;;;;EAuBA,IAAMqxB,YAAY,GAAG,SAAfA,YAAe,CAAS1rB,KAAT,EAAgB3F,KAAhB,EAAuB;EAC1C,MAAIgW,GAAG,GAAGhW,KAAK,CAACkW,OAAhB;EACA,MAAIG,WAAW,GAAGrW,KAAK,CAACqW,WAAxB,CAF0C;;EAI1C,OAAK,IAAItY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4H,KAAK,CAACjJ,MAA1B,EAAkCqB,CAAC,IAAI,CAAvC,EAA0C;EACxC,QAAI3B,GAAG,GAAGuJ,KAAK,CAAC5H,CAAD,CAAL,CAASoB,KAAnB,CADwC;;EAGxC,QAAIkX,WAAW,CAACja,GAAD,CAAX,KAAqB,IAArB,IAA6B2B,CAAC,GAAG,CAAJ,GAAQ4H,KAAK,CAACjJ,MAA/C,EAAuD;EACrD,UAAI40B,UAAU,GAAGF,WAAW,CAACzrB,KAAD,EAAQ5H,CAAR,EAAWiC,KAAX,CAA5B;;EACA,UAAIsxB,UAAU,GAAG,CAAjB,EAAoB;EAClBvzB,QAAAA,CAAC,IAAIuzB,UAAL,CADkB;;EAElB;EACD;EACF,KATuC;;;EAWxC,QAAItb,GAAG,CAAC5Z,GAAD,CAAH,KAAa2E,SAAb,IAA0BiV,GAAG,CAAC7R,cAAJ,CAAmB/H,GAAnB,MAA4B,IAA1D,EAAgE;EAC9DuJ,MAAAA,KAAK,CAAC5H,CAAD,CAAL,CAASmC,GAAT,CAAa8V,GAAG,CAAC5Z,GAAD,CAAhB,EAAuB,SAAvB,EAAkC4D,KAAlC;EACD;EACF;;EACD,SAAO2F,KAAP;EACD,CApBD;;EAqBA,cAAc,GAAG0rB,YAAjB;;EC7CA,IAAME,WAAW,GAAG,aAApB;;EAGA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAS7rB,KAAT,EAAgBrJ,CAAhB,EAAmB0D,KAAnB,EAA0B;EACjD,MAAI0E,IAAI,GAAGiB,KAAK,CAACrJ,CAAD,CAAhB,CADiD;;EAIjD,MAAIoI,IAAI,CAAC9E,IAAL,CAAUmL,OAAV,CAAkB,GAAlB,MAA2B,CAAC,CAA5B,IAAiCpF,KAAK,CAACrJ,CAAC,GAAG,CAAL,CAAtC,IAAiDqJ,KAAK,CAACrJ,CAAC,GAAG,CAAL,CAAL,CAAaqD,GAAb,KAAqB,EAA1E,EAA8E;EAC5E+E,IAAAA,IAAI,CAACxE,GAAL,CAAS,YAAT,EAAuB,YAAvB,EAAqCF,KAArC;EACD,GANgD;;;EASjD,MAAIuxB,WAAW,CAACtyB,IAAZ,CAAiByF,IAAI,CAAC9E,IAAtB,KAA+B,CAAC2xB,WAAW,CAACtyB,IAAZ,CAAiByF,IAAI,CAAC/E,GAAtB,CAApC,EAAgE;EAC9D,QAAI8xB,OAAO,GAAG/sB,IAAI,CAACvF,KAAL,CAAWuF,IAAI,CAACvF,KAAL,CAAWzC,MAAX,GAAoB,CAA/B,CAAd,CAD8D;;EAG9D,QAAI+0B,OAAO,KAAK,GAAhB,EAAqB;EACnB/sB,MAAAA,IAAI,CAACxE,GAAL,CAAS,CAAC,YAAD,EAAe,MAAf,CAAT,EAAiC,UAAjC,EAA6CF,KAA7C;EACA;EACD,KAN6D;;;EAQ9D,QAAIyxB,OAAO,KAAK,GAAhB,EAAqB;EACnB/sB,MAAAA,IAAI,CAACxE,GAAL,CAAS,CAAC,QAAD,CAAT,EAAqB,SAArB,EAAgCF,KAAhC;EACD;EACF,GApBgD;;;EAsBjD,MAAI0E,IAAI,CAAC1F,SAAL,EAAJ,EAAsB;EACpB0F,IAAAA,IAAI,CAACxE,GAAL,CAAS,SAAT,EAAoB,cAApB,EAAoCF,KAApC;EACA0E,IAAAA,IAAI,CAACxE,GAAL,CAAS,MAAT,EAAiB,eAAjB,EAAkCF,KAAlC;EACD;EACF,CA1BD;;EA2BA,oBAAc,GAAGwxB,gBAAjB;;EC9BA;;EAEA,WAAc,GAAG;EAEf,CAAC,qBAAD,EAAwB,aAAxB,CAFe;EAGf,CAAC,kCAAD,EAAqC,aAArC,CAHe;;EAMf,CAAC,mCAAD,EAAsC,CAAC,OAAD,EAAU,OAAV,CAAtC,CANe;EAOf,CAAC,mDAAD,EAAsD,CAAC,OAAD,EAAU,OAAV,CAAtD,CAPe;;EAUf,CAAC,uBAAD,EAA0B,OAA1B,CAVe;EAWf,CAAC,+BAAD,EAAkC,SAAlC,CAXe,EAYf,CAAC,WAAD,EAAc,WAAd,CAZe,EAaf,CAAC,qCAAD,EAAwC,KAAxC,CAbe;EAcf,CAAC,iEAAD,EAAoE,KAApE,CAde;;EAiBf,CAAC,yCAAD,EAA4C,MAA5C,CAjBe;EAkBf,CAAC,oDAAD,EAAuD,MAAvD,CAlBe;EAmBf,CAAC,oDAAD,EAAuD,MAAvD,CAnBe;EAoBf,CAAC,YAAD,EAAe,MAAf,CApBe;EAqBf,CAAC,qBAAD,EAAwB,MAAxB,CArBe;EAsBf,CAAC,wBAAD,EAA2B,MAA3B,CAtBe;EAuBf,CAAC,oCAAD,EAAuC,MAAvC,CAvBe;EAwBf,CAAC,sCAAD,EAAyC,MAAzC,CAxBe;;EA2Bf,CAAC,WAAD,EAAc,UAAd,CA3Be;EA4Bf,CAAC,eAAD,EAAkB,UAAlB,CA5Be;EA6Bf,CAAC,eAAD,EAAkB,UAAlB,CA7Be;;EAgCf,CAAC,cAAD,EAAiB,YAAjB,CAhCe;EAiCf,CAAC,qCAAD,EAAwC,MAAxC,CAjCe,EAkCf,CAAC,2BAAD,EAA8B,CAAC,UAAD,EAAa,cAAb,CAA9B,CAlCe,EAmCf,CAAC,wBAAD,EAA2B,WAA3B,CAnCe,EAoCf,CAAC,sCAAD,EAAyC,MAAzC,CApCe;;EAuCf,CAAC,iCAAD,EAAoC,CAAC,UAAD,EAAa,cAAb,CAApC,CAvCe;EAwCf,CAAC,yBAAD,EAA4B,CAAC,UAAD,EAAa,cAAb,CAA5B,CAxCe;EAyCf,CAAC,4DAAD,EAA+D,aAA/D,CAzCe;EA0Cf,CAAC,6CAAD,EAAgD,YAAhD,CA1Ce;EA2Cf,CAAC,wBAAD,EAA2B,CAAC,SAAD,EAAY,UAAZ,EAAwB,cAAxB,CAA3B,CA3Ce;EA4Cf,CAAC,0BAAD,EAA6B,UAA7B,CA5Ce;EA6Cf,CAAC,8BAAD,EAAiC,CAAC,OAAD,EAAU,aAAV,CAAjC,CA7Ce;EA8Cf,CAAC,iCAAD,EAAoC,CAAC,cAAD,EAAiB,SAAjB,CAApC,CA9Ce;EA+Cf,CAAC,UAAD,EAAa,CAAC,UAAD,EAAa,cAAb,CAAb,CA/Ce;EAgDf,CAAC,uBAAD,EAA0B,SAA1B,CAhDe;EAiDf,CAAC,sBAAD,EAAyB,OAAzB,CAjDe;EAAA,CAAjB;;ECAA,IAAME,YAAY,GAAG,iBAArB;EACA,IAAMC,aAAa,GAAG,0DAAtB;;;EAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAASltB,IAAT,EAAe1E,KAAf,EAAsB;EACvC,MAAI5D,GAAG,GAAGsI,IAAI,CAACrI,IAAf,CADuC;;EAGvC,OAAK,IAAIwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqD,OAAK,CAACxE,MAA1B,EAAkCmB,CAAC,IAAI,CAAvC,EAA0C;EACxC,QAAIqD,OAAK,CAACrD,CAAD,CAAL,CAAS,CAAT,EAAYoB,IAAZ,CAAiB7C,GAAjB,MAA0B,IAA9B,EAAoC;EAClCsI,MAAAA,IAAI,CAACmtB,OAAL,CAAa3wB,OAAK,CAACrD,CAAD,CAAL,CAAS,CAAT,CAAb,EAA0B,YAAYA,CAAtC,EAAyCmC,KAAzC;EACA;EACD;EACF,GARsC;;;;EAWvC,MAAI0E,IAAI,CAACrI,IAAL,CAAUK,MAAV,IAAoB,CAApB,IAAyBg1B,YAAY,CAACzyB,IAAb,CAAkB7C,GAAlB,CAAzB,IAAmDu1B,aAAa,CAAC1yB,IAAd,CAAmB7C,GAAnB,CAAvD,EAAgF;EAC9EsI,IAAAA,IAAI,CAACxE,GAAL,CAAS,cAAT,EAAyB,MAAzB,EAAiCF,KAAjC;EACD;EACF,CAdD;;EAeA,YAAc,GAAG4xB,UAAjB;;ECrBA;;;EAGA,IAAME,GAAG,GAAG,WAAZ;EACA,IAAMC,GAAG,GAAG,YAAZ;EACA,IAAMC,IAAI,GAAG,cAAb;EACA,IAAMC,IAAI,GAAG,UAAb;EACA,IAAMC,IAAI,GAAG,WAAb;EACA,IAAMzf,MAAM,GAAG,QAAf;EACA,IAAM0f,GAAG,GAAG,YAAZ;EACA,IAAMliB,KAAK,GAAG,OAAd;EACA,IAAMK,IAAI,GAAG,MAAb;EACA,IAAM1B,IAAI,GAAG,MAAb;EACA,IAAMwjB,IAAI,GAAG,UAAb;;;EAIA,SAAc,GAAG;EACfx1B,EAAAA,CAAC,EAAE,CACD,CAAC,aAAD,EAAgBgS,IAAhB,CADC,EAED,CAAC,iBAAD,EAAoBwjB,IAApB,CAFC;EAGD,GAAC,eAAD,EAAkBH,IAAlB,CAHC,EAID,CAAC,aAAD,EAAgBE,GAAhB,CAJC;EAAA,GADY;EAOfr1B,EAAAA,CAAC,EAAE,CAAC,CAAC,cAAD,EAAiBg1B,GAAjB,CAAD,CAPY;EAQf/0B,EAAAA,CAAC,EAAE,CACD,CAAC,WAAD,EAAc+0B,GAAd,CADC,EAED,CAAC,WAAD,EAAcA,GAAd,CAFC,EAGD,CAAC,iBAAD,EAAoBI,IAApB,CAHC,EAID,CAAC,cAAD,EAAiBA,IAAjB,CAJC,EAKD,CAAC,eAAD,EAAkBA,IAAlB,CALC;EAMD,GAAC,cAAD,EAAiBD,IAAjB,CANC,EAOD,CAAC,oBAAD,EAAuBH,GAAvB,CAPC,EAQD,CAAC,eAAD,EAAkBI,IAAlB,CARC;EASD,GAAC,yBAAD,EAA4BA,IAA5B,CATC;EAUD,GAAC,WAAD,EAAcJ,GAAd,CAVC,CARY;EAoBf90B,EAAAA,CAAC,EAAE,CACD,CAAC,YAAD,EAAe+0B,GAAf,CADC,EAED,CAAC,eAAD,EAAkBA,GAAlB,CAFC,EAGD,CAAC,aAAD,EAAgBA,GAAhB,CAHC,EAID,CAAC,mBAAD,EAAsBD,GAAtB,CAJC,EAKD,CAAC,iBAAD,EAAoBA,GAApB,CALC,EAMD,CAAC,WAAD,EAAcA,GAAd,CANC,CApBY;EA4Bf30B,EAAAA,CAAC,EAAE,CACD,CAAC,gBAAD,EAAmB20B,GAAnB,CADC,EAED,CAAC,WAAD,EAAcM,IAAd,CAFC;EAGD,GAAC,SAAD,EAAYD,GAAZ,CAHC;EAID,GAAC,aAAD,EAAgBA,GAAhB,CAJC;EAAA,GA5BY;EAkCf71B,EAAAA,CAAC,EAAE,CACD,CAAC,iBAAD,EAAoB81B,IAApB,CADC;EAAA,GAlCY;EAqCf90B,EAAAA,CAAC,EAAE,CACD,CAAC,QAAD,EAAW60B,GAAX,CADC;EAAA,GArCY;EAwCf50B,EAAAA,CAAC,EAAE,CAAC,CAAC,WAAD,EAAcu0B,GAAd,CAAD,EAAqB,CAAC,eAAD,EAAkBA,GAAlB,CAArB,EAA6C,CAAC,eAAD,EAAkBA,GAAlB,CAA7C,EAAqE,CAAC,kBAAD,EAAqBA,GAArB,CAArE,CAxCY;EAyCft0B,EAAAA,CAAC,EAAE,CACD,CAAC,eAAD,EAAkBy0B,IAAlB,CADC,EAED,CAAC,cAAD,EAAiBA,IAAjB,CAFC,EAGD,CAAC,UAAD,EAAaE,GAAb,CAHC;EAID,GAAC,cAAD,EAAiB,MAAjB,CAJC,CAzCY;EA+Cf10B,EAAAA,CAAC,EAAE,CAAC,CAAC,eAAD,EAAkBq0B,GAAlB,CAAD,EAAyB,CAAC,gBAAD,EAAmB7hB,KAAnB,CAAzB,CA/CY;EAgDfvS,EAAAA,CAAC,EAAE,CACD,CAAC,OAAD,EAAUy0B,GAAV,CADC;EAED,GAAC,SAAD,EAAYA,GAAZ,CAFC;EAGD,GAAC,aAAD,EAAgBA,GAAhB,CAHC;EAAA,GAhDY;EAqDft0B,EAAAA,CAAC,EAAE,CAAC,CAAC,WAAD,EAAc,aAAd,CAAD,EAA+B,CAAC,iBAAD,EAAoBo0B,IAApB,CAA/B,EAA0D,CAAC,UAAD,EAAaF,GAAb,CAA1D,EAA6E,CAAC,oBAAD,EAAuB9hB,KAAvB,CAA7E,CArDY;EAsDflS,EAAAA,CAAC,EAAE,CAAC,CAAC,WAAD,EAAc,aAAd,CAAD,EAA+B,CAAC,iBAAD,EAAoB+zB,GAApB,CAA/B,EAAyD,CAAC,eAAD,EAAkBA,GAAlB,CAAzD,EAAiF,CAAC,WAAD,EAAcxhB,IAAd,CAAjF,CAtDY;EAuDfxS,EAAAA,CAAC,EAAE,CACD,CAAC,aAAD,EAAgBk0B,IAAhB,CADC,EAED,CAAC,WAAD,EAAc1hB,IAAd,CAFC,EAGD,CAAC,aAAD,EAAgB2hB,IAAhB,CAHC,EAID,CAAC,oBAAD,EAAuBA,IAAvB,CAJC,EAKD,CAAC,WAAD,EAAcrjB,IAAd,CALC,EAMD,CAAC,QAAD,EAAWujB,GAAX,CANC;EAAA,GAvDY;EA+Dfl0B,EAAAA,CAAC,EAAE,CACD,CAAC,uBAAD,EAA0Bm0B,IAA1B,CADC;EAAA,GA/DY;EAkEfh0B,EAAAA,CAAC,EAAE,CACD,CAAC,WAAD,EAAc0zB,GAAd,CADC,EAED,CAAC,UAAD,EAAaA,GAAb,CAFC,EAGD,CAAC,SAAD,EAAYA,GAAZ,CAHC,EAID,CAAC,YAAD,EAAeA,GAAf,CAJC,EAKD,CAAC,UAAD,EAAaG,IAAb,CALC,EAMD,CAAC,eAAD,EAAkBxf,MAAlB,CANC,EAOD,CAAC,SAAD,EAAYA,MAAZ,CAPC,EAQD,CAAC,cAAD,EAAiBqf,GAAjB,CARC,EASD,CAAC,gBAAD,EAAmBA,GAAnB,CATC,EAUD,CAAC,aAAD,EAAgBA,GAAhB,CAVC,EAWD,CAAC,YAAD,EAAeA,GAAf,CAXC,EAYD,CAAC,eAAD,EAAkBG,IAAlB,CAZC;EAlEY,CAAjB;;ECjBA;EACA,IAAMH,KAAG,GAAG,WAAZ;EACA,IAAMC,KAAG,GAAG,YAAZ;EACA,IAAMC,MAAI,GAAG,cAAb;EACA,IAAMC,MAAI,GAAG,UAAb;EACA,IAAMC,MAAI,GAAG,WAAb;EACA,IAAMG,GAAG,GAAG,QAAZ;EACA,IAAMC,IAAI,GAAG,QAAb;EACA,IAAMriB,OAAK,GAAG,OAAd;EACA,IAAMsiB,EAAE,GAAG,MAAX;EACA,IAAM3jB,MAAI,GAAG,MAAb;EACA,IAAMwjB,MAAI,GAAG,UAAb;EACA,IAAMrhB,KAAK,GAAG,OAAd;;EAGA,cAAc,GAAG,CACf,IADe;EAEf,IAFe;EAGf;;EAEEyhB,EAAAA,EAAE,EAAEP,MAFN;EAGEQ,EAAAA,EAAE,EAAE7jB,MAHN;EAIE8jB,EAAAA,EAAE,EAAEZ,KAJN;EAKEa,EAAAA,EAAE,EAAEN,GALN;EAME,QAAME,EANR;EAOE,QAAMA;EAPR,CAHe,EAYf;;EAEEK,EAAAA,GAAG,EAAEd,KAFP;EAGEe,EAAAA,GAAG,EAAEf,KAHP;EAIEgB,EAAAA,GAAG,EAAEhB,KAJP;EAKEiB,EAAAA,GAAG,EAAEjB,KALP;EAMEkB,EAAAA,GAAG,EAAElB,KANP;EAOEmB,EAAAA,GAAG,EAAEnB,KAPP;EAQEoB,EAAAA,GAAG,EAAEpB,KARP;EASEqB,EAAAA,GAAG,EAAErB,KATP;EAUEsB,EAAAA,GAAG,EAAEtB,KAVP;EAWE9oB,EAAAA,GAAG,EAAEupB,EAXP;EAYEc,EAAAA,GAAG,EAAEpB,MAZP;EAaEqB,EAAAA,GAAG,EAAErB,MAbP;EAcEsB,EAAAA,GAAG,EAAExB,KAdP;EAeEyB,EAAAA,GAAG,EAAEzB,KAfP;EAgBE0B,EAAAA,GAAG,EAAEzB,MAhBP;EAiBE0B,EAAAA,GAAG,EAAE1B,MAjBP;EAkBE2B,EAAAA,GAAG,EAAE,QAlBP;;EAmBE,SAAOtB,GAnBT;EAoBE,SAAOthB,KApBT;EAqBE,SAAO;EArBT,CAZe,EAmCf;;EAEE6iB,EAAAA,IAAI,EAAE,OAFR;EAGEC,EAAAA,IAAI,EAAEjlB,MAHR;EAIEklB,EAAAA,IAAI,EAAE5B,MAJR;EAKE6B,EAAAA,IAAI,EAAE7B,MALR;EAME8B,EAAAA,IAAI,EAAEzB,EANR;EAOE0B,EAAAA,IAAI,EAAEjC,MAPR;EAQEkC,EAAAA,IAAI,EAAElC,MARR;EASEmC,EAAAA,IAAI,EAAEnC,MATR;EAUEoC,EAAAA,IAAI,EAAElC,MAVR;EAWEmC,EAAAA,IAAI,EAAEtC,KAXR;EAYEuC,EAAAA,IAAI,EAAEvC,KAZR;EAaEwC,EAAAA,IAAI,EAAExC,KAbR;EAcEyC,EAAAA,IAAI,EAAEvC,MAdR;EAeEwC,EAAAA,IAAI,EAAExC,MAfR;EAgBEyC,EAAAA,IAAI,EAAExC,MAhBR;EAiBEyC,EAAAA,IAAI,EAAE1C,MAjBR;EAkBEhwB,EAAAA,IAAI,EAAE6vB,KAlBR;EAmBE8C,EAAAA,IAAI,EAAE9C,KAnBR;EAoBE+C,EAAAA,IAAI,EAAE/C,KApBR;EAqBEgD,EAAAA,IAAI,EAAEhD,KArBR;EAsBEiD,EAAAA,IAAI,EAAEjD,KAtBR;EAuBEkD,EAAAA,IAAI,EAAE3C,GAvBR;EAwBE4C,EAAAA,IAAI,EAAE5C,GAxBR;EAyBE6C,EAAAA,IAAI,EAAE5C,IAzBR;EA0BE6C,EAAAA,IAAI,EAAE7C,IA1BR;EA2BE8C,EAAAA,IAAI,EAAE9C,IA3BR;EA4BE+C,EAAAA,IAAI,EAAEnD,MA5BR;EA6BEoD,EAAAA,IAAI,EAAEpD,MA7BR;EA8BEqD,EAAAA,IAAI,EAAExkB,KA9BR;EA+BEykB,EAAAA,IAAI,EAAEvlB,OA/BR;EAgCEwlB,EAAAA,IAAI,EAAErD,MAhCR;;EAiCEsD,EAAAA,IAAI,EAAEtD,MAjCR;;EAkCEuD,EAAAA,IAAI,EAAEvD,MAlCR;;EAmCEwD,EAAAA,IAAI,EAAExD,MAnCR;;EAoCEyD,EAAAA,IAAI,EAAEzD,MApCR;;EAqCE0D,EAAAA,IAAI,EAAE1D,MArCR;;EAAA,CAnCe,EA0Ef;;EAEE2D,EAAAA,KAAK,EAAE1D,GAFT;EAGE2D,EAAAA,KAAK,EAAE3D,GAHT;EAIE4D,EAAAA,KAAK,EAAE5D,GAJT;EAKE6D,EAAAA,KAAK,EAAEhE,MALT;EAMEiE,EAAAA,KAAK,EAAEjE,MANT;EAOEkE,EAAAA,KAAK,EAAElE,MAPT;EAQEmE,EAAAA,KAAK,EAAE/D,IART;EASEgE,EAAAA,KAAK,EAAEhE,IATT;EAUEiE,EAAAA,KAAK,EAAEjE,IAVT;EAWEkE,EAAAA,KAAK,EAAElE,IAXT;EAYEmE,EAAAA,KAAK,EAAEnE,IAZT;EAaEoE,EAAAA,KAAK,EAAE5E,KAbT;EAcE6E,EAAAA,KAAK,EAAE7E,KAdT;EAeE8E,EAAAA,KAAK,EAAE,SAfT;EAgBEC,EAAAA,KAAK,EAAE7E,MAhBT;EAiBE8E,EAAAA,KAAK,EAAE9E,MAjBT;EAkBE+E,EAAAA,KAAK,EAAE3E,MAlBT;;EAmBE4E,EAAAA,KAAK,EAAE5E,MAnBT;;EAAA,CA1Ee,EA+Ff;;EAEE6E,EAAAA,MAAM,EAAEhnB,OAFV;EAGEinB,EAAAA,MAAM,EAAEjnB,OAHV;EAIEknB,EAAAA,MAAM,EAAE/E,MAJV;;EAKEgF,EAAAA,MAAM,EAAE;EALV,CA/Fe,EAsGf;;EAEEC,EAAAA,OAAO,EAAEjF,MAFX;;EAGEkF,EAAAA,OAAO,EAAElF,MAHX;;EAAA,CAtGe,CAAjB;;ECZA,IAAMmF,aAAa,GAAG,SAAhBA,aAAgB,CAAS7yB,IAAT,EAAe1E,KAAf,EAAsB;EAC1C,MAAI5D,GAAG,GAAGsI,IAAI,CAACvF,KAAf;EACA,MAAIq4B,KAAI,GAAGp7B,GAAG,CAACA,GAAG,CAACM,MAAJ,GAAa,CAAd,CAAd;;EACA,MAAI+6B,KAAO,CAACtzB,cAAR,CAAuBqzB,KAAvB,MAAiC,IAArC,EAA2C;EACzC,QAAItuB,IAAI,GAAGuuB,KAAO,CAACD,KAAD,CAAlB;;EACA,SAAK,IAAI35B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqL,IAAI,CAACxM,MAAzB,EAAiCmB,CAAC,IAAI,CAAtC,EAAyC;EACvC,UAAIqL,IAAI,CAACrL,CAAD,CAAJ,CAAQ,CAAR,EAAWoB,IAAX,CAAgB7C,GAAhB,MAAyB,IAA7B,EAAmC;EACjCsI,QAAAA,IAAI,CAACmtB,OAAL,CAAa3oB,IAAI,CAACrL,CAAD,CAAJ,CAAQ,CAAR,CAAb,qBAAqC25B,KAArC,eAA8C35B,CAA9C,GAAmDmC,KAAnD;EACA;EACD;EACF;EACF;EACF,CAZD;;;EAeA,IAAM03B,aAAa,GAAG,SAAhBA,aAAgB,CAAShzB,IAAT,EAAe1E,KAAf,EAAsB;EAC1C,MAAM2H,GAAG,GAAGjD,IAAI,CAACvF,KAAL,CAAWzC,MAAvB;EACA,MAAIi7B,GAAG,GAAG,CAAV;;EACA,MAAIhwB,GAAG,IAAIgwB,GAAX,EAAgB;EACdA,IAAAA,GAAG,GAAGhwB,GAAG,GAAG,CAAZ;EACD;;EACD,OAAK,IAAIrL,CAAC,GAAGq7B,GAAb,EAAkBr7B,CAAC,GAAG,CAAtB,EAAyBA,CAAC,IAAI,CAA9B,EAAiC;EAC/B,QAAIF,GAAG,GAAGsI,IAAI,CAACvF,KAAL,CAAWyE,MAAX,CAAkB+D,GAAG,GAAGrL,CAAxB,EAA2BqL,GAA3B,CAAV;;EACA,QAAIiwB,UAAU,CAACx7B,GAAG,CAACM,MAAL,CAAV,CAAuByH,cAAvB,CAAsC/H,GAAtC,MAA+C,IAAnD,EAAyD;EACvD,UAAI8D,GAAG,GAAG03B,UAAU,CAACx7B,GAAG,CAACM,MAAL,CAAV,CAAuBN,GAAvB,CAAV;EACAsI,MAAAA,IAAI,CAACmtB,OAAL,CAAa3xB,GAAb,EAAkB,aAAa9D,GAA/B,EAAoC4D,KAApC;EACA;EACD;EACF;EACF,CAdD;;;EAiBA,IAAM4xB,YAAU,GAAG,SAAbA,UAAa,CAASltB,IAAT,EAAe1E,KAAf,EAAsB;EACvCu3B,EAAAA,aAAa,CAAC7yB,IAAD,EAAO1E,KAAP,CAAb;EACA03B,EAAAA,aAAa,CAAChzB,IAAD,EAAO1E,KAAP,CAAb;EACD,CAHD;;EAIA,eAAc,GAAG4xB,YAAjB;;ECvCA;;EAEA,WAAc,GAAG,wgHAAjB;;ECFA;;;EAGA,QAAc,GAAG;EACf,QAAM,IADS;EAEf,QAAM,IAFS;EAGf,QAAM,IAHS;EAIf,QAAM,IAJS;EAKf,QAAM,IALS;EAMf,QAAM,IANS;EAOf,QAAM,IAPS;EAQf,QAAM,IARS;EASf,SAAO,IATQ;EAUf,QAAM,IAVS;EAWf,QAAM,IAXS;EAYf,QAAM,IAZS;EAaf,SAAO,IAbQ;EAcf,SAAO,IAdQ;EAef,SAAO,IAfQ;EAgBf,SAAO,IAhBQ;EAiBf,SAAO,IAjBQ;EAkBf,SAAO,IAlBQ;EAmBf,SAAO,IAnBQ;EAoBf,SAAO,IApBQ;EAqBf,UAAQ,IArBO;EAsBf,SAAO,IAtBQ;EAuBf,SAAO,IAvBQ;EAwBf,SAAO,IAxBQ;EAyBf,SAAO,IAzBQ;EA0Bf,SAAO,IA1BQ;EA2Bf,SAAO,IA3BQ;EA4Bf,SAAO,IA5BQ;EA6Bf,SAAO,IA7BQ;EA8Bf,SAAO,IA9BQ;EA+Bf,SAAO,IA/BQ;EAgCf,SAAO,IAhCQ;EAiCf,UAAQ,IAjCO;EAkCf,SAAO,IAlCQ;EAmCf,SAAO,IAnCQ;EAoCf,SAAO,IApCQ;EAqCf,QAAM,IArCS;EAsCf,QAAM,IAtCS;EAuCf,QAAM,IAvCS;EAwCf,QAAM,IAxCS;EAyCf,SAAO,IAzCQ;EA0Cf,SAAO,IA1CQ;EA2Cf,SAAO,IA3CQ;EA4Cf,SAAO,IA5CQ;EA6Cf,SAAO,IA7CQ;EA8Cf,SAAO,IA9CQ;EA+Cf,SAAO,IA/CQ;EAgDf,SAAO,IAhDQ;EAiDf,QAAM,IAjDS;EAkDf,SAAO,IAlDQ;EAmDf,UAAQ;EAnDO,CAAjB;;;;;;;;ECMA,IAAMiG,YAAY,GAAG,SAAfA,YAAe,CAAA95B,CAAC,EAAI;EACxB,MAAIA,CAAC,CAACsH,GAAF,CAAM1B,MAAN,CAAa,CAAb,MAAoB,GAAxB,EAA6B;;EAE3B,QAAI5F,CAAC,CAACsH,GAAF,CAAMuD,KAAN,CAAY,MAAZ,MAAwB,IAA5B,EAAkC;EAChC,aAAO,KAAP;EACD,KAJ0B;;;EAM3B,QAAI7K,CAAC,CAACsH,GAAF,CAAMuD,KAAN,CAAY,GAAZ,CAAJ,EAAsB;EACpB,aAAO,KAAP;EACD,KAR0B;;;EAU3B,QAAI7K,CAAC,CAACsH,GAAF,CAAM3I,MAAN,GAAe,EAAnB,EAAuB;EACrB,aAAO,KAAP;EACD;;EACD,WAAO,IAAP;EACD;;EACD,SAAO,KAAP;EACD,CAjBD;;;EAoBA,IAAMo7B,UAAU,GAAG,SAAbA,UAAa,CAAA/5B,CAAC,EAAI;EACtB,MAAI3B,GAAG,GAAG2B,CAAC,CAACsH,GAAF,CAAM9F,OAAN,CAAc,OAAd,EAAuB,GAAvB,CAAV,CADsB;;EAEtB,SAAOw4B,IAAQ,CAAC5zB,cAAT,CAAwB/H,GAAxB,CAAP;EACD,CAHD;;;EAMA,IAAM47B,QAAQ,GAAG,SAAXA,QAAW,CAACtzB,IAAD,EAAO1E,KAAP,EAAiB;;EAEhC,MAAI63B,YAAY,CAACnzB,IAAD,CAAZ,KAAuB,IAA3B,EAAiC;EAC/BA,IAAAA,IAAI,CAACxE,GAAL,CAAS,OAAT,EAAkB,aAAlB,EAAiCF,KAAjC;EACA0E,IAAAA,IAAI,CAACrI,IAAL,GAAYqI,IAAI,CAACW,GAAjB;EACAX,IAAAA,IAAI,CAAC/E,GAAL,GAAW+E,IAAI,CAAC/E,GAAL,CAASJ,OAAT,CAAiB,GAAjB,EAAsB,EAAtB,CAAX;EACAmF,IAAAA,IAAI,CAAC9E,IAAL,GAAY8E,IAAI,CAAC9E,IAAL,CAAUL,OAAV,CAAkB,GAAlB,EAAuB,EAAvB,CAAZ;EACD,GAP+B;;;EAShC,MAAImF,IAAI,CAACrI,IAAL,CAAUuM,KAAV,CAAgBqvB,OAAhB,CAAJ,EAA+B;EAC7BvzB,IAAAA,IAAI,CAACxE,GAAL,CAAS,OAAT,EAAkB,eAAlB,EAAmCF,KAAnC;EACA0E,IAAAA,IAAI,CAACrI,IAAL,GAAYqI,IAAI,CAACW,GAAjB;EACD,GAZ+B;;;EAchC,MAAIyyB,UAAU,CAACpzB,IAAD,CAAV,KAAqB,IAAzB,EAA+B;EAC7BA,IAAAA,IAAI,CAACxE,GAAL,CAAS,OAAT,EAAkB,gBAAlB,EAAoCF,KAApC;EACA0E,IAAAA,IAAI,CAACrI,IAAL,GAAYqI,IAAI,CAACW,GAAjB;EACD;EACF,CAlBD;;EAmBA,YAAc,GAAG2yB,QAAjB;;ECtDA,IAAME,KAAK,GAAG;EACZhiB,EAAAA,OAAO,EAAEpT,UADG;EAEZH,EAAAA,WAAW,EAAEI,gBAFD;EAGZ7B,EAAAA,KAAK,EAAE8B,QAHK;EAIZ4nB,EAAAA,MAAM,EAAE3nB,WAJI;EAKZk1B,EAAAA,KAAK,EAAElN;EALK,CAAd;;EASA,IAAMmN,OAAO,GAAG,SAAVA,OAAU,CAAS1wB,GAAT,EAAc;EAC5B,MAAI/B,KAAK,GAAG+B,GAAG,CAAC6nB,QAAJ,EAAZ;EACA,MAAIvvB,KAAK,GAAG0H,GAAG,CAAC1H,KAAhB,CAF4B;;EAI5Bk4B,EAAAA,KAAK,CAAChiB,OAAN,CAAcvQ,KAAd,EAAqB3F,KAArB,EAJ4B;;EAO5B,OAAK,IAAI1D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqJ,KAAK,CAACjJ,MAA1B,EAAkCJ,CAAC,IAAI,CAAvC,EAA0C;EACxC,QAAIoI,IAAI,GAAGiB,KAAK,CAACrJ,CAAD,CAAhB,CADwC;;EAGxC47B,IAAAA,KAAK,CAACv1B,WAAN,CAAkBgD,KAAlB,EAAyBrJ,CAAzB,EAA4B0D,KAA5B,EAHwC;;EAKxCk4B,IAAAA,KAAK,CAACh3B,KAAN,CAAYwD,IAAZ,EAAkB1E,KAAlB,EALwC;;EAOxCk4B,IAAAA,KAAK,CAACtN,MAAN,CAAalmB,IAAb,EAAmB1E,KAAnB,EAPwC;;EASxCk4B,IAAAA,KAAK,CAACC,KAAN,CAAYzzB,IAAZ,EAAkB1E,KAAlB;EACD;;EACD,SAAO0H,GAAP;EACD,CAnBD;;EAoBA,WAAc,GAAG0wB,OAAjB;;EC7BA;;;;EAKA,IAAIC,aAAa,GAAG;EAClB/7B,EAAAA,CAAC,EAAE,MADe;;EAElBwO,EAAAA,KAAK,EAAE,MAFW;;EAGlBwtB,EAAAA,EAAE,EAAE,MAHc;;EAIlBC,EAAAA,KAAK,EAAE,MAJW;;EAKlB/H,EAAAA,GAAG,EAAE,MALa;;EAMlBgI,EAAAA,OAAO,EAAE,MANS;;EAOlB,QAAI,MAPc;;EAQlBC,EAAAA,GAAG,EAAE,MARa;;EASlBC,EAAAA,GAAG,EAAE,MATa;;EAUlB,UAAM,MAVY;;EAWlBC,EAAAA,GAAG,EAAE,MAXa;;EAYlBC,EAAAA,IAAI,EAAE,MAZY;;EAalBC,EAAAA,GAAG,EAAE,MAba;;EAclBC,EAAAA,IAAI,EAAE,WAdY;;EAelBC,EAAAA,GAAG,EAAE,MAfa;;EAgBlBC,EAAAA,KAAK,EAAE,MAhBW;;EAiBlB12B,EAAAA,MAAM,EAAE,MAjBU;;EAAA,CAApB;;EAqBA,IAAI22B,cAAc,GAAG;EACnBV,EAAAA,KAAK,EAAE,MADY;;EAEnBW,EAAAA,EAAE,EAAE,MAFe;;EAGnBxf,EAAAA,GAAG,EAAE,WAHc;;EAInByf,EAAAA,IAAI,EAAE,MAJa;;EAKnBC,EAAAA,GAAG,EAAE,MALc;;EAMnBC,EAAAA,IAAI,EAAE,MANa;;EAOnBC,EAAAA,IAAI,EAAE,MAPa;;EAQnBC,EAAAA,OAAO,EAAE,MARU;;EASnBC,EAAAA,IAAI,EAAE,MATa;;EAUnBd,EAAAA,GAAG,EAAE,MAVc;;EAWnBe,EAAAA,EAAE,EAAE;EAXe,CAArB;;EAeA,IAAIC,YAAY,GAAG;EACjBtnB,EAAAA,SAAS,EAAE,MADM;;EAEjB/B,EAAAA,UAAU,EAAE,MAFK;;EAGjBsC,EAAAA,UAAU,EAAE,MAHK;;EAIjBF,EAAAA,MAAM,EAAE,MAJS;;EAKjBzC,EAAAA,OAAO,EAAE,MALQ;;EAMjBmB,EAAAA,KAAK,EAAE,MANU;;EAOjBC,EAAAA,OAAO,EAAE,MAPQ;;EAQjBL,EAAAA,KAAK,EAAE,MARU;;EASjBwB,EAAAA,WAAW,EAAE,MATI;;EAUjBnC,EAAAA,OAAO,EAAE,MAVQ;;EAWjBhB,EAAAA,SAAS,EAAE,QAXM;;EAAA,CAAnB;;EAeA,IAAIuqB,aAAa,GAAG;EAClB7oB,EAAAA,MAAM,EAAE,MADU;;EAElBJ,EAAAA,SAAS,EAAE,MAFO;;EAGlBkC,EAAAA,WAAW,EAAE,MAHK;;EAIlB7B,EAAAA,KAAK,EAAE,MAJW;;EAKlB6oB,EAAAA,eAAe,EAAE,MALC;;EAMlBjpB,EAAAA,YAAY,EAAE,MANI;;EAAA,CAApB;EAQA,UAAc,GAAG;EACfsoB,EAAAA,cAAc,EAAEA,cADD;EAEfZ,EAAAA,aAAa,EAAEA,aAFA;EAIfwB,EAAAA,aAAa,EAAEF,aAJA;EAKfG,EAAAA,YAAY,EAAEJ;EALC,CAAjB;;EC/DA,IAAMK,SAAS,GAAGx7B,MAAM,CAACC,IAAP,CAAYw7B,MAAM,CAACF,YAAnB,CAAlB;EACA,IAAMG,UAAU,GAAG17B,MAAM,CAACC,IAAP,CAAYw7B,MAAM,CAACH,aAAnB,CAAnB;;EAEA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAASv0B,KAAT,EAAgB3F,KAAhB,EAAuB;EAAA,6BACpC1D,CADoC;EAE3C,QAAIoI,IAAI,GAAGiB,KAAK,CAACrJ,CAAD,CAAhB,CAF2C;;EAI3C,QAAIoI,IAAI,CAACy1B,OAAL,OAAmB,IAAvB,EAA6B;EAC3B;EACD,KAN0C;;;;EAS3C,QAAIpzB,QAAQ,GAAGpB,KAAK,CAACrJ,CAAC,GAAG,CAAL,CAApB;;EACA,QAAIyK,QAAJ,EAAc;;EAEZ,UAAIizB,MAAM,CAAC3B,aAAP,CAAqBl0B,cAArB,CAAoC4C,QAAQ,CAAC5H,KAA7C,MAAwD,IAA5D,EAAkE;EAChE,YAAIe,GAAG,GAAG85B,MAAM,CAAC3B,aAAP,CAAqBtxB,QAAQ,CAAC5H,KAA9B,CAAV;EACAuF,QAAAA,IAAI,CAACxE,GAAL,CAASA,GAAT,EAAc,WAAW6G,QAAQ,CAAC5H,KAAlC,EAAyCa,KAAzC;EACA;EACD,OANW;;;;EASZ,UAAIo6B,QAAQ,GAAGL,SAAS,CAAC14B,IAAV,CAAe,UAAAnB,GAAG;EAAA,eAAI6G,QAAQ,CAAC/F,IAAT,CAAcd,GAAd,CAAJ;EAAA,OAAlB,CAAf;;EACA,UAAIk6B,QAAQ,KAAKr5B,SAAjB,EAA4B;EAC1B,YAAIb,IAAG,GAAG85B,MAAM,CAACF,YAAP,CAAoBM,QAApB,CAAV;EACA11B,QAAAA,IAAI,CAACxE,GAAL,CAASA,IAAT,EAAc,WAAWk6B,QAAzB,EAAmCp6B,KAAnC;EACA;EACD;EACF,KAzB0C;;;EA4B3C,QAAIq6B,QAAQ,GAAG10B,KAAK,CAACrJ,CAAC,GAAG,CAAL,CAApB;;EACA,QAAI+9B,QAAJ,EAAc;;EAEZ,UAAIL,MAAM,CAACf,cAAP,CAAsB90B,cAAtB,CAAqCk2B,QAAQ,CAACl7B,KAA9C,MAAyD,IAA7D,EAAmE;EACjE,YAAIe,KAAG,GAAG85B,MAAM,CAACf,cAAP,CAAsBoB,QAAQ,CAACl7B,KAA/B,CAAV;EACAuF,QAAAA,IAAI,CAACxE,GAAL,CAASA,KAAT,EAAc,YAAYm6B,QAAQ,CAACl7B,KAAnC,EAA0Ca,KAA1C;EACA;EACD,OANW;;;;EASZ,UAAIo6B,SAAQ,GAAGH,UAAU,CAAC54B,IAAX,CAAgB,UAAAnB,GAAG;EAAA,eAAIm6B,QAAQ,CAACr5B,IAAT,CAAcd,GAAd,CAAJ;EAAA,OAAnB,CAAf;;EACA,UAAIk6B,SAAQ,KAAKr5B,SAAjB,EAA4B;EAC1B,YAAIb,KAAG,GAAG85B,MAAM,CAACH,aAAP,CAAqBO,SAArB,CAAV;EACA11B,QAAAA,IAAI,CAACxE,GAAL,CAASA,KAAT,EAAc,YAAYk6B,SAA1B,EAAoCp6B,KAApC;EACA;EACD;EACF;EA5C0C;;EAC7C,OAAK,IAAI1D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqJ,KAAK,CAACjJ,MAA1B,EAAkCJ,CAAC,IAAI,CAAvC,EAA0C;EAAA,qBAAjCA,CAAiC;;EAAA,6BAyCpC;EAGL;EACF,CA9CD;;EA+CA,iBAAc,GAAG49B,eAAjB;;ECnDA,IAAMn6B,WAAS,GAAG,2BAAlB;EACA,IAAMu6B,SAAS,GAAG,OAAlB;;;EAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAS50B,KAAT,EAAgB3F,KAAhB,EAAuB;EACvC2F,EAAAA,KAAK,CAAClH,OAAN,CAAc,UAACiG,IAAD,EAAOpI,CAAP,EAAa;;EAEzB,QAAIyD,WAAS,CAACd,IAAV,CAAeyF,IAAI,CAACrI,IAApB,MAA8B,IAA9B,IAAsCi+B,SAAS,CAACr7B,IAAV,CAAeyF,IAAI,CAACrI,IAApB,MAA8B,KAAxE,EAA+E;;EAE7E,UAAIC,CAAC,KAAK,CAAV,EAAa;EACXoI,QAAAA,IAAI,CAACxE,GAAL,CAAS,WAAT,EAAsB,MAAtB,EAA8BF,KAA9B;EACD,OAFD,MAEO,IAAI0E,IAAI,CAAC1D,IAAL,CAAU+N,MAAV,IAAoBrK,IAAI,CAAC1D,IAAL,CAAU0O,YAA9B,IAA8ChL,IAAI,CAAC1D,IAAL,CAAUqO,KAA5D,EAAmE;EACxE3K,QAAAA,IAAI,CAACxE,GAAL,CAAS,WAAT,EAAsB,aAAtB,EAAqCF,KAArC;EACD,OAN4E;;;EAQ7E,UAAI1D,CAAC,KAAK,CAAV,EAAa;;EAEXoI,QAAAA,IAAI,CAACxE,GAAL,CAAS,YAAT,EAAuB,WAAvB,EAAoCF,KAApC;EACD;EACF;EACF,GAfD;EAgBD,CAjBD;;EAkBA,aAAc,GAAGu6B,SAAjB;;ECtBA;EACA,IAAMC,SAAS,GAAG,CAAC,aAAD,EAAgB,SAAhB,EAA2B,OAA3B,EAAoC,OAApC,EAA6C,QAA7C,EAAuD,OAAvD,EAAgE,SAAhE,EAA2E,aAA3E,EAA0F,SAA1F,CAAlB;EAEA,IAAMC,SAAS,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,CAAlB;EACA,IAAMC,WAAW,GAAG,CAAC,IAAD,EAAO,KAAP,EAAc,MAAd,EAAsB,MAAtB,CAApB;;;EAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAS58B,CAAT,EAAYiC,KAAZ,EAAmB;EACrC,MAAIjC,CAAC,CAACiD,IAAF,CAAO4N,IAAP,IAAe,CAAC7Q,CAAC,CAACiD,IAAF,CAAO2S,OAA3B,EAAoC;EAClC,QAAIvX,GAAG,GAAG2B,CAAC,CAACoB,KAAZ,CADkC;;EAGlC,QAAIpB,CAAC,CAACiD,IAAF,CAAO6N,QAAP,IAAmB9Q,CAAC,CAACiD,IAAF,CAAO8O,MAA9B,EAAsC;EACpC;EACD,KALiC;;;EAOlC,QAAI1T,GAAG,CAACM,MAAJ,IAAc,CAAlB,EAAqB;EACnB;EACD,KATiC;;;EAWlC,QAAI89B,SAAS,CAACn5B,IAAV,CAAe,UAAAnB,GAAG;EAAA,aAAInC,CAAC,CAACiD,IAAF,CAAOd,GAAP,CAAJ;EAAA,KAAlB,CAAJ,EAAwC;EACtC;EACD,KAbiC;;;EAelC,QAAI,KAAKjB,IAAL,CAAU7C,GAAV,MAAmB,IAAvB,EAA6B;;EAE3B,UAAIq+B,SAAS,CAACp5B,IAAV,CAAe,UAAAV,GAAG;EAAA,eAAIA,GAAG,CAAC1B,IAAJ,CAAS7C,GAAT,CAAJ;EAAA,OAAlB,CAAJ,EAA0C;EACxC;EACD;;EACD2B,MAAAA,CAAC,CAACmC,GAAF,CAAM,QAAN,EAAgB,iBAAhB,EAAmCF,KAAnC;EACA;EACD,KAtBiC;;;EAwBlC,QAAI06B,WAAW,CAACr5B,IAAZ,CAAiB,UAAAV,GAAG;EAAA,aAAIA,GAAG,CAAC1B,IAAJ,CAAS7C,GAAT,CAAJ;EAAA,KAApB,CAAJ,EAA4C;EAC1C;EACD;;EACD2B,IAAAA,CAAC,CAACmC,GAAF,CAAM,UAAN,EAAkB,mBAAlB,EAAuCF,KAAvC;EACD;EACF,CA9BD;;EA+BA,cAAc,GAAG26B,WAAjB;;ECtCA,IAAMC,SAAS,GAAG,8BAAlB;EACA,IAAMC,MAAM,GAAG,YAAf;;;EAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAASn1B,KAAT,EAAgB3F,KAAhB,EAAuB;EACzC,MAAIgW,GAAG,GAAGhW,KAAK,CAACkW,OAAhB;EACAvQ,EAAAA,KAAK,CAAClH,OAAN,CAAc,UAAAiG,IAAI,EAAI;;EAEpB,QAAIA,IAAI,CAACy1B,OAAL,OAAmB,IAAvB,EAA6B;EAC3B;EACD,KAJmB;;;EAMpB,QAAIS,SAAS,CAAC37B,IAAV,CAAeyF,IAAI,CAACvF,KAApB,MAA+B,IAAnC,EAAyC;;EAEvC,UAAI47B,IAAI,GAAGr2B,IAAI,CAACvF,KAAL,CAAWI,OAAX,CAAmBs7B,MAAnB,EAA2B,EAA3B,CAAX;;EACA,UAAI7kB,GAAG,CAAC+kB,IAAD,CAAH,KAAch6B,SAAd,IAA2BiV,GAAG,CAAC7R,cAAJ,CAAmB42B,IAAnB,MAA6B,IAA5D,EAAkE;EAChEr2B,QAAAA,IAAI,CAACxE,GAAL,CAAS8V,GAAG,CAAC+kB,IAAD,CAAZ,EAAoB,UAAUA,IAA9B,EAAoC/6B,KAApC;EACD;EACF;EACF,GAbD;EAcD,CAhBD;;EAiBA,WAAc,GAAG86B,WAAjB;;ECrBA,IAAME,IAAI,GAAG;EACXC,EAAAA,UAAU,EAAEn4B,aADD;EAEX,UAAMC,SAFK;EAGXuT,EAAAA,MAAM,EAAEtT,UAHG;EAIX+3B,EAAAA,IAAI,EAAE93B;EAJK,CAAb;;EAOA,IAAMi4B,SAAS,GAAG,SAAZA,SAAY,CAASxzB,GAAT,EAAc;EAC9B,MAAI/B,KAAK,GAAG+B,GAAG,CAAC6nB,QAAJ,EAAZ;EACA,MAAIvvB,KAAK,GAAG0H,GAAG,CAAC1H,KAAhB,CAF8B;;EAK9Bg7B,EAAAA,IAAI,CAACC,UAAL,CAAgBt1B,KAAhB,EAAuB3F,KAAvB,EAL8B;;EAQ9Bg7B,EAAAA,IAAI,QAAJ,CAAUr1B,KAAV,EAAiB3F,KAAjB,EAR8B;;EAW9Bg7B,EAAAA,IAAI,CAACD,IAAL,CAAUp1B,KAAV,EAAiB3F,KAAjB,EAX8B;;EAc9B2F,EAAAA,KAAK,CAAClH,OAAN,CAAc,UAAAV,CAAC,EAAI;EACjB,QAAIA,CAAC,CAACo8B,OAAF,OAAgB,KAApB,EAA2B;EACzBp8B,MAAAA,CAAC,CAACmC,GAAF,CAAM,MAAN,EAAc,eAAd,EAA+BwH,GAAG,CAAC1H,KAAnC;EACD;EACF,GAJD,EAd8B;;EAqB9B2F,EAAAA,KAAK,CAAClH,OAAN,CAAc,UAAAV,CAAC,EAAI;EACjBi9B,IAAAA,IAAI,CAAC1kB,MAAL,CAAYvY,CAAZ,EAAe2J,GAAG,CAAC1H,KAAnB;EACD,GAFD;EAIA,SAAO0H,GAAP;EACD,CA1BD;;EA2BA,gBAAc,GAAGwzB,SAAjB;;EClCA,IAAMC,WAAW,GAAG,MAApB;EAEA,IAAMxkB,YAAU,GAAG;EACjB,WAAS,CAAC,MAAD,EAAS,KAAT,CADQ;EAEjBykB,EAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,KAAT,CAFW;EAGjB,WAAS,CAAC,KAAD,EAAQ,KAAR,CAHQ;EAIjBC,EAAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,KAAR,CAJW;EAKjBC,EAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,CALS;EAMjB,YAAU,CAAC,QAAD,EAAW,KAAX,CANO;EAOjBC,EAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,KAAP,CAPW;EAQjBC,EAAAA,GAAG,EAAE,CAAC,IAAD,EAAO,KAAP,CARY;;EAAA,CAAnB;;EAYA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAS/2B,IAAT,EAAe;;EAEnC,MAAIiS,YAAU,CAACxS,cAAX,CAA0BO,IAAI,CAACvF,KAA/B,MAA0C,IAA9C,EAAoD;EAClD,WAAOwX,YAAU,CAACjS,IAAI,CAACvF,KAAN,CAAjB;EACD,GAJkC;;;EAMnC,MAAIg8B,WAAW,CAACl8B,IAAZ,CAAiByF,IAAI,CAACvF,KAAtB,MAAiC,IAArC,EAA2C;EACzC,QAAIiI,IAAI,GAAG1C,IAAI,CAACvF,KAAL,CAAWI,OAAX,CAAmB47B,WAAnB,EAAgC,EAAhC,CAAX;EACA,WAAO,CAAC/zB,IAAD,EAAO,KAAP,CAAP;EACD;;EACD,SAAO,IAAP;EACD,CAXD;;EAYA,eAAc,GAAGq0B,aAAjB;;EC1BA,IAAM/L,WAAW,GAAG,sCAApB;;EAGA,IAAMgM,IAAI,GAAG;EACXC,EAAAA,EAAE,EAAE,MADO;EAEXC,EAAAA,EAAE,EAAE,MAFO;EAGXC,EAAAA,EAAE,EAAE,KAHO;EAIXr+B,EAAAA,CAAC,EAAE,IAJQ;EAKX,SAAO;EALI,CAAb;;EAQA,IAAMs+B,eAAe,GAAG,SAAlBA,eAAkB,CAASp3B,IAAT,EAAe;EACrC,MAAIq3B,KAAK,GAAGr3B,IAAI,CAACrI,IAAL,CAAUuM,KAAV,CAAgB8mB,WAAhB,CAAZ;;EACA,MAAIqM,KAAK,KAAK,IAAd,EAAoB;EAClB,WAAO,IAAP;EACD;;EACD,MAAIL,IAAI,CAACv3B,cAAL,CAAoB43B,KAAK,CAAC,CAAD,CAAzB,CAAJ,EAAmC;EACjC,WAAO,CAACA,KAAK,CAAC,CAAD,CAAN,EAAWL,IAAI,CAACK,KAAK,CAAC,CAAD,CAAN,CAAf,CAAP;EACD;;EACD,SAAO,IAAP;EACD,CATD;;EAUA,aAAc,GAAGD,eAAjB;;ECrBA,IAAMnlB,YAAU,GAAG;EACjBqlB,EAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,IAAT,CADU;EAEjBC,EAAAA,KAAK,EAAE,CAAC,OAAD,EAAU,IAAV,CAFU;EAGjBC,EAAAA,EAAE,EAAE,CAAC,GAAD,EAAM,IAAN,CAHa;EAIjBC,EAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,KAAN,CAJW;EAKjBC,EAAAA,GAAG,EAAE,CAAC,GAAD,EAAM,MAAN,CALY;EAMjBC,EAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,MAAN,CANW;EAQjB,aAAW,CAAC,OAAD,EAAU,KAAV,CARM;EASjBC,EAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,KAAV,CATS;EAUjB,YAAU,CAAC,MAAD,EAAS,KAAT,CAVO;EAWjBC,EAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,KAAT,CAXU;EAYjB,WAAS,CAAC,KAAD,EAAQ,KAAR,CAZQ;EAajBC,EAAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,KAAR,CAbW;EAcjB,YAAU,CAAC,MAAD,EAAS,KAAT,CAdO;EAejBC,EAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,KAAT,CAfU;EAgBjB,WAAS,CAAC,KAAD,EAAQ,IAAR,CAhBQ;;EAmBjBC,EAAAA,KAAK,EAAE,CAAC,IAAD,EAAO,KAAP,EAAc,MAAd,CAnBU;EAoBjBC,EAAAA,GAAG,EAAE,CAAC,IAAD,EAAO,OAAP,EAAgB,MAAhB,CApBY;EAqBjBC,EAAAA,GAAG,EAAE,CAAC,KAAD,EAAQ,IAAR,EAAc,IAAd,CArBY;EAsBjBC,EAAAA,GAAG,EAAE,CAAC,IAAD,EAAO,MAAP,EAAe,MAAf,CAtBY;EAuBjBC,EAAAA,GAAG,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,QAAb,CAvBY;EAwBjBC,EAAAA,GAAG,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,SAAb,CAxBY;EAyBjBC,EAAAA,GAAG,EAAE,CAAC,OAAD,EAAU,GAAV,EAAe,SAAf,CAzBY;EA0BjBC,EAAAA,EAAE,EAAE,CAAC,OAAD,EAAU,KAAV,CA1Ba;EA2BjBC,EAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,KAAP,CA3BW;EA4BjB,OAAK,CAAC,IAAD;EA5BY,CAAnB;;EAgCA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAASz4B,IAAT,EAAekD,MAAf,EAAuB;EACpC,MAAIjC,KAAK,GAAGiC,MAAM,CAACjC,KAAP,EAAZ;EACA,MAAIkD,KAAK,GAAGlD,KAAK,CAACoF,OAAN,CAAcrG,IAAd,CAAZ;EACA,MAAIpC,MAAM,GAAGqD,KAAK,CAACoD,KAAN,CAAY,CAAZ,EAAeF,KAAf,CAAb,CAHoC;;EAKpC,MAAIsiB,IAAI,GAAG7oB,MAAM,CAACjB,IAAP,CAAY,UAAAtD,CAAC,EAAI;EAC1B,WAAOA,CAAC,CAACiD,IAAF,CAAO4N,IAAd;EACD,GAFU,CAAX;;EAGA,MAAIuc,IAAI,IAAIA,IAAI,CAACnqB,IAAL,CAAU8O,MAAtB,EAA8B;EAC5B,WAAO,CAAC,KAAD,EAAQ,KAAR,CAAP;EACD;;EACD,SAAO,CAAC,IAAD,EAAO,KAAP,CAAP;EACD,CAZD;;;EAeA,IAAMstB,eAAe,GAAG,SAAlBA,eAAkB,CAAS14B,IAAT,EAAekD,MAAf,EAAuB;;EAE7C,MAAIlD,IAAI,CAACvF,KAAL,gBAA0BuF,IAAI,CAACvF,KAAL,KAAe,MAA7C,EAAqD;EACnD,WAAOg+B,MAAM,CAACz4B,IAAD,EAAOkD,MAAP,CAAb;EACD,GAJ4C;;;EAM7C,MAAI+O,YAAU,CAACxS,cAAX,CAA0BO,IAAI,CAACvF,KAA/B,CAAJ,EAA2C;EACzC,WAAOwX,YAAU,CAACjS,IAAI,CAACvF,KAAN,CAAjB;EACD;;EACD,SAAO,IAAP;EACD,CAVD;;EAWA,iBAAc,GAAGi+B,eAAjB;;EC1DA,IAAMC,cAAc,GAAG,2BAAvB;EAEA,IAAMhT,WAAS,GAAG;EAChBiT,EAAAA,IAAI,EAAE,IADU;EAEhB/E,EAAAA,KAAK,EAAE;EAFS,CAAlB;;EAIA,IAAMgF,YAAY,GAAG,SAAfA,YAAe,CAAC74B,IAAD,EAAOkB,IAAP,EAAgB;;EAEnC,MAAIlB,IAAI,CAAC1D,IAAL,CAAUqP,UAAd,EAA0B;EACxB,WAAO,IAAP;EACD,GAJkC;;;EAMnC,MAAI3L,IAAI,CAAC1D,IAAL,CAAUgP,OAAV,IAAqBtL,IAAI,CAAC1D,IAAL,CAAU8R,YAAnC,EAAiD;EAC/C,WAAO,KAAP;EACD;;EACD,MAAIuX,WAAS,CAAClmB,cAAV,CAAyBO,IAAI,CAACvF,KAA9B,CAAJ,EAA0C;EACxC,WAAO,KAAP;EACD,GAXkC;;;EAanC,MAAIk7B,QAAQ,GAAGz0B,IAAI,CAACC,GAAL,CAASnB,IAAI,CAACa,IAAd,CAAf;;EACA,MAAI,CAAC80B,QAAL,EAAe;EACb,WAAO,IAAP;EACD,GAhBkC;;;EAkBnC,MAAIA,QAAQ,CAACr5B,IAAT,CAAcsP,IAAlB,EAAwB;;EAEtB,QAAI+pB,QAAQ,CAACr5B,IAAT,CAAcwP,UAAlB,EAA8B;EAC5B,aAAO,IAAP;EACD;;EACD,WAAO,KAAP;EACD,GAxBkC;;;EA2BnC,MAAI6pB,QAAQ,CAACr5B,IAAT,CAAc4N,IAAlB,EAAwB;EACtB,WAAO,IAAP;EACD,GA7BkC;;;EA+BnC,MAAI4uB,OAAO,GAAG53B,IAAI,CAACC,GAAL,CAASw0B,QAAQ,CAAC90B,IAAlB,CAAd;;EACA,MAAIi4B,OAAO,IAAIA,OAAO,CAACx8B,IAAR,CAAa4N,IAA5B,EAAkC;EAChC,WAAO,IAAP;EACD,GAlCkC;;;EAoCnC,MAAIyrB,QAAQ,CAACr5B,IAAT,CAAcoR,SAAd,IAA2BioB,QAAQ,CAACr5B,IAAT,CAAcyR,MAAzC,IAAmD4nB,QAAQ,CAACr5B,IAAT,CAAcsP,IAArE,EAA2E;EACzE,WAAO,KAAP;EACD;;EACD,SAAO,KAAP;EACD,CAxCD;;EA0CA,IAAMmtB,KAAK,GAAG,SAARA,KAAQ,CAAC/4B,IAAD,EAAOkD,MAAP,EAAkB;EAC9B,MAAIjC,KAAK,GAAGiC,MAAM,CAACjC,KAAP,EAAZ;EACA,MAAIkD,KAAK,GAAGlD,KAAK,CAACoF,OAAN,CAAcrG,IAAd,CAAZ;EACA,MAAInC,KAAK,GAAGoD,KAAK,CAACoD,KAAN,CAAYF,KAAK,GAAG,CAApB,EAAuBA,KAAK,GAAG,CAA/B,CAAZ,CAH8B;;EAK9B,SAAOtG,KAAK,CAAClB,IAAN,CAAW,UAAAtD,CAAC,EAAI;EACrB,WAAOA,CAAC,CAACiD,IAAF,CAAO0P,SAAd;EACD,GAFM,CAAP;EAGD,CARD;;EAUA,IAAMgtB,eAAe,GAAG,SAAlBA,eAAkB,CAASh5B,IAAT,EAAekD,MAAf,EAAuB5H,KAAvB,EAA8B;;EAEpD,MAAIH,KAAK,GAAG6E,IAAI,CAACrI,IAAL,CAAUuM,KAAV,CAAgBy0B,cAAhB,CAAZ;;EACA,MAAIx9B,KAAK,KAAK,IAAd,EAAoB;;EAElB,QAAI09B,YAAY,CAAC74B,IAAD,EAAOkD,MAAM,CAAChC,IAAd,CAAZ,KAAoC,IAAxC,EAA8C;EAC5ClB,MAAAA,IAAI,CAACxE,GAAL,CAAS,aAAT,EAAwB,cAAxB,EAAwCF,KAAxC;EACA,aAAO,IAAP;EACD,KALiB;;;EAOlB,QAAIH,KAAK,KAAK,IAAd,EAAoB;EAClB,UAAI49B,KAAK,CAAC/4B,IAAD,EAAOkD,MAAP,CAAT,EAAyB;EACvB,eAAO,CAAC/H,KAAK,CAAC,CAAD,CAAN,EAAW,KAAX,CAAP;EACD;;EACD,aAAO,CAACA,KAAK,CAAC,CAAD,CAAN,EAAW,IAAX,CAAP;EACD;EACF;;EACD,SAAO,IAAP;EACD,CAlBD;;EAmBA,iBAAc,GAAG69B,eAAjB;;EC7EA,IAAMC,UAAU,GAAG,uBAAnB;;;EAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAASl5B,IAAT,EAAekD,MAAf,EAAuB;EAC1C,MAAI+1B,UAAU,CAAC1+B,IAAX,CAAgByF,IAAI,CAACvF,KAArB,CAAJ,EAAiC;EAC/B,QAAI0+B,IAAI,GAAGn5B,IAAI,CAACvF,KAAL,CAAWI,OAAX,CAAmB,KAAnB,EAA0B,EAA1B,CAAX,CAD+B;;EAG/B,QAAIoG,KAAK,GAAGiC,MAAM,CAACjC,KAAP,EAAZ;EACA,QAAIkD,KAAK,GAAGlD,KAAK,CAACoF,OAAN,CAAcrG,IAAd,CAAZ;EACA,QAAInC,KAAK,GAAGoD,KAAK,CAACoD,KAAN,CAAYF,KAAK,GAAG,CAApB,EAAuBA,KAAK,GAAG,CAA/B,CAAZ,CAL+B;;EAO/B,SAAK,IAAIvM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiG,KAAK,CAAC7F,MAA1B,EAAkCJ,CAAC,EAAnC,EAAuC;EACrC,UAAIyB,CAAC,GAAGwE,KAAK,CAACjG,CAAD,CAAb;;EACA,UAAIyB,CAAC,CAACiD,IAAF,CAAOsP,IAAX,EAAiB;EACf,YAAIvS,CAAC,CAACiD,IAAF,CAAO0P,SAAX,EAAsB;EACpB,iBAAO,CAACmtB,IAAD,EAAO,KAAP,CAAP;EACD;;EACD,eAAO,CAACA,IAAD,EAAO,OAAP,CAAP;EACD;EACF,KAf8B;;;EAiB/B,WAAO,CAACA,IAAD,EAAO,OAAP,CAAP;EACD;;EACD,SAAO,IAAP;EACD,CArBD;;EAsBA,mBAAc,GAAGD,YAAjB;;ECjBA,IAAME,YAAY,GAAG,SAAfA,YAAe,CAASj+B,KAAT,EAAgB6H,GAAhB,EAAqB;;EAExC,MAAIE,MAAM,GAAG0lB,YAAQ,CAAC/e,QAAT,CAAkB1O,KAAK,CAAClB,IAAN,CAAW,GAAX,CAAlB,EAAmC+I,GAAG,CAAC1H,KAAvC,EAA8C0H,GAAG,CAAC9B,IAAJ,EAA9C,EAA0D,CAA1D,CAAb,CAFwC;;EAIxC,MAAID,KAAK,GAAGiC,MAAM,CAACjC,KAAP,EAAZ;EACA0rB,EAAAA,UAAY,CAAC1rB,KAAD,EAAQ+B,GAAG,CAAC1H,KAAZ,CAAZ,CALwC;;EAOxC2F,EAAAA,KAAK,CAAClH,OAAN,CAAc,UAACV,CAAD,EAAIzB,CAAJ,EAAU;EACtByB,IAAAA,CAAC,CAACyC,QAAF,GAAazC,CAAC,CAAC1B,IAAf;EACA0B,IAAAA,CAAC,CAAC1B,IAAF,GAAS,EAAT;EACA0B,IAAAA,CAAC,CAACoB,KAAF,GAAU,EAAV,CAHsB;;EAKtBpB,IAAAA,CAAC,CAAC4B,GAAF,GAAQ,EAAR;EACA5B,IAAAA,CAAC,CAAC6B,IAAF,GAAS,EAAT;EACD,GAPD;EAQA,SAAOgI,MAAP;EACD,CAhBD;;EAkBA,IAAM+nB,YAAY,GAAG,SAAfA,YAAe,CAASjoB,GAAT,EAAc;EACjC,MAAI1H,KAAK,GAAG0H,GAAG,CAAC1H,KAAhB;EACA0H,EAAAA,GAAG,CAACG,IAAJ,CAASpJ,OAAT,CAAiB,UAAAd,CAAC,EAAI;EACpB,QAAIgI,KAAK,GAAGhI,CAAC,CAACgI,KAAF,EAAZ;;EACA,SAAK,IAAIrJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqJ,KAAK,CAACjJ,MAA1B,EAAkCJ,CAAC,IAAI,CAAvC,EAA0C;EACxC,UAAIoI,IAAI,GAAGiB,KAAK,CAACrJ,CAAD,CAAhB;EACA,UAAIuD,KAAK,GAAG47B,WAAa,CAAC/2B,IAAD,CAAzB;EACA7E,MAAAA,KAAK,GAAGA,KAAK,IAAIi8B,SAAe,CAACp3B,IAAD,CAAhC;EACA7E,MAAAA,KAAK,GAAGA,KAAK,IAAIu9B,aAAe,CAAC14B,IAAD,EAAO/G,CAAP,CAAhC;EACAkC,MAAAA,KAAK,GAAGA,KAAK,IAAI69B,aAAe,CAACh5B,IAAD,EAAO/G,CAAP,EAAUqC,KAAV,CAAhC;EACAH,MAAAA,KAAK,GAAGA,KAAK,IAAI+9B,eAAY,CAACl5B,IAAD,EAAO/G,CAAP,CAA7B,CANwC;;EAQxC,UAAIkC,KAAK,KAAK,IAAd,EAAoB;EAClB,YAAIwH,SAAS,GAAGy2B,YAAY,CAACj+B,KAAD,EAAQ6H,GAAR,CAA5B,CADkB;;EAGlB,YAAIq2B,SAAS,GAAG12B,SAAS,CAAC1B,KAAV,CAAgB,CAAhB,CAAhB;EACAo4B,QAAAA,SAAS,CAAC1hC,IAAV,GAAiBqI,IAAI,CAACrI,IAAtB,CAJkB;;EAMlB,YAAIuM,KAAK,GAAGjL,CAAC,CAACuI,SAAF,CAAYxB,IAAI,CAAC9D,EAAjB,EAAqB,CAArB,EAAwB8G,GAAG,CAAC9B,IAAJ,EAAxB,CAAZ;EACAgD,QAAAA,KAAK,CAACrJ,OAAN,CAAc8H,SAAd,EAAyBK,GAAzB;EACD;EACF;EACF,GApBD;EAqBA,SAAOA,GAAP;EACD,CAxBD;;EAyBA,mBAAc,GAAGioB,YAAjB;;ECnDA;;EAEA,IAAMqO,QAAQ,GAAG,CACf,SADe,EAEf,gBAFe,EAGf,QAHe,EAIf,SAJe,EAKf,UALe,EAMf,QANe,EAOf,UAPe,EAQf,SARe,EASf,MATe,EAUf,OAVe,EAWf,YAXe,EAYf,aAZe,EAaf,WAbe,EAcf,WAde,EAef,UAfe,EAgBf,UAhBe,EAiBf,MAjBe,EAkBf,QAlBe,EAmBf,OAnBe,EAoBf,MApBe,EAqBf,QArBe,EAsBf,SAtBe,EAuBf,aAvBe,EAwBf,UAxBe,EAyBf,kBAzBe,EA0Bf,QA1Be,EA2Bf,MA3Be,EA4Bf,QA5Be,EA6Bf,SA7Be,EA8Bf,MA9Be,EA+Bf,WA/Be,EAgCf,QAhCe,EAiCf,cAjCe,EAkCf,QAlCe,EAmCf,WAnCe,EAoCf,OApCe,EAqCf,WArCe,EAsCf,QAtCe,EAuCf,QAvCe,EAwCf,QAxCe,EAyCf,UAzCe,EA0Cf,MA1Ce,EA2Cf,IA3Ce,EA4Cf,WA5Ce,EA6Cf,QA7Ce,EA8Cf,YA9Ce,EA+Cf,SA/Ce,EAgDf,YAhDe,EAiDf,WAjDe,EAkDf,gBAlDe,EAmDf,WAnDe,EAoDf,SApDe,EAqDf,eArDe,EAsDf,WAtDe,EAuDf,eAvDe,EAwDf,YAxDe,EAyDf,SAzDe,EA0Df,YA1De,EA2Df,YA3De,EA4Df,aA5De,EA6Df,OA7De,EA8Df,MA9De,EA+Df,SA/De,EAgEf,MAhEe,EAiEf,YAjEe,EAkEf,MAlEe,EAmEf,aAnEe,EAoEf,YApEe,EAqEf,kBArEe,EAsEf,aAtEe,EAuEf,QAvEe,EAwEf,aAxEe,EAyEf,aAzEe,EA0Ef,UA1Ee,EA2Ef,UA3Ee,EA4Ef,WA5Ee,EA6Ef,QA7Ee,EA8Ef,UA9Ee,EA+Ef,aA/Ee,EAgFf,QAhFe,EAiFf,UAjFe,EAkFf,YAlFe,EAmFf,aAnFe,EAoFf,eApFe,EAqFf,QArFe,EAsFf,MAtFe,EAuFf,cAvFe,EAwFf,SAxFe,EAyFf,YAzFe,EA0Ff,WA1Fe,EA2Ff,IA3Fe,EA4Ff,YA5Fe,EA6Ff,MA7Fe,EA8Ff,KA9Fe,EA+Ff,SA/Fe,EAgGf,OAhGe,EAiGf,YAjGe,EAkGf,OAlGe,EAmGf,OAnGe,EAoGf,kBApGe,EAqGf,QArGe,EAsGf,UAtGe,EAuGf,UAvGe,EAwGf,OAxGe,EAyGf,QAzGe,EA0Gf,KA1Ge,EA2Gf,YA3Ge,EA4Gf,UA5Ge,EA6Gf,WA7Ge,EA8Gf,yBA9Ge,EA+Gf,YA/Ge,EAgHf,WAhHe,EAiHf,eAjHe,EAkHf,YAlHe,EAmHf,YAnHe,EAoHf,aApHe,EAqHf,WArHe,EAsHf,SAtHe,EAuHf,YAvHe,EAwHf,MAxHe;EA0Hf,iBA1He,EA2Hf,SA3He,EA4Hf,iBA5He,EA6Hf,wBA7He,EA8Hf,UA9He,EA+Hf,UA/He,EAgIf,YAhIe,EAiIf,QAjIe,EAkIf,WAlIe,EAmIf,SAnIe,EAoIf,OApIe,EAqIf,UArIe,EAsIf,qBAtIe,EAuIf,WAvIe,EAwIf,UAxIe,EAyIf,UAzIe,EA0If,QA1Ie,EA2If,OA3Ie,EA4If,QA5Ie,EA6If,OA7Ie,EA8If,QA9Ie;EAgJf,MAhJe,EAiJf,cAjJe,EAkJf,aAlJe,EAmJf,QAnJe,EAoJf,KApJe,EAqJf,SArJe,EAsJf,WAtJe,EAuJf,cAvJe,EAwJf,UAxJe,EAyJf,aAzJe;EA2Jf,gBA3Je,EA4Jf,QA5Je,EA6Jf,WA7Je,EA8Jf,YA9Je,EA+Jf,gBA/Je,EAgKf,iBAhKe,EAiKf,OAjKe,EAkKf,KAlKe,EAmKf,QAnKe,EAoKf,aApKe,EAqKf,MArKe,EAsKf,OAtKe,EAuKf,OAvKe,EAwKf,aAxKe,EAyKf,SAzKe,EA0Kf,OA1Ke,EA2Kf,oBA3Ke,EA4Kf,2BA5Ke,EA6Kf,SA7Ke,EA8Kf,WA9Ke,EA+Kf,YA/Ke,EAgLf,aAhLe,EAiLf,SAjLe,EAkLf,QAlLe,EAmLf,YAnLe,EAoLf,SApLe,EAqLf,UArLe,EAsLf,aAtLe,EAuLf,SAvLe,EAwLf,SAxLe,EAyLf,MAzLe,EA0Lf,UA1Le,EA2Lf,cA3Le,EA4Lf,kBA5Le,EA6Lf,gBA7Le,EA8Lf,cA9Le,EA+Lf,UA/Le,EAgMf,SAhMe,EAiMf,oBAjMe,EAkMf,WAlMe,EAmMf,YAnMe,EAoMf,OApMe,EAqMf,UArMe,EAsMf,IAtMe,EAuMf,OAvMe,EAwMf,YAxMe,EAyMf,WAzMe,EA0Mf,SA1Me,CAAjB;EA6MA,cAAc,GAAGA,QAAQ,CAACt3B,MAAT,CAAgB,UAASvJ,CAAT,EAAYf,GAAZ,EAAiB;EAChDe,EAAAA,CAAC,CAACf,GAAD,CAAD,GAAS,MAAT;EACA,SAAOe,CAAP;EACD,CAHgB,EAGd,EAHc,CAAjB;;EC5MA,IAAM8gC,QAAQ,GAAG,SAAXA,QAAW,CAASlgC,CAAT,EAAY;;EAE3B,MAAI,CAACA,CAAC,CAACiD,IAAF,CAAO4N,IAAZ,EAAkB;EAChB,WAAO,KAAP;EACD,GAJ0B;;;EAM3B,MAAI7Q,CAAC,CAACiD,IAAF,CAAOgP,OAAP,IAAkBjS,CAAC,CAACiD,IAAF,CAAOe,KAAzB,IAAkChE,CAAC,CAACiD,IAAF,CAAOqP,UAA7C,EAAyD;EACvD,WAAO,KAAP;EACD,GAR0B;;;EAU3B,MAAItS,CAAC,CAACiD,IAAF,CAAOS,SAAP,IAAoB1D,CAAC,CAACiD,IAAF,CAAO0O,YAA3B,IAA2C3R,CAAC,CAACiD,IAAF,CAAO2S,OAAlD,IAA6D5V,CAAC,CAACiD,IAAF,CAAOqO,KAAxE,EAA+E;EAC7E,WAAO,IAAP;EACD;;EACD,SAAO,KAAP;EACD,CAdD;;EAgBA,IAAM6uB,OAAO,GAAG,SAAVA,OAAU,CAASx2B,GAAT,EAAc4nB,OAAd,EAAuB;EACrCA,EAAAA,OAAO,CAAC7wB,OAAR,CAAgB,UAAAkH,KAAK,EAAI;EACvB,SAAK,IAAIrJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqJ,KAAK,CAACjJ,MAA1B,EAAkCJ,CAAC,IAAI,CAAvC,EAA0C;EACxC,UAAIyB,CAAC,GAAG4H,KAAK,CAACrJ,CAAD,CAAb;;EACA,UAAI0hC,UAAQ,CAACjgC,CAAC,CAACoB,KAAH,CAAR,KAAsB4B,SAAtB,IAAmCi9B,UAAQ,CAAC75B,cAAT,CAAwBpG,CAAC,CAACoB,KAA1B,MAAqC,IAA5E,EAAkF;;EAEhF,YAAI4H,QAAQ,GAAGpB,KAAK,CAACrJ,CAAC,GAAG,CAAL,CAApB;;EACA,YAAIyK,QAAQ,KAAKhG,SAAb,IAA0Bk9B,QAAQ,CAACl3B,QAAD,CAAR,KAAuB,IAArD,EAA2D;EACzDA,UAAAA,QAAQ,CAAC7G,GAAT,CAAa,cAAb,EAA6B,YAA7B,EAA2CwH,GAAG,CAAC1H,KAA/C;EACAjC,UAAAA,CAAC,CAACmC,GAAF,CAAM,cAAN,EAAsB,YAAtB,EAAoCwH,GAAG,CAAC1H,KAAxC;EACA;EACD,SAP+E;;;EAShF,YAAIq6B,QAAQ,GAAG10B,KAAK,CAACrJ,CAAC,GAAG,CAAL,CAApB;;EACA,YAAI+9B,QAAQ,KAAKt5B,SAAb,IAA0Bs5B,QAAQ,CAACl7B,KAAT,KAAmB,IAAjD,EAAuD;EACrD,cAAIwG,KAAK,CAACrJ,CAAC,GAAG,CAAL,CAAL,IAAgB2hC,QAAQ,CAACt4B,KAAK,CAACrJ,CAAC,GAAG,CAAL,CAAN,CAA5B,EAA4C;EAC1CyB,YAAAA,CAAC,CAACmC,GAAF,CAAM,cAAN,EAAsB,eAAtB,EAAuCwH,GAAG,CAAC1H,KAA3C;EACAq6B,YAAAA,QAAQ,CAACn6B,GAAT,CAAa,cAAb,EAA6B,eAA7B,EAA8CwH,GAAG,CAAC1H,KAAlD;EACA2F,YAAAA,KAAK,CAACrJ,CAAC,GAAG,CAAL,CAAL,CAAa4D,GAAb,CAAiB,cAAjB,EAAiC,eAAjC,EAAkDwH,GAAG,CAAC1H,KAAtD;EACA;EACD;EACF;EACF;EACF;EACF,GAvBD;EAyBA,SAAO0H,GAAP;EACD,CA3BD;;EA4BA,oBAAc,GAAGw2B,OAAjB;;EC3CA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAASz2B,GAAT,EAAc;EAC9B,MAAI4nB,OAAO,GAAG5nB,GAAG,CAACG,IAAJ,CAAS5B,GAAT,CAAa,UAAAtI,CAAC;EAAA,WAAIA,CAAC,CAACgI,KAAF,EAAJ;EAAA,GAAd,CAAd;EACAy4B,EAAAA,gBAAa,CAAC12B,GAAD,EAAM4nB,OAAN,CAAb;AACA+O,EACA,SAAO32B,GAAP;EACD,CALD;;EAMA,gBAAc,GAAGy2B,SAAjB;;ECVA;EACA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAAS52B,GAAT,EAAc;;;EAGnCA,EAAAA,GAAG,CAACkB,KAAJ,CAAU,aAAV,EAAyB1I,GAAzB,CAA6B,MAA7B,EAAqC,WAArC,EAHmC;;EAKnCwH,EAAAA,GAAG,CAACkB,KAAJ,CAAU,sBAAV,EAAkC1I,GAAlC,CAAsC,MAAtC,EAA8C,WAA9C,EALmC;;EAOnCwH,EAAAA,GAAG,CAACkB,KAAJ,CAAU,kBAAV,EAA8B1I,GAA9B,CAAkC,SAAlC,EAA6C,aAA7C,EAPmC;;EASnCwH,EAAAA,GAAG,CAACkB,KAAJ,CAAU,oBAAV,EAAgC1I,GAAhC,CAAoC,SAApC,EAA+C,aAA/C,EATmC;;EAWnCwH,EAAAA,GAAG,CAACkB,KAAJ,CAAU,4EAAV,EAAwF1I,GAAxF,CAA4F,MAA5F,EAAoG,UAApG,EAXmC;;EAanCwH,EAAAA,GAAG,CAACkB,KAAJ,CAAU,2BAAV,EAAuC1I,GAAvC,CAA2C,CAAC,WAAD,EAAc,MAAd,CAA3C,EAAkE,UAAlE,EAbmC;;EAenCwH,EAAAA,GAAG,CAACkB,KAAJ,CAAU,qBAAV,EAAiC1I,GAAjC,CAAqC,MAArC,EAA6C,UAA7C,EAfmC;;EAiBnCwH,EAAAA,GAAG,CAACkB,KAAJ,CAAU,mBAAV,EAA+B1I,GAA/B,CAAmC,QAAnC;EACAwH,EAAAA,GAAG,CAACkB,KAAJ,CAAU,SAAV,EAAqB1I,GAArB,CAAyB,MAAzB;EACAwH,EAAAA,GAAG,CAACkB,KAAJ,CAAU,YAAV,EAAwB1I,GAAxB,CAA4B,6BAA5B;EACAwH,EAAAA,GAAG,CAACkB,KAAJ,CAAU,UAAV,EAAsB1I,GAAtB,CAA0B,kBAA1B,EApBmC;;EAsBnCwH,EAAAA,GAAG,CAACkB,KAAJ,CAAU,KAAV,EAAiB1I,GAAjB,CAAqB,iBAArB,EAtBmC;;;EAyBnCwH,EAAAA,GAAG,CAACkB,KAAJ,CAAU,uBAAV,EAAmC1I,GAAnC,CAAuC,YAAvC,EAAqD,mBAArD;EACAwH,EAAAA,GAAG,CAACkB,KAAJ,CAAU,gCAAV,EAA4C1I,GAA5C,CAAgD,MAAhD,EAAwD,aAAxD;EACAwH,EAAAA,GAAG,CAACkB,KAAJ,CAAU,mDAAV,EAA+D1I,GAA/D,CAAmE,MAAnE,EAA2E,aAA3E;EACAwH,EAAAA,GAAG,CACAkB,KADH,CACS,oBADT,EAEG4nB,GAFH,CAEO,SAFP,EAGGtwB,GAHH,CAGO,WAHP,EAGoB,kBAHpB,EA5BmC;;EAkCnC,MAAIq+B,EAAE,GAAG72B,GAAG,MAAH,CAAO,IAAP,CAAT;;EACA,MAAI62B,EAAE,CAAC1+B,KAAH,KAAa,IAAjB,EAAuB;;EAErB0+B,IAAAA,EAAE,CAAC31B,KAAH,CAAS,iBAAT,EAA4B1I,GAA5B,CAAgC,QAAhC,EAA0C,QAA1C,EAFqB;;EAIrBq+B,IAAAA,EAAE,CAAC31B,KAAH,CAAS,YAAT,EAAuB1I,GAAvB,CAA2B,aAA3B,EAA0C,SAA1C,EAJqB;;EAMrBq+B,IAAAA,EAAE,CAAC31B,KAAH,CAAS,SAAT,EAAoB1I,GAApB,CAAwB,MAAxB,EAAgC,SAAhC;EACD;;EAED,MAAI6M,GAAG,GAAGrF,GAAG,MAAH,CAAO,KAAP,CAAV;;EACA,MAAIqF,GAAG,CAAClN,KAAJ,KAAc,IAAlB,EAAwB;;EAEtBkN,IAAAA,GAAG,CAACnE,KAAJ,CAAU,0BAAV,EAAsC1I,GAAtC,CAA0C,WAA1C,EAAuD,UAAvD,EAFsB;;EAItB6M,IAAAA,GAAG,CAACnE,KAAJ,CAAU,aAAV,EAAyB1I,GAAzB,CAA6B,QAA7B,EAAuC,UAAvC;EACD,GAlDkC;;;EAqDnC,MAAIs+B,KAAK,GAAG92B,GAAG,MAAH,CAAO,OAAP,CAAZ;;EACA,MAAI82B,KAAK,CAAC3+B,KAAN,KAAgB,IAApB,EAA0B;;EAExB2+B,IAAAA,KAAK,CAAC51B,KAAN,CAAY,qCAAZ,EAAmD1I,GAAnD,CAAuD,aAAvD,EAAsE,WAAtE,EAFwB;;EAIxBs+B,IAAAA,KAAK,CAAC51B,KAAN,CAAY,oBAAZ,EAAkC1I,GAAlC,CAAsC,YAAtC,EAAoD,iBAApD,EAJwB;;EAMxBs+B,IAAAA,KAAK,CAAC51B,KAAN,CAAY,iCAAZ,EAA+C1I,GAA/C,CAAmD,aAAnD,EAAkE,cAAlE,EANwB;;EASzB,GA/DkC;;;EAkEnC,MAAIu+B,IAAI,GAAG/2B,GAAG,MAAH,CAAO,MAAP,CAAX;;EACA,MAAI+2B,IAAI,CAAC5+B,KAAL,KAAe,IAAnB,EAAyB;EACvB4+B,IAAAA,IAAI,CAAC71B,KAAL,CAAW,aAAX,EAA0B1I,GAA1B,CAA8B,aAA9B,EAA6C,kBAA7C,EADuB;;EAGvBu+B,IAAAA,IAAI,CAAC71B,KAAL,CAAW,oBAAX,EAAiC1I,GAAjC,CAAqC,aAArC,EAAoD,WAApD,EAHuB;;EAKvBu+B,IAAAA,IAAI,CAAC71B,KAAL,CAAW,cAAX,EAA2B1I,GAA3B,CAA+B,QAA/B,EAAyC,WAAzC,EALuB;;EAOvBu+B,IAAAA,IAAI,CACD71B,KADH,CACS,cADT,EAEG81B,KAFH,CAES,6DAFT,EAGGx+B,GAHH,CAGO,QAHP,EAGiB,aAHjB;EAID;;EAED,MAAIy+B,KAAK,GAAGj3B,GAAG,MAAH,CAAO,YAAP,CAAZ;;EACA,MAAIi3B,KAAK,CAAC9+B,KAAN,KAAgB,IAApB,EAA0B;;EAExB8+B,IAAAA,KAAK,CAAC/1B,KAAN,CAAY,wCAAZ,EAAsD1I,GAAtD,CAA0D,cAA1D,EAA0E,WAA1E,EAFwB;;EAIxBy+B,IAAAA,KAAK,CACF/1B,KADH,CACS,qGADT,EAEG1I,GAFH,CAEO,QAFP,EAEiB,cAFjB,EAJwB;;EAQxBy+B,IAAAA,KAAK,CACF/1B,KADH,CACS,+EADT,EAEG1I,GAFH,CAEO,QAFP,EAEiB,iBAFjB;EAGD;;EAED,MAAI0+B,IAAI,GAAGl3B,GAAG,MAAH,CAAO,aAAP,CAAX;;EACA,MAAIk3B,IAAI,CAAC/+B,KAAL,KAAe,IAAnB,EAAyB;;EAEvB++B,IAAAA,IAAI,CACDh2B,KADH,CACS,yBADT,EAEGA,KAFH,CAES,aAFT,EAGG1I,GAHH,CAGO,MAHP,EAGe,aAHf,EAFuB;;EAOvB0+B,IAAAA,IAAI,CACDh2B,KADH,CACS,cADT,QAEM,aAFN,EAGG1I,GAHH,CAGO,YAHP,EAGqB,SAHrB;EAID;;EAED,MAAI2+B,KAAK,GAAGn3B,GAAG,MAAH,CAAO,QAAP,CAAZ;;EACA,MAAIm3B,KAAK,CAACh/B,KAAN,KAAgB,IAApB,EAA0B;;EAExBg/B,IAAAA,KAAK,CAACj2B,KAAN,CAAY,mEAAZ,EAAiF1I,GAAjF,CAAqF,QAArF,EAA+F,cAA/F,EAFwB;;EAIxB2+B,IAAAA,KAAK,CACFj2B,KADH,CACS,kBADT,EAEGA,KAFH,CAES,2EAFT,EAGG1I,GAHH,CAGO,QAHP,EAGiB,UAHjB;EAID;;EAED,SAAOwH,GAAP;EACD,CAxHD;;EA0HA,WAAc,GAAG42B,cAAjB;;EC3HA;EACA,IAAMQ,MAAM,GAAG,SAATA,MAAS,CAASp3B,GAAT,EAAc;EAC3B,MAAIq3B,GAAG,GAAGr3B,GAAG,MAAH,CAAO,aAAP,CAAV;;EACA,MAAIq3B,GAAG,CAACl/B,KAAJ,KAAc,IAAlB,EAAwB;;EAEtBk/B,IAAAA,GAAG,CAACn2B,KAAJ,CAAU,mCAAV,EAA+C1I,GAA/C,CAAmD,MAAnD,EAA2D,wBAA3D,EAFsB;;EAItB6+B,IAAAA,GAAG,CAACn2B,KAAJ,CAAU,2CAAV,EAAuD1I,GAAvD,CAA2D,MAA3D,EAAmE,cAAnE,EAJsB;;EAMtB6+B,IAAAA,GAAG,CAACn2B,KAAJ,CAAU,mDAAV,EAA+D1I,GAA/D,CAAmE,MAAnE,EAA2E,wBAA3E,EANsB;;EAQtB6+B,IAAAA,GAAG,CAACn2B,KAAJ,CAAU,8CAAV,EAA0D1I,GAA1D,CAA8D,MAA9D,EAAsE,wBAAtE,EARsB;;EAUtB6+B,IAAAA,GAAG,CAACn2B,KAAJ,CAAU,sBAAV,EAAkC1I,GAAlC,CAAsC,MAAtC,EAA8C,wBAA9C,EAVsB;;EAYtB6+B,IAAAA,GAAG,CAACn2B,KAAJ,CAAU,0DAAV,EAAsE1I,GAAtE,CAA0E,MAA1E,EAAkF,WAAlF,EAZsB;;EActB6+B,IAAAA,GAAG,CAACn2B,KAAJ,CAAU,wBAAV,EAAoC1I,GAApC,CAAwC,MAAxC,EAAgD,aAAhD,EAdsB;;EAgBtB6+B,IAAAA,GAAG,CAACn2B,KAAJ,CAAU,8BAAV,EAA0C1I,GAA1C,CAA8C,MAA9C,EAAsD,cAAtD,EAhBsB;;EAkBtB6+B,IAAAA,GAAG,CAACn2B,KAAJ,CAAU,8BAAV,EAA0C1I,GAA1C,CAA8C,WAA9C,EAA2D,SAA3D,EAlBsB;;EAoBtB6+B,IAAAA,GAAG,CAACn2B,KAAJ,CAAU,iCAAV,EAA6C1I,GAA7C,CAAiD,MAAjD,EAAyD,wBAAzD,EApBsB;;EAsBtB6+B,IAAAA,GAAG,CAACn2B,KAAJ,CAAU,4BAAV,EAAwC1I,GAAxC,CAA4C,MAA5C,EAAoD,OAApD,EAtBsB;;EAwBtB6+B,IAAAA,GAAG,CAACn2B,KAAJ,CAAU,iEAAV,EAA6E1I,GAA7E,CAAiF,MAAjF,EAAyF,cAAzF,EAxBsB;;EA0BtB6+B,IAAAA,GAAG,CAACn2B,KAAJ,CAAU,4DAAV,EAAwE1I,GAAxE,CAA4E,MAA5E,EAAoF,wBAApF,EA1BsB;;EA4BtB6+B,IAAAA,GAAG,CACAn2B,KADH,CACS,yBADT,EAEG81B,KAFH,CAES,6BAFT,EAGG/4B,KAHH,CAGS,CAHT,EAIGzF,GAJH,CAIO,MAJP,EAIe,WAJf;EAKD;;EAED,MAAI8+B,EAAE,GAAGt3B,GAAG,MAAH,CAAO,QAAP,CAAT;;EACA,MAAIs3B,EAAE,CAACn/B,KAAH,KAAa,IAAjB,EAAuB;;EAErBm/B,IAAAA,EAAE,CAACp2B,KAAH,CAAS,kBAAT,EAA6B1I,GAA7B,CAAiC,WAAjC,EAA8C,iBAA9C,EAFqB;;EAIrB8+B,IAAAA,EAAE,CAACp2B,KAAH,CAAS,uBAAT,EAAkC1I,GAAlC,CAAsC,UAAtC,EAAkD,SAAlD,EAJqB;;EAMrB8+B,IAAAA,EAAE,CAACp2B,KAAH,CAAS,4BAAT,EAAuC1I,GAAvC,CAA2C,MAA3C,EAAmD,YAAnD,EANqB;;EAQrB8+B,IAAAA,EAAE,CAACp2B,KAAH,CAAS,+CAAT,EACGjD,KADH,CACS,CADT,EAEGzF,GAFH,CAEO,MAFP,EAEe,kBAFf,EARqB;;EAYrB8+B,IAAAA,EAAE,CAACp2B,KAAH,CAAS,gEAAT,EACGq2B,IADH,CACQ,SADR,EAEG/+B,GAFH,CAEO,OAFP,EAEgB,UAFhB;EAGD;;EAED,SAAOwH,GAAP;EACD,CAxDD;;EAyDA,YAAc,GAAGo3B,MAAjB;;EC1DA;EACA,IAAMI,QAAQ,GAAG,SAAXA,QAAW,CAASx3B,GAAT,EAAc;EAC7B,MAAIyjB,IAAI,GAAGzjB,GAAG,MAAH,CAAO,OAAP,CAAX;;EACA,MAAIyjB,IAAI,CAACtrB,KAAL,KAAe,IAAnB,EAAyB;;EAEvBsrB,IAAAA,IAAI,CAACviB,KAAL,CAAW,YAAX,EAAyB1I,GAAzB,CAA6B,MAA7B,EAAqC,WAArC,EAFuB;;EAIvBirB,IAAAA,IAAI,CAACviB,KAAL,CAAW,uBAAX,EAAoC1I,GAApC,CAAwC,MAAxC,EAAgD,YAAhD,EAJuB;;EAMvBirB,IAAAA,IAAI,CAACviB,KAAL,CAAW,mBAAX,EAAgC1I,GAAhC,CAAoC,aAApC,EAAmD,kBAAnD,EANuB;;EAQvBirB,IAAAA,IAAI,CAACviB,KAAL,CAAW,mBAAX,EAAgC1I,GAAhC,CAAoC,cAApC,EAAoD,aAApD,EARuB;;EAUvBirB,IAAAA,IAAI,CAACviB,KAAL,CAAW,cAAX,EAA2B1I,GAA3B,CAA+B,OAA/B,EAAwC,YAAxC,EAVuB;;EAYvBirB,IAAAA,IAAI,CAACviB,KAAL,CAAW,uBAAX,EAAoC1I,GAApC,CAAwC,cAAxC,EAAwD,YAAxD,EAZuB;;EAcvBwH,IAAAA,GAAG,CAACkB,KAAJ,CAAU,sBAAV,EAAkCipB,OAAlC,CAA0C,SAA1C,EAAqD,cAArD,EAduB;;EAgBvBnqB,IAAAA,GAAG,CAACkB,KAAJ,CAAU,0CAAV,EAAsDipB,OAAtD,CAA8D,SAA9D,EAAyE,cAAzE,EAhBuB;;EAkBvB1G,IAAAA,IAAI,CACDviB,KADH,CACS,gBADT,EAEG81B,KAFH,CAES,YAFT,EAGGv+B,KAHH,CAGS,MAHT,EAIGD,GAJH,CAIO,SAJP,EAIkB,aAJlB,EAlBuB;;EAwBvBirB,IAAAA,IAAI,CACDviB,KADH,CACS,kGADT,EAEG1I,GAFH,CAEO,MAFP,EAEe,gBAFf,EAxBuB;;EA6BvB,QAAIi/B,GAAG,GAAGhU,IAAI,MAAJ,CAAQ,eAAR,CAAV;;EACA,QAAIgU,GAAG,CAACt/B,KAAJ,KAAc,IAAlB,EAAwB;EACtBs/B,MAAAA,GAAG,CAACv2B,KAAJ,CAAU,kCAAV,EAA8C1I,GAA9C,CAAkD,cAAlD,EAAkE,cAAlE;EACAi/B,MAAAA,GAAG,CAACv2B,KAAJ,CAAU,wBAAV,EAAoC1I,GAApC,CAAwC,cAAxC,EAAwD,aAAxD;EACAi/B,MAAAA,GAAG,CAACv2B,KAAJ,CAAU,8DAAV,EAA0E1I,GAA1E,CAA8E,cAA9E,EAA8F,YAA9F;EACD;EACF,GArC4B;;;EAwC7B,MAAIk/B,OAAO,GAAG13B,GAAG,MAAH,CAAO,UAAP,CAAd;;EACA,MAAI03B,OAAO,CAACv/B,KAAR,KAAkB,IAAtB,EAA4B;EAC1Bu/B,IAAAA,OAAO,CACJx2B,KADH,CACS,gBADT,EAEG81B,KAFH,CAES,+BAFT,EAGGx+B,GAHH,CAGO,cAHP,EAGuB,aAHvB;EAIAk/B,IAAAA,OAAO,CACJx2B,KADH,CACS,UADT,EAEGA,KAFH,CAES,aAFT,EAGG1I,GAHH,CAGO,cAHP,EAGuB,oBAHvB;EAID,GAlD4B;;;EAqD7B,MAAIm/B,IAAI,GAAG33B,GAAG,MAAH,CAAO,aAAP,CAAX;;EACA,MAAI23B,IAAI,CAACx/B,KAAL,KAAe,IAAnB,EAAyB;;EAEvBw/B,IAAAA,IAAI,CAACz2B,KAAL,CAAW,0BAAX,EAAuCzI,KAAvC,CAA6C,QAA7C,EAAuD,iBAAvD,EAFuB;;EAIvBk/B,IAAAA,IAAI,CACDz2B,KADH,CACS,kCADT,EAEGq2B,IAFH,CAEQ,QAFR,EAGGr2B,KAHH,CAGS,gCAHT,EAIG1I,GAJH,CAIO,YAJP,EAJuB;;EAUvBm/B,IAAAA,IAAI,CACDz2B,KADH,CACS,4BADT,EAEGq2B,IAFH,CAEQ,QAFR,EAGG/+B,GAHH,CAGO,YAHP,EAVuB;;EAevBm/B,IAAAA,IAAI,CACDz2B,KADH,CACS,qBADT,EAEGq2B,IAFH,CAEQ,QAFR,EAGG/+B,GAHH,CAGO,YAHP;EAID;;EACD,SAAOwH,GAAP;EACD,CA3ED;;EA4EA,cAAc,GAAGw3B,QAAjB;;EC7EA,IAAMI,SAAS,GACb,qMADF;EAEA,IAAMC,SAAS,GAAG,8CAAlB;EACA,IAAMC,QAAQ,GAAG,gCAAjB;EACA,IAAMC,SAAS,GAAG,iCAAlB;EACA,IAAMC,UAAU,GAAG,iDAAnB;;EAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAASj4B,GAAT,EAAc;;EAE9B,MAAIk4B,GAAG,GAAGl4B,GAAG,MAAH,CAAO,YAAP,CAAV;;EACA,MAAIk4B,GAAG,CAAC//B,KAAJ,KAAc,IAAlB,EAAwB;;EAEtB6H,IAAAA,GAAG,CAACkB,KAAJ,CAAU,0CAAV,EAAsD1I,GAAtD,CAA0D,SAA1D,EAAqE,UAArE,EAFsB;;EAItB0/B,IAAAA,GAAG,CAACh3B,KAAJ,CAAU,qBAAV,EAAiC1I,GAAjC,CAAqC,QAArC,EAA+C,qBAA/C,EAJsB;;EAMtB0/B,IAAAA,GAAG,CAACh3B,KAAJ,CAAU,cAAV,EAA0BzI,KAA1B,CAAgC,QAAhC,EAA0C,kBAA1C,EANsB;;EAQtBy/B,IAAAA,GAAG,CAACh3B,KAAJ,CAAU,qCAAV,EAAiD1I,GAAjD,CAAqD,WAArD,EAAkE,mBAAlE;EACD,GAZ6B;;;EAe9B,MAAIH,SAAS,GAAG2H,GAAG,MAAH,CAAO,YAAP,CAAhB;;EACA,MAAI3H,SAAS,CAACF,KAAV,KAAoB,IAAxB,EAA8B;EAC5BE,IAAAA,SAAS,CAAC6I,KAAV,CAAgB,qBAAhB,EAAuCipB,OAAvC,CAA+C,SAA/C,EAA0D,mBAA1D,EAD4B;;EAG5B9xB,IAAAA,SAAS,CAAC6I,KAAV,CAAgB,oCAAhB,EAAsDipB,OAAtD,CAA8D,QAA9D,EAAwE,yBAAxE,EAH4B;;EAK5B9xB,IAAAA,SAAS,CAAC6I,KAAV,CAAgB,mCAAhB,EAAqDipB,OAArD,CAA6D,QAA7D,EAAuE,yBAAvE,EAL4B;;EAQ5B9xB,IAAAA,SAAS,CACN6I,KADH,CACS,gCADT,EAEGq2B,IAFH,CAEQ,OAFR,EAGGA,IAHH,CAGQ,YAHR,EAIG/+B,GAJH,CAIO,aAJP,EAIsB,gBAJtB;EAKAH,IAAAA,SAAS,CACN6I,KADH,CACS,+BADT,EAEGq2B,IAFH,CAEQ,OAFR,EAGG/+B,GAHH,CAGO,WAHP,EAGoB,KAHpB;EAID;;EAED,MAAIsa,MAAM,GAAG9S,GAAG,MAAH,CAAO,SAAP,CAAb;;EACA,MAAI8S,MAAM,CAAC3a,KAAP,KAAiB,IAArB,EAA2B;;EAEzB2a,IAAAA,MAAM,CAAC5R,KAAP,CAAa,oBAAb,EAAmC1I,GAAnC,CAAuC,QAAvC,EAAiD,kBAAjD,EAFyB;;EAIzBsa,IAAAA,MAAM,CAAC5R,KAAP,CAAa,oCAAb,EAAmD1I,GAAnD,CAAuD,QAAvD,EAAiE,eAAjE,EAJyB;;EAMzBsa,IAAAA,MAAM,CAAC5R,KAAP,CAAa,oBAAb,EAAmC1I,GAAnC,CAAuC,QAAvC,EAAiD,kBAAjD,EANyB;;EAQzBsa,IAAAA,MAAM,CAAC5R,KAAP,CAAa,4BAAb,EAA2C1I,GAA3C,CAA+C,CAAC,SAAD,EAAY,QAAZ,CAA/C,EAAsE,QAAtE,EARyB;;EAUzBsa,IAAAA,MAAM,CAAC5R,KAAP,CAAa,oBAAb,EAAmC1I,GAAnC,CAAuC,QAAvC,EAAiD,kBAAjD,EAVyB;;EAYzBsa,IAAAA,MAAM,CACH5R,KADH,CACS,oFADT,EAEG1I,GAFH,CAEO,WAFP,EAEoB,iBAFpB,EAZyB;;EAgBzBH,IAAAA,SAAS,CACN6I,KADH,CACS,oBADT,EAEGA,KAFH,CAES,kBAFT,EAGGipB,OAHH,CAGW,QAHX,EAGqB,kBAHrB,EAhByB;;;EAuBzB,QAAIgO,SAAS,GAAGrlB,MAAM,MAAN,CAAU8kB,SAAV,CAAhB;;EACA,QAAIO,SAAS,CAAChgC,KAAV,KAAoB,IAAxB,EAA8B;EAC5BggC,MAAAA,SAAS,CAACj3B,KAAV,CAAgB,iDAAiD02B,SAAjD,GAA6D,GAA7E,EAAkFp/B,GAAlF,CAAsF,MAAtF,EAA8F,SAA9F;EACA2/B,MAAAA,SAAS,CAACj3B,KAAV,CAAgB02B,SAAS,GAAG,gCAA5B,EAA8DzN,OAA9D,CAAsE,QAAtE,EAAgF,WAAhF;EACD,KA3BwB;;;EA8BzB,QAAIiO,SAAS,GAAGtlB,MAAM,MAAN,CAAU+kB,SAAV,CAAhB;;EACA,QAAIO,SAAS,KAAK,IAAlB,EAAwB;EACtBA,MAAAA,SAAS,CAACl3B,KAAV,CAAgB,uBAAuB22B,SAAvB,GAAmC,GAAnD,EAAwDr/B,GAAxD,CAA4D,MAA5D,EAAoE,YAApE;EACA4/B,MAAAA,SAAS,CAACl3B,KAAV,CAAgB22B,SAAS,GAAG,uBAA5B,EAAqDr/B,GAArD,CAAyD,QAAzD,EAAmE,WAAnE;EACD,KAlCwB;;;EAqCzB,QAAI6/B,QAAQ,GAAGvlB,MAAM,MAAN,CAAUglB,QAAV,CAAf;;EACA,QAAIO,QAAQ,CAAClgC,KAAT,KAAmB,IAAvB,EAA6B;EAC3BkgC,MAAAA,QAAQ,CAACn3B,KAAT,CAAe,cAAc42B,QAAd,GAAyB,GAAxC,EAA6Ct/B,GAA7C,CAAiD,WAAjD,EAA8D,aAA9D;EACA6/B,MAAAA,QAAQ,CAACn3B,KAAT,CAAe42B,QAAQ,GAAG,uBAA1B,EAAmDt/B,GAAnD,CAAuD,QAAvD,EAAiE,aAAjE;EACD,KAzCwB;;;EA4CzB,QAAI8/B,SAAS,GAAGxlB,MAAM,MAAN,CAAUilB,SAAV,CAAhB;;EACA,QAAIO,SAAS,CAACngC,KAAV,KAAoB,IAAxB,EAA8B;EAC5BmgC,MAAAA,SAAS,CAACp3B,KAAV,CAAgBzD,MAAM,CAACs6B,SAAD,CAAN,GAAoB,uBAApC,EAA6D5N,OAA7D,CAAqE,QAArE,EAA+E,YAA/E;EACAmO,MAAAA,SAAS,CAACp3B,KAAV,CAAgB,qCAAqC62B,SAArC,GAAiD,GAAjE,EAAsE5N,OAAtE,CAA8E,MAA9E,EAAsF,SAAtF;EACAmO,MAAAA,SAAS,CAACp3B,KAAV,CAAgB62B,SAAS,GAAG,iBAA5B,EAA+C5N,OAA/C,CAAuD,MAAvD,EAA+D,UAA/D;EACD,KAjDwB;;;EAoDzB,QAAIoO,UAAU,GAAGzlB,MAAM,MAAN,CAAUklB,UAAV,CAAjB;;EACA,QAAIO,UAAU,CAACpgC,KAAX,KAAqB,IAAzB,EAA+B;EAC7BogC,MAAAA,UAAU,CAACr3B,KAAX,CAAiB,kCAAkC82B,UAAlC,GAA+C,GAAhE,EAAqE7N,OAArE,CAA6E,OAA7E,EAAsF,UAAtF;EACAoO,MAAAA,UAAU,CAACr3B,KAAX,CAAiB,MAAM82B,UAAN,GAAmB,UAApC,EAAgD7N,OAAhD,CAAwD,OAAxD,EAAiE,cAAjE;EACAoO,MAAAA,UAAU,CAACr3B,KAAX,CAAiB,MAAM82B,UAAN,GAAmB,WAApC,EAAiD7N,OAAjD,CAAyD,QAAzD,EAAmE,cAAnE;EACD,KAzDwB;;;EA4DzB,QAAIqO,EAAE,GAAG1lB,MAAM,MAAN,CAAU,IAAV,CAAT;;EACA,QAAI0lB,EAAE,CAACrgC,KAAH,KAAa,IAAjB,EAAuB;EACrBqgC,MAAAA,EAAE,CAACt3B,KAAH,CAAS,yBAAT,EAAoCipB,OAApC,CAA4C,SAA5C,EAAuD,WAAvD;EACAqO,MAAAA,EAAE,CAACt3B,KAAH,CAAS,0BAAT,EAAqCipB,OAArC,CAA6C,SAA7C,EAAwD,kBAAxD;EACD;;EAED,QAAIsO,SAAS,GAAG3lB,MAAM,MAAN,CAAU,YAAV,CAAhB;;EACA,QAAI2lB,SAAS,CAACtgC,KAAV,KAAoB,IAAxB,EAA8B;;EAE5BsgC,MAAAA,SAAS,CAACv3B,KAAV,CAAgB,qBAAhB,EAAuC1I,GAAvC,CAA2C,SAA3C,EAAsD,mBAAtD,EAF4B;;EAI5BigC,MAAAA,SAAS,CAACv3B,KAAV,CAAgB,2BAAhB,EAA6C1I,GAA7C,CAAiD,SAAjD,EAA4D,mBAA5D,EAJ4B;;EAM5BigC,MAAAA,SAAS,CAACv3B,KAAV,CAAgB,gCAAhB,EAAkD1I,GAAlD,CAAsD,QAAtD,EAAgE,6BAAhE,EAN4B;;EAQ5BigC,MAAAA,SAAS,CAACv3B,KAAV,CAAgB,kCAAhB,EAAoD1I,GAApD,CAAwD,QAAxD,EAAkE,+BAAlE,EAR4B;;EAU5BigC,MAAAA,SAAS,CAACv3B,KAAV,CAAgB,mCAAhB,EAAqD1I,GAArD,CAAyD,QAAzD,EAAmE,qBAAnE,EAV4B;;EAY5BigC,MAAAA,SAAS,CAACv3B,KAAV,CAAgB,2BAAhB,EAA6C1I,GAA7C,CAAiD,QAAjD,EAA2D,aAA3D,EAZ4B;;EAe5BigC,MAAAA,SAAS,CACNv3B,KADH,CACS,qEADT,EAEG1I,GAFH,CAEO,SAFP,EAEkB,iBAFlB,EAf4B;;EAoB5BigC,MAAAA,SAAS,CACNv3B,KADH,CACS,mCADT,EAEGA,KAFH,CAES,QAFT,EAGG1I,GAHH,CAGO,QAHP,EAGiB,qBAHjB,EApB4B;;EAyB5BigC,MAAAA,SAAS,CACNv3B,KADH,CACS,2BADT,EAEGq2B,IAFH,CAEQ,OAFR,EAGG/+B,GAHH,CAGO,SAHP,EAGkB,aAHlB,EAIG6G,QAJH,GAKG7G,GALH,CAKO,WALP,EAKoB,aALpB,EAzB4B;;EAiC5BigC,MAAAA,SAAS,CACNv3B,KADH,CACS,0CADT,EAEG1I,GAFH,CAEO,WAFP,EAEoB,iBAFpB,EAGGA,GAHH,CAGO,SAHP,EAGkB,iBAHlB,EAjC4B;;EAuC5BigC,MAAAA,SAAS,CACNv3B,KADH,CACS,oCADT,EAEGq2B,IAFH,CAEQ,OAFR,EAGGA,IAHH,CAGQ,WAHR,EAIG/+B,GAJH,CAIO,SAJP,EAIkB,kBAJlB,EAKG6G,QALH,GAMG7G,GANH,CAMO,WANP,EAMoB,kBANpB,EAvC4B;;EAgD5B,UAAIyI,GAAG,GAAGw3B,SAAS,CAChBv3B,KADO,CACD,+BADC,EAEPq2B,IAFO,CAEF,cAFE,EAGPA,IAHO,CAGF,cAHE,EAIPA,IAJO,CAIF,UAJE,CAAV;EAKAt2B,MAAAA,GAAG,CAAC5B,QAAJ,GAAe7G,GAAf,CAAmB,WAAnB,EAAgC,gBAAhC;EACD;;EAED,QAAIkgC,QAAQ,GAAG5lB,MAAM,MAAN,CAAU,WAAV,CAAf;;EACA,QAAI4lB,QAAQ,KAAK,IAAjB,EAAuB;;EAErBA,MAAAA,QAAQ,CAACx3B,KAAT,CAAe,2CAAf,EAA4D1I,GAA5D,CAAgE,YAAhE,EAA8E,sBAA9E,EAFqB;;EAIrBkgC,MAAAA,QAAQ,CACLx3B,KADH,CACS,mBADT,EAEG7D,KAFH,CAES,YAFT,EAGG7E,GAHH,CAGO,YAHP,EAGqB,eAHrB,EAJqB;;EASrBkgC,MAAAA,QAAQ,CACLx3B,KADH,CAEI,0GAFJ,EAIG1I,GAJH,CAIO,YAJP,EAIqB,gBAJrB,EATqB;;EAgBrBkgC,MAAAA,QAAQ,CACLx3B,KADH,CACS,gCADT,EAEGq2B,IAFH,CAEQ,OAFR,EAGG/+B,GAHH,CAGO,SAHP,EAGkB,iBAHlB,EAIG6G,QAJH,GAKG7G,GALH,CAKO,WALP,EAKoB,iBALpB;EAMD;EACF;;EAED,SAAOwH,GAAP;EACD,CA1LD;;EA2LA,eAAc,GAAGi4B,SAAjB;;EClMA,IAAMU,IAAI,GAAG,iBAAb;;EAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAS54B,GAAT,EAAc;EAC5B,MAAI6jB,EAAE,GAAG7jB,GAAG,MAAH,CAAO,OAAP,CAAT;;EACA,MAAI6jB,EAAE,CAAC1rB,KAAP,EAAc;;EAEZ0rB,IAAAA,EAAE,CAAC3iB,KAAH,CAAS,eAAT,EAA0B1I,GAA1B,CAA8B,QAA9B,EAAwC,YAAxC,EAFY;;EAIZqrB,IAAAA,EAAE,CAAC3iB,KAAH,CAAS,WAAT,EAAsB1I,GAAtB,CAA0B,SAA1B,EAAqC,aAArC,EAJY;;EAMZqrB,IAAAA,EAAE,CAAC3iB,KAAH,CAAS,eAAT,EAA0B1I,GAA1B,CAA8B,MAA9B,EAAsC,YAAtC,EANY;;EAQZqrB,IAAAA,EAAE,CAAC3iB,KAAH,CAAS,cAAT,EAAyB1I,GAAzB,CAA6B,MAA7B,EAAqC,YAArC,EARY;;EAUZqrB,IAAAA,EAAE,CAAC3iB,KAAH,CAAS,qBAAT,EAAgC1I,GAAhC,CAAoC,MAApC,EAA4C,uBAA5C,EAVY;;EAYZqrB,IAAAA,EAAE,CAAC3iB,KAAH,CAAS,8CAAT,EAAyD1I,GAAzD,CAA6D,QAA7D,EAAuE,WAAvE,EAZY;;EAcZqrB,IAAAA,EAAE,CAAC3iB,KAAH,CAAS,kDAAT,EAA6D1I,GAA7D,CAAiE,WAAjE,EAA8E,cAA9E,EAdY;;EAgBZqrB,IAAAA,EAAE,CAAC3iB,KAAH,CAAS,6BAAT,EAAwC1I,GAAxC,CAA4C,UAA5C,EAAwD,kBAAxD,EAhBY;;;;EAqBZqrB,IAAAA,EAAE,CAAC3iB,KAAH,qBAAsBy3B,IAAtB,kBACG7P,GADH,CACO,QADP,EAEGtwB,GAFH,CAEO,WAFP,EAEoB,YAFpB,EArBY;;EAyBZqrB,IAAAA,EAAE,CAAC3iB,KAAH,mBAAoBy3B,IAApB,eACG7P,GADH,CACO,QADP,EAEGtwB,GAFH,CAEO,WAFP,EAEoB,gBAFpB,EAzBY;;EA6BZqrB,IAAAA,EAAE,CAAC3iB,KAAH,qBAAsBy3B,IAAtB,eACG7P,GADH,CACO,QADP,EAEGtwB,GAFH,CAEO,WAFP,EAEoB,YAFpB,EA7BY;;EAiCZqrB,IAAAA,EAAE,CAAC3iB,KAAH,wBAAyBy3B,IAAzB,aACG7P,GADH,CACO,QADP,EAEGtwB,GAFH,CAEO,WAFP,EAEoB,YAFpB,EAjCY;;EAqCZqrB,IAAAA,EAAE,CAAC3iB,KAAH,kBAAmBy3B,IAAnB,mBAAgCA,IAAhC,kBAA4CA,IAA5C,aACG7P,GADH,CACO,QADP,EAEGtwB,GAFH,CAEO,WAFP,EAEoB,YAFpB,EArCY;;EAyCZqrB,IAAAA,EAAE,CAAC3iB,KAAH,oBAAqBy3B,IAArB,iBAAgCA,IAAhC,aACG7P,GADH,CACO,QADP,EAEGtwB,GAFH,CAEO,WAFP,EAEoB,UAFpB,EAzCY;;EA6CZqrB,IAAAA,EAAE,CAAC3iB,KAAH,4BAA6By3B,IAA7B,mBAA0CA,IAA1C,aACG7P,GADH,CACO,QADP,EAEGtwB,GAFH,CAEO,WAFP,EAEoB,UAFpB,EA7CY;;;EAmDZ,QAAIqgC,MAAM,GAAGhV,EAAE,MAAF,CAAM,SAAN,CAAb;;EACA,QAAIgV,MAAM,CAAC1gC,KAAP,KAAiB,IAArB,EAA2B;;EAEzB0gC,MAAAA,MAAM,CAAC33B,KAAP,CAAa,6BAAb,EAA4C1I,GAA5C,CAAgD,MAAhD,EAAwD,cAAxD,EAFyB;;EAIzBqgC,MAAAA,MAAM,CAAC33B,KAAP,CAAa,uBAAb,EAAsC1I,GAAtC,CAA0C,MAA1C,EAAkD,YAAlD,EAJyB;;EAMzBqgC,MAAAA,MAAM,CAAC33B,KAAP,CAAa,yBAAb,EAAwC1I,GAAxC,CAA4C,WAA5C,EAAyD,YAAzD,EANyB;;EAQzBqgC,MAAAA,MAAM,CAAC33B,KAAP,CAAa,qCAAb,EAAoD1I,GAApD,CAAwD,WAAxD,EAAqE,WAArE,EARyB;;EAUzBqgC,MAAAA,MAAM,CACH33B,KADH,CACS,6BADT,EAEGA,KAFH,CAES,eAFT,EAGG1I,GAHH,CAGO,MAHP,EAGe,YAHf,EAVyB;;EAgBzBqgC,MAAAA,MAAM,CACH33B,KADH,CACS,oDADT,EAEGq2B,IAFH,CAEQ,QAFR,EAGG/+B,GAHH,CAGO,4BAHP,EAGqC,kBAHrC;EAID,KAxEW;;;EA2EZ,QAAIsgC,MAAM,GAAGjV,EAAE,MAAF,CAAM,SAAN,CAAb;;EACA,QAAIiV,MAAM,CAAC3gC,KAAP,KAAiB,IAArB,EAA2B;;EAEzB2gC,MAAAA,MAAM,CACH53B,KADH,CACS,+BADT,EAEGm1B,SAFH,GAGG79B,GAHH,CAGO,UAHP,EAGmB,eAHnB,EAFyB;;EAOzBsgC,MAAAA,MAAM,CACH53B,KADH,CACS,gBADT,EAEGm1B,SAFH,GAGG79B,GAHH,CAGO,UAHP,EAGmB,cAHnB,EAPyB;;EAYzBsgC,MAAAA,MAAM,CAAC53B,KAAP,CAAa,mCAAb,EAAkD1I,GAAlD,CAAsD,MAAtD,EAA8D,gBAA9D,EAZyB;;EAe1B,KA3FW;;;EA8FZ,QAAIugC,MAAM,GAAGlV,EAAE,MAAF,CAAM,gCAAN,CAAb;;EACA,QAAIkV,MAAM,CAAC5gC,KAAP,KAAiB,IAArB,EAA2B;;EAEzB,UAAI4gC,MAAM,CAAC7P,GAAP,CAAW,wCAAX,MAAyD,KAA7D,EAAoE;;EAElE6P,QAAAA,MAAM,CAAC73B,KAAP,CAAa,cAAb,EAA6B1I,GAA7B,CAAiC,QAAjC,EAA2C,gBAA3C,EAFkE;;EAIlEugC,QAAAA,MAAM,CACH73B,KADH,CACS,2CADT,EAEGA,KAFH,CAES,IAFT,EAGG1I,GAHH,CAGO,QAHP,EAGiB,WAHjB;EAID;EACF;EACF,GA7G2B;;;EAgH5B,MAAI1C,CAAC,GAAGkK,GAAG,MAAH,CAAO,+BAAP,CAAR;;EACA,MAAIlK,CAAC,CAACqC,KAAN,EAAa;;EAEXrC,IAAAA,CAAC,CAACoL,KAAF,CAAQ,MAAR,EAAgB1I,GAAhB,CAAoB,cAApB,EAAoC,cAApC;EACA1C,IAAAA,CAAC,CAACoL,KAAF,CAAQ,+CAAR,EAAyD1I,GAAzD,CAA6D,cAA7D,EAA6E,QAA7E,EAHW;;EAKX1C,IAAAA,CAAC,CAACoL,KAAF,CAAQ,QAAR,EAAkB1I,GAAlB,CAAsB,cAAtB,EAAsC,gBAAtC;EACA1C,IAAAA,CAAC,CAACoL,KAAF,CAAQ,6BAAR,EAAuC1I,GAAvC,CAA2C,cAA3C,EAA2D,iBAA3D;EACA1C,IAAAA,CAAC,CAACoL,KAAF,CAAQ,OAAR,EAAiB1I,GAAjB,CAAqB,cAArB,EAAqC,iBAArC,EAPW;;EAUX1C,IAAAA,CAAC,CAACoL,KAAF,CAAQ,2DAAR,EACGzI,KADH,CACS,cADT,EAEGD,GAFH,CAEO,aAFP,EAEsB,aAFtB,EAVW;;EAeX1C,IAAAA,CAAC,CAACoL,KAAF,CAAQ,uDAAR,EACGzI,KADH,CACS,cADT,EAEGD,GAFH,CAEO,aAFP,EAEsB,mBAFtB;EAGD;;EAED,SAAOwH,GAAP;EACD,CAtID;;EAuIA,aAAc,GAAG44B,OAAjB;;ECzIA;EACA,IAAMI,YAAY,GAAG,SAAfA,YAAe,CAASh5B,GAAT,EAAc;EACjC,MAAIi5B,GAAG,GAAGj5B,GAAG,MAAH,CAAO,YAAP,CAAV;;EACA,MAAIi5B,GAAG,CAAC9gC,KAAR,EAAe;;EAEb8gC,IAAAA,GAAG,CAAC/3B,KAAJ,CAAU,oBAAV,EAAgC1I,GAAhC,CAAoC,QAApC,EAA8C,YAA9C,EAFa;;EAIbygC,IAAAA,GAAG,CAAC/3B,KAAJ,CAAU,sBAAV,EAAkC1I,GAAlC,CAAsC,SAAtC,EAAiD,aAAjD,EAJa;;EAMbygC,IAAAA,GAAG,CAAC/3B,KAAJ,CAAU,4BAAV,EAAwC1I,GAAxC,CAA4C,MAA5C,EAAoD,kBAApD,EANa;;EAQbygC,IAAAA,GAAG,CAAC/3B,KAAJ,CAAU,mBAAV,EAA+B1I,GAA/B,CAAmC,MAAnC,EAA2C,UAA3C,EARa;;EAUbygC,IAAAA,GAAG,CAAC/3B,KAAJ,CAAU,+CAAV,EAA2D1I,GAA3D,CAA+D,QAA/D,EAAyE,SAAzE,EAVa;;EAYbygC,IAAAA,GAAG,CAAC/3B,KAAJ,CAAU,4BAAV,EAAwC1I,GAAxC,CAA4C,MAA5C,EAAoD,UAApD,EAZa;;EAcbygC,IAAAA,GAAG,CAAC/3B,KAAJ,CAAU,uBAAV,EAAmC1I,GAAnC,CAAuC,WAAvC,EAAoD,WAApD;EACD;;EACD,SAAOwH,GAAP;EACD,CAnBD;;EAoBA,kBAAc,GAAGg5B,YAAjB;;ECrBA;EACA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAASl5B,GAAT,EAAc;;EAE7BA,EAAAA,GAAG,CAACkB,KAAJ,CAAU,oBAAV,EAAgC1I,GAAhC,CAAoC,UAApC,EAAgD,kBAAhD;EAEA,MAAI2gC,GAAG,GAAGn5B,GAAG,MAAH,CAAO,QAAP,CAAV;;EACA,MAAIm5B,GAAG,CAAChhC,KAAJ,KAAc,IAAlB,EAAwB;;EAEtBghC,IAAAA,GAAG,CAACj4B,KAAJ,CAAU,gBAAV,EAA4B1I,GAA5B,CAAgC,OAAhC,EAAyC,cAAzC,EAFsB;;;EAItB2gC,IAAAA,GAAG,CAACj4B,KAAJ,CAAU,6BAAV,EAAyC1I,GAAzC,CAA6C,OAA7C,EAAsD,kBAAtD,EAJsB;;EAMtB2gC,IAAAA,GAAG,CAACj4B,KAAJ,CAAU,8BAAV,EAA0C1I,GAA1C,CAA8C,OAA9C,EAAuD,iBAAvD,EANsB;;EAQtB2gC,IAAAA,GAAG,CAACj4B,KAAJ,CAAU,uBAAV,EAAmC1I,GAAnC,CAAuC,aAAvC,EAAsD,aAAtD,EARsB;;EAUtB2gC,IAAAA,GAAG,CAACj4B,KAAJ,CAAU,4BAAV,EAAwC1I,GAAxC,CAA4C,aAA5C,EAA2D,mBAA3D,EAVsB;;EAYtB2gC,IAAAA,GAAG,CAACj4B,KAAJ,CAAU,wBAAV,EAAoC1I,GAApC,CAAwC,QAAxC,EAAkD,oBAAlD,EAZsB;;;;EAgBtB2gC,IAAAA,GAAG,CACAj4B,KADH,CACS,mBADT,EAEG1I,GAFH,CAEO,OAFP,EAEgB,gBAFhB,EAGG6G,QAHH,GAIG7G,GAJH,CAIO,MAJP,EAIe,YAJf,EAhBsB;;EAuBtB2gC,IAAAA,GAAG,CACAj4B,KADH,CACS,aADT,EAEGA,KAFH,CAES,qBAFT,EAGG1I,GAHH,CAGO,SAHP,EAGkB,eAHlB;EAID;;EACD,SAAOwH,GAAP;EACD,CAlCD;;EAmCA,cAAc,GAAGk5B,QAAjB;;ECpCA;EACA,IAAME,KAAK,GAAG,oDAAd;EACA,IAAMC,QAAQ,GAAG,mDAAjB;EACA,IAAMC,QAAQ,GAAG,uDAAjB;EACA,IAAMC,OAAO,GAAG,oCAAhB;EACA,IAAM5C,MAAM,GAAG,gDAAf;EACA,IAAM5pB,OAAK,GAAG,aAAd;EACA,IAAMysB,KAAK,GAAG,2FAAd;;;EAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAC3jC,CAAD,EAAI6F,MAAJ,EAAe;EAC7B,MAAI7F,CAAC,CAACqC,KAAF,KAAY,IAAhB,EAAsB;EACpB;EACD;;EACD,MAAI6E,IAAI,GAAGlH,CAAC,CAAC+xB,QAAF,GAAa,CAAb,CAAX;;EACA,MAAI7qB,IAAJ,EAAU;EACR,QAAIqoB,GAAG,GAAGqU,QAAQ,CAAC18B,IAAI,CAACvF,KAAN,EAAa,EAAb,CAAlB;;EACA,QAAI4tB,GAAG,IAAIA,GAAG,GAAG,IAAb,IAAqBA,GAAG,GAAG,IAA/B,EAAqC;EACnCvvB,MAAAA,CAAC,CAAC0C,GAAF,CAAM,MAAN,EAAcmD,MAAd;EACD;EACF;EACF,CAXD;;;EAaA,IAAMg+B,WAAW,GAAG,SAAdA,WAAc,CAAC7jC,CAAD,EAAI6F,MAAJ,EAAe;EACjC,MAAI7F,CAAC,CAACqC,KAAF,KAAY,IAAhB,EAAsB;EACpB;EACD;;EACD,MAAI6E,IAAI,GAAGlH,CAAC,CAAC+xB,QAAF,GAAa,CAAb,CAAX;;EACA,MAAI7qB,IAAJ,EAAU;EACR,QAAIqoB,GAAG,GAAGqU,QAAQ,CAAC18B,IAAI,CAACvF,KAAN,EAAa,EAAb,CAAlB;;EACA,QAAI4tB,GAAG,IAAIA,GAAG,GAAG,IAAb,IAAqBA,GAAG,GAAG,IAA/B,EAAqC;EACnCvvB,MAAAA,CAAC,CAAC0C,GAAF,CAAM,MAAN,EAAcmD,MAAd;EACD;EACF;EACF,CAXD;;EAaA,IAAMi+B,QAAQ,GAAG,SAAXA,QAAW,CAAS55B,GAAT,EAAc;EAC7BA,EAAAA,GAAG,CAACkB,KAAJ,CAAU,sDAAV,EAAkE1I,GAAlE,CAAsE,MAAtE,EAA8E,cAA9E;EACAwH,EAAAA,GAAG,CAACkB,KAAJ,CAAU,wBAAV,EAAoC1I,GAApC,CAAwC,MAAxC,EAAgD,YAAhD,EAF6B;;EAK7B,MAAIsa,MAAM,GAAG9S,GAAG,MAAH,CAAO22B,MAAP,CAAb;;EACA,MAAI7jB,MAAM,CAAC3a,KAAP,KAAiB,IAArB,EAA2B;;EAEzB2a,IAAAA,MAAM,CAAC5R,KAAP,iEAAsEy1B,MAAtE,QAAiFn+B,GAAjF,CAAqF,QAArF,EAA+F,cAA/F,EAFyB;;EAIzBsa,IAAAA,MAAM,CAAC5R,KAAP,wBAA6By1B,MAA7B,QAAwCn+B,GAAxC,CAA4C,QAA5C,EAAsD,mBAAtD,EAJyB;;EAMzBsa,IAAAA,MAAM,CAAC5R,KAAP,YAAiBy1B,MAAjB,+BAAmDn+B,GAAnD,CAAuD,QAAvD,EAAiE,cAAjE,EANyB;;EAQzBsa,IAAAA,MAAM,CAAC5R,KAAP,YAAiBy1B,MAAjB,eAAmCn+B,GAAnC,CAAuC,QAAvC,EAAiD,aAAjD,EARyB;;EAUzBsa,IAAAA,MAAM,CAAC5R,KAAP,mBAAwBy1B,MAAxB,QAAmCn+B,GAAnC,CAAuC,QAAvC,EAAiD,aAAjD,EAVyB;;EAYzBsa,IAAAA,MAAM,CAAC5R,KAAP,4BAAiCy1B,MAAjC,QAA4Cn+B,GAA5C,CAAgD,QAAhD,EAA0D,YAA1D,EAZyB;;EAczBsa,IAAAA,MAAM,CAAC5R,KAAP,oBAAyBy1B,MAAzB,QAAoCn+B,GAApC,CAAwC,QAAxC,EAAkD,QAAlD,EAdyB;;EAgBzBsa,IAAAA,MAAM,CAAC5R,KAAP,YAAiBy1B,MAAjB,gBAAoCn+B,GAApC,CAAwC,QAAxC,EAAkD,QAAlD,EAhByB;;EAkBzBsa,IAAAA,MAAM,CAAC5R,KAAP,YAAiBy1B,MAAjB,oBAAwCn+B,GAAxC,CAA4C,OAA5C,EAAqD,cAArD,EAlByB;;EAoBzBsa,IAAAA,MAAM,CAAC5R,KAAP,kBAAuBy1B,MAAvB,QAAkCn+B,GAAlC,CAAsC,OAAtC,EAA+C,gBAA/C,EApByB;;EAsBzBsa,IAAAA,MAAM,CAAC5R,KAAP,YAAiBy1B,MAAjB,oBAAwCn+B,GAAxC,CAA4C,OAA5C,EAAqD,SAArD,EAtByB;;EAwBzBsa,IAAAA,MAAM,CAAC5R,KAAP,sBAA2By1B,MAA3B,QAAsCn+B,GAAtC,CAA0C,OAA1C,EAAmD,YAAnD,EAxByB;;EA0BzBsa,IAAAA,MAAM,CACH5R,KADH,WACYk4B,KADZ,cACqBzC,MADrB,GAEGY,IAFH,CAEQ,UAFR,EAGGt5B,KAHH,CAGS,CAHT,EAIGzF,GAJH,CAIO,OAJP,EAIgB,aAJhB,EA1ByB;;EAgCzBsa,IAAAA,MAAM,CAAC5R,KAAP,6BAAkCy1B,MAAlC,QAA6Cn+B,GAA7C,CAAiD,OAAjD,EAA0D,gBAA1D,EAhCyB;EAiC1B,GAvC4B;;;EA0C7B,MAAIqhC,IAAI,GAAG75B,GAAG,MAAH,CAAO+M,OAAP,CAAX;;EACA,MAAI8sB,IAAI,CAAC1hC,KAAL,KAAe,IAAnB,EAAyB;;EAEvB0hC,IAAAA,IAAI,CACD34B,KADH,mBACoB6L,OADpB,GAEG1N,QAFH,GAGG7G,GAHH,CAGO,YAHP,EAGqB,YAHrB;EAIAqhC,IAAAA,IAAI,CACD34B,KADH,WACY6L,OADZ,eAEG1N,QAFH,GAGG7G,GAHH,CAGO,YAHP,EAGqB,YAHrB,EANuB;;EAWvBqhC,IAAAA,IAAI,CACD34B,KADH,WACYk4B,KADZ,cACqBrsB,OADrB,GAEG1N,QAFH,GAGG7G,GAHH,CAGO,OAHP,EAGgB,UAHhB,EAXuB;;EAgBvBqhC,IAAAA,IAAI,CACD34B,KADH,4BAC6B6L,OAD7B,GAEG1N,QAFH,GAGG7G,GAHH,CAGO,OAHP,EAGgB,YAHhB,EAhBuB;;EAqBvBqhC,IAAAA,IAAI,CACD34B,KADH,WACY6L,OADZ,mBAEGspB,SAFH,GAGG79B,GAHH,CAGO,OAHP,EAGgB,WAHhB;EAIAqhC,IAAAA,IAAI,CACD34B,KADH,sBACuB6L,OADvB,GAEG1N,QAFH,GAGG7G,GAHH,CAGO,OAHP,EAGgB,cAHhB,EAzBuB;;EA8BvBqhC,IAAAA,IAAI,CACD34B,KADH,YACa6L,OADb,iBAEG1N,QAFH,GAGG7G,GAHH,CAGO,OAHP,EAGgB,eAHhB;EAIAqhC,IAAAA,IAAI,CACD34B,KADH,qBACsB6L,OADtB,QAEG1N,QAFH,GAGG7G,GAHH,CAGO,OAHP,EAGgB,eAHhB;EAKA,QAAIshC,KAAK,GAAG95B,GAAG,MAAH,CAAO,OAAP,CAAZ;;EACA,QAAI85B,KAAK,CAAC3hC,KAAN,KAAgB,IAApB,EAA0B;;EAExB2hC,MAAAA,KAAK,CAAC54B,KAAN,CAAY,kCAAZ,EAAgD1I,GAAhD,CAAoD,YAApD,EAAkE,UAAlE,EAFwB;;EAIxBshC,MAAAA,KAAK,CAAC54B,KAAN,CAAY,gBAAZ,EAA8B1I,GAA9B,CAAkC,YAAlC,EAAgD,YAAhD;EACD;EACF,GAzF4B;;;EA2F7B,MAAIuhC,GAAG,GAAG/5B,GAAG,MAAH,CAAO,KAAP,CAAV;;EACA,MAAI+5B,GAAG,CAAC5hC,KAAJ,KAAc,IAAlB,EAAwB;;EAEtB4hC,IAAAA,GAAG,CAAC74B,KAAJ,CAAU,aAAV,EAAyB1I,GAAzB,CAA6B,SAA7B,EAAwC,SAAxC,EAFsB;;EAItBuhC,IAAAA,GAAG,CACA74B,KADH,CACS,kBADT,EAEG1I,GAFH,CAEO,MAFP,EAGG69B,SAHH,GAIG79B,GAJH,CAIO,SAJP,EAIkB,aAJlB,EAJsB;;EAUtBuhC,IAAAA,GAAG,CAAC74B,KAAJ,CAAU,mBAAV,EAA+B1I,GAA/B,CAAmC,UAAnC,EAA+C,SAA/C;EACD,GAvG4B;;;EA0G7B,MAAIwhC,GAAG,GAAGh6B,GAAG,MAAH,CAAO,KAAP,CAAV;;EACA,MAAIg6B,GAAG,CAAC7hC,KAAR,EAAe;;EAEb6hC,IAAAA,GAAG,CAAC94B,KAAJ,CAAU,aAAV,EAAyB1I,GAAzB,CAA6B,SAA7B,EAAwC,SAAxC,EAFa;;EAIbwhC,IAAAA,GAAG,CAAC94B,KAAJ,WAAak4B,KAAb,aAA4B5gC,GAA5B,CAAgC,SAAhC,EAA2C,KAA3C;EACD,GAhH4B;;;EAmH7B,MAAIyhC,KAAK,GAAGj6B,GAAG,MAAH,CAAO,QAAP,CAAZ;;EACA,MAAIi6B,KAAK,CAAC9hC,KAAN,KAAgB,IAApB,EAA0B;;EAExB8hC,IAAAA,KAAK,CAAC/4B,KAAN,uBAAkC1I,GAAlC,CAAsC,MAAtC,EAA8C,wBAA9C,EAFwB;;EAIxByhC,IAAAA,KAAK,CAAC/4B,KAAN,CAAY,kBAAZ,EAAgC1I,GAAhC,CAAoC,MAApC,EAA4C,gBAA5C,EAJwB;;EAMxByhC,IAAAA,KAAK,CAAC/4B,KAAN,CAAY,kBAAZ,EAAgC1I,GAAhC,CAAoC,MAApC,EAA4C,gBAA5C,EANwB;;EAQxByhC,IAAAA,KAAK,CAAC/4B,KAAN,CAAY,yBAAZ,EAAuC1I,GAAvC,CAA2C,MAA3C,EAAmD,gBAAnD,EARwB;;EAUxByhC,IAAAA,KAAK,CAAC/4B,KAAN,CAAY,mBAAZ,EAAiC1I,GAAjC,CAAqC,MAArC,EAA6C,iBAA7C;EACD,GA/H4B;;;EAkI7B,MAAI2gC,GAAG,GAAGn5B,GAAG,MAAH,CAAO,QAAP,CAAV;;EACA,MAAIm5B,GAAG,CAAChhC,KAAJ,KAAc,IAAlB,EAAwB;;EAEtBghC,IAAAA,GAAG,CAACj4B,KAAJ,CAAU,sBAAV,EAAkC1I,GAAlC,CAAsC,OAAtC,EAA+C,YAA/C,EAFsB;;EAItB2gC,IAAAA,GAAG,CAACj4B,KAAJ,CAAU,+BAAV,EAA2C1I,GAA3C,CAA+C,OAA/C,EAAwD,mBAAxD,EAJsB;;EAMtB2gC,IAAAA,GAAG,CAACj4B,KAAJ,CAAU,yBAAV,EAAqC1I,GAArC,CAAyC,OAAzC,EAAkD,aAAlD,EANsB;;EAQtB2gC,IAAAA,GAAG,CAACj4B,KAAJ,CAAU,cAAV,EAA0B1I,GAA1B,CAA8B,OAA9B,EAAuC,aAAvC,EARsB;;EAUtB2gC,IAAAA,GAAG,CAACj4B,KAAJ,CAAU,mCAAV,EAA+C1I,GAA/C,CAAmD,OAAnD,EAA4D,cAA5D,EAVsB;;EAYtB2gC,IAAAA,GAAG,CACAj4B,KADH,CACS,0BADT,EAEGq2B,IAFH,CAEQ,QAFR,EAGG/+B,GAHH,CAGO,MAHP,EAGe,YAHf,EAZsB;;EAkBtB2gC,IAAAA,GAAG,CACAj4B,KADH,CACS,0BADT,EAEGq2B,IAFH,CAEQ,QAFR,EAGG/+B,GAHH,CAGO,MAHP,EAGe,YAHf,EAlBsB;;EAwBtB2gC,IAAAA,GAAG,CACAj4B,KADH,CACS,uBADT,QAEM,OAFN,EAGG1I,GAHH,CAGO,OAHP,EAGgB,gBAHhB,EAxBsB;;EA8BtB,QAAI0hC,QAAQ,GAAGf,GAAG,MAAH,CAAO,WAAP,CAAf;;EACA,QAAIe,QAAQ,CAAC/hC,KAAT,KAAmB,IAAvB,EAA6B;;EAE3B+hC,MAAAA,QAAQ,CAACh5B,KAAT,CAAe,sBAAf,EAAuC1I,GAAvC,CAA2C,MAA3C,EAAmD,gBAAnD,EAF2B;;EAI3B0hC,MAAAA,QAAQ,CAACh5B,KAAT,CAAe,+BAAf,EAAgD1I,GAAhD,CAAoD,MAApD,EAA4D,0BAA5D,EAJ2B;;EAM3B0hC,MAAAA,QAAQ,CAACh5B,KAAT,WAAkBk4B,KAAlB,yBAA6C5gC,GAA7C,CAAiD,MAAjD,EAAyD,gBAAzD,EAN2B;;EAQ3B0hC,MAAAA,QAAQ,CAACh5B,KAAT,CAAe,sBAAf,EAAuCzI,KAAvC,CAA6C,MAA7C,EAAqD,eAArD;EACD,KAxCqB;;;EA0CtB,QAAI0hC,IAAI,GAAGhB,GAAG,MAAH,CAAOK,KAAP,CAAX;;EACA,QAAIW,IAAI,CAAChiC,KAAL,KAAe,IAAnB,EAAyB;EACvBgiC,MAAAA,IAAI,CAACj5B,KAAL,CAAW,UAAX,EAAuB1I,GAAvB,CAA2B,OAA3B,EAAoC,SAApC,EADuB;;EAGvB2hC,MAAAA,IAAI,CAACj5B,KAAL,WAAcs4B,KAAd,kBAAkChhC,GAAlC,CAAsC,OAAtC,EAA+C,qBAA/C;EACD;EACF,GAnL4B;;;EAsL7B,MAAI4hC,MAAM,GAAGp6B,GAAG,MAAH,CAAOu5B,OAAP,CAAb;;EACA,MAAIa,MAAM,CAACjiC,KAAP,KAAiB,IAArB,EAA2B;EACzBiiC,IAAAA,MAAM,CAACl5B,KAAP,WAAgBk4B,KAAhB,eAA0BC,QAA1B,cAAsCE,OAAtC,GAAiD/gC,GAAjD,CAAqD,MAArD,EAA6D,iBAA7D;EACA4hC,IAAAA,MAAM,CAACl5B,KAAP,gBAAqBo4B,QAArB,iBAAoCC,OAApC,GAA+C/gC,GAA/C,CAAmD,MAAnD,EAA2D,gBAA3D;EACA4hC,IAAAA,MAAM,CAACl5B,KAAP,WAAgBq4B,OAAhB,cAA2BH,KAA3B,kBAA+C5gC,GAA/C,CAAmD,MAAnD,EAA2D,aAA3D;EACD,GA3L4B;;;EA8L7B,MAAI6hC,IAAI,GAAGr6B,GAAG,MAAH,CAAO,OAAP,CAAX;;EACA,MAAIq6B,IAAI,CAACliC,KAAL,KAAe,IAAnB,EAAyB;;EAEvBkiC,IAAAA,IAAI,CAACn5B,KAAL,CAAW,qBAAX,EAAkC1I,GAAlC,CAAsC,MAAtC,EAA8C,YAA9C,EAFuB;;EAIvB6hC,IAAAA,IAAI,CAACn5B,KAAL,WAAcm4B,QAAd,aAAgC7gC,GAAhC,CAAoC,MAApC,EAA4C,UAA5C,EAJuB;;EAMvB6hC,IAAAA,IAAI,CAACn5B,KAAL,CAAW,oCAAX,EAAiD1I,GAAjD,CAAqD,MAArD,EAA6D,IAA7D,EANuB;;EAQvB6hC,IAAAA,IAAI,CAACn5B,KAAL,CAAW,6DAAX,EAA0E1I,GAA1E,CAA8E,MAA9E,EAAsF,UAAtF,EARuB;;EAUvB6hC,IAAAA,IAAI,CAACn5B,KAAL,gBAAmBo4B,QAAnB,gBAAwC9gC,GAAxC,CAA4C,MAA5C,EAAoD,YAApD,EAVuB;;EAYvB6hC,IAAAA,IAAI,CAACn5B,KAAL,CAAW,6BAAX,EAA0C1I,GAA1C,CAA8C,MAA9C,EAAsD,aAAtD,EAZuB;;EAcvB6hC,IAAAA,IAAI,CAACn5B,KAAL,CAAW,kCAAX,EAA+C1I,GAA/C,CAAmD,MAAnD,EAA2D,eAA3D,EAduB;;EAgBvB6hC,IAAAA,IAAI,CACDn5B,KADH,CACS,8CADT,EAEG4nB,GAFH,CAEO,QAFP,EAGGtwB,GAHH,CAGO,MAHP,EAGe,sBAHf,EAhBuB;;EAqBvB6hC,IAAAA,IAAI,CACDn5B,KADH,CACS,iBADT,EAEGzI,KAFH,CAES,MAFT,EAGGA,KAHH,CAGS,QAHT,EAIGD,GAJH,CAIO,MAJP,EAIe,SAJf,EArBuB;;EA2BvB6hC,IAAAA,IAAI,CACDn5B,KADH,CACS,+BADT,EAEGq2B,IAFH,CAEQ,WAFR,EAGG/+B,GAHH,CAGO,MAHP,EAGe,gBAHf;EAID,GA9N4B;;;EAiO7B,MAAI8hC,QAAQ,GAAGt6B,GAAG,MAAH,CAAO,WAAP,CAAf;;EACA,MAAIs6B,QAAQ,CAACniC,KAAT,KAAmB,IAAvB,EAA6B;EAC3B,QAAI5B,CAAC,GAAG+jC,QAAQ,CAACp5B,KAAT,4BAAR;EACAu4B,IAAAA,OAAO,CAACljC,CAAD,EAAI,iBAAJ,CAAP,CAF2B;;EAI3BA,IAAAA,CAAC,GAAG+jC,QAAQ,CAACp5B,KAAT,sBAAJ;EACAu4B,IAAAA,OAAO,CAACljC,CAAD,EAAI,WAAJ,CAAP,CAL2B;;EAO3BA,IAAAA,CAAC,GAAG+jC,QAAQ,CAACp5B,KAAT,6BAAJ;EACAu4B,IAAAA,OAAO,CAACljC,CAAD,EAAI,kBAAJ,CAAP,CAR2B;;EAU3BA,IAAAA,CAAC,GAAG+jC,QAAQ,CAACp5B,KAAT,uCAAJ;EACAu4B,IAAAA,OAAO,CAACljC,CAAD,EAAI,kBAAJ,CAAP,CAX2B;;EAa3BA,IAAAA,CAAC,GAAG+jC,QAAQ,CAACp5B,KAAT,iEAAJ;EACAu4B,IAAAA,OAAO,CAACljC,CAAD,EAAI,SAAJ,CAAP,CAd2B;;EAgB3BA,IAAAA,CAAC,GAAG+jC,QAAQ,CAACp5B,KAAT,CAAe,2BAAf,CAAJ;EACAu4B,IAAAA,OAAO,CAACljC,CAAD,EAAI,SAAJ,CAAP,CAjB2B;;EAmB3BA,IAAAA,CAAC,GAAG+jC,QAAQ,CAACp5B,KAAT,CAAe,8BAAf,CAAJ;EACAu4B,IAAAA,OAAO,CAACljC,CAAD,EAAI,SAAJ,CAAP,CApB2B;;EAsB3BA,IAAAA,CAAC,GAAG+jC,QAAQ,CAACp5B,KAAT,CAAe,sBAAf,CAAJ;EACAu4B,IAAAA,OAAO,CAACljC,CAAD,EAAI,SAAJ,CAAP,CAvB2B;;EAyB3BA,IAAAA,CAAC,GAAG+jC,QAAQ,CAACp5B,KAAT,CAAe,yBAAf,CAAJ;EACAy4B,IAAAA,WAAW,CAACpjC,CAAD,EAAI,SAAJ,CAAX,CA1B2B;;EA4B3BA,IAAAA,CAAC,GAAG+jC,QAAQ,CAACp5B,KAAT,wBAAJ;EACAy4B,IAAAA,WAAW,CAACpjC,CAAD,EAAI,aAAJ,CAAX;EACD;;EAED,MAAIgkC,IAAI,GAAGv6B,GAAG,MAAH,CAAO,OAAP,CAAX;;EACA,MAAIu6B,IAAI,CAACpiC,KAAL,KAAe,IAAnB,EAAyB;;EAEvBoiC,IAAAA,IAAI,CAACr5B,KAAL,CAAW,oCAAX,EAAiD1I,GAAjD,CAAqD,MAArD,EAA6D,kBAA7D,EAFuB;;EAIvB+hC,IAAAA,IAAI,CACDr5B,KADH,CACS,iBADT,EAEG4nB,GAFH,CAEO,OAFP,EAGGtwB,GAHH,CAGO,MAHP,EAGe,YAHf,EAJuB;;EASvB+hC,IAAAA,IAAI,CAACr5B,KAAL,CAAW,4CAAX,EAAyD1I,GAAzD,CAA6D,MAA7D,EAAqE,UAArE,EATuB;;EAWvB+hC,IAAAA,IAAI,CAACr5B,KAAL,CAAW,uBAAX,EAAoC1I,GAApC,CAAwC,MAAxC,EAAgD,eAAhD;EACD;;EAED,SAAOwH,GAAP;EACD,CAlRD;;EAmRA,cAAc,GAAG45B,QAAjB;;EC9SA,IAAMY,WAAW,GAAG,SAAdA,WAAc,CAASx6B,GAAT,EAAc;EAChCy6B,EAAAA,QAAa,CAACz6B,GAAD,CAAb;EACAw3B,EAAAA,UAAQ,CAACx3B,GAAD,CAAR;EACAi4B,EAAAA,WAAS,CAACj4B,GAAD,CAAT;EACA44B,EAAAA,SAAO,CAAC54B,GAAD,CAAP;EACAg5B,EAAAA,cAAY,CAACh5B,GAAD,CAAZ;EACAk5B,EAAAA,UAAQ,CAACl5B,GAAD,CAAR;EACA45B,EAAAA,UAAQ,CAAC55B,GAAD,CAAR;EACA06B,EAAAA,OAAO,CAAC16B,GAAD,CAAP;EACA,SAAOA,GAAP;EACD,CAVD;;EAWA,iBAAc,GAAGw6B,WAAjB;;ECfA;;EACA,IAAM1U,MAAM,GAAG,SAATA,MAAS,CAAS9lB,GAAT,EAAc;EAC3B,MAAI/B,KAAK,GAAG+B,GAAG,CAAC6nB,QAAJ,EAAZ,CAD2B;;EAG3B7nB,EAAAA,GAAG,GAAG26B,OAAI,CAAC36B,GAAD,AAAA,CAAV,CAH2B;;EAM3BA,EAAAA,GAAG,GAAGwzB,YAAS,CAACxzB,GAAD,AAAA,CAAf,CAN2B;;EAS3BA,EAAAA,GAAG,GAAGioB,eAAY,CAACjoB,GAAD,CAAlB,CAT2B;;EAY3BA,EAAAA,GAAG,GAAGy2B,YAAS,CAACz2B,GAAD,CAAf,CAZ2B;;;;EAkB3BA,EAAAA,GAAG,GAAGw6B,aAAW,CAACx6B,GAAD,CAAjB,CAlB2B;;;EAsB3B,SAAOA,GAAP;EACD,CAvBD;;EAwBA,aAAc,GAAG8lB,MAAjB;;EC/BA,IAAM8U,SAAS,GAAG,SAAZA,SAAY,CAASC,GAAT,EAAc;;EAAA,MAExBC,QAFwB;EAAA;EAAA;EAAA;;EAAA;EAAA;;EAAA;EAAA;;EAAA;EAAA,IAEPD,GAFO;;EAW9BA,EAAAA,GAAG,CAAC9+B,SAAJ,CAAcg/B,QAAd,GAAyB,UAAShlC,CAAT,EAAY;EACnC,QAAImL,KAAK,GAAG,KAAKA,KAAL,CAAW,UAAX,CAAZ;;EACA,QAAI,OAAOnL,CAAP,KAAa,QAAjB,EAA2B;EACzBmL,MAAAA,KAAK,GAAGA,KAAK,CAAC/C,GAAN,CAAUpI,CAAV,CAAR;EACD;;EACD,WAAO,IAAI+kC,QAAJ,CAAa55B,KAAK,CAACf,IAAnB,EAAyB,IAAzB,EAA+B,KAAK7H,KAApC,CAAP;EACD,GAND;;EAOA,SAAOuiC,GAAP;EACD,CAnBD;;EAoBA,YAAc,GAAGD,SAAjB;;ECpBA,IAAMA,WAAS,GAAG,SAAZA,SAAY,CAASC,GAAT,EAAc;;EAAA,MAExBG,YAFwB;EAAA;EAAA;EAAA;;EAG5B,0BAAY76B,IAAZ,EAAkBO,IAAlB,EAAwBpI,KAAxB,EAA+B;EAAA;;EAAA;;EAC7B,wFAAM6H,IAAN,EAAYO,IAAZ,EAAkBpI,KAAlB;EACA,YAAK2iC,UAAL,GAAkB,IAAlB;EAF6B;EAG9B;;;;EAN2B;EAAA;EAAA,+BAQnB;EACP,aAAK96B,IAAL,CAAUpJ,OAAV,CAAkB,UAAAd,CAAC,EAAI;EACrB,cAAIgI,KAAK,GAAGhI,CAAC,CAACgI,KAAF,EAAZ,CADqB;;EAGrB,cAAIi9B,WAAW,GAAGj9B,KAAK,CAAC,CAAD,CAAL,CAASk9B,WAAT,EAAlB;EAEAl9B,UAAAA,KAAK,CAAClH,OAAN,CAAc,UAACV,CAAD,EAAIzB,CAAJ,EAAU;;;EAGtByB,YAAAA,CAAC,CAAC+kB,GAAF,CAAM/kB,CAAC,CAACyC,QAAF,IAAczC,CAAC,CAAC1B,IAAtB;EACA0B,YAAAA,CAAC,CAACyC,QAAF,GAAaO,SAAb,CAJsB;;EAOtB,gBAAIzE,CAAC,GAAGqJ,KAAK,CAACjJ,MAAN,GAAe,CAAvB,EAA0B;EACxBqB,cAAAA,CAAC,CAAC6B,IAAF,IAAU,GAAV;EACD;EACF,WAVD,EALqB;;EAiBrB,cAAIgjC,WAAJ,EAAiB;EACfj9B,YAAAA,KAAK,CAAC,CAAD,CAAL,CAASynB,WAAT;EACD;EACF,SApBD;EAqBA,eAAO,IAAP;EACD;EA/B2B;;EAAA;EAAA,IAEHmV,GAFG;;;;;;;;;;;EA4C9BA,EAAAA,GAAG,CAAC9+B,SAAJ,CAAcksB,YAAd,GAA6B,UAASlyB,CAAT,EAAY;;EAEvC,QAAIoC,KAAK,GAAG,KAAK+I,KAAL,CAAW,kBAAX,CAAZ,CAFuC;;EAIvC,QAAI,OAAOnL,CAAP,KAAa,QAAjB,EAA2B;EACzBoC,MAAAA,KAAK,GAAGA,KAAK,CAACgG,GAAN,CAAUpI,CAAV,CAAR;EACD;;EACD,WAAO,IAAIilC,YAAJ,CAAiB7iC,KAAK,CAACgI,IAAvB,EAA6B,IAA7B,EAAmC,KAAK7H,KAAxC,CAAP;EACD,GARD,CA5C8B;;;EAuD9BuiC,EAAAA,GAAG,CAAC9+B,SAAJ,CAAcq/B,QAAd,GAAyBP,GAAG,CAAC9+B,SAAJ,CAAcs/B,UAAvC;EACAR,EAAAA,GAAG,CAAC9+B,SAAJ,CAAck/B,UAAd,GAA2BJ,GAAG,CAAC9+B,SAAJ,CAAcu/B,YAAzC;EACA,SAAOT,GAAP;EACD,CA1DD;;EA2DA,kBAAc,GAAGD,WAAjB;;EC3DA,IAAMW,IAAI,GAAG,IAAb;EACA,IAAMC,KAAK,GAAG,IAAd;;EAEA,IAAMZ,WAAS,GAAG,SAAZA,SAAY,CAASC,GAAT,EAAc;;EAAA,MAExBxuB,WAFwB;EAAA;EAAA;EAAA;;EAAA;EAAA;;EAAA;EAAA;;EAAA;EAAA;;;EAAA,+BAInB;EACP,aAAKlM,IAAL,CAAUpJ,OAAV,CAAkB,UAAAd,CAAC,EAAI;EACrB,cAAImN,KAAK,GAAGnN,CAAC,CAACgI,KAAF,CAAQ,CAAR,CAAZ;EACAmF,UAAAA,KAAK,CAACnL,GAAN,GAAYmL,KAAK,CAACnL,GAAN,CAAUJ,OAAV,CAAkB0jC,IAAlB,EAAwB,EAAxB,CAAZ;EACA,cAAIxgC,IAAI,GAAG9E,CAAC,CAACoJ,QAAF,EAAX;EACAtE,UAAAA,IAAI,CAAC7C,IAAL,GAAY6C,IAAI,CAAC7C,IAAL,CAAUL,OAAV,CAAkB2jC,KAAlB,EAAyB,EAAzB,CAAZ;EACD,SALD;EAMA,eAAO,IAAP;EACD;EAZ2B;;EAAA;EAAA,IAEJX,GAFI;;EAe9BA,EAAAA,GAAG,CAAC9+B,SAAJ,CAAc+rB,WAAd,GAA4B,UAAS/xB,CAAT,EAAY;EACtC,QAAIoK,IAAI,GAAG,EAAX;EACA,SAAKA,IAAL,CAAUpJ,OAAV,CAAkB,UAAAd,CAAC,EAAI;EACrB,UAAIgI,KAAK,GAAGhI,CAAC,CAACgI,KAAF,EAAZ,CADqB;;EAGrB,WAAK,IAAIrJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqJ,KAAK,CAACjJ,MAA1B,EAAkCJ,CAAC,IAAI,CAAvC,EAA0C;EACxC,YAAMyB,CAAC,GAAG4H,KAAK,CAACrJ,CAAD,CAAf;;EACA,YAAI2mC,IAAI,CAAChkC,IAAL,CAAUlB,CAAC,CAAC4B,GAAZ,CAAJ,EAAsB;;EAEpB,eAAK,IAAIjC,CAAC,GAAGpB,CAAb,EAAgBoB,CAAC,GAAGiI,KAAK,CAACjJ,MAA1B,EAAkCgB,CAAC,IAAI,CAAvC,EAA0C;EACxC,gBAAIwlC,KAAK,CAACjkC,IAAN,CAAW0G,KAAK,CAACjI,CAAD,CAAL,CAASkC,IAApB,CAAJ,EAA+B;EAC7B,kBAAI+H,GAAG,GAAGjK,CAAC,GAAGpB,CAAJ,GAAQ,CAAlB;EACAuL,cAAAA,IAAI,CAAC9B,IAAL,CAAUpI,CAAC,CAACuI,SAAF,CAAYnI,CAAC,CAAC6C,EAAd,EAAkB+G,GAAlB,CAAV;EACArL,cAAAA,CAAC,GAAGoB,CAAJ;EACA;EACD;EACF;EACF;EACF;EACF,KAjBD,EAFsC;;EAqBtC,QAAI,OAAOD,CAAP,KAAa,QAAjB,EAA2B;EACzB,UAAIoK,IAAI,CAACpK,CAAD,CAAR,EAAa;EACXoK,QAAAA,IAAI,GAAG,CAACA,IAAI,CAACpK,CAAD,CAAL,CAAP;EACD,OAFD,MAEO;EACLoK,QAAAA,IAAI,GAAG,EAAP;EACD;;EACD,aAAO,IAAIkM,WAAJ,CAAgBlM,IAAhB,EAAsB,IAAtB,EAA4B,KAAK7H,KAAjC,CAAP;EACD;;EACD,WAAO,IAAI+T,WAAJ,CAAgBlM,IAAhB,EAAsB,IAAtB,EAA4B,KAAK7H,KAAjC,CAAP;EACD,GA9BD;;EAgCA,SAAOuiC,GAAP;EACD,CAhDD;;EAiDA,eAAc,GAAGD,WAAjB;;ECpDA,IAAMA,WAAS,GAAG,SAAZA,SAAY,CAASC,GAAT,EAAc;;EAAA,MAExBY,WAFwB;EAAA;EAAA;EAAA;;EAG5B,yBAAYt7B,IAAZ,EAAkBO,IAAlB,EAAwBpI,KAAxB,EAA+B;EAAA;;EAAA;;EAC7B,uFAAM6H,IAAN,EAAYO,IAAZ,EAAkBpI,KAAlB;EACA,YAAK2iC,UAAL,GAAkB,IAAlB;EAF6B;EAG9B;;;;EAN2B;EAAA;EAAA,8BAQpB;EACN,aAAK96B,IAAL,CAAUpJ,OAAV,CAAkB,UAAAd,CAAC,EAAI;EACrB,cAAIgI,KAAK,GAAGhI,CAAC,CAACgI,KAAF,EAAZ;EACAA,UAAAA,KAAK,CAAClH,OAAN,CAAc,UAACV,CAAD,EAAIzB,CAAJ,EAAU;EACtB,gBAAIF,GAAG,GAAG2B,CAAC,CAAC1B,IAAF,CAAOkD,OAAP,CAAe,KAAf,EAAsB,EAAtB,CAAV;EACAxB,YAAAA,CAAC,CAAC+kB,GAAF,CAAM1mB,GAAG,IAAI2B,CAAC,CAAC1B,IAAf;EACD,WAHD;EAID,SAND;EAOA,eAAO,IAAP;EACD;EAjB2B;;EAAA;EAAA,IAEJkmC,GAFI;;;;;;;;;;;EA8B9BA,EAAAA,GAAG,CAAC9+B,SAAJ,CAAcqsB,WAAd,GAA4B,UAASryB,CAAT,EAAY;;EAEtC,QAAIoC,KAAK,GAAG,KAAK+I,KAAL,CAAW,aAAX,CAAZ,CAFsC;;EAItC,QAAI,OAAOnL,CAAP,KAAa,QAAjB,EAA2B;EACzBoC,MAAAA,KAAK,GAAGA,KAAK,CAACgG,GAAN,CAAUpI,CAAV,CAAR;EACD;;EACD,WAAO,IAAI0lC,WAAJ,CAAgBtjC,KAAK,CAACgI,IAAtB,EAA4B,IAA5B,EAAkC,KAAK7H,KAAvC,CAAP;EACD,GARD;;EASA,SAAOuiC,GAAP;EACD,CAxCD;;EAyCA,eAAc,GAAGD,WAAjB;;ECzCA,IAAMA,WAAS,GAAG,SAAZA,SAAY,CAASC,GAAT,EAAc;;EAE9B,MAAMlW,KAAK,GAAG,SAARA,KAAQ,CAAS3kB,GAAT,EAAc;EAC1B,QAAI07B,MAAM,GAAG17B,GAAG,CAACqpB,UAAJ,CAAe,WAAf,EAA4BP,GAA5B,CAAgC,eAAhC,CAAb;EACA,QAAI6S,UAAU,GAAG37B,GAAG,CAACkB,KAAJ,CAAU,cAAV,CAAjB;EACA,WAAO;EACLw6B,MAAAA,MAAM,EAAEA,MADH;EAELE,MAAAA,WAAW,EAAE57B,GAAG,CAACkB,KAAJ,CAAU,eAAV,CAFR;EAGLy6B,MAAAA,UAAU,EAAEA,UAHP;EAILE,MAAAA,SAAS,EAAEF,UAAU,CAACzS,GAAX,CAAe,WAAf;EAJN,KAAP;EAMD,GATD;;;;EAF8B,MAcxB4S,KAdwB;EAAA;EAAA;EAAA;;EAAA;EAAA;;EAAA;EAAA;;EAAA;EAAA;;;EAAA,qCAgBb;EACb,eAAO,KAAK56B,KAAL,CAAW,UAAX,CAAP;EACD;;;EAlB2B;EAAA;EAAA,+BAoBnB;EACP,YAAIpF,GAAG,GAAG,EAAV;EACA,aAAK/E,OAAL,CAAa,UAAAd,CAAC,EAAI;EAChB,cAAIylC,MAAM,GAAG/W,KAAK,CAAC1uB,CAAD,CAAL,CAASylC,MAAtB;EACA5/B,UAAAA,GAAG,GAAGA,GAAG,CAACgH,MAAJ,CAAW44B,MAAM,CAACv7B,IAAlB,CAAN;EACD,SAHD;EAIA,eAAO,KAAK3B,SAAL,CAAe1C,GAAf,CAAP;EACD;;;EA3B2B;EAAA;EAAA,0BA6BxBpH,GA7BwB,EA6BnB;EACP,aAAKqC,OAAL,CAAa,UAAAd,CAAC,EAAI;EAChB,cAAI0lC,UAAU,GAAGhX,KAAK,CAAC1uB,CAAD,CAAL,CAAS0lC,UAA1B,CADgB;;EAGhBA,UAAAA,UAAU,CAAC9T,QAAX,CAAoB,CAApB,EAAuBkU,cAAvB,CAAsC,GAAtC;EACAJ,UAAAA,UAAU,CAAC76B,MAAX,CAAkBpM,GAAlB;EACD,SALD;EAMA,eAAO,IAAP;EACD;;;EArC2B;EAAA;EAAA,6BAuCrBA,GAvCqB,EAuChB;EACV,eAAO,IAAP;EACD;;;EAzC2B;EAAA;EAAA,uCA4CX;EACf,eAAO,KAAKiK,MAAL,CAAY,UAAAqB,GAAG;EAAA,iBAAI2kB,KAAK,CAAC3kB,GAAD,CAAL,CAAW67B,SAAf;EAAA,SAAf,CAAP;EACD;EA9C2B;EAAA;EAAA,uCA+CX;EACf,eAAO,IAAP;EACD;EAjD2B;EAAA;EAAA,0CAkDR;EAClB,eAAO,IAAP;EACD;EApD2B;;EAAA;EAAA,IAcVhB,GAdU;;EAuD9BA,EAAAA,GAAG,CAAC9+B,SAAJ,CAAcigC,KAAd,GAAsB,UAASjmC,CAAT,EAAY;EAChC,QAAImL,KAAK,GAAG,KAAKA,KAAL,CAAW,+BAAX,CAAZ,CADgC;;EAEhC,QAAI,OAAOnL,CAAP,KAAa,QAAjB,EAA2B;EACzBmL,MAAAA,KAAK,GAAGA,KAAK,CAAC/C,GAAN,CAAUpI,CAAV,CAAR;EACD;;EACD,WAAO,IAAI+lC,KAAJ,CAAU56B,KAAK,CAACf,IAAhB,EAAsB,IAAtB,EAA4B,KAAK7H,KAAjC,CAAP;EACD,GAND;;EAOA,SAAOuiC,GAAP;EACD,CA/DD;;EAgEA,SAAc,GAAGD,WAAjB;;EChEA,IAAMqB,YAAU,GAAG,CACjB7gC,QADiB,EAEjBC,cAFiB,EAGjBC,WAHiB,EAIjBC,WAJiB,EAKjBgoB,KALiB,CAAnB;;EAQA,IAAM2Y,MAAM,GAAG,SAATA,MAAS,CAASrB,GAAT,EAAc;EAC3BoB,EAAAA,YAAU,CAACllC,OAAX,CAAmB,UAAAolC,KAAK;EAAA,WAAIA,KAAK,CAACtB,GAAD,CAAT;EAAA,GAAxB;EACA,SAAOA,GAAP;EACD,CAHD;;EAIA,UAAc,GAAGqB,MAAjB;;ECZA,IAAMn+B,SAAO,GAAG;EACdmP,EAAAA,IAAI,EAAE9R,SADQ;EAEd8F,EAAAA,KAAK,EAAE7F,OAFO;EAGd4gC,EAAAA,UAAU,EAAE3gC;EAHE,CAAhB;;;MASMu/B;;;EACJ,eAAY16B,IAAZ,EAAkBO,IAAlB,EAAwBpI,KAAxB,EAA+B;EAAA;;EAAA;;EAC7B,SAAK6H,IAAL,GAAYA,IAAZ,CAD6B;;EAG7BtJ,IAAAA,MAAM,CAAC0N,cAAP,CAAsB,IAAtB,EAA4B,MAA5B,EAAoC;EAClCC,MAAAA,UAAU,EAAE,KADsB;EAElCE,MAAAA,KAAK,EAAEhE,IAF2B;EAGlC+D,MAAAA,QAAQ,EAAE;EAHwB,KAApC,EAH6B;;EAS7B,QAAInM,KAAK,KAAKe,SAAV,IAAuBqH,IAAI,KAAKrH,SAApC,EAA+C;EAC7Cf,MAAAA,KAAK,GAAGoI,IAAI,CAACpI,KAAb;EACD,KAX4B;;;EAa7BzB,IAAAA,MAAM,CAAC0N,cAAP,CAAsB,IAAtB,EAA4B,OAA5B,EAAqC;EACnCC,MAAAA,UAAU,EAAE,KADuB;EAEnCE,MAAAA,KAAK,EAAEpM;EAF4B,KAArC,EAb6B;;EAkB7BzB,IAAAA,MAAM,CAAC0N,cAAP,CAAsB,IAAtB,EAA4B,OAA5B,EAAqC;EACnCpG,MAAAA,GAAG,EAAE;EAAA,eAAM,KAAI,CAACgC,IAAL,CAAUnL,MAAV,GAAmB,CAAzB;EAAA;EAD8B,KAArC,EAlB6B;;EAsB7B6B,IAAAA,MAAM,CAAC0N,cAAP,CAAsB,IAAtB,EAA4B,QAA5B,EAAsC;EACpCpG,MAAAA,GAAG,EAAE;EAAA,eAAM,KAAI,CAACgC,IAAL,CAAUnL,MAAhB;EAAA;EAD+B,KAAtC,EAtB6B;;EA0B7B6B,IAAAA,MAAM,CAAC0N,cAAP,CAAsB,IAAtB,EAA4B,KAA5B,EAAmC;EACjCpG,MAAAA,GAAG,EAAE;EAAA,eAAM,KAAN;EAAA;EAD4B,KAAnC;EAGD;;;;;;+BAGQ;EACP,aAAO2nB,SAAM,CAAC,IAAD,CAAb;EACD;;;;;6BAGM;EACL,UAAI,KAAK3lB,IAAL,CAAUnL,MAAV,GAAmB,CAAvB,EAA0B;EACxB,eAAO,KAAKmL,IAAL,CAAU,CAAV,EAAajC,IAApB;EACD;;EACD,aAAO,KAAKmH,GAAL,GAAWlF,IAAX,CAAgB,CAAhB,EAAmBjC,IAA1B;EACD;;;;;+BAGQ;EACP,UAAI,KAAKwC,IAAT,EAAe;EACb,eAAO,KAAKA,IAAZ;EACD;;EACD,aAAO,IAAP;EACD;;;;;gCAGS;EACR,UAAI5E,GAAG,GAAG,EAAV;;EACA,UAAMsgC,SAAS,GAAG,SAAZA,SAAY,CAASp8B,GAAT,EAAc;EAC9B,YAAIA,GAAG,CAACU,IAAR,EAAc;EACZ5E,UAAAA,GAAG,CAACuC,IAAJ,CAAS2B,GAAG,CAACU,IAAb;EACA07B,UAAAA,SAAS,CAACp8B,GAAG,CAACU,IAAL,CAAT;EACD;EACF,OALD;;EAMA07B,MAAAA,SAAS,CAAC,IAAD,CAAT;EACA,aAAOtgC,GAAG,CAACwH,OAAJ,EAAP;EACD;;;;;4BAGK;EACJ,aAAO,KAAKjD,OAAL,GAAe,CAAf,KAAqB,IAA5B;EACD;;;;;;;;EAIHw6B,GAAG,CAAC9+B,SAAJ,CAAcyC,SAAd,GAA0B,UAAS2B,IAAT,EAAe;EACvC,SAAO,IAAI06B,GAAJ,CAAQ16B,IAAR,EAAc,IAAd,EAAoB,KAAK7H,KAAzB,CAAP;EACD,CAFD;;;;EAIAuiC,GAAG,CAAC9+B,SAAJ,CAAcmgC,MAAd,GAAuB,UAASzW,EAAT,EAAa;EAClCA,EAAAA,EAAE,CAAC,IAAD,CAAF;EACA,SAAO,IAAP;EACD,CAHD;;EAKA5uB,MAAM,CAACsE,MAAP,CAAc0/B,GAAG,CAAC9+B,SAAlB,EAA6BgC,SAAO,CAACmD,KAArC;EACArK,MAAM,CAACsE,MAAP,CAAc0/B,GAAG,CAAC9+B,SAAlB,EAA6BgC,SAAO,CAACk+B,UAArC;EACAplC,MAAM,CAACsE,MAAP,CAAc0/B,GAAG,CAAC9+B,SAAlB,EAA6BgC,SAAO,CAACmP,IAArC;;AAGAgvB,QAAM,CAACrB,GAAD,CAAN;;EAGA,IAAMj2B,SAAO,GAAG;EACd2gB,EAAAA,KAAK,EAAE,OADO;EAEd8W,EAAAA,GAAG,EAAE,OAFS;EAGdrF,EAAAA,KAAK,EAAE,MAHO;EAIdvF,EAAAA,IAAI,EAAE,IAJQ;EAKd6K,EAAAA,MAAM,EAAE;EALM,CAAhB;EAOAzlC,MAAM,CAACC,IAAP,CAAY8N,SAAZ,EAAqB7N,OAArB,CAA6B,UAAAnB,CAAC;EAAA,SAAKilC,GAAG,CAAC9+B,SAAJ,CAAcnG,CAAd,IAAmBilC,GAAG,CAAC9+B,SAAJ,CAAc6I,SAAO,CAAChP,CAAD,CAArB,CAAxB;EAAA,CAA9B;EACA,SAAc,GAAGilC,GAAjB;;ECrGA,IAAIviC,KAAK,GAAG,IAAI2rB,OAAJ,EAAZ;;;EAGA,IAAMsY,GAAG,GAAG,SAANA,GAAM,GAAoB;EAAA,MAAX5nC,IAAW,uEAAJ,EAAI;EAC9B,MAAIwL,IAAI,GAAGylB,YAAQ,CAAC/e,QAAT,CAAkBlS,IAAlB,EAAwB2D,KAAxB,CAAX;EACA,MAAI0H,GAAG,GAAG,IAAI66B,KAAJ,CAAQ16B,IAAR,EAAc,IAAd,EAAoB7H,KAApB,CAAV;EACA0H,EAAAA,GAAG,CAAC8lB,MAAJ;EACA,SAAO9lB,GAAP;EACD,CALD;;;;EAQAu8B,GAAG,CAAC3W,QAAJ,GAAe,YAAoB;EAAA,MAAXjxB,IAAW,uEAAJ,EAAI;EACjC,MAAIwL,IAAI,GAAGylB,YAAQ,CAAC/e,QAAT,CAAkBlS,IAAlB,EAAwB2D,KAAxB,CAAX;EACA,MAAI0H,GAAG,GAAG,IAAI66B,KAAJ,CAAQ16B,IAAR,EAAc,IAAd,EAAoB7H,KAApB,CAAV;EACA,SAAO0H,GAAP;EACD,CAJD;;;;EAOAu8B,GAAG,CAACL,MAAJ,GAAa,UAASzW,EAAT,EAAa;EACxBA,EAAAA,EAAE,CAACoV,KAAD,CAAF;EACD,CAFD;;;;EAKA0B,GAAG,CAACz+B,KAAJ,GAAY,YAAW;EACrBxF,EAAAA,KAAK,GAAGA,KAAK,CAACwF,KAAN,EAAR;EACA,SAAO,IAAP;EACD,CAHD;;;;EAMAy+B,GAAG,CAACv1B,QAAJ,GAAe,UAAS5H,IAAT,EAAe;EAC5B,MAAIe,IAAI,GAAGylB,YAAQ,CAAC5e,QAAT,CAAkB5H,IAAlB,CAAX;EACA,SAAO,IAAIy7B,KAAJ,CAAQ16B,IAAR,EAAc,IAAd,EAAoB7H,KAApB,CAAP;EACD,CAHD;;;;EAMAikC,GAAG,CAACpX,OAAJ,GAAc,YAAsB;EAAA,MAAbb,IAAa,uEAAN,IAAM;EAClChsB,EAAAA,KAAK,CAAC6sB,OAAN,CAAcb,IAAd;EACD,CAFD;;;;EAKAiY,GAAG,CAACC,OAAJ,GAAcA,QAAd;EAEA,OAAc,GAAGD,GAAjB;;;;;;;;"}